/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./build/src/apack_dependency_provider.js":
/*!************************************************!*\
  !*** ./build/src/apack_dependency_provider.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ApackDependencyProvider = void 0;\r\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\r\nclass ApackDependencyProvider {\r\n    static fromManifest(manifestContents) {\r\n        var _a, _b;\r\n        if (!manifestContents || !manifestContents.length) {\r\n            return [];\r\n        }\r\n        const result = [];\r\n        const manifest = xml_js_1.xml2js(manifestContents, { compact: true });\r\n        let apackDependencies = (_b = (_a = manifest[\"asx:abap\"][\"asx:values\"][\"DATA\"]) === null || _a === void 0 ? void 0 : _a[\"DEPENDENCIES\"]) === null || _b === void 0 ? void 0 : _b.item;\r\n        if (!apackDependencies) {\r\n            return [];\r\n        }\r\n        else if (!apackDependencies.length) {\r\n            apackDependencies = [apackDependencies];\r\n        }\r\n        for (const dependency of apackDependencies) {\r\n            result.push({\r\n                files: \"/src/**/*.*\",\r\n                url: dependency[\"GIT_URL\"][\"_text\"],\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.ApackDependencyProvider = ApackDependencyProvider;\r\n//# sourceMappingURL=apack_dependency_provider.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/apack_dependency_provider.js?");

/***/ }),

/***/ "./build/src/cli.js":
/*!**************************!*\
  !*** ./build/src/cli.js ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst fs = __webpack_require__(/*! fs */ \"fs\");\r\nconst os = __webpack_require__(/*! os */ \"os\");\r\nconst path = __webpack_require__(/*! path */ \"path\");\r\nconst minimist = __webpack_require__(/*! minimist */ \"./node_modules/minimist/index.js\");\r\nconst ProgressBar = __webpack_require__(/*! progress */ \"./node_modules/progress/index.js\");\r\nconst childProcess = __webpack_require__(/*! child_process */ \"child_process\");\r\nconst JSON5 = __webpack_require__(/*! json5 */ \"./node_modules/json5/dist/index.mjs\");\r\nconst core_1 = __webpack_require__(/*! @abaplint/core */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nconst _format_1 = __webpack_require__(/*! ./formatters/_format */ \"./build/src/formatters/_format.js\");\r\nconst file_operations_1 = __webpack_require__(/*! ./file_operations */ \"./build/src/file_operations.js\");\r\nconst apack_dependency_provider_1 = __webpack_require__(/*! ./apack_dependency_provider */ \"./build/src/apack_dependency_provider.js\");\r\nconst fixes_1 = __webpack_require__(/*! ./fixes */ \"./build/src/fixes.js\");\r\nconst rename_1 = __webpack_require__(/*! ./rename */ \"./build/src/rename.js\");\r\nclass Progress {\r\n    set(total, _text) {\r\n        this.bar = new ProgressBar(\":percent - :elapseds - :text\", { total, renderThrottle: 100 });\r\n    }\r\n    async tick(text) {\r\n        this.bar.tick({ text });\r\n        this.bar.render();\r\n    }\r\n    tickSync(text) {\r\n        this.bar.tick({ text });\r\n        this.bar.render();\r\n    }\r\n}\r\nfunction loadConfig(filename) {\r\n    // possible cases:\r\n    // a) nothing specified, using abaplint.json from cwd\r\n    // b) nothing specified, no abaplint.json in cwd\r\n    // c) specified and found\r\n    // d) specified and not found => use default\r\n    // e) supplied but a directory => use default\r\n    let f = \"\";\r\n    if (filename === undefined) {\r\n        f = process.cwd() + path.sep + \"abaplint.json\";\r\n        if (fs.existsSync(f) === false) {\r\n            f = process.cwd() + path.sep + \"abaplint.jsonc\";\r\n        }\r\n        if (fs.existsSync(f) === false) {\r\n            f = process.cwd() + path.sep + \"abaplint.json5\";\r\n        }\r\n        if (fs.existsSync(f) === false) {\r\n            process.stderr.write(\"Using default config\\n\");\r\n            return { config: core_1.Config.getDefault(), base: \".\" };\r\n        }\r\n    }\r\n    else {\r\n        if (fs.existsSync(filename) === false) {\r\n            process.stderr.write(\"ERROR: Specified abaplint configuration file does not exist, using default config\\n\");\r\n            return { config: core_1.Config.getDefault(), base: \".\" };\r\n        }\r\n        else if (fs.statSync(filename).isDirectory() === true) {\r\n            process.stderr.write(\"Supply filename, not directory, using default config\\n\");\r\n            return { config: core_1.Config.getDefault(), base: \".\" };\r\n        }\r\n        f = filename;\r\n    }\r\n    // evil hack to get JSON5 working\r\n    // @ts-ignore\r\n    JSON5.parse = JSON5.default.parse;\r\n    process.stderr.write(\"Using config: \" + f + \"\\n\");\r\n    const json = fs.readFileSync(f, \"utf8\");\r\n    const parsed = JSON5.parse(json);\r\n    if (Object.keys(core_1.Version).some(v => v === parsed.syntax.version) === false) {\r\n        throw \"Error: Unknown version in abaplint.json\";\r\n    }\r\n    return {\r\n        config: new core_1.Config(json),\r\n        base: path.dirname(f) === process.cwd() ? \".\" : path.dirname(f),\r\n    };\r\n}\r\nasync function loadDependencies(config, compress, bar, base) {\r\n    let files = [];\r\n    const deps = config.get().dependencies || [];\r\n    const useApack = config.get().global.useApackDependencies;\r\n    if (useApack) {\r\n        const apackPath = path.join(base, \".apack-manifest.xml\");\r\n        if (fs.existsSync(apackPath)) {\r\n            const apackManifest = fs.readFileSync(apackPath, \"utf8\");\r\n            deps.push(...apack_dependency_provider_1.ApackDependencyProvider.fromManifest(apackManifest));\r\n        }\r\n    }\r\n    if (!deps) {\r\n        return [];\r\n    }\r\n    for (const d of deps) {\r\n        if (d.folder) {\r\n            const g = base + d.folder + d.files;\r\n            const names = file_operations_1.FileOperations.loadFileNames(g, false);\r\n            if (names.length > 0) {\r\n                process.stderr.write(\"Using dependency from: \" + g + \"\\n\");\r\n                files = files.concat(await file_operations_1.FileOperations.loadFiles(compress, names, bar));\r\n                continue;\r\n            }\r\n        }\r\n        if (d.url) {\r\n            process.stderr.write(\"Clone: \" + d.url + \"\\n\");\r\n            const dir = fs.mkdtempSync(path.join(os.tmpdir(), \"abaplint-\"));\r\n            childProcess.execSync(\"git clone --quiet --depth 1 \" + d.url + \" .\", { cwd: dir, stdio: \"inherit\" });\r\n            const names = file_operations_1.FileOperations.loadFileNames(dir + d.files);\r\n            files = files.concat(await file_operations_1.FileOperations.loadFiles(compress, names, bar));\r\n            file_operations_1.FileOperations.deleteFolderRecursive(dir);\r\n        }\r\n    }\r\n    return files;\r\n}\r\nfunction displayHelp() {\r\n    // follow docopt.org conventions,\r\n    return \"Usage:\\n\" +\r\n        \"  abaplint [<abaplint.json> -f <format> -c --outformat <format> --outfile <file> --fix] \\n\" +\r\n        \"  abaplint -h | --help      show this help\\n\" +\r\n        \"  abaplint -v | --version   show version\\n\" +\r\n        \"  abaplint -d | --default   show default configuration\\n\" +\r\n        \"\\n\" +\r\n        \"Options:\\n\" +\r\n        \"  -f, --format <format>  output format (standard, total, json, summary, junit, codeframe)\\n\" +\r\n        \"  --outformat <format>   output format, use in combination with outfile\\n\" +\r\n        \"  --outfile <file>       output issues to file in format\\n\" +\r\n        \"  --fix                  apply quick fixes to files\\n\" +\r\n        \"  --rename               rename object according to rules in abaplint.json\\n\" +\r\n        \"  -p                     output performance information\\n\" +\r\n        \"  -c                     compress files in memory\\n\";\r\n}\r\nfunction out(issues, format, length, argv) {\r\n    const output = _format_1.Formatter.format(issues, format, length);\r\n    if (argv[\"outformat\"] && argv[\"outfile\"]) {\r\n        const fileContents = _format_1.Formatter.format(issues, argv[\"outformat\"], length);\r\n        fs.writeFileSync(argv[\"outfile\"], fileContents, \"utf-8\");\r\n    }\r\n    return output;\r\n}\r\nasync function run() {\r\n    var _a, _b;\r\n    // evil hack to get JSON5 working\r\n    // @ts-ignore\r\n    JSON5.parse = JSON5.default.parse;\r\n    // @ts-ignore\r\n    JSON5.stringify = JSON5.default.stringify;\r\n    const argv = minimist(process.argv.slice(2), { boolean: [\"p\", \"c\", \"fix\", \"rename\"] });\r\n    let format = \"standard\";\r\n    let output = \"\";\r\n    let issues = [];\r\n    if (argv[\"f\"] !== undefined || argv[\"format\"] !== undefined) {\r\n        format = argv[\"f\"] ? argv[\"f\"] : argv[\"format\"];\r\n    }\r\n    const progress = new Progress();\r\n    const compress = argv[\"c\"] ? true : false;\r\n    const parsingPerformance = argv[\"p\"] ? true : false;\r\n    if (argv[\"h\"] !== undefined || argv[\"help\"] !== undefined) {\r\n        output = output + displayHelp();\r\n    }\r\n    else if (argv[\"v\"] !== undefined || argv[\"version\"] !== undefined) {\r\n        output = output + core_1.Registry.abaplintVersion() + \"\\n\";\r\n    }\r\n    else if (argv[\"d\"] !== undefined || argv[\"default\"] !== undefined) {\r\n        output = output + JSON.stringify(core_1.Config.getDefault().get(), undefined, 2) + \"\\n\";\r\n    }\r\n    else {\r\n        process.stderr.write(\"abaplint \" + core_1.Registry.abaplintVersion() + \"\\n\");\r\n        let loaded = [];\r\n        let deps = [];\r\n        let reg = undefined;\r\n        const { config, base } = loadConfig(argv._[0]);\r\n        try {\r\n            if (config.get().global.files === undefined) {\r\n                throw \"Error: Update abaplint configuration file to latest format\";\r\n            }\r\n            const files = file_operations_1.FileOperations.loadFileNames(base + config.get().global.files);\r\n            loaded = await file_operations_1.FileOperations.loadFiles(compress, files, progress);\r\n            deps = await loadDependencies(config, compress, progress, base);\r\n            reg = new core_1.Registry(config);\r\n            reg.addDependencies(deps);\r\n            reg.addFiles(loaded); // if the object exists in repo, it should take precedence over deps\r\n            await reg.parseAsync({ progress, outputPerformance: parsingPerformance });\r\n            issues = issues.concat(reg.findIssues({ progress, outputPerformance: parsingPerformance }));\r\n        }\r\n        catch (error) {\r\n            const file = new core_1.MemoryFile(\"generic\", \"dummy\");\r\n            const message = error.toString() + \" \" + ((_b = (_a = error.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\")[1]) === null || _b === void 0 ? void 0 : _b.trim());\r\n            const issue = core_1.Issue.atPosition(file, new core_1.Position(1, 1), message, \"error\");\r\n            issues = [issue];\r\n        }\r\n        let extra = \"\";\r\n        if (argv[\"fix\"] && reg) {\r\n            // @ts-ignore\r\n            issues = fixes_1.applyFixes(issues, reg, fs, progress);\r\n            extra = \"Fixes applied\";\r\n        }\r\n        else if (argv[\"rename\"] && reg) {\r\n            if (issues.length === 0) {\r\n                new rename_1.Rename(reg).run(config, base);\r\n                extra = \"Renames applied\";\r\n            }\r\n            else {\r\n                extra = \"Renames NOT applied, issues found\";\r\n            }\r\n        }\r\n        output = out(issues, format, loaded.length, argv) + extra;\r\n    }\r\n    return { output, issues };\r\n}\r\nrun().then(({ output, issues }) => {\r\n    if (output.length > 0) {\r\n        process.stdout.write(output, () => {\r\n            if (issues.length > 0) {\r\n                process.exit(1);\r\n            }\r\n            else {\r\n                process.exit();\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        process.exit();\r\n    }\r\n}).catch((err) => {\r\n    console.log(err);\r\n    process.exit(1);\r\n});\r\n//# sourceMappingURL=cli.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/cli.js?");

/***/ }),

/***/ "./build/src/compressed_file.js":
/*!**************************************!*\
  !*** ./build/src/compressed_file.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CompressedFile = void 0;\r\nconst core_1 = __webpack_require__(/*! @abaplint/core */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\r\nclass CompressedFile extends core_1.AbstractFile {\r\n    constructor(filename, compressed) {\r\n        super(filename);\r\n        this.compressed = compressed;\r\n    }\r\n    getRaw() {\r\n        return this.decompress(this.compressed);\r\n    }\r\n    getRawRows() {\r\n        return this.decompress(this.compressed).split(\"\\n\");\r\n    }\r\n    decompress(compressed) {\r\n        return zlib.inflateSync(Buffer.from(compressed, \"base64\")).toString(\"utf8\");\r\n    }\r\n}\r\nexports.CompressedFile = CompressedFile;\r\n//# sourceMappingURL=compressed_file.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/compressed_file.js?");

/***/ }),

/***/ "./build/src/file_operations.js":
/*!**************************************!*\
  !*** ./build/src/file_operations.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FileOperations = void 0;\r\nconst fs = __webpack_require__(/*! fs */ \"fs\");\r\nconst path = __webpack_require__(/*! path */ \"path\");\r\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\r\nconst glob = __webpack_require__(/*! glob */ \"./node_modules/glob/glob.js\");\r\nconst core_1 = __webpack_require__(/*! @abaplint/core */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nconst compressed_file_1 = __webpack_require__(/*! ./compressed_file */ \"./build/src/compressed_file.js\");\r\nclass FileOperations {\r\n    static deleteFolderRecursive(p) {\r\n        if (fs.existsSync(p) === false) {\r\n            return;\r\n        }\r\n        const files = fs.readdirSync(p);\r\n        for (const file of files) {\r\n            const curPath = p + path.sep + file;\r\n            if (fs.lstatSync(curPath).isDirectory()) {\r\n                this.deleteFolderRecursive(curPath);\r\n            }\r\n            else {\r\n                fs.unlinkSync(curPath);\r\n            }\r\n        }\r\n        fs.rmdirSync(p);\r\n    }\r\n    static loadFileNames(arg, error = true) {\r\n        const files = glob.sync(arg, { nosort: true, nodir: true });\r\n        if (files.length === 0 && error) {\r\n            throw \"Error: No files found\";\r\n        }\r\n        return files;\r\n    }\r\n    static async loadFiles(compress, input, bar) {\r\n        const files = [];\r\n        bar.set(input.length, \"Reading files\");\r\n        for (const filename of input) {\r\n            bar.tick(\"Reading files - \" + path.basename(filename));\r\n            const base = filename.split(\"/\").reverse()[0];\r\n            if (base.split(\".\").length <= 2) {\r\n                continue; // not a abapGit file\r\n            }\r\n            // note that readFileSync is typically faster than async readFile,\r\n            // https://medium.com/@adamhooper/node-synchronous-code-runs-faster-than-asynchronous-code-b0553d5cf54e\r\n            const raw = fs.readFileSync(filename, \"utf8\");\r\n            if (compress) {\r\n                // todo, util.promisify(zlib.deflate) does not seem to work?\r\n                files.push(new compressed_file_1.CompressedFile(filename, zlib.deflateSync(raw).toString(\"base64\")));\r\n            }\r\n            else {\r\n                files.push(new core_1.MemoryFile(filename, raw));\r\n            }\r\n        }\r\n        return files;\r\n    }\r\n}\r\nexports.FileOperations = FileOperations;\r\n//# sourceMappingURL=file_operations.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/file_operations.js?");

/***/ }),

/***/ "./build/src/fixes.js":
/*!****************************!*\
  !*** ./build/src/fixes.js ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.applyFixes = void 0;\r\nconst core_1 = __webpack_require__(/*! @abaplint/core */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nfunction applyFixes(inputIssues, reg, fs, bar) {\r\n    let changed = [];\r\n    let iteration = 1;\r\n    let issues = inputIssues;\r\n    const MAX_ITERATIONS = 30;\r\n    bar === null || bar === void 0 ? void 0 : bar.set(MAX_ITERATIONS, \"Apply Fixes\");\r\n    while (iteration <= MAX_ITERATIONS) {\r\n        bar === null || bar === void 0 ? void 0 : bar.tick(\"Apply Fixes, iteration \" + iteration + \", \" + issues.length + \" candidates\");\r\n        changed = applyList(issues, reg, fs);\r\n        if (changed.length === 0) {\r\n            break;\r\n        }\r\n        iteration++;\r\n        issues = reg.parse().findIssues();\r\n    }\r\n    // always end the progress indicator at 100%\r\n    while (iteration <= MAX_ITERATIONS) {\r\n        bar === null || bar === void 0 ? void 0 : bar.tick(\"Apply Fixes, iteration \" + iteration + \", \" + issues.length + \" candidates\");\r\n        iteration++;\r\n    }\r\n    return issues;\r\n}\r\nexports.applyFixes = applyFixes;\r\nfunction possibleOverlap(edit, list) {\r\n    // only checks if the edits have changes in the same rows\r\n    for (const e of list) {\r\n        for (const file1 of Object.keys(e)) {\r\n            for (const file2 of Object.keys(edit)) {\r\n                if (file1 === file2) {\r\n                    for (const list1 of e[file1]) {\r\n                        for (const list2 of edit[file2]) {\r\n                            if (list2.range.start.getRow() <= list1.range.start.getRow()\r\n                                && list2.range.end.getRow() >= list1.range.start.getRow()) {\r\n                                return true;\r\n                            }\r\n                            if (list2.range.start.getRow() <= list1.range.end.getRow()\r\n                                && list2.range.end.getRow() >= list1.range.end.getRow()) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction applyList(issues, reg, fs) {\r\n    const edits = [];\r\n    for (const i of issues) {\r\n        const edit = i.getFix();\r\n        if (edit === undefined) {\r\n            continue;\r\n        }\r\n        else if (possibleOverlap(edit, edits) === true) {\r\n            continue;\r\n        }\r\n        edits.push(edit);\r\n    }\r\n    const changed = core_1.applyEditList(reg, edits);\r\n    for (const filename of changed) {\r\n        const file = reg.getFileByName(filename);\r\n        if (file === undefined) {\r\n            continue;\r\n        }\r\n        fs.writeFileSync(file.getFilename(), file.getRaw());\r\n    }\r\n    return changed;\r\n}\r\n//# sourceMappingURL=fixes.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/fixes.js?");

/***/ }),

/***/ "./build/src/formatters/_format.js":
/*!*****************************************!*\
  !*** ./build/src/formatters/_format.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Formatter = void 0;\r\nconst Formatters = __webpack_require__(/*! . */ \"./build/src/formatters/index.js\");\r\nclass Formatter {\r\n    static format(issues, format, fileCount) {\r\n        // todo, this can be done more generic, move to artifacts.ts?\r\n        switch (format) {\r\n            case \"total\":\r\n                return new Formatters.Total().output(issues, fileCount);\r\n            case \"json\":\r\n                return new Formatters.Json().output(issues, fileCount);\r\n            case \"junit\":\r\n                return new Formatters.Junit().output(issues, fileCount);\r\n            case \"codeframe\":\r\n                return new Formatters.CodeFrame().output(issues, fileCount);\r\n            default:\r\n                return new Formatters.Standard().output(issues, fileCount);\r\n        }\r\n    }\r\n}\r\nexports.Formatter = Formatter;\r\n//# sourceMappingURL=_format.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/formatters/_format.js?");

/***/ }),

/***/ "./build/src/formatters/codeframe.js":
/*!*******************************************!*\
  !*** ./build/src/formatters/codeframe.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CodeFrame = void 0;\r\nconst total_1 = __webpack_require__(/*! ./total */ \"./build/src/formatters/total.js\");\r\nconst fs = __webpack_require__(/*! fs */ \"fs\");\r\nconst chalk_1 = __webpack_require__(/*! chalk */ \"./node_modules/chalk/source/index.js\");\r\nfunction issueSort(a, b) {\r\n    return a.filename.localeCompare(b.filename)\r\n        || (a.row - b.row)\r\n        || (a.col - b.col);\r\n}\r\nclass CodeFrame {\r\n    constructor() {\r\n        this.currentFilename = \"\";\r\n        this.currentFileLinesCount = 0;\r\n        this.fileContent = [];\r\n    }\r\n    output(issues, fileCount) {\r\n        const builtIssues = this.convertAllIssues(issues).sort(issueSort); // Make sure it is sorted by filename for caching to work\r\n        return [\r\n            ...builtIssues.map(i => this.renderIssue(i)),\r\n            (issues.length > 0 ? chalk_1.red(new total_1.Total().output(issues, fileCount)) : chalk_1.green(new total_1.Total().output(issues, fileCount))),\r\n        ].join(\"\\n\");\r\n    }\r\n    convertAllIssues(issues) {\r\n        return issues.map(i => this.convertIssue(i));\r\n    }\r\n    cacheFile(filename) {\r\n        if (filename !== this.currentFilename) {\r\n            this.currentFilename = filename;\r\n            this.fileContent = fs.readFileSync(filename, \"utf8\").split(/\\r?\\n/);\r\n            this.currentFileLinesCount = this.fileContent.length;\r\n        }\r\n    }\r\n    renderIssue(issue) {\r\n        this.cacheFile(issue.filename);\r\n        const frameSize = 1;\r\n        const lineFrom = Math.max(issue.row - frameSize, 1);\r\n        const lineTo = Math.min(issue.row + frameSize, this.currentFileLinesCount);\r\n        const issueLineIndex = issue.row - 1;\r\n        const padSize = Math.ceil(Math.log10(lineTo)) + 4;\r\n        const code = [];\r\n        for (let lineIndex = lineFrom - 1; lineIndex < lineTo; lineIndex++) {\r\n            const prefix = `${ /*(lineIndex === issueLineIndex) ? \">\" :*/\" \"}${lineIndex + 1} |`.padStart(padSize);\r\n            code.push(prefix + this.fileContent[lineIndex]);\r\n            if (lineIndex === issueLineIndex) {\r\n                code.push(\"|\".padStart(padSize) + \" \".repeat(issue.col - 1) + \"^\");\r\n            }\r\n        }\r\n        const severityStr = issue.severity === \"E\"\r\n            ? chalk_1.red(issue.severity)\r\n            : chalk_1.yellow(issue.severity);\r\n        return `[${severityStr}] ${issue.description} (${issue.issueKey}) @ ${issue.location}`\r\n            + \"\\n\"\r\n            + code.map(str => chalk_1.grey(str)).join(\"\\n\")\r\n            + \"\\n\";\r\n    }\r\n    renderLocation(issue) {\r\n        return issue.getFilename() + \"[\" + issue.getStart().getRow() + \", \" + issue.getStart().getCol() + \"]\";\r\n    }\r\n    convertIssue(issue) {\r\n        return {\r\n            location: this.renderLocation(issue),\r\n            description: issue.getMessage(),\r\n            issueKey: issue.getKey(),\r\n            filename: issue.getFilename(),\r\n            severity: issue.getSeverity().toString().charAt(0),\r\n            row: issue.getStart().getRow(),\r\n            col: issue.getStart().getCol(),\r\n        };\r\n    }\r\n}\r\nexports.CodeFrame = CodeFrame;\r\n//# sourceMappingURL=codeframe.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/formatters/codeframe.js?");

/***/ }),

/***/ "./build/src/formatters/index.js":
/*!***************************************!*\
  !*** ./build/src/formatters/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./json */ \"./build/src/formatters/json.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./junit */ \"./build/src/formatters/junit.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./standard */ \"./build/src/formatters/standard.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./total */ \"./build/src/formatters/total.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./codeframe */ \"./build/src/formatters/codeframe.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/formatters/index.js?");

/***/ }),

/***/ "./build/src/formatters/json.js":
/*!**************************************!*\
  !*** ./build/src/formatters/json.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Json = void 0;\r\nclass Json {\r\n    output(issues, _fileCount) {\r\n        const out = [];\r\n        for (const issue of issues) {\r\n            const single = {\r\n                description: issue.getMessage(),\r\n                key: issue.getKey(),\r\n                file: issue.getFilename(),\r\n                start: {\r\n                    row: issue.getStart().getRow(),\r\n                    col: issue.getStart().getCol(),\r\n                },\r\n                end: {\r\n                    row: issue.getEnd().getRow(),\r\n                    col: issue.getEnd().getCol(),\r\n                },\r\n                severity: issue.getSeverity(),\r\n            };\r\n            out.push(single);\r\n        }\r\n        return JSON.stringify(out) + \"\\n\";\r\n    }\r\n}\r\nexports.Json = Json;\r\n//# sourceMappingURL=json.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/formatters/json.js?");

/***/ }),

/***/ "./build/src/formatters/junit.js":
/*!***************************************!*\
  !*** ./build/src/formatters/junit.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Junit = void 0;\r\nconst xml_js_1 = __webpack_require__(/*! xml-js */ \"./node_modules/xml-js/lib/index.js\");\r\nclass Junit {\r\n    output(issues, _fileCount) {\r\n        const outputObj = {\r\n            _declaration: {\r\n                _attributes: {\r\n                    version: \"1.0\",\r\n                    encoding: \"UTF-8\",\r\n                },\r\n            },\r\n            testsuites: {\r\n                testsuite: {\r\n                    _attributes: {\r\n                        name: \"abaplint\",\r\n                        tests: issues.length || 1,\r\n                        failures: issues.length,\r\n                        errors: 0,\r\n                        skipped: 0,\r\n                    },\r\n                    testcase: [],\r\n                },\r\n            },\r\n        };\r\n        if (issues.length > 0) {\r\n            for (const issue of issues) {\r\n                outputObj.testsuites.testsuite.testcase.push({\r\n                    _attributes: {\r\n                        classname: issue.getFilename().split(\".\")[0],\r\n                        file: issue.getFilename(),\r\n                        name: `${issue.getFilename()}: [${issue.getStart().getRow()}, ${issue.getStart().getCol()}] - ${issue.getKey()}`,\r\n                    },\r\n                    failure: {\r\n                        _attributes: {\r\n                            message: issue.getKey(),\r\n                            type: issue.getSeverity().toString(),\r\n                        },\r\n                        _cdata: `${issue.getMessage()}`,\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            outputObj.testsuites.testsuite.testcase.push({\r\n                _attributes: {\r\n                    classname: \"none\",\r\n                    name: \"OK\",\r\n                },\r\n            });\r\n        }\r\n        const xml = xml_js_1.js2xml(outputObj, { compact: true, spaces: 2 });\r\n        return xml;\r\n    }\r\n}\r\nexports.Junit = Junit;\r\n//# sourceMappingURL=junit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/formatters/junit.js?");

/***/ }),

/***/ "./build/src/formatters/standard.js":
/*!******************************************!*\
  !*** ./build/src/formatters/standard.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Standard = void 0;\r\nconst total_1 = __webpack_require__(/*! ./total */ \"./build/src/formatters/total.js\");\r\nclass Standard {\r\n    output(issues, fileCount) {\r\n        const tuples = [];\r\n        for (const issue of issues) {\r\n            tuples.push(this.build(issue));\r\n        }\r\n        tuples.sort((a, b) => {\r\n            const nameCompare = a.rawFilename.localeCompare(b.rawFilename);\r\n            if (nameCompare === 0) {\r\n                const rowCompare = a.startPos.getRow() - b.startPos.getRow();\r\n                if (rowCompare === 0) {\r\n                    return a.startPos.getCol() - b.startPos.getCol();\r\n                }\r\n                else {\r\n                    return rowCompare;\r\n                }\r\n            }\r\n            else {\r\n                return nameCompare;\r\n            }\r\n        });\r\n        const result = this.columns(tuples);\r\n        return result + new total_1.Total().output(issues, fileCount);\r\n    }\r\n    columns(issues) {\r\n        let max = 0;\r\n        issues.forEach((tuple) => { if (max < tuple.filename.length) {\r\n            max = tuple.filename.length;\r\n        } });\r\n        let result = \"\";\r\n        issues.forEach((issue) => {\r\n            result = result +\r\n                this.pad(issue.filename, max - issue.filename.length) +\r\n                issue.description +\r\n                ` [${issue.severity.charAt(0)}]\\n`; //E/W/I\r\n        });\r\n        return result;\r\n    }\r\n    pad(input, length) {\r\n        let output = input;\r\n        for (let i = 0; i < length; i++) {\r\n            output = output + \" \";\r\n        }\r\n        return output + \" - \";\r\n    }\r\n    build(issue) {\r\n        return {\r\n            filename: issue.getFilename() + \"[\" + issue.getStart().getRow() + \", \" + issue.getStart().getCol() + \"]\",\r\n            description: issue.getMessage() + \" (\" + issue.getKey() + \")\",\r\n            startPos: issue.getStart(),\r\n            rawFilename: issue.getFilename(),\r\n            severity: issue.getSeverity().toString(),\r\n        };\r\n    }\r\n}\r\nexports.Standard = Standard;\r\n//# sourceMappingURL=standard.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/formatters/standard.js?");

/***/ }),

/***/ "./build/src/formatters/total.js":
/*!***************************************!*\
  !*** ./build/src/formatters/total.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Total = void 0;\r\nclass Total {\r\n    output(issues, fileCount) {\r\n        return \"abaplint: \" + issues.length + \" issue(s) found, \" + fileCount + \" file(s) analyzed\\n\";\r\n    }\r\n}\r\nexports.Total = Total;\r\n//# sourceMappingURL=total.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/formatters/total.js?");

/***/ }),

/***/ "./build/src/rename.js":
/*!*****************************!*\
  !*** ./build/src/rename.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Rename = void 0;\r\nconst abaplint = __webpack_require__(/*! @abaplint/core */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nconst path = __webpack_require__(/*! path */ \"path\");\r\nconst fs = __webpack_require__(/*! fs */ \"fs\");\r\nconst file_operations_1 = __webpack_require__(/*! ./file_operations */ \"./build/src/file_operations.js\");\r\nclass Rename {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    run(config, base) {\r\n        const rconfig = config.get().rename;\r\n        if (rconfig === undefined) {\r\n            return;\r\n        }\r\n        this.skip(rconfig);\r\n        this.rename(rconfig);\r\n        this.write(rconfig, base);\r\n    }\r\n    ////////////////////////\r\n    write(rconfig, base) {\r\n        const outputFolder = base + path.sep + rconfig.output;\r\n        console.log(\"Base: \" + base);\r\n        console.log(\"Output folder: \" + outputFolder);\r\n        file_operations_1.FileOperations.deleteFolderRecursive(outputFolder);\r\n        for (const o of this.reg.getObjects()) {\r\n            if (this.reg.isDependency(o) === true) {\r\n                continue;\r\n            }\r\n            for (const f of o.getFiles()) {\r\n                const n = outputFolder + f.getFilename().replace(base, \"\");\r\n                console.log(\"Write \" + n);\r\n                fs.mkdirSync(path.dirname(n), { recursive: true });\r\n                fs.writeFileSync(n, f.getRaw());\r\n            }\r\n        }\r\n    }\r\n    rename(rconfig) {\r\n        const renamer = new abaplint.Rename(this.reg);\r\n        for (const o of this.reg.getObjects()) {\r\n            if (this.reg.isDependency(o) === true) {\r\n                continue;\r\n            }\r\n            for (const p of rconfig.patterns || []) {\r\n                if (!(o.getType().match(p.type))) {\r\n                    continue;\r\n                }\r\n                const regex = new RegExp(p.oldName, \"i\");\r\n                const match = regex.exec(o.getName());\r\n                if (!match) {\r\n                    continue;\r\n                }\r\n                const newStr = o.getName().replace(regex, p.newName);\r\n                console.log(\"Renaming \" + o.getName().padEnd(30, \" \") + \" -> \" + newStr);\r\n                renamer.rename(o.getType(), o.getName(), newStr);\r\n            }\r\n        }\r\n    }\r\n    skip(rconfig) {\r\n        if (rconfig.skip) {\r\n            for (const s of rconfig.skip) {\r\n                const all = [];\r\n                for (const f of this.reg.getFiles()) {\r\n                    all.push(f);\r\n                }\r\n                for (const n of all) {\r\n                    if (n.getFilename().match(s)) {\r\n                        console.log(n.getFilename() + \" skipped\");\r\n                        this.reg.removeFile(n);\r\n                    }\r\n                }\r\n            }\r\n            this.reg.parse();\r\n        }\r\n    }\r\n}\r\nexports.Rename = Rename;\r\n//# sourceMappingURL=rename.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./build/src/rename.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/lexer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/lexer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Lexer = void 0;\r\nconst Tokens = __webpack_require__(/*! ./tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nvar Mode;\r\n(function (Mode) {\r\n    Mode[Mode[\"Normal\"] = 0] = \"Normal\";\r\n    Mode[Mode[\"Ping\"] = 1] = \"Ping\";\r\n    Mode[Mode[\"Str\"] = 2] = \"Str\";\r\n    Mode[Mode[\"Template\"] = 3] = \"Template\";\r\n    Mode[Mode[\"Comment\"] = 4] = \"Comment\";\r\n    Mode[Mode[\"Pragma\"] = 5] = \"Pragma\";\r\n})(Mode || (Mode = {}));\r\nclass Buffer {\r\n    constructor() {\r\n        this.buf = \"\";\r\n    }\r\n    add(s) {\r\n        this.buf = this.buf + s;\r\n    }\r\n    get() {\r\n        return this.buf;\r\n    }\r\n    clear() {\r\n        this.buf = \"\";\r\n    }\r\n}\r\nclass Stream {\r\n    constructor(raw) {\r\n        this.offset = -1;\r\n        this.raw = raw;\r\n        this.row = 0;\r\n        this.col = 0;\r\n    }\r\n    advance() {\r\n        if (this.currentChar() === \"\\n\") {\r\n            this.col = 1;\r\n            this.row = this.row + 1;\r\n        }\r\n        if (this.offset === this.raw.length) {\r\n            return false;\r\n        }\r\n        this.col = this.col + 1;\r\n        this.offset = this.offset + 1;\r\n        return true;\r\n    }\r\n    getCol() {\r\n        return this.col;\r\n    }\r\n    getRow() {\r\n        return this.row;\r\n    }\r\n    prevChar() {\r\n        return this.raw.substr(this.offset - 1, 1);\r\n    }\r\n    prevPrevChar() {\r\n        return this.raw.substr(this.offset - 2, 2);\r\n    }\r\n    currentChar() {\r\n        if (this.offset < 0) {\r\n            return \"\\n\"; // simulate newline at start of file to handle star(*) comments\r\n        }\r\n        return this.raw.substr(this.offset, 1);\r\n    }\r\n    nextChar() {\r\n        return this.raw.substr(this.offset + 1, 1);\r\n    }\r\n    nextNextChar() {\r\n        return this.raw.substr(this.offset + 1, 2);\r\n    }\r\n}\r\nclass Lexer {\r\n    static run(file, virtual) {\r\n        this.virtual = virtual;\r\n        this.tokens = [];\r\n        this.m = Mode.Normal;\r\n        this.process(file.getRaw());\r\n        return { file, tokens: this.tokens };\r\n    }\r\n    static add() {\r\n        const s = this.buffer.get().trim();\r\n        if (s.length > 0) {\r\n            const col = this.stream.getCol();\r\n            const row = this.stream.getRow();\r\n            let whiteBefore = false;\r\n            const prev = this.stream.prevChar();\r\n            if (prev === \" \" || prev === \"\\n\" || prev === \"\\t\" || prev === \":\") {\r\n                whiteBefore = true;\r\n            }\r\n            let whiteAfter = false;\r\n            const next = this.stream.nextChar();\r\n            if (next === \" \" || next === \"\\n\" || next === \"\\t\" || next === \":\" || next === \",\" || next === \".\" || next === \"\" || next === \"\\\"\") {\r\n                whiteAfter = true;\r\n            }\r\n            let pos = new position_1.Position(row, col - s.length);\r\n            if (this.virtual) {\r\n                pos = new position_1.VirtualPosition(this.virtual, pos.getRow(), pos.getCol());\r\n            }\r\n            let tok = undefined;\r\n            if (this.m === Mode.Comment) {\r\n                tok = new Tokens.Comment(pos, s);\r\n            }\r\n            else if (this.m === Mode.Ping || this.m === Mode.Str) {\r\n                tok = new Tokens.String(pos, s);\r\n            }\r\n            else if (this.m === Mode.Template) {\r\n                const first = s.charAt(0);\r\n                const last = s.charAt(s.length - 1);\r\n                if (first === \"|\" && last === \"|\") {\r\n                    tok = new Tokens.StringTemplate(pos, s);\r\n                }\r\n                else if (first === \"|\" && last === \"{\") {\r\n                    tok = new Tokens.StringTemplateBegin(pos, s);\r\n                }\r\n                else if (first === \"}\" && last === \"|\") {\r\n                    tok = new Tokens.StringTemplateEnd(pos, s);\r\n                }\r\n                else if (first === \"}\" && last === \"{\") {\r\n                    tok = new Tokens.StringTemplateMiddle(pos, s);\r\n                }\r\n                else {\r\n                    tok = new Tokens.Identifier(pos, s);\r\n                }\r\n            }\r\n            else if (s.substr(0, 2) === \"##\") {\r\n                tok = new Tokens.Pragma(pos, s);\r\n            }\r\n            else if (s.length === 1) {\r\n                if (s === \".\" || s === \",\") {\r\n                    tok = new Tokens.Punctuation(pos, s);\r\n                }\r\n                else if (s === \"[\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WBracketLeftW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WBracketLeft(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.BracketLeftW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.BracketLeft(pos, s);\r\n                    }\r\n                }\r\n                else if (s === \"(\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WParenLeftW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WParenLeft(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.ParenLeftW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.ParenLeft(pos, s);\r\n                    }\r\n                }\r\n                else if (s === \"]\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WBracketRightW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WBracketRight(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.BracketRightW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.BracketRight(pos, s);\r\n                    }\r\n                }\r\n                else if (s === \")\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WParenRightW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WParenRight(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.ParenRightW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.ParenRight(pos, s);\r\n                    }\r\n                }\r\n                else if (s === \"-\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WDashW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WDash(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.DashW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.Dash(pos, s);\r\n                    }\r\n                }\r\n                else if (s === \"+\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WPlusW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WPlus(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.PlusW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.Plus(pos, s);\r\n                    }\r\n                }\r\n                else if (s === \"@\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WAtW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WAt(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.AtW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.At(pos, s);\r\n                    }\r\n                }\r\n            }\r\n            else if (s.length === 2) {\r\n                if (s === \"->\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WInstanceArrowW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WInstanceArrow(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.InstanceArrowW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.InstanceArrow(pos, s);\r\n                    }\r\n                }\r\n                else if (s === \"=>\") {\r\n                    if (whiteBefore && whiteAfter) {\r\n                        tok = new Tokens.WStaticArrowW(pos, s);\r\n                    }\r\n                    else if (whiteBefore) {\r\n                        tok = new Tokens.WStaticArrow(pos, s);\r\n                    }\r\n                    else if (whiteAfter) {\r\n                        tok = new Tokens.StaticArrowW(pos, s);\r\n                    }\r\n                    else {\r\n                        tok = new Tokens.StaticArrow(pos, s);\r\n                    }\r\n                }\r\n            }\r\n            if (tok === undefined) {\r\n                tok = new Tokens.Identifier(pos, s);\r\n            }\r\n            this.tokens.push(tok);\r\n        }\r\n        this.buffer.clear();\r\n    }\r\n    static process(raw) {\r\n        this.stream = new Stream(raw.replace(/\\r/g, \"\"));\r\n        this.buffer = new Buffer();\r\n        for (;;) {\r\n            const current = this.stream.currentChar();\r\n            this.buffer.add(current);\r\n            const buf = this.buffer.get();\r\n            const ahead = this.stream.nextChar();\r\n            const aahead = this.stream.nextNextChar();\r\n            const prev = this.stream.prevChar();\r\n            if (ahead === \"'\" && this.m === Mode.Normal) {\r\n                // start string\r\n                this.add();\r\n                this.m = Mode.Str;\r\n            }\r\n            else if ((ahead === \"|\" || ahead === \"}\")\r\n                && this.m === Mode.Normal) {\r\n                // start template\r\n                this.add();\r\n                this.m = Mode.Template;\r\n            }\r\n            else if (ahead === \"`\" && this.m === Mode.Normal) {\r\n                // start ping\r\n                this.add();\r\n                this.m = Mode.Ping;\r\n            }\r\n            else if (aahead === \"##\" && this.m === Mode.Normal) {\r\n                // start pragma\r\n                this.add();\r\n                this.m = Mode.Pragma;\r\n            }\r\n            else if ((ahead === \"\\\"\" || (ahead === \"*\" && current === \"\\n\"))\r\n                && this.m === Mode.Normal) {\r\n                // start comment\r\n                this.add();\r\n                this.m = Mode.Comment;\r\n            }\r\n            else if (this.m === Mode.Pragma && (ahead === \",\" || ahead === \":\" || ahead === \".\" || ahead === \" \" || ahead === \"\\n\")) {\r\n                // end of pragma\r\n                this.add();\r\n                this.m = Mode.Normal;\r\n            }\r\n            else if (this.m === Mode.Ping\r\n                && buf.length > 1\r\n                && current === \"`\"\r\n                && aahead !== \"``\"\r\n                && (buf.match(/`/g) || []).length % 2 === 0\r\n                && ahead !== \"`\") {\r\n                // end of ping\r\n                this.add();\r\n                this.m = Mode.Normal;\r\n            }\r\n            else if (this.m === Mode.Template\r\n                && buf.length > 1\r\n                && (current === \"|\" || current === \"{\")\r\n                && (prev !== \"\\\\\" || this.stream.prevPrevChar() === \"\\\\\\\\\")) {\r\n                // end of template\r\n                this.add();\r\n                this.m = Mode.Normal;\r\n            }\r\n            else if (this.m === Mode.Str\r\n                && current === \"'\"\r\n                && buf.length > 1\r\n                && aahead !== \"''\"\r\n                && (buf.match(/'/g) || []).length % 2 === 0\r\n                && ahead !== \"'\") {\r\n                // end of string\r\n                this.add();\r\n                if (ahead === \"\\\"\") {\r\n                    this.m = Mode.Comment;\r\n                }\r\n                else {\r\n                    this.m = Mode.Normal;\r\n                }\r\n            }\r\n            else if (this.m === Mode.Normal\r\n                && (ahead === \" \"\r\n                    || ahead === \":\"\r\n                    || ahead === \".\"\r\n                    || ahead === \",\"\r\n                    || ahead === \"-\"\r\n                    || ahead === \"+\"\r\n                    || ahead === \"(\"\r\n                    || ahead === \")\"\r\n                    || ahead === \"[\"\r\n                    || ahead === \"]\"\r\n                    || (ahead === \"@\" && buf.trim().length === 0)\r\n                    || aahead === \"->\"\r\n                    || aahead === \"=>\"\r\n                    || ahead === \"\\t\"\r\n                    || ahead === \"\\n\")) {\r\n                this.add();\r\n            }\r\n            else if (ahead === \"\\n\" && this.m !== Mode.Template) {\r\n                this.add();\r\n                this.m = Mode.Normal;\r\n            }\r\n            else if (this.m === Mode.Template && current === \"\\n\") {\r\n                this.add();\r\n            }\r\n            else if (current === \">\"\r\n                && (prev === \"-\" || prev === \"=\")\r\n                && ahead !== \" \"\r\n                && this.m === Mode.Normal) {\r\n                // arrows\r\n                this.add();\r\n            }\r\n            else if (this.m === Mode.Normal\r\n                && (buf === \".\"\r\n                    || buf === \",\"\r\n                    || buf === \":\"\r\n                    || buf === \"(\"\r\n                    || buf === \")\"\r\n                    || buf === \"[\"\r\n                    || buf === \"]\"\r\n                    || buf === \"+\"\r\n                    || buf === \"@\"\r\n                    || (buf === \"-\" && ahead !== \">\"))) {\r\n                this.add();\r\n            }\r\n            if (!this.stream.advance()) {\r\n                break;\r\n            }\r\n        }\r\n        this.add();\r\n    }\r\n}\r\nexports.Lexer = Lexer;\r\n//# sourceMappingURL=lexer.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/lexer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Token = void 0;\r\nconst position_1 = __webpack_require__(/*! ../../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass Token {\r\n    constructor(start, str) {\r\n        this.start = start;\r\n        this.str = str;\r\n    }\r\n    getStr() {\r\n        return this.str;\r\n    }\r\n    getRow() {\r\n        return this.start.getRow();\r\n    }\r\n    getCol() {\r\n        return this.start.getCol();\r\n    }\r\n    getStart() {\r\n        return this.start;\r\n    }\r\n    getEnd() {\r\n        return new position_1.Position(this.start.getRow(), this.start.getCol() + this.str.length);\r\n    }\r\n}\r\nexports.Token = Token;\r\n//# sourceMappingURL=_token.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/at.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/at.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WAtW = exports.AtW = exports.WAt = exports.At = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass At extends _token_1.Token {\r\n    static railroad() {\r\n        return \"@\";\r\n    }\r\n}\r\nexports.At = At;\r\nclass WAt extends _token_1.Token {\r\n    static railroad() {\r\n        return \" @\";\r\n    }\r\n}\r\nexports.WAt = WAt;\r\nclass AtW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"@ \";\r\n    }\r\n}\r\nexports.AtW = AtW;\r\nclass WAtW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" @ \";\r\n    }\r\n}\r\nexports.WAtW = WAtW;\r\n//# sourceMappingURL=at.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/at.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_left.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_left.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WBracketLeftW = exports.BracketLeftW = exports.WBracketLeft = exports.BracketLeft = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass BracketLeft extends _token_1.Token {\r\n    static railroad() {\r\n        return \"[\";\r\n    }\r\n}\r\nexports.BracketLeft = BracketLeft;\r\nclass WBracketLeft extends _token_1.Token {\r\n    static railroad() {\r\n        return \" [\";\r\n    }\r\n}\r\nexports.WBracketLeft = WBracketLeft;\r\nclass BracketLeftW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"[ \";\r\n    }\r\n}\r\nexports.BracketLeftW = BracketLeftW;\r\nclass WBracketLeftW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" [ \";\r\n    }\r\n}\r\nexports.WBracketLeftW = WBracketLeftW;\r\n//# sourceMappingURL=bracket_left.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_left.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_right.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_right.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WBracketRightW = exports.BracketRightW = exports.WBracketRight = exports.BracketRight = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass BracketRight extends _token_1.Token {\r\n    static railroad() {\r\n        return \"]\";\r\n    }\r\n}\r\nexports.BracketRight = BracketRight;\r\nclass WBracketRight extends _token_1.Token {\r\n    static railroad() {\r\n        return \" ]\";\r\n    }\r\n}\r\nexports.WBracketRight = WBracketRight;\r\nclass BracketRightW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"] \";\r\n    }\r\n}\r\nexports.BracketRightW = BracketRightW;\r\nclass WBracketRightW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" ] \";\r\n    }\r\n}\r\nexports.WBracketRightW = WBracketRightW;\r\n//# sourceMappingURL=bracket_right.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_right.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/colon.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/colon.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Colon = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass Colon extends _token_1.Token {\r\n}\r\nexports.Colon = Colon;\r\n//# sourceMappingURL=colon.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/colon.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/comment.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/comment.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Comment = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass Comment extends _token_1.Token {\r\n}\r\nexports.Comment = Comment;\r\n//# sourceMappingURL=comment.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/comment.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/dash.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/dash.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WDashW = exports.DashW = exports.WDash = exports.Dash = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass Dash extends _token_1.Token {\r\n    static railroad() {\r\n        return \"-\";\r\n    }\r\n}\r\nexports.Dash = Dash;\r\nclass WDash extends _token_1.Token {\r\n    static railroad() {\r\n        return \" -\";\r\n    }\r\n}\r\nexports.WDash = WDash;\r\nclass DashW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"- \";\r\n    }\r\n}\r\nexports.DashW = DashW;\r\nclass WDashW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" - \";\r\n    }\r\n}\r\nexports.WDashW = WDashW;\r\n//# sourceMappingURL=dash.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/dash.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/identifier.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/identifier.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Identifier = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass Identifier extends _token_1.Token {\r\n}\r\nexports.Identifier = Identifier;\r\n//# sourceMappingURL=identifier.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/identifier.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./at */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/at.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./bracket_left */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_left.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./bracket_right */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/bracket_right.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./colon */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/colon.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./comment */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/comment.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dash */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/dash.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./identifier */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/identifier.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./instance_arrow */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/instance_arrow.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./paren_left */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_left.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./paren_right */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_right.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./plus */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/plus.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./pragma */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/pragma.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./punctuation */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/punctuation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./static_arrow */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/static_arrow.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./string */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/string.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/instance_arrow.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/instance_arrow.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WInstanceArrowW = exports.InstanceArrowW = exports.WInstanceArrow = exports.InstanceArrow = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass InstanceArrow extends _token_1.Token {\r\n    static railroad() {\r\n        return \"->\";\r\n    }\r\n}\r\nexports.InstanceArrow = InstanceArrow;\r\nclass WInstanceArrow extends _token_1.Token {\r\n    static railroad() {\r\n        return \" ->\";\r\n    }\r\n}\r\nexports.WInstanceArrow = WInstanceArrow;\r\nclass InstanceArrowW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"-> \";\r\n    }\r\n}\r\nexports.InstanceArrowW = InstanceArrowW;\r\nclass WInstanceArrowW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" -> \";\r\n    }\r\n}\r\nexports.WInstanceArrowW = WInstanceArrowW;\r\n//# sourceMappingURL=instance_arrow.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/instance_arrow.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_left.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_left.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WParenLeftW = exports.ParenLeftW = exports.WParenLeft = exports.ParenLeft = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass ParenLeft extends _token_1.Token {\r\n    static railroad() {\r\n        return \"(\";\r\n    }\r\n}\r\nexports.ParenLeft = ParenLeft;\r\nclass WParenLeft extends _token_1.Token {\r\n    static railroad() {\r\n        return \" (\";\r\n    }\r\n}\r\nexports.WParenLeft = WParenLeft;\r\nclass ParenLeftW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"( \";\r\n    }\r\n}\r\nexports.ParenLeftW = ParenLeftW;\r\nclass WParenLeftW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" ( \";\r\n    }\r\n}\r\nexports.WParenLeftW = WParenLeftW;\r\n//# sourceMappingURL=paren_left.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_left.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_right.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_right.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WParenRightW = exports.ParenRightW = exports.WParenRight = exports.ParenRight = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass ParenRight extends _token_1.Token {\r\n    static railroad() {\r\n        return \")\";\r\n    }\r\n}\r\nexports.ParenRight = ParenRight;\r\nclass WParenRight extends _token_1.Token {\r\n    static railroad() {\r\n        return \" )\";\r\n    }\r\n}\r\nexports.WParenRight = WParenRight;\r\nclass ParenRightW extends _token_1.Token {\r\n    static railroad() {\r\n        return \") \";\r\n    }\r\n}\r\nexports.ParenRightW = ParenRightW;\r\nclass WParenRightW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" ) \";\r\n    }\r\n}\r\nexports.WParenRightW = WParenRightW;\r\n//# sourceMappingURL=paren_right.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_right.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/plus.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/plus.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WPlusW = exports.PlusW = exports.WPlus = exports.Plus = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass Plus extends _token_1.Token {\r\n    static railroad() {\r\n        return \"+\";\r\n    }\r\n}\r\nexports.Plus = Plus;\r\nclass WPlus extends _token_1.Token {\r\n    static railroad() {\r\n        return \" +\";\r\n    }\r\n}\r\nexports.WPlus = WPlus;\r\nclass PlusW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"+ \";\r\n    }\r\n}\r\nexports.PlusW = PlusW;\r\nclass WPlusW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" + \";\r\n    }\r\n}\r\nexports.WPlusW = WPlusW;\r\n//# sourceMappingURL=plus.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/plus.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/pragma.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/pragma.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Pragma = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass Pragma extends _token_1.Token {\r\n}\r\nexports.Pragma = Pragma;\r\n//# sourceMappingURL=pragma.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/pragma.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/punctuation.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/punctuation.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Punctuation = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass Punctuation extends _token_1.Token {\r\n}\r\nexports.Punctuation = Punctuation;\r\n//# sourceMappingURL=punctuation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/punctuation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/static_arrow.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/static_arrow.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WStaticArrowW = exports.StaticArrowW = exports.WStaticArrow = exports.StaticArrow = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass StaticArrow extends _token_1.Token {\r\n    static railroad() {\r\n        return \"=>\";\r\n    }\r\n}\r\nexports.StaticArrow = StaticArrow;\r\nclass WStaticArrow extends _token_1.Token {\r\n    static railroad() {\r\n        return \" =>\";\r\n    }\r\n}\r\nexports.WStaticArrow = WStaticArrow;\r\nclass StaticArrowW extends _token_1.Token {\r\n    static railroad() {\r\n        return \"=> \";\r\n    }\r\n}\r\nexports.StaticArrowW = StaticArrowW;\r\nclass WStaticArrowW extends _token_1.Token {\r\n    static railroad() {\r\n        return \" => \";\r\n    }\r\n}\r\nexports.WStaticArrowW = WStaticArrowW;\r\n//# sourceMappingURL=static_arrow.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/static_arrow.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/string.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/string.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StringTemplateMiddle = exports.StringTemplateEnd = exports.StringTemplateBegin = exports.StringTemplate = exports.String = void 0;\r\nconst _token_1 = __webpack_require__(/*! ./_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nclass String extends _token_1.Token {\r\n}\r\nexports.String = String;\r\nclass StringTemplate extends _token_1.Token {\r\n}\r\nexports.StringTemplate = StringTemplate;\r\nclass StringTemplateBegin extends _token_1.Token {\r\n}\r\nexports.StringTemplateBegin = StringTemplateBegin;\r\nclass StringTemplateEnd extends _token_1.Token {\r\n}\r\nexports.StringTemplateEnd = StringTemplateEnd;\r\nclass StringTemplateMiddle extends _token_1.Token {\r\n}\r\nexports.StringTemplateMiddle = StringTemplateMiddle;\r\n//# sourceMappingURL=string.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/string.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.verNot = exports.ver = exports.plusPrio = exports.plus = exports.starPrio = exports.star = exports.per = exports.optPrio = exports.opt = exports.altPrio = exports.alt = exports.seq = exports.tok = exports.regex = exports.str = exports.Combi = exports.Expression = void 0;\r\nconst Tokens = __webpack_require__(/*! ../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst result_1 = __webpack_require__(/*! ./result */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/result.js\");\r\nclass Regex {\r\n    constructor(r) {\r\n        this.regexp = r;\r\n    }\r\n    listKeywords() {\r\n        return [];\r\n    }\r\n    getUsing() {\r\n        return [];\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const input of r) {\r\n            if (input.remainingLength() === 0) {\r\n                continue;\r\n            }\r\n            const token = input.peek();\r\n            if (this.regexp.test(token.getStr()) === true) {\r\n                result.push(input.shift(new nodes_1.TokenNodeRegex(token)));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        return \"Railroad.Terminal(\\\"\" + this.regexp.source.replace(/\\\\/g, \"\\\\\\\\\") + \"\\\")\";\r\n    }\r\n    toStr() {\r\n        return this.regexp.toString();\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass Word {\r\n    constructor(s) {\r\n        this.s = s.toUpperCase();\r\n    }\r\n    listKeywords() {\r\n        return [this.s];\r\n    }\r\n    getUsing() {\r\n        return [];\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const input of r) {\r\n            if (input.remainingLength() !== 0\r\n                && input.peek().getStr().toUpperCase() === this.s) {\r\n                //        console.log(\"match, \" + this.s + result.length);\r\n                result.push(input.shift(new nodes_1.TokenNode(input.peek())));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        return \"Railroad.Terminal('\\\"\" + this.s + \"\\\"')\";\r\n    }\r\n    toStr() {\r\n        return \"\\\"\" + this.s + \"\\\"\";\r\n    }\r\n    first() {\r\n        return [this.s];\r\n    }\r\n}\r\nclass Token {\r\n    constructor(s) {\r\n        this.name = s.toUpperCase();\r\n    }\r\n    listKeywords() {\r\n        return [];\r\n    }\r\n    getUsing() {\r\n        return [];\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const input of r) {\r\n            if (input.remainingLength() !== 0\r\n                && input.peek().constructor.name.toUpperCase() === this.name) {\r\n                result.push(input.shift(new nodes_1.TokenNode(input.peek())));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        let text = this.name;\r\n        for (const token in Tokens) {\r\n            const toke = Tokens;\r\n            if (token.toUpperCase() === this.name && toke[token].railroad) {\r\n                text = toke[token].railroad();\r\n                break;\r\n            }\r\n        }\r\n        return \"Railroad.Terminal('!\\\"\" + text + \"\\\"')\";\r\n    }\r\n    toStr() {\r\n        return \"Token \\\"\" + this.name + \"\\\"\";\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass Vers {\r\n    constructor(version, runnable) {\r\n        this.version = version;\r\n        this.runnable = runnable;\r\n    }\r\n    listKeywords() {\r\n        return this.runnable.listKeywords();\r\n    }\r\n    run(r) {\r\n        if (Combi.getVersion() >= this.version\r\n            || Combi.getVersion() === version_1.Version.Cloud) {\r\n            return this.runnable.run(r);\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    getUsing() {\r\n        return this.runnable.getUsing();\r\n    }\r\n    railroad() {\r\n        return \"Railroad.Sequence(Railroad.Comment(\\\"\" +\r\n            this.version +\r\n            \"\\\", {}), \" +\r\n            this.runnable.railroad() +\r\n            \")\";\r\n    }\r\n    toStr() {\r\n        return \"Version(\" + this.runnable.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return this.runnable.first();\r\n    }\r\n}\r\nclass VersNot {\r\n    constructor(version, runnable) {\r\n        this.version = version;\r\n        this.runnable = runnable;\r\n    }\r\n    listKeywords() {\r\n        return this.runnable.listKeywords();\r\n    }\r\n    getUsing() {\r\n        return this.runnable.getUsing();\r\n    }\r\n    run(r) {\r\n        if (Combi.getVersion() !== this.version) {\r\n            return this.runnable.run(r);\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    railroad() {\r\n        return \"Railroad.Sequence(Railroad.Comment(\\\"not \" +\r\n            this.version +\r\n            \"\\\", {}), \" +\r\n            this.runnable.railroad() +\r\n            \")\";\r\n    }\r\n    toStr() {\r\n        return \"VersionNot(\" + this.runnable.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return this.runnable.first();\r\n    }\r\n}\r\nclass OptionalPriority {\r\n    constructor(optional) {\r\n        this.optional = optional;\r\n    }\r\n    listKeywords() {\r\n        return this.optional.listKeywords();\r\n    }\r\n    getUsing() {\r\n        return this.optional.getUsing();\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const input of r) {\r\n            const res = this.optional.run([input]);\r\n            if (res.length > 1) {\r\n                result.push(...res);\r\n            }\r\n            else if (res.length === 0) {\r\n                result.push(input);\r\n            }\r\n            else if (res[0].remainingLength() < input.remainingLength()) {\r\n                result.push(...res);\r\n            }\r\n            else {\r\n                result.push(input);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        return \"Railroad.Optional(\" + this.optional.railroad() + \")\";\r\n    }\r\n    toStr() {\r\n        return \"opt(\" + this.optional.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass Optional {\r\n    constructor(optional) {\r\n        this.optional = optional;\r\n    }\r\n    listKeywords() {\r\n        return this.optional.listKeywords();\r\n    }\r\n    getUsing() {\r\n        return this.optional.getUsing();\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const input of r) {\r\n            result.push(input);\r\n            const res = this.optional.run([input]);\r\n            result.push(...res);\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        return \"Railroad.Optional(\" + this.optional.railroad() + \")\";\r\n    }\r\n    toStr() {\r\n        return \"opt(\" + this.optional.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass Star {\r\n    constructor(sta) {\r\n        this.sta = sta;\r\n    }\r\n    listKeywords() {\r\n        return this.sta.listKeywords();\r\n    }\r\n    getUsing() {\r\n        return this.sta.getUsing();\r\n    }\r\n    run(r) {\r\n        const result = r;\r\n        let res = r;\r\n        let input = [];\r\n        for (;;) {\r\n            input = res;\r\n            res = this.sta.run(input);\r\n            if (res.length === 0) {\r\n                break;\r\n            }\r\n            result.push(...res);\r\n        }\r\n        //    console.dir(result);\r\n        return result;\r\n    }\r\n    railroad() {\r\n        return \"Railroad.ZeroOrMore(\" + this.sta.railroad() + \")\";\r\n    }\r\n    toStr() {\r\n        return \"star(\" + this.sta.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass StarPrioroity {\r\n    constructor(sta) {\r\n        this.sta = sta;\r\n    }\r\n    listKeywords() {\r\n        return this.sta.listKeywords();\r\n    }\r\n    getUsing() {\r\n        return this.sta.getUsing();\r\n    }\r\n    run(r) {\r\n        let result = r;\r\n        let res = r;\r\n        //    let input: Result[] = [];\r\n        let prev;\r\n        for (;;) {\r\n            //      input = res;\r\n            res = this.sta.run(res);\r\n            if (res.length === 0) {\r\n                if (prev !== undefined) {\r\n                    result = prev;\r\n                }\r\n                break;\r\n            }\r\n            prev = res;\r\n        }\r\n        //    console.dir(result);\r\n        return result;\r\n    }\r\n    railroad() {\r\n        return \"Railroad.ZeroOrMore(\" + this.sta.railroad() + \")\";\r\n    }\r\n    toStr() {\r\n        return \"star(\" + this.sta.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass Plus {\r\n    constructor(plu) {\r\n        this.plu = plu;\r\n        this.sub = new Sequence([this.plu, new Star(this.plu)]);\r\n    }\r\n    listKeywords() {\r\n        return this.plu.listKeywords();\r\n    }\r\n    getUsing() {\r\n        return this.plu.getUsing();\r\n    }\r\n    run(r) {\r\n        return this.sub.run(r);\r\n    }\r\n    railroad() {\r\n        return \"Railroad.OneOrMore(\" + this.plu.railroad() + \")\";\r\n    }\r\n    toStr() {\r\n        return \"plus(\" + this.plu.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return this.plu.first();\r\n    }\r\n}\r\nclass PlusPriority {\r\n    constructor(plu) {\r\n        this.plu = plu;\r\n        this.sub = new Sequence([this.plu, new StarPrioroity(this.plu)]);\r\n    }\r\n    listKeywords() {\r\n        return this.plu.listKeywords();\r\n    }\r\n    getUsing() {\r\n        return this.plu.getUsing();\r\n    }\r\n    run(r) {\r\n        return this.sub.run(r);\r\n    }\r\n    railroad() {\r\n        return \"Railroad.OneOrMore(\" + this.plu.railroad() + \")\";\r\n    }\r\n    toStr() {\r\n        return \"plus(\" + this.plu.toStr() + \")\";\r\n    }\r\n    first() {\r\n        return this.plu.first();\r\n    }\r\n}\r\nclass Sequence {\r\n    constructor(list) {\r\n        if (list.length < 2) {\r\n            throw new Error(\"Sequence, length error\");\r\n        }\r\n        this.list = list;\r\n    }\r\n    listKeywords() {\r\n        const ret = [];\r\n        for (const i of this.list) {\r\n            ret.push(...i.listKeywords());\r\n        }\r\n        return ret;\r\n    }\r\n    getUsing() {\r\n        return this.list.reduce((a, c) => { return a.concat(c.getUsing()); }, []);\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const input of r) {\r\n            let temp = [input];\r\n            for (const sequence of this.list) {\r\n                temp = sequence.run(temp);\r\n                if (temp.length === 0) {\r\n                    break;\r\n                }\r\n            }\r\n            result.push(...temp);\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        const children = this.list.map((e) => { return e.railroad(); });\r\n        return \"Railroad.Sequence(\" + children.join() + \")\";\r\n    }\r\n    toStr() {\r\n        let ret = \"\";\r\n        for (const i of this.list) {\r\n            ret = ret + i.toStr() + \",\";\r\n        }\r\n        return \"seq(\" + ret + \")\";\r\n    }\r\n    first() {\r\n        return this.list[0].first();\r\n    }\r\n}\r\nclass WordSequence {\r\n    constructor(stri) {\r\n        this.words = [];\r\n        this.stri = stri;\r\n        const foo = this.stri.replace(/-/g, \" - \");\r\n        const split = foo.split(\" \");\r\n        for (const st of split) {\r\n            // todo, use Dash token\r\n            this.words.push(new Word(st));\r\n        }\r\n        this.seq = new Sequence(this.words);\r\n    }\r\n    listKeywords() {\r\n        return [this.stri.toString()];\r\n    }\r\n    getUsing() {\r\n        return [];\r\n    }\r\n    run(r) {\r\n        return this.seq.run(r);\r\n    }\r\n    railroad() {\r\n        return \"Railroad.Terminal('\\\"\" + this.stri + \"\\\"')\";\r\n    }\r\n    toStr() {\r\n        return \"str(\" + this.stri + \")\";\r\n    }\r\n    first() {\r\n        return this.words[0].first();\r\n    }\r\n}\r\nclass Expression {\r\n    constructor() {\r\n        this.runnable = undefined;\r\n    }\r\n    run(r) {\r\n        const results = [];\r\n        if (this.runnable === undefined) {\r\n            this.runnable = this.getRunnable();\r\n        }\r\n        for (const input of r) {\r\n            const temp = this.runnable.run([input]);\r\n            for (const t of temp) {\r\n                let consumed = input.remainingLength() - t.remainingLength();\r\n                if (consumed > 0) {\r\n                    const originalLength = t.getNodes().length;\r\n                    const children = [];\r\n                    while (consumed > 0) {\r\n                        const sub = t.popNode();\r\n                        if (sub) {\r\n                            children.push(sub);\r\n                            consumed = consumed - sub.countTokens();\r\n                        }\r\n                    }\r\n                    const re = new nodes_1.ExpressionNode(this);\r\n                    re.setChildren(children.reverse());\r\n                    const n = t.getNodes().slice(0, originalLength - consumed);\r\n                    n.push(re);\r\n                    t.setNodes(n);\r\n                }\r\n                results.push(t);\r\n            }\r\n        }\r\n        //    console.dir(results);\r\n        return results;\r\n    }\r\n    listKeywords() {\r\n        // do not recurse, all Expressions are evaluated only on first level\r\n        return [];\r\n    }\r\n    getUsing() {\r\n        return [\"expression/\" + this.getName()];\r\n    }\r\n    getName() {\r\n        return this.constructor.name;\r\n    }\r\n    railroad() {\r\n        return \"Railroad.NonTerminal('\" + this.getName() + \"', {href: '#/expression/\" + this.getName() + \"'})\";\r\n    }\r\n    toStr() {\r\n        return \"expression(\" + this.getName() + \")\";\r\n    }\r\n    first() {\r\n        return this.getRunnable().first();\r\n    }\r\n}\r\nexports.Expression = Expression;\r\nclass Permutation {\r\n    constructor(list) {\r\n        if (list.length < 2) {\r\n            throw new Error(\"Permutation, length error, got \" + list.length);\r\n        }\r\n        this.list = list;\r\n    }\r\n    listKeywords() {\r\n        const ret = [];\r\n        for (const i of this.list) {\r\n            ret.push(...i.listKeywords());\r\n        }\r\n        return ret;\r\n    }\r\n    getUsing() {\r\n        return this.list.reduce((a, c) => { return a.concat(c.getUsing()); }, []);\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        const copy = this.list.slice();\r\n        for (let index = 0; index < this.list.length; index++) {\r\n            const temp = this.list[index].run(r);\r\n            if (temp.length !== 0) {\r\n                // match\r\n                result.push(...temp);\r\n                const left = copy;\r\n                left.splice(index, 1);\r\n                if (left.length === 1) {\r\n                    result.push(...left[0].run(temp));\r\n                }\r\n                else {\r\n                    result.push(...new Permutation(left).run(temp));\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        const children = this.list.map((e) => { return e.railroad(); });\r\n        return \"Railroad.MultipleChoice(0, 'any',\" + children.join() + \")\";\r\n    }\r\n    toStr() {\r\n        const children = this.list.map((e) => { return e.toStr(); });\r\n        return \"per(\" + children.join() + \")\";\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass Alternative {\r\n    constructor(list) {\r\n        if (list.length < 2) {\r\n            throw new Error(\"Alternative, length error\");\r\n        }\r\n        this.list = list;\r\n    }\r\n    listKeywords() {\r\n        const ret = [];\r\n        for (const i of this.list) {\r\n            ret.push(...i.listKeywords());\r\n        }\r\n        return ret;\r\n    }\r\n    getUsing() {\r\n        return this.list.reduce((a, c) => { return a.concat(c.getUsing()); }, []);\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const sequ of this.list) {\r\n            const temp = sequ.run(r);\r\n            result.push(...temp);\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        const children = this.list.map((e) => { return e.railroad(); });\r\n        return \"Railroad.Choice(0, \" + children.join() + \")\";\r\n    }\r\n    toStr() {\r\n        let ret = \"\";\r\n        for (const i of this.list) {\r\n            ret = ret + i.toStr() + \",\";\r\n        }\r\n        return \"alt(\" + ret + \")\";\r\n    }\r\n    first() {\r\n        if (this.list.length !== 2) {\r\n            return [\"\"];\r\n        }\r\n        const f1 = this.list[0].first();\r\n        const f2 = this.list[1].first();\r\n        if (f1.length === 1 && f1[0] === \"\") {\r\n            return f1;\r\n        }\r\n        if (f2.length === 1 && f2[0] === \"\") {\r\n            return f2;\r\n        }\r\n        if (f1.length === 1 && f2.length === 1 && f1[0] === f2[0]) {\r\n            return f1;\r\n        }\r\n        f1.push(...f2);\r\n        return f1;\r\n    }\r\n}\r\n// prioritized alternative, skip others if match found\r\nclass AlternativePriority {\r\n    constructor(list) {\r\n        if (list.length < 2) {\r\n            throw new Error(\"Alternative, length error\");\r\n        }\r\n        this.list = list;\r\n    }\r\n    listKeywords() {\r\n        const ret = [];\r\n        for (const i of this.list) {\r\n            ret.push(...i.listKeywords());\r\n        }\r\n        return ret;\r\n    }\r\n    getUsing() {\r\n        return this.list.reduce((a, c) => { return a.concat(c.getUsing()); }, []);\r\n    }\r\n    run(r) {\r\n        const result = [];\r\n        for (const sequ of this.list) {\r\n            //      console.log(seq.toStr());\r\n            const temp = sequ.run(r);\r\n            if (temp.length > 0) {\r\n                result.push(...temp);\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    railroad() {\r\n        const children = this.list.map((e) => { return e.railroad(); });\r\n        return \"Railroad.Choice(0, \" + children.join() + \")\";\r\n    }\r\n    toStr() {\r\n        let ret = \"\";\r\n        for (const i of this.list) {\r\n            ret = ret + i.toStr() + \",\";\r\n        }\r\n        return \"alt(\" + ret + \")\";\r\n    }\r\n    first() {\r\n        if (this.list.length !== 2) {\r\n            return [\"\"];\r\n        }\r\n        const f1 = this.list[0].first();\r\n        const f2 = this.list[1].first();\r\n        if (f1.length === 1 && f1[0] === \"\") {\r\n            return f1;\r\n        }\r\n        if (f2.length === 1 && f2[0] === \"\") {\r\n            return f2;\r\n        }\r\n        if (f1.length === 1 && f2.length === 1 && f1[0] === f2[0]) {\r\n            return f1;\r\n        }\r\n        f1.push(...f2);\r\n        return f1;\r\n    }\r\n}\r\nclass Combi {\r\n    static railroad(runnable, complex = false) {\r\n        // todo, move method to graph.js?\r\n        let type = \"Railroad.Diagram(\";\r\n        if (complex === true) {\r\n            type = \"Railroad.ComplexDiagram(\";\r\n        }\r\n        const result = \"Railroad.Diagram.INTERNAL_ALIGNMENT = 'left';\\n\" +\r\n            type +\r\n            runnable.railroad() +\r\n            \").toString();\";\r\n        return result;\r\n    }\r\n    static listKeywords(runnable) {\r\n        // todo, move these walkers of the syntax tree to some abstraction?\r\n        let res = runnable.listKeywords();\r\n        // remove duplicates\r\n        res = res.filter((x, i, a) => { return a.indexOf(x) === i; });\r\n        return res;\r\n    }\r\n    // assumption: no pragmas supplied in tokens input\r\n    static run(runnable, tokens, version) {\r\n        this.ver = version;\r\n        const input = new result_1.Result(tokens, 0);\r\n        const result = runnable.run([input]);\r\n        //    console.log(\"res: \" + result.length);\r\n        for (const res of result) {\r\n            if (res.remainingLength() === 0) {\r\n                return res.getNodes();\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static getVersion() {\r\n        return this.ver;\r\n    }\r\n}\r\nexports.Combi = Combi;\r\n// -----------------------------------------------------------------------------\r\nfunction str(s) {\r\n    if (s.indexOf(\" \") > 0 || s.indexOf(\"-\") > 0) {\r\n        return new WordSequence(s);\r\n    }\r\n    else {\r\n        return new Word(s);\r\n    }\r\n}\r\nexports.str = str;\r\nfunction regex(r) {\r\n    return new Regex(r);\r\n}\r\nexports.regex = regex;\r\nfunction tok(t) {\r\n    return new Token(t.name);\r\n}\r\nexports.tok = tok;\r\nconst singletons = {};\r\nfunction map(s) {\r\n    const type = typeof s;\r\n    if (type === \"string\") {\r\n        return str(s);\r\n    }\r\n    else if (type === \"function\") {\r\n        // @ts-ignore\r\n        const name = s.name;\r\n        if (singletons[name] === undefined) {\r\n            // @ts-ignore\r\n            singletons[name] = new s();\r\n        }\r\n        return singletons[name];\r\n    }\r\n    else {\r\n        return s;\r\n    }\r\n}\r\nfunction seq(first, second, ...rest) {\r\n    const list = [map(first), map(second)];\r\n    list.push(...rest.map(map));\r\n    return new Sequence(list);\r\n}\r\nexports.seq = seq;\r\nfunction alt(first, second, ...rest) {\r\n    const list = [map(first), map(second)];\r\n    list.push(...rest.map(map));\r\n    return new Alternative(list);\r\n}\r\nexports.alt = alt;\r\nfunction altPrio(first, second, ...rest) {\r\n    const list = [map(first), map(second)];\r\n    list.push(...rest.map(map));\r\n    return new AlternativePriority(list);\r\n}\r\nexports.altPrio = altPrio;\r\nfunction opt(first) {\r\n    return new Optional(map(first));\r\n}\r\nexports.opt = opt;\r\nfunction optPrio(first) {\r\n    return new OptionalPriority(map(first));\r\n}\r\nexports.optPrio = optPrio;\r\nfunction per(first, second, ...rest) {\r\n    const list = [map(first), map(second)];\r\n    list.push(...rest.map(map));\r\n    return new Permutation(list);\r\n}\r\nexports.per = per;\r\nfunction star(first) {\r\n    return new Star(map(first));\r\n}\r\nexports.star = star;\r\nfunction starPrio(first) {\r\n    return new StarPrioroity(map(first));\r\n}\r\nexports.starPrio = starPrio;\r\nfunction plus(first) {\r\n    return new Plus(map(first));\r\n}\r\nexports.plus = plus;\r\nfunction plusPrio(first) {\r\n    return new PlusPriority(map(first));\r\n}\r\nexports.plusPrio = plusPrio;\r\nfunction ver(version, first) {\r\n    return new Vers(version, map(first));\r\n}\r\nexports.ver = ver;\r\nfunction verNot(version, first) {\r\n    return new VersNot(version, map(first));\r\n}\r\nexports.verNot = verNot;\r\n//# sourceMappingURL=combi.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expand_macros.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expand_macros.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpandMacros = void 0;\r\nconst Statements = __webpack_require__(/*! ./statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Tokens = __webpack_require__(/*! ../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ./statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst statement_node_1 = __webpack_require__(/*! ../nodes/statement_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/statement_node.js\");\r\nconst token_node_1 = __webpack_require__(/*! ../nodes/token_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/token_node.js\");\r\nconst statement_parser_1 = __webpack_require__(/*! ./statement_parser */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statement_parser.js\");\r\nconst memory_file_1 = __webpack_require__(/*! ../../files/memory_file */ \"./node_modules/@abaplint/core/build/src/files/memory_file.js\");\r\nconst lexer_1 = __webpack_require__(/*! ../1_lexer/lexer */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/lexer.js\");\r\nconst position_1 = __webpack_require__(/*! ../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass Macros {\r\n    constructor(globalMacros) {\r\n        this.macros = {};\r\n        for (const m of globalMacros) {\r\n            this.macros[m.toUpperCase()] = [];\r\n        }\r\n    }\r\n    addMacro(name, contents) {\r\n        if (this.isMacro(name)) {\r\n            return;\r\n        }\r\n        this.macros[name.toUpperCase()] = contents;\r\n    }\r\n    getContents(name) {\r\n        return this.macros[name.toUpperCase()];\r\n    }\r\n    listMacroNames() {\r\n        return Object.keys(this.macros);\r\n    }\r\n    isMacro(name) {\r\n        if (this.macros[name.toUpperCase()]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass ExpandMacros {\r\n    constructor(globalMacros, version) {\r\n        this.macros = new Macros(globalMacros);\r\n        this.version = version;\r\n    }\r\n    find(statements) {\r\n        let name = undefined;\r\n        let contents = [];\r\n        for (let i = 0; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            if (statement.get() instanceof Statements.Define) {\r\n                // todo, will this break if first token is a pragma?\r\n                name = statement.getTokens()[1].getStr();\r\n                contents = [];\r\n            }\r\n            else if (name) {\r\n                if (statement.get() instanceof Statements.EndOfDefinition) {\r\n                    this.macros.addMacro(name, contents);\r\n                    name = undefined;\r\n                }\r\n                else if (!(statement.get() instanceof _statement_1.Comment)) {\r\n                    statements[i] = new statement_node_1.StatementNode(new _statement_1.MacroContent()).setChildren(this.tokensToNodes(statement.getTokens()));\r\n                    contents.push(statements[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleMacros(statements) {\r\n        const result = [];\r\n        let containsUnknown = false;\r\n        for (const statement of statements) {\r\n            if (statement.get() instanceof _statement_1.Unknown || statement.get() instanceof _statement_1.MacroCall) {\r\n                const macroName = this.findName(statement.getTokens());\r\n                if (macroName && this.macros.isMacro(macroName)) {\r\n                    result.push(new statement_node_1.StatementNode(new _statement_1.MacroCall()).setChildren(this.tokensToNodes(statement.getTokens())));\r\n                    const expanded = this.expandContents(macroName, statement);\r\n                    const handled = this.handleMacros(expanded);\r\n                    for (const e of handled.statements) {\r\n                        result.push(e);\r\n                    }\r\n                    if (handled.containsUnknown === true) {\r\n                        containsUnknown = true;\r\n                    }\r\n                    continue;\r\n                }\r\n                else {\r\n                    containsUnknown = true;\r\n                }\r\n            }\r\n            result.push(statement);\r\n        }\r\n        return { statements: result, containsUnknown };\r\n    }\r\n    //////////////\r\n    expandContents(name, statement) {\r\n        const contents = this.macros.getContents(name);\r\n        if (contents === undefined || contents.length === 0) {\r\n            return [];\r\n        }\r\n        let str = \"\";\r\n        for (const c of contents) {\r\n            let concat = c.concatTokens();\r\n            if (c.getTerminator() === \",\") {\r\n                // workaround for chained statements\r\n                concat = concat.replace(/,$/, \".\");\r\n            }\r\n            str += concat + \"\\n\";\r\n        }\r\n        const inputs = this.buildInput(statement);\r\n        let i = 1;\r\n        for (const input of inputs) {\r\n            const search = \"&\" + i;\r\n            const reg = new RegExp(search, \"g\");\r\n            str = str.replace(reg, input);\r\n            i++;\r\n        }\r\n        const file = new memory_file_1.MemoryFile(\"expand_macros.abap.prog\", str);\r\n        const lexerResult = lexer_1.Lexer.run(file, statement.getFirstToken().getStart());\r\n        const result = new statement_parser_1.StatementParser(this.version).run([lexerResult], this.macros.listMacroNames());\r\n        return result[0].statements;\r\n    }\r\n    buildInput(statement) {\r\n        const result = [];\r\n        const tokens = statement.getTokens();\r\n        let build = \"\";\r\n        for (let i = 1; i < tokens.length - 1; i++) {\r\n            const now = tokens[i];\r\n            let next = tokens[i + 1];\r\n            if (i + 2 === tokens.length) {\r\n                next = undefined; // dont take the punctuation\r\n            }\r\n            // argh, macros is a nightmare\r\n            let end = now.getStart();\r\n            if (end instanceof position_1.VirtualPosition) {\r\n                end = new position_1.VirtualPosition(end, end.vrow, end.vcol + now.getStr().length);\r\n            }\r\n            else {\r\n                end = now.getEnd();\r\n            }\r\n            if (next && next.getStart().equals(end)) {\r\n                build += now.getStr();\r\n            }\r\n            else {\r\n                build += now.getStr();\r\n                result.push(build);\r\n                build = \"\";\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    findName(tokens) {\r\n        let macroName = undefined;\r\n        let previous = undefined;\r\n        for (const i of tokens) {\r\n            if (previous && (previous === null || previous === void 0 ? void 0 : previous.getEnd().getCol()) !== i.getStart().getCol()) {\r\n                break;\r\n            }\r\n            else if (i instanceof Tokens.Identifier || i.getStr() === \"-\") {\r\n                if (macroName === undefined) {\r\n                    macroName = i.getStr();\r\n                }\r\n                else {\r\n                    macroName += i.getStr();\r\n                }\r\n            }\r\n            else if (i instanceof Tokens.Pragma) {\r\n                continue;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            previous = i;\r\n        }\r\n        return macroName;\r\n    }\r\n    tokensToNodes(tokens) {\r\n        const ret = [];\r\n        for (const t of tokens) {\r\n            ret.push(new token_node_1.TokenNode(t));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.ExpandMacros = ExpandMacros;\r\n//# sourceMappingURL=expand_macros.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expand_macros.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Abstract = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Abstract extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.str(\"ABSTRACT\");\r\n    }\r\n}\r\nexports.Abstract = Abstract;\r\n//# sourceMappingURL=abstract.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract_methods.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract_methods.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AbstractMethods = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst method_name_1 = __webpack_require__(/*! ./method_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_name.js\");\r\nclass AbstractMethods extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"ABSTRACT METHODS\", combi_1.plusPrio(method_name_1.MethodName));\r\n    }\r\n}\r\nexports.AbstractMethods = AbstractMethods;\r\n//# sourceMappingURL=abstract_methods.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract_methods.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/and_return.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/and_return.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AndReturn = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass AndReturn extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.str(\"AND RETURN\");\r\n    }\r\n}\r\nexports.AndReturn = AndReturn;\r\n//# sourceMappingURL=and_return.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/and_return.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arith_operator.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arith_operator.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ArithOperator = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass ArithOperator extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.altPrio(combi_1.tok(tokens_1.WPlusW), combi_1.tok(tokens_1.WDashW), \"*\", \"**\", \"/\", \"BIT-XOR\", \"BIT-AND\", \"BIT-OR\", \"DIV\", \"MOD\");\r\n        return ret;\r\n    }\r\n}\r\nexports.ArithOperator = ArithOperator;\r\n//# sourceMappingURL=arith_operator.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arith_operator.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Arrow = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass Arrow extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(combi_1.tok(tokens_1.InstanceArrow), combi_1.tok(tokens_1.StaticArrow));\r\n    }\r\n}\r\nexports.Arrow = Arrow;\r\n//# sourceMappingURL=arrow.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow_or_dash.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow_or_dash.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ArrowOrDash = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass ArrowOrDash extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(combi_1.tok(tokens_1.InstanceArrow), combi_1.tok(tokens_1.StaticArrow), combi_1.tok(tokens_1.Dash));\r\n    }\r\n}\r\nexports.ArrowOrDash = ArrowOrDash;\r\n//# sourceMappingURL=arrow_or_dash.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow_or_dash.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_chain.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_chain.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AttributeChain = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst table_body_1 = __webpack_require__(/*! ./table_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_body.js\");\r\nclass AttributeChain extends combi_1.Expression {\r\n    getRunnable() {\r\n        const chain = combi_1.seq(_1.AttributeName, combi_1.starPrio(combi_1.altPrio(combi_1.seq(_1.ArrowOrDash, combi_1.altPrio(\"*\", _1.ComponentName)), _1.TableExpression)));\r\n        const ret = combi_1.seq(chain, combi_1.optPrio(table_body_1.TableBody), combi_1.optPrio(_1.FieldOffset), combi_1.optPrio(_1.FieldLength));\r\n        return ret;\r\n    }\r\n}\r\nexports.AttributeChain = AttributeChain;\r\n//# sourceMappingURL=attribute_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_name.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_name.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AttributeName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass AttributeName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^(\\/\\w+\\/)?[\\w\\d_\\*\\~]+$/);\r\n    }\r\n}\r\nexports.AttributeName = AttributeName;\r\n//# sourceMappingURL=attribute_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/block_name.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/block_name.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BlockName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass BlockName extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(combi_1.regex(/^[\\w%\\$\\*]+$/), combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.regex(/^[\\w%\\$\\*]+$/))));\r\n        return ret;\r\n    }\r\n}\r\nexports.BlockName = BlockName;\r\n//# sourceMappingURL=block_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/block_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cast.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cast.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Cast = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst let_1 = __webpack_require__(/*! ./let */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/let.js\");\r\nclass Cast extends combi_1.Expression {\r\n    getRunnable() {\r\n        const rparen = combi_1.altPrio(combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.WParenRight));\r\n        const cast = combi_1.seq(\"CAST\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), combi_1.optPrio(let_1.Let), _1.Source, rparen);\r\n        return combi_1.ver(version_1.Version.v740sp02, cast);\r\n    }\r\n}\r\nexports.Cast = Cast;\r\n//# sourceMappingURL=cast.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cast.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_final.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_final.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassFinal = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass ClassFinal extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.str(\"FINAL\");\r\n    }\r\n}\r\nexports.ClassFinal = ClassFinal;\r\n//# sourceMappingURL=class_final.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_final.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_friends.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_friends.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassFriends = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst class_name_1 = __webpack_require__(/*! ./class_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_name.js\");\r\nclass ClassFriends extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(combi_1.optPrio(\"GLOBAL\"), \"FRIENDS\", combi_1.plus(class_name_1.ClassName));\r\n    }\r\n}\r\nexports.ClassFriends = ClassFriends;\r\n//# sourceMappingURL=class_friends.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_friends.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_global.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_global.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassGlobal = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass ClassGlobal extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.str(\"PUBLIC\");\r\n    }\r\n}\r\nexports.ClassGlobal = ClassGlobal;\r\n//# sourceMappingURL=class_global.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_global.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_name.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_name.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass ClassName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^\\w*(\\/\\w{3,}\\/)?\\w+$/);\r\n    }\r\n}\r\nexports.ClassName = ClassName;\r\n//# sourceMappingURL=class_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/color.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/color.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Color = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js\");\r\nclass Color extends combi_1.Expression {\r\n    getRunnable() {\r\n        const eq = combi_1.seq(\"=\", source_1.Source);\r\n        const integers = combi_1.altPrio(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\");\r\n        const texts = combi_1.altPrio(\"COL_BACKGROUND\", \"COL_HEADING\", \"COL_NORMAL\", \"COL_TOTAL\", \"COL_KEY\", \"COL_POSITIVE\", \"COL_NEGATIVE\", \"COL_GROUP\");\r\n        const value = combi_1.alt(eq, combi_1.altPrio(\"ON\", \"OFF\", combi_1.altPrio(integers, texts)));\r\n        const toggle = combi_1.altPrio(\"ON\", \"OFF\");\r\n        return combi_1.seq(\"COLOR\", value, combi_1.opt(toggle));\r\n    }\r\n}\r\nexports.Color = Color;\r\n//# sourceMappingURL=color.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/color.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Compare = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Compare extends combi_1.Expression {\r\n    getRunnable() {\r\n        const val = combi_1.altPrio(_1.FieldSub, _1.Constant);\r\n        const list = combi_1.seq(combi_1.tok(tokens_1.WParenLeft), val, combi_1.plus(combi_1.seq(\",\", val)), combi_1.tok(tokens_1.ParenRightW));\r\n        const inn = combi_1.seq(combi_1.optPrio(\"NOT\"), \"IN\", combi_1.altPrio(_1.Source, list));\r\n        const sopt = combi_1.seq(\"IS\", combi_1.optPrio(\"NOT\"), combi_1.altPrio(\"SUPPLIED\", \"BOUND\", combi_1.ver(version_1.Version.v750, combi_1.seq(\"INSTANCE OF\", _1.ClassName)), \"REQUESTED\", \"ASSIGNED\", \"INITIAL\"));\r\n        const between = combi_1.seq(combi_1.optPrio(\"NOT\"), \"BETWEEN\", _1.Source, \"AND\", _1.Source);\r\n        const predicate = combi_1.ver(version_1.Version.v740sp08, _1.MethodCallChain);\r\n        const rett = combi_1.seq(_1.Source, combi_1.altPrio(combi_1.seq(_1.CompareOperator, _1.Source), inn, between, sopt));\r\n        const ret = combi_1.seq(combi_1.opt(\"NOT\"), combi_1.altPrio(rett, predicate));\r\n        return ret;\r\n    }\r\n}\r\nexports.Compare = Compare;\r\n//# sourceMappingURL=compare.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare_operator.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare_operator.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CompareOperator = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass CompareOperator extends combi_1.Expression {\r\n    getRunnable() {\r\n        const operator = combi_1.altPrio(\"=\", \"<>\", \"><\", \"<\", \">\", \"<=\", \">=\", \"=>\", \"=<\", \"CA\", \"CO\", \"CP\", \"EQ\", \"NE\", \"CN\", \"GE\", \"GT\", \"LT\", \"LE\", \"CS\", \"NS\", \"NA\", \"NP\", \"BYTE-CO\", \"BYTE-CA\", \"BYTE-CS\", \"BYTE-CN\", \"BYTE-NA\", \"BYTE-NS\", \"O\", // hex comparison operator\r\n        \"Z\", // hex comparison operator\r\n        \"M\");\r\n        return operator;\r\n    }\r\n}\r\nexports.CompareOperator = CompareOperator;\r\n//# sourceMappingURL=compare_operator.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare_operator.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentChain = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst table_body_1 = __webpack_require__(/*! ./table_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_body.js\");\r\nclass ComponentChain extends combi_1.Expression {\r\n    getRunnable() {\r\n        const chain = combi_1.seq(_1.ComponentName, combi_1.star(combi_1.altPrio(combi_1.seq(_1.ArrowOrDash, combi_1.altPrio(\"*\", _1.ComponentName)), _1.TableExpression)));\r\n        const ret = combi_1.seq(chain, combi_1.optPrio(table_body_1.TableBody), combi_1.optPrio(_1.FieldOffset), combi_1.optPrio(_1.FieldLength));\r\n        return ret;\r\n    }\r\n}\r\nexports.ComponentChain = ComponentChain;\r\n//# sourceMappingURL=component_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain_simple.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain_simple.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentChainSimple = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ComponentChainSimple extends combi_1.Expression {\r\n    getRunnable() {\r\n        const chain = combi_1.seq(_1.ComponentName, combi_1.starPrio(combi_1.seq(_1.ArrowOrDash, _1.ComponentName)));\r\n        const ret = combi_1.seq(chain, combi_1.optPrio(_1.FieldOffset), combi_1.optPrio(_1.FieldLength));\r\n        return ret;\r\n    }\r\n}\r\nexports.ComponentChainSimple = ComponentChainSimple;\r\n//# sourceMappingURL=component_chain_simple.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain_simple.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentCompare = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ComponentCompare extends combi_1.Expression {\r\n    getRunnable() {\r\n        const val = combi_1.alt(_1.FieldSub, _1.Constant);\r\n        const list = combi_1.seq(combi_1.tok(tokens_1.WParenLeft), val, combi_1.plus(combi_1.seq(\",\", val)), combi_1.tok(tokens_1.ParenRightW));\r\n        const inn = combi_1.seq(combi_1.opt(\"NOT\"), \"IN\", combi_1.altPrio(_1.Source, list));\r\n        const sopt = combi_1.seq(\"IS\", combi_1.opt(\"NOT\"), combi_1.altPrio(\"SUPPLIED\", \"BOUND\", combi_1.ver(version_1.Version.v750, combi_1.seq(\"INSTANCE OF\", _1.Source)), \"REQUESTED\", \"ASSIGNED\", \"INITIAL\"));\r\n        const between = combi_1.seq(combi_1.opt(\"NOT\"), \"BETWEEN\", _1.Source, \"AND\", _1.Source);\r\n        const rett = combi_1.seq(_1.ComponentChainSimple, combi_1.altPrio(combi_1.seq(_1.CompareOperator, _1.Source), inn, between, sopt));\r\n        const ret = combi_1.seq(combi_1.opt(\"NOT\"), rett);\r\n        return ret;\r\n    }\r\n}\r\nexports.ComponentCompare = ComponentCompare;\r\n//# sourceMappingURL=component_compare.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare_simple.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare_simple.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentCompareSimple = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ComponentCompareSimple extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(combi_1.altPrio(_1.ComponentChain, _1.Dynamic), \"=\", _1.Source);\r\n        return combi_1.plus(ret);\r\n    }\r\n}\r\nexports.ComponentCompareSimple = ComponentCompareSimple;\r\n//# sourceMappingURL=component_compare_simple.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare_simple.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_cond.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_cond.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentCond = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ComponentCond extends combi_1.Expression {\r\n    getRunnable() {\r\n        const operator = combi_1.alt(\"AND\", \"OR\");\r\n        const another = combi_1.seq(combi_1.opt(\"NOT\"), combi_1.tok(tokens_1.WParenLeftW), ComponentCond, combi_1.altPrio(combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.ParenRightW)));\r\n        const cnd = combi_1.alt(_1.ComponentCompare, another);\r\n        const ret = combi_1.seq(cnd, combi_1.star(combi_1.seq(operator, cnd)));\r\n        return ret;\r\n    }\r\n}\r\nexports.ComponentCond = ComponentCond;\r\n//# sourceMappingURL=component_cond.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_cond.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_name.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_name.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass ComponentName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^(\\/\\w+\\/)?[\\w\\d_%$\\*\\~]+$/);\r\n    }\r\n}\r\nexports.ComponentName = ComponentName;\r\n//# sourceMappingURL=component_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/concatenated_constant.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/concatenated_constant.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConcatenatedConstant = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass ConcatenatedConstant extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo: replace optPrio with plusPrio when its implemented, below is a workaround\r\n        return combi_1.seq(combi_1.regex(/^`.*`$/), \"&\", combi_1.regex(/^`.*`$/), combi_1.optPrio(combi_1.seq(\"&\", combi_1.regex(/^`.*`$/))), combi_1.optPrio(combi_1.seq(\"&\", combi_1.regex(/^`.*`$/))), combi_1.optPrio(combi_1.seq(\"&\", combi_1.regex(/^`.*`$/))));\r\n    }\r\n}\r\nexports.ConcatenatedConstant = ConcatenatedConstant;\r\n//# sourceMappingURL=concatenated_constant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/concatenated_constant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Cond = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst cond_sub_1 = __webpack_require__(/*! ./cond_sub */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_sub.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Cond extends combi_1.Expression {\r\n    getRunnable() {\r\n        const operator = combi_1.altPrio(\"AND\", \"OR\", combi_1.ver(version_1.Version.v702, \"EQUIV\"));\r\n        const cnd = combi_1.altPrio(_1.Compare, cond_sub_1.CondSub);\r\n        const ret = combi_1.seq(cnd, combi_1.starPrio(combi_1.seq(operator, cnd)));\r\n        return ret;\r\n    }\r\n}\r\nexports.Cond = Cond;\r\n//# sourceMappingURL=cond.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_body.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_body.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CondBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass CondBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const when = combi_1.seq(\"WHEN\", _1.Cond, \"THEN\", combi_1.alt(_1.Source, _1.Throw));\r\n        const elsee = combi_1.seq(\"ELSE\", combi_1.alt(_1.Source, _1.Throw));\r\n        return combi_1.seq(combi_1.opt(_1.Let), combi_1.plus(when), combi_1.opt(elsee));\r\n    }\r\n}\r\nexports.CondBody = CondBody;\r\n//# sourceMappingURL=cond_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_sub.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_sub.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CondSub = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass CondSub extends combi_1.Expression {\r\n    getRunnable() {\r\n        // rule ParserMissingSpace makes sure the whitespace is correct\r\n        const another = combi_1.seq(combi_1.optPrio(\"NOT\"), combi_1.altPrio(combi_1.tok(tokens_1.WParenLeftW), combi_1.tok(tokens_1.WParenLeft)), _1.Cond, combi_1.altPrio(combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.ParenRightW)));\r\n        return another;\r\n    }\r\n}\r\nexports.CondSub = CondSub;\r\n//# sourceMappingURL=cond_sub.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_sub.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Constant = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Constant extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(_1.TextElementString, _1.ConcatenatedConstant, _1.ConstantString, _1.Integer);\r\n    }\r\n}\r\nexports.Constant = Constant;\r\n//# sourceMappingURL=constant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_field_length.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_field_length.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConstantFieldLength = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ConstantFieldLength extends combi_1.Expression {\r\n    getRunnable() {\r\n        const length = combi_1.seq(combi_1.tok(tokens_1.ParenLeft), combi_1.altPrio(_1.Integer, _1.SimpleFieldChain), combi_1.tok(tokens_1.ParenRightW));\r\n        return length;\r\n    }\r\n}\r\nexports.ConstantFieldLength = ConstantFieldLength;\r\n//# sourceMappingURL=constant_field_length.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_field_length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_string.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_string.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConstantString = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass ConstantString extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^('.*')|(`.*`)$/);\r\n    }\r\n}\r\nexports.ConstantString = ConstantString;\r\n//# sourceMappingURL=constant_string.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_string.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/conv_body.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/conv_body.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConvBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ConvBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(combi_1.optPrio(_1.Let), _1.Source);\r\n    }\r\n}\r\nexports.ConvBody = ConvBody;\r\n//# sourceMappingURL=conv_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/conv_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/corresponding_body.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/corresponding_body.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CorrespondingBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst component_chain_1 = __webpack_require__(/*! ./component_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain.js\");\r\nclass CorrespondingBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const mapping = combi_1.seq(\"MAPPING\", combi_1.plus(combi_1.seq(_1.ComponentName, \"=\", component_chain_1.ComponentChain)));\r\n        const baseParen = combi_1.seq(\"BASE\", combi_1.tok(tokens_1.WParenLeftW), _1.Source, combi_1.tok(tokens_1.WParenRightW));\r\n        const discarding = combi_1.ver(version_1.Version.v751, \"DISCARDING DUPLICATES\");\r\n        return combi_1.seq(combi_1.optPrio(\"DEEP\"), combi_1.optPrio(baseParen), _1.Source, combi_1.optPrio(discarding), combi_1.optPrio(mapping), combi_1.optPrio(combi_1.seq(\"EXCEPT\", combi_1.alt(combi_1.plus(_1.Field), \"*\"))));\r\n    }\r\n}\r\nexports.CorrespondingBody = CorrespondingBody;\r\n//# sourceMappingURL=corresponding_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/corresponding_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/data_definition.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/data_definition.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataDefinition = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Expressions = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass DataDefinition extends combi_1.Expression {\r\n    getRunnable() {\r\n        const initial = combi_1.seq(\"INITIAL SIZE\", Expressions.Integer);\r\n        const simple = combi_1.opt(combi_1.per(\"READ-ONLY\", Expressions.Type, Expressions.Length, Expressions.Decimals, Expressions.Value));\r\n        const table = combi_1.seq(Expressions.TypeTable, combi_1.opt(\"READ-ONLY\"), combi_1.opt(initial));\r\n        return combi_1.seq(Expressions.DefinitionName, combi_1.opt(Expressions.ConstantFieldLength), combi_1.alt(simple, table));\r\n    }\r\n}\r\nexports.DataDefinition = DataDefinition;\r\n//# sourceMappingURL=data_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/data_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_connection.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_connection.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DatabaseConnection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass DatabaseConnection extends combi_1.Expression {\r\n    getRunnable() {\r\n        const name = combi_1.regex(/[\\w\\/]+/);\r\n        return combi_1.seq(\"CONNECTION\", combi_1.altPrio(name, _1.Dynamic));\r\n    }\r\n}\r\nexports.DatabaseConnection = DatabaseConnection;\r\n//# sourceMappingURL=database_connection.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_connection.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_table.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_table.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DatabaseTable = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js\");\r\nclass DatabaseTable extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(dynamic_1.Dynamic, combi_1.regex(/^\\*?(\\/\\w+\\/)?\\w+$/));\r\n    }\r\n}\r\nexports.DatabaseTable = DatabaseTable;\r\n//# sourceMappingURL=database_table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/decimals.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/decimals.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Decimals = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Decimals extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(\"DECIMALS\", _1.Integer);\r\n        return ret;\r\n    }\r\n}\r\nexports.Decimals = Decimals;\r\n//# sourceMappingURL=decimals.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/decimals.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/default.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/default.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Default = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Default extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, DEFAULT is only valid for definitions in relation to method parameters\r\n        const def = combi_1.seq(\"DEFAULT\", combi_1.altPrio(_1.Constant, _1.FieldChain));\r\n        return def;\r\n    }\r\n}\r\nexports.Default = Default;\r\n//# sourceMappingURL=default.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/default.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/definition_name.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/definition_name.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DefinitionName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass DefinitionName extends combi_1.Expression {\r\n    getRunnable() {\r\n        const r = combi_1.regex(/^((\\w*\\/\\w+\\/)|(\\w*\\/\\w+\\/)?[\\w\\*$%]+)$/);\r\n        return combi_1.seq(r, combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.optPrio(r))), combi_1.optPrio(combi_1.tok(tokens_1.DashW)));\r\n    }\r\n}\r\nexports.DefinitionName = DefinitionName;\r\n//# sourceMappingURL=definition_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/definition_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dereference.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dereference.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Dereference = void 0;\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Dereference extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(combi_1.tok(tokens_1.InstanceArrow), \"*\");\r\n    }\r\n}\r\nexports.Dereference = Dereference;\r\n//# sourceMappingURL=dereference.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dereference.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/destination.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/destination.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Destination = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Destination extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"DESTINATION\", combi_1.optPrio(\"IN GROUP\"), combi_1.altPrio(\"DEFAULT\", _1.Source));\r\n    }\r\n}\r\nexports.Destination = Destination;\r\n//# sourceMappingURL=destination.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/destination.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Dynamic = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Dynamic extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(combi_1.altPrio(combi_1.tok(tokens_1.WParenLeft), combi_1.tok(tokens_1.ParenLeft)), combi_1.altPrio(_1.FieldChain, _1.Constant), combi_1.altPrio(combi_1.tok(tokens_1.ParenRightW), combi_1.tok(tokens_1.ParenRight)));\r\n        return ret;\r\n    }\r\n}\r\nexports.Dynamic = Dynamic;\r\n//# sourceMappingURL=dynamic.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/event_handler.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/event_handler.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventHandler = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass EventHandler extends combi_1.Expression {\r\n    getRunnable() {\r\n        const event = combi_1.seq(\"FOR EVENT\", _1.Field, \"OF\", _1.ClassName, combi_1.optPrio(combi_1.seq(\"IMPORTING\", combi_1.plusPrio(_1.MethodParamName))));\r\n        return event;\r\n    }\r\n}\r\nexports.EventHandler = EventHandler;\r\n//# sourceMappingURL=event_handler.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/event_handler.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/exception_name.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/exception_name.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExceptionName = void 0;\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst field_1 = __webpack_require__(/*! ./field */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field.js\");\r\n/** non class based exception name */\r\nclass ExceptionName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(field_1.Field, combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), field_1.Field)));\r\n    }\r\n}\r\nexports.ExceptionName = ExceptionName;\r\n//# sourceMappingURL=exception_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/exception_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Field = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Field extends combi_1.Expression {\r\n    getRunnable() {\r\n        // \"&1\" can be used for almost anything(field names, method names etc.) in macros\r\n        // field names with only digits should not be possible\r\n        return combi_1.regex(/^[&_!]?\\*?\\w*(\\/\\w+\\/)?\\d*[a-zA-Z_%\\$][\\w\\*%\\$\\?#]*(~\\w+)?$/);\r\n    }\r\n}\r\nexports.Field = Field;\r\n//# sourceMappingURL=field.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_all.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_all.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldAll = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass FieldAll extends combi_1.Expression {\r\n    getRunnable() {\r\n        // \"&1\" can be used for almost anything(field names, method names etc.) in macros\r\n        // field names with only digits should not be possible\r\n        return combi_1.regex(/^&?\\*?(\\/\\w+\\/)?[\\w\\*\\$]+(~\\w+)?$/);\r\n    }\r\n}\r\nexports.FieldAll = FieldAll;\r\n//# sourceMappingURL=field_all.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_all.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_assignment.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_assignment.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldAssignment = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst field_sub_1 = __webpack_require__(/*! ./field_sub */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_sub.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js\");\r\nclass FieldAssignment extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(field_sub_1.FieldSub, \"=\", source_1.Source);\r\n        return ret;\r\n    }\r\n}\r\nexports.FieldAssignment = FieldAssignment;\r\n//# sourceMappingURL=field_assignment.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_assignment.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldChain = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass FieldChain extends combi_1.Expression {\r\n    getRunnable() {\r\n        const attr = combi_1.seq(combi_1.tok(tokens_1.InstanceArrow), combi_1.altPrio(_1.AttributeName, \"*\"));\r\n        const comp = combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.optPrio(_1.ComponentName));\r\n        const chain = combi_1.star(combi_1.altPrio(attr, comp, _1.TableExpression));\r\n        const clas = combi_1.seq(_1.ClassName, combi_1.tok(tokens_1.StaticArrow), _1.AttributeName);\r\n        const start = combi_1.altPrio(clas, _1.SourceField, _1.SourceFieldSymbol);\r\n        const after = combi_1.altPrio(combi_1.tok(tokens_1.DashW), combi_1.seq(combi_1.optPrio(_1.TableBody), combi_1.optPrio(_1.FieldOffset), combi_1.optPrio(_1.FieldLength)));\r\n        const ret = combi_1.seq(start, chain, after);\r\n        return ret;\r\n    }\r\n}\r\nexports.FieldChain = FieldChain;\r\n//# sourceMappingURL=field_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_length.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_length.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldLength = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FieldLength extends combi_1.Expression {\r\n    getRunnable() {\r\n        const named = combi_1.seq(combi_1.altPrio(_1.SourceField, _1.SourceFieldSymbol), combi_1.starPrio(combi_1.seq(_1.ArrowOrDash, _1.ComponentName)));\r\n        const normal = combi_1.seq(combi_1.optPrio(combi_1.tok(tokens_1.Plus)), combi_1.altPrio(combi_1.regex(/^\\d+$/), named));\r\n        const length = combi_1.seq(combi_1.tok(tokens_1.ParenLeft), combi_1.altPrio(normal, \"*\"), combi_1.tok(tokens_1.ParenRightW));\r\n        return length;\r\n    }\r\n}\r\nexports.FieldLength = FieldLength;\r\n//# sourceMappingURL=field_length.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_offset.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_offset.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldOffset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FieldOffset extends combi_1.Expression {\r\n    getRunnable() {\r\n        const named = combi_1.seq(combi_1.altPrio(_1.SourceField, _1.SourceFieldSymbol), combi_1.starPrio(combi_1.seq(_1.ArrowOrDash, _1.ComponentName)));\r\n        const offset = combi_1.seq(combi_1.tok(tokens_1.Plus), combi_1.altPrio(combi_1.regex(/^\\d+$/), named));\r\n        return offset;\r\n    }\r\n}\r\nexports.FieldOffset = FieldOffset;\r\n//# sourceMappingURL=field_offset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_offset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_sub.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_sub.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldSub = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst table_body_1 = __webpack_require__(/*! ./table_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_body.js\");\r\nclass FieldSub extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(combi_1.regex(/^\\*?!?(\\/\\w+\\/)?[a-zA-Z_%$][\\w%$\\$\\*]*$/), combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.regex(/^[\\w%$\\$\\*]+$/))), combi_1.opt(table_body_1.TableBody));\r\n        return ret;\r\n    }\r\n}\r\nexports.FieldSub = FieldSub;\r\n//# sourceMappingURL=field_sub.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_sub.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_symbol.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_symbol.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldSymbol = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass FieldSymbol extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, this only allows one dash in the name\r\n        const dashes = combi_1.seq(combi_1.regex(/^<[\\w\\/%$\\*]+$/), combi_1.tok(tokens_1.Dash), combi_1.regex(/^[\\w\\/%$\\*]+>$/));\r\n        return combi_1.altPrio(combi_1.regex(/^<[\\w\\/%$\\*]+>$/), dashes);\r\n    }\r\n}\r\nexports.FieldSymbol = FieldSymbol;\r\n//# sourceMappingURL=field_symbol.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_symbol.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/filter_body.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/filter_body.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FilterBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FilterBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const inn = combi_1.seq(\"IN\", _1.Source);\r\n        const using = combi_1.seq(\"USING KEY\", _1.SimpleName);\r\n        return combi_1.seq(_1.Source, combi_1.optPrio(\"EXCEPT\"), combi_1.optPrio(combi_1.per(inn, using)), combi_1.seq(\"WHERE\", _1.ComponentCond));\r\n    }\r\n}\r\nexports.FilterBody = FilterBody;\r\n//# sourceMappingURL=filter_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/filter_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/final_methods.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/final_methods.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FinalMethods = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst method_name_1 = __webpack_require__(/*! ./method_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_name.js\");\r\nclass FinalMethods extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"FINAL METHODS\", combi_1.plus(method_name_1.MethodName));\r\n    }\r\n}\r\nexports.FinalMethods = FinalMethods;\r\n//# sourceMappingURL=final_methods.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/final_methods.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/for.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/for.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.For = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js\");\r\nclass For extends combi_1.Expression {\r\n    getRunnable() {\r\n        const where = combi_1.seq(\"WHERE\", _1.ComponentCond);\r\n        const from = combi_1.seq(\"FROM\", _1.Source);\r\n        const to = combi_1.seq(\"TO\", _1.Source);\r\n        const inn = combi_1.seq(_1.InlineLoopDefinition, combi_1.optPrio(from), combi_1.optPrio(to), combi_1.optPrio(where));\r\n        const then = combi_1.seq(\"THEN\", _1.Source);\r\n        const whil = combi_1.seq(combi_1.altPrio(\"UNTIL\", \"WHILE\"), _1.Cond);\r\n        const itera = combi_1.seq(_1.InlineFieldDefinition, combi_1.opt(then), whil);\r\n        const groupBy = combi_1.seq(\"GROUP BY\", field_chain_1.FieldChain);\r\n        const groups = combi_1.ver(version_1.Version.v740sp08, combi_1.seq(\"GROUPS\", field_chain_1.FieldChain, \"OF\", _1.Target, \"IN\", _1.Source, combi_1.optPrio(groupBy)));\r\n        const f = combi_1.seq(\"FOR\", combi_1.alt(itera, inn, groups));\r\n        return combi_1.ver(version_1.Version.v740sp05, combi_1.plus(combi_1.seq(f, combi_1.optPrio(_1.Let))));\r\n    }\r\n}\r\nexports.For = For;\r\n//# sourceMappingURL=for.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/for.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_changing.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_changing.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormChanging = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FormChanging extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"CHANGING\", combi_1.plus(_1.FormParam));\r\n    }\r\n}\r\nexports.FormChanging = FormChanging;\r\n//# sourceMappingURL=form_changing.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_changing.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_name.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_name.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass FormName extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, does not handle namespaces properly\r\n        return combi_1.seq(combi_1.regex(/^[\\w%$\\*\\/\\?]+$/), combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.optPrio(combi_1.regex(/^\\w+$/)))), combi_1.optPrio(combi_1.tok(tokens_1.DashW)));\r\n    }\r\n}\r\nexports.FormName = FormName;\r\n//# sourceMappingURL=form_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormParam = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FormParam extends combi_1.Expression {\r\n    getRunnable() {\r\n        const stru = combi_1.seq(\"STRUCTURE\", _1.NamespaceSimpleName);\r\n        const ret = combi_1.seq(combi_1.altPrio(_1.PassByValue, _1.FormParamName), combi_1.optPrio(combi_1.altPrio(_1.FormParamType, stru)));\r\n        return ret;\r\n    }\r\n}\r\nexports.FormParam = FormParam;\r\n//# sourceMappingURL=form_param.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_name.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_name.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormParamName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass FormParamName extends combi_1.Expression {\r\n    getRunnable() {\r\n        const r = combi_1.regex(/^[\\w$&\\*%\\/]+$/);\r\n        // dashes in form parameter names allowed, intention is not to support this\r\n        // but avoid the structural errors\r\n        return combi_1.seq(r, combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), r)));\r\n    }\r\n}\r\nexports.FormParamName = FormParamName;\r\n//# sourceMappingURL=form_param_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_type.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_type.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormParamType = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FormParamType extends combi_1.Expression {\r\n    getRunnable() {\r\n        const def = combi_1.seq(\"DEFAULT\", combi_1.alt(_1.Constant, _1.FieldChain));\r\n        const table = combi_1.seq(combi_1.alt(\"STANDARD\", \"HASHED\", \"INDEX\", \"SORTED\", \"ANY\"), \"TABLE\");\r\n        const tabseq = combi_1.seq(table, combi_1.optPrio(combi_1.seq(\"OF\", _1.TypeName)));\r\n        const ret = combi_1.seq(combi_1.optPrio(combi_1.alt(\"REF TO\", \"LINE OF\")), _1.TypeName, combi_1.opt(def));\r\n        const like = combi_1.seq(\"LIKE\", combi_1.optPrio(combi_1.alt(\"REF TO\", \"LINE OF\")), _1.FieldChain);\r\n        return combi_1.alt(combi_1.seq(\"TYPE\", combi_1.altPrio(tabseq, ret)), like);\r\n    }\r\n}\r\nexports.FormParamType = FormParamType;\r\n//# sourceMappingURL=form_param_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_raising.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_raising.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormRaising = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass FormRaising extends combi_1.Expression {\r\n    getRunnable() {\r\n        const resume = combi_1.seq(\"RESUMABLE\", combi_1.tok(tokens_1.ParenLeft), _1.ClassName, combi_1.tok(tokens_1.ParenRightW));\r\n        const raising = combi_1.seq(\"RAISING\", combi_1.plus(combi_1.alt(_1.ClassName, resume)));\r\n        return raising;\r\n    }\r\n}\r\nexports.FormRaising = FormRaising;\r\n//# sourceMappingURL=form_raising.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_raising.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_tables.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_tables.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormTables = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FormTables extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"TABLES\", combi_1.plus(_1.FormParam));\r\n    }\r\n}\r\nexports.FormTables = FormTables;\r\n//# sourceMappingURL=form_tables.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_tables.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_using.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_using.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormUsing = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FormUsing extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"USING\", combi_1.plus(_1.FormParam));\r\n    }\r\n}\r\nexports.FormUsing = FormUsing;\r\n//# sourceMappingURL=form_using.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_using.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/fstarget.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/fstarget.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FSTarget = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FSTarget extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(_1.InlineFS, _1.TargetFieldSymbol);\r\n    }\r\n}\r\nexports.FSTarget = FSTarget;\r\n//# sourceMappingURL=fstarget.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/fstarget.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_name.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_name.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FunctionName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(_1.Constant, _1.FieldChain);\r\n    }\r\n}\r\nexports.FunctionName = FunctionName;\r\n//# sourceMappingURL=function_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_parameters.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_parameters.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionParameters = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FunctionParameters extends combi_1.Expression {\r\n    getRunnable() {\r\n        const exporting = combi_1.seq(\"EXPORTING\", _1.ParameterListS);\r\n        const importing = combi_1.seq(\"IMPORTING\", _1.ParameterListT);\r\n        const changing = combi_1.seq(\"CHANGING\", _1.ParameterListT);\r\n        const tables = combi_1.seq(\"TABLES\", _1.ParameterListT);\r\n        const exceptions = combi_1.seq(\"EXCEPTIONS\", combi_1.optPrio(combi_1.altPrio(_1.ParameterListExceptions, _1.Field)));\r\n        const long = combi_1.seq(combi_1.optPrio(exporting), combi_1.optPrio(importing), combi_1.optPrio(tables), combi_1.optPrio(changing), combi_1.optPrio(exceptions));\r\n        return long;\r\n    }\r\n}\r\nexports.FunctionParameters = FunctionParameters;\r\n//# sourceMappingURL=function_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/include_name.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/include_name.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IncludeName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass IncludeName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(combi_1.regex(/^<?(\\/\\w+\\/)?[\\w%]+(~\\w+)?>?$/), combi_1.optPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.regex(/^\\w+$/))));\r\n    }\r\n}\r\nexports.IncludeName = IncludeName;\r\n//# sourceMappingURL=include_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/include_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./abstract_methods */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract_methods.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./abstract */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/abstract.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./and_return */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/and_return.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./arith_operator */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arith_operator.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./arrow_or_dash */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow_or_dash.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./arrow */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/arrow.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./attribute_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_chain.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./attribute_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./block_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/block_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cast */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cast.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_final */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_final.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_friends */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_friends.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_global */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_global.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./color */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/color.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dereference */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dereference.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./compare_operator */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare_operator.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./compare */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/compare.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./component_chain_simple */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain_simple.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./component_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_chain.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./component_compare_simple */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare_simple.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./component_compare */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_compare.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./component_cond */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_cond.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./component_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/component_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./concatenated_constant */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/concatenated_constant.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cond_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cond_sub */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond_sub.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cond */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/cond.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constant_field_length */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_field_length.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constant_string */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_string.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constant */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./conv_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/conv_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./corresponding_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/corresponding_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_definition */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/data_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./database_connection */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_connection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./database_table */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/database_table.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./decimals */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/decimals.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./default */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/default.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./definition_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/definition_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./destination */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/destination.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./event_handler */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/event_handler.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./exception_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/exception_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_all */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_all.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_assignment */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_assignment.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_length */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_length.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_offset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_offset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_sub */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_sub.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_symbol */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_symbol.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./filter_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/filter_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./final_methods */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/final_methods.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./for */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/for.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_changing */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_changing.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_param_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_param_type */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_param */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_param.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_raising */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_raising.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_tables */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_tables.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_using */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/form_using.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./fstarget */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/fstarget.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_parameters */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/function_parameters.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./include_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/include_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./inline_field_definition */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./inline_field */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./inline_loop_definition */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_loop_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./inlinedata */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinedata.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./inlinefs */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinefs.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./integer */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/integer.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/interface_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./language */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/language.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./length */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/length.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./let */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/let.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./macro_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/macro_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./message_class */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_class.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./message_source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_source.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./message_type_and_number */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_type_and_number.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_call_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_call_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_chain.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_call_param */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_param.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_call */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_def_changing */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_changing.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_def_exporting */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_exporting.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_def_importing */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_importing.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_def_raising */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_raising.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_def_returning */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_returning.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_param_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_param_optional */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_optional.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_param */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_parameters */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_parameters.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_source.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./modif */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/modif.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./namespace_simple_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/namespace_simple_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./new_object */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/new_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ole_exporting */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/ole_exporting.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./or */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/or.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter_exception */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_exception.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter_list_exceptions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_exceptions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter_list_s */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_s.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter_list_t */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_t.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter_s */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_s.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter_t */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_t.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./pass_by_value */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/pass_by_value.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./perform_changing */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_changing.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./perform_tables */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_tables.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./perform_using */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_using.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./radio_group_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/radio_group_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./read_table_target */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/read_table_target.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./receive_parameters */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/receive_parameters.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./redefinition */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/redefinition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./reduce_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/reduce_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./report_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/report_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./select_loop */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select_loop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./select */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./simple_field_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_field_chain.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./simple_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./simple_source1 */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source1.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./simple_source2 */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source2.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./simple_source3 */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source3.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./simple_source4 */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source4.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./source_field_symbol */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field_symbol.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./source_field */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_aggregation */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_aggregation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_alias_field */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_alias_field.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_arithmetics */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_arithmetics.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_as_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_as_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_case */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_case.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_cds_parameters */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cds_parameters.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_client */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_client.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_compare_operator */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare_operator.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_compare */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_cond */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cond.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_field_list */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_list.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_field_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_for_all_entries */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_for_all_entries.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_from_source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from_source.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_from */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_function */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_function.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_group_by */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_group_by.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_having */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_having.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_hints */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_hints.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_into_structure */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_structure.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_into_table */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_table.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_join */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_join.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_order_by */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_order_by.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_path */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_path.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_source_simple */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source_simple.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_target */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_target.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./string_template_formatting */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template_formatting.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./string_template */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./super_class_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/super_class_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./switch_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/switch_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./table_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./table_expression */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_expression.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./target_field_symbol */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field_symbol.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./target_field */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./target */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./text_element_key */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_key.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./text_element_string */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_string.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./text_element */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./throw */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/throw.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_name_or_infer */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name_or_infer.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_param */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_param.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_table */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_table.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./value_body */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value_body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./value */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./with_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/with_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./write_offset_length */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/write_offset_length.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineField = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InlineField extends combi_1.Expression {\r\n    getRunnable() {\r\n        return new _1.Field();\r\n    }\r\n}\r\nexports.InlineField = InlineField;\r\n//# sourceMappingURL=inline_field.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field_definition.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field_definition.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineFieldDefinition = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InlineFieldDefinition extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(combi_1.seq(_1.Field, \"=\", _1.Source), combi_1.seq(_1.Field, \"TYPE\", _1.TypeName));\r\n    }\r\n}\r\nexports.InlineFieldDefinition = InlineFieldDefinition;\r\n//# sourceMappingURL=inline_field_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_field_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_loop_definition.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_loop_definition.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineLoopDefinition = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InlineLoopDefinition extends combi_1.Expression {\r\n    getRunnable() {\r\n        const index = combi_1.seq(\"INDEX INTO\", _1.TargetField);\r\n        return combi_1.seq(combi_1.altPrio(_1.TargetFieldSymbol, _1.TargetField), \"IN\", combi_1.opt(\"GROUP\"), _1.Source, combi_1.optPrio(index));\r\n    }\r\n}\r\nexports.InlineLoopDefinition = InlineLoopDefinition;\r\n//# sourceMappingURL=inline_loop_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inline_loop_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinedata.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinedata.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineData = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass InlineData extends combi_1.Expression {\r\n    getRunnable() {\r\n        const right = combi_1.altPrio(combi_1.tok(tokens_1.ParenRightW), combi_1.tok(tokens_1.ParenRight));\r\n        const left = combi_1.tok(tokens_1.ParenLeft);\r\n        const data = combi_1.seq(\"DATA\", left, _1.TargetField, right);\r\n        return combi_1.ver(version_1.Version.v740sp02, data);\r\n    }\r\n}\r\nexports.InlineData = InlineData;\r\n//# sourceMappingURL=inlinedata.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinedata.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinefs.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinefs.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineFS = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass InlineFS extends combi_1.Expression {\r\n    getRunnable() {\r\n        const right = combi_1.tok(tokens_1.ParenRightW);\r\n        const left = combi_1.tok(tokens_1.ParenLeft);\r\n        const fs = combi_1.seq(\"FIELD-SYMBOL\", left, _1.TargetFieldSymbol, right);\r\n        return combi_1.ver(version_1.Version.v740sp02, fs);\r\n    }\r\n}\r\nexports.InlineFS = InlineFS;\r\n//# sourceMappingURL=inlinefs.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/inlinefs.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/integer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/integer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Integer = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass Integer extends combi_1.Expression {\r\n    getRunnable() {\r\n        const modifier = combi_1.optPrio(combi_1.altPrio(combi_1.tok(tokens_1.WDash), combi_1.tok(tokens_1.WDashW), combi_1.tok(tokens_1.WPlus)));\r\n        return combi_1.seq(modifier, combi_1.regex(/^\\d+$/));\r\n    }\r\n}\r\nexports.Integer = Integer;\r\n//# sourceMappingURL=integer.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/integer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/interface_name.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/interface_name.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InterfaceName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass InterfaceName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^\\w*(\\/\\w{3,}\\/)?\\w+$/);\r\n    }\r\n}\r\nexports.InterfaceName = InterfaceName;\r\n//# sourceMappingURL=interface_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/interface_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/language.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/language.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Language = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Language extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"LANGUAGE\", combi_1.altPrio(\"SQLSCRIPT\", \"SQL\", \"GRAPH\"));\r\n    }\r\n}\r\nexports.Language = Language;\r\n//# sourceMappingURL=language.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/language.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/length.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/length.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Length = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Length extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(\"LENGTH\", combi_1.altPrio(_1.Integer, _1.ConstantString, _1.SimpleFieldChain));\r\n        return ret;\r\n    }\r\n}\r\nexports.Length = Length;\r\n//# sourceMappingURL=length.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/let.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/let.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Let = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Let extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"LET\", combi_1.plusPrio(_1.InlineFieldDefinition), \"IN\");\r\n    }\r\n}\r\nexports.Let = Let;\r\n//# sourceMappingURL=let.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/let.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/macro_name.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/macro_name.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MacroName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass MacroName extends combi_1.Expression {\r\n    getRunnable() {\r\n        const r = /^(\\/\\w+\\/)?[\\w\\*%\\?$&]+>?$/;\r\n        return combi_1.seq(combi_1.regex(r), combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.regex(r))));\r\n    }\r\n}\r\nexports.MacroName = MacroName;\r\n//# sourceMappingURL=macro_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/macro_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_class.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_class.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessageClass = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass MessageClass extends combi_1.Expression {\r\n    getRunnable() {\r\n        // \"&1\" can be used for almost anything(field names, method names etc.) in macros\r\n        return combi_1.regex(/^>?(\\/\\w+\\/)?\\w+#?@?\\/?!?&?>?\\$?$/);\r\n    }\r\n}\r\nexports.MessageClass = MessageClass;\r\n//# sourceMappingURL=message_class.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_class.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_source.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_source.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessageSource = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MessageSource extends combi_1.Expression {\r\n    getRunnable() {\r\n        const msgid = combi_1.seq(combi_1.tok(tokens_1.ParenLeft), _1.MessageClass, combi_1.tok(tokens_1.ParenRightW));\r\n        const simple = combi_1.seq(_1.MessageTypeAndNumber, combi_1.opt(msgid));\r\n        const mess1 = combi_1.seq(\"ID\", _1.Source, \"TYPE\", _1.Source, \"NUMBER\", _1.Source);\r\n        return combi_1.altPrio(simple, mess1);\r\n    }\r\n}\r\nexports.MessageSource = MessageSource;\r\n//# sourceMappingURL=message_source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_type_and_number.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_type_and_number.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessageTypeAndNumber = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass MessageTypeAndNumber extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^[iweaxs]\\d\\d\\d$/i);\r\n    }\r\n}\r\nexports.MessageTypeAndNumber = MessageTypeAndNumber;\r\n//# sourceMappingURL=message_type_and_number.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/message_type_and_number.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodCall = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_call_param_1 = __webpack_require__(/*! ./method_call_param */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_param.js\");\r\nclass MethodCall extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(_1.MethodName, method_call_param_1.MethodCallParam);\r\n        return ret;\r\n    }\r\n}\r\nexports.MethodCall = MethodCall;\r\n//# sourceMappingURL=method_call.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_body.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_body.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodCallBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_call_param_1 = __webpack_require__(/*! ./method_call_param */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_param.js\");\r\nclass MethodCallBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const dynamicPar = combi_1.seq(\"PARAMETER-TABLE\", _1.Source);\r\n        const dynamicExc = combi_1.seq(\"EXCEPTION-TABLE\", _1.Source);\r\n        const dynamic = combi_1.seq(dynamicPar, combi_1.optPrio(dynamicExc));\r\n        return combi_1.alt(method_call_param_1.MethodCallParam, _1.MethodParameters, dynamic);\r\n    }\r\n}\r\nexports.MethodCallBody = MethodCallBody;\r\n//# sourceMappingURL=method_call_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_chain.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_chain.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodCallChain = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodCallChain extends combi_1.Expression {\r\n    getRunnable() {\r\n        const attr = combi_1.seq(combi_1.tok(tokens_1.InstanceArrow), _1.AttributeName);\r\n        const comp = combi_1.seq(combi_1.tok(tokens_1.Dash), _1.ComponentName);\r\n        const fields = combi_1.star(combi_1.altPrio(attr, comp));\r\n        const after = combi_1.star(combi_1.seq(fields, combi_1.tok(tokens_1.InstanceArrow), _1.MethodCall));\r\n        const localVariable = combi_1.seq(_1.FieldChain, combi_1.tok(tokens_1.InstanceArrow));\r\n        const staticClass = combi_1.seq(_1.ClassName, combi_1.tok(tokens_1.StaticArrow));\r\n        const ret = combi_1.seq(combi_1.altPrio(combi_1.seq(combi_1.optPrio(combi_1.altPrio(localVariable, staticClass)), _1.MethodCall), _1.NewObject, _1.Cast), after);\r\n        return ret;\r\n    }\r\n}\r\nexports.MethodCallChain = MethodCallChain;\r\n//# sourceMappingURL=method_call_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_param.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_param.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodCallParam = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst constant_string_1 = __webpack_require__(/*! ./constant_string */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_string.js\");\r\nclass MethodCallParam extends combi_1.Expression {\r\n    getRunnable() {\r\n        const param = combi_1.alt(_1.Source, _1.ParameterListS, _1.MethodParameters);\r\n        // rule ParserMissingSpace makes sure the whitespace is correct\r\n        const right1 = combi_1.altPrio(combi_1.tok(tokens_1.WParenRight), combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.ParenRight), combi_1.tok(tokens_1.ParenRightW));\r\n        const right2 = combi_1.altPrio(combi_1.tok(tokens_1.WParenRight), combi_1.tok(tokens_1.WParenRightW));\r\n        // note: make sure this does not overlap with FieldLength expression\r\n        const ret = combi_1.altPrio(combi_1.seq(combi_1.tok(tokens_1.ParenLeftW), param, right1), combi_1.seq(combi_1.tok(tokens_1.ParenLeft), param, right2), combi_1.seq(combi_1.tok(tokens_1.ParenLeft), constant_string_1.ConstantString, combi_1.altPrio(combi_1.tok(tokens_1.ParenRight), combi_1.tok(tokens_1.ParenRightW))));\r\n        return ret;\r\n    }\r\n}\r\nexports.MethodCallParam = MethodCallParam;\r\n//# sourceMappingURL=method_call_param.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_param.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_changing.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_changing.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefChanging = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodDefChanging extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"CHANGING\", combi_1.plus(_1.MethodParamOptional));\r\n    }\r\n}\r\nexports.MethodDefChanging = MethodDefChanging;\r\n//# sourceMappingURL=method_def_changing.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_changing.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_exporting.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_exporting.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefExporting = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodDefExporting extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"EXPORTING\", combi_1.plus(_1.MethodParam));\r\n    }\r\n}\r\nexports.MethodDefExporting = MethodDefExporting;\r\n//# sourceMappingURL=method_def_exporting.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_exporting.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_importing.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_importing.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefImporting = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodDefImporting extends combi_1.Expression {\r\n    getRunnable() {\r\n        const field = combi_1.regex(/^!?(\\/\\w+\\/)?\\w+$/);\r\n        return combi_1.seq(\"IMPORTING\", combi_1.plus(_1.MethodParamOptional), combi_1.optPrio(combi_1.seq(\"PREFERRED PARAMETER\", field)));\r\n    }\r\n}\r\nexports.MethodDefImporting = MethodDefImporting;\r\n//# sourceMappingURL=method_def_importing.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_importing.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_raising.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_raising.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefRaising = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst class_name_1 = __webpack_require__(/*! ./class_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/class_name.js\");\r\nclass MethodDefRaising extends combi_1.Expression {\r\n    getRunnable() {\r\n        const resumable = combi_1.seq(\"RESUMABLE\", combi_1.tok(tokens_1.ParenLeft), class_name_1.ClassName, combi_1.tok(tokens_1.ParenRightW));\r\n        const raising = combi_1.seq(\"RAISING\", combi_1.plus(combi_1.altPrio(resumable, class_name_1.ClassName)));\r\n        return raising;\r\n    }\r\n}\r\nexports.MethodDefRaising = MethodDefRaising;\r\n//# sourceMappingURL=method_def_raising.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_raising.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_returning.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_returning.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefReturning = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Expressions = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass MethodDefReturning extends combi_1.Expression {\r\n    getRunnable() {\r\n        const value = combi_1.seq(\"VALUE\", combi_1.tok(tokens_1.ParenLeft), Expressions.MethodParamName, combi_1.tok(tokens_1.ParenRightW));\r\n        return combi_1.seq(\"RETURNING\", value, Expressions.TypeParam);\r\n    }\r\n}\r\nexports.MethodDefReturning = MethodDefReturning;\r\n//# sourceMappingURL=method_def_returning.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_def_returning.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_name.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_name.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass MethodName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^(\\/\\w+\\/)?\\w+(~\\w+)?$/);\r\n    }\r\n}\r\nexports.MethodName = MethodName;\r\n//# sourceMappingURL=method_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParam = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Expressions = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass MethodParam extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ref = combi_1.seq(\"REFERENCE\", combi_1.tok(tokens_1.ParenLeft), Expressions.MethodParamName, combi_1.tok(tokens_1.ParenRightW));\r\n        const value = combi_1.seq(\"VALUE\", combi_1.tok(tokens_1.ParenLeft), Expressions.MethodParamName, combi_1.tok(tokens_1.ParenRightW));\r\n        const fieldsOrValue = combi_1.seq(combi_1.altPrio(value, ref, Expressions.MethodParamName), Expressions.TypeParam);\r\n        return fieldsOrValue;\r\n    }\r\n}\r\nexports.MethodParam = MethodParam;\r\n//# sourceMappingURL=method_param.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_name.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_name.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParamName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass MethodParamName extends combi_1.Expression {\r\n    getRunnable() {\r\n        const field = combi_1.regex(/^!?(\\/\\w+\\/)?\\w+$/);\r\n        return field;\r\n    }\r\n}\r\nexports.MethodParamName = MethodParamName;\r\n//# sourceMappingURL=method_param_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_optional.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_optional.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParamOptional = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodParamOptional extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(_1.MethodParam, combi_1.optPrio(\"OPTIONAL\"));\r\n    }\r\n}\r\nexports.MethodParamOptional = MethodParamOptional;\r\n//# sourceMappingURL=method_param_optional.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_param_optional.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_parameters.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_parameters.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParameters = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodParameters extends combi_1.Expression {\r\n    getRunnable() {\r\n        const exporting = combi_1.seq(\"EXPORTING\", _1.ParameterListS);\r\n        const importing = combi_1.seq(\"IMPORTING\", _1.ParameterListT);\r\n        const changing = combi_1.seq(\"CHANGING\", _1.ParameterListT);\r\n        const receiving = combi_1.seq(\"RECEIVING\", _1.ParameterT);\r\n        const exceptions = combi_1.seq(\"EXCEPTIONS\", _1.ParameterListExceptions);\r\n        const long = combi_1.seq(combi_1.optPrio(exporting), combi_1.optPrio(importing), combi_1.optPrio(changing), combi_1.optPrio(receiving), combi_1.optPrio(exceptions));\r\n        return long;\r\n    }\r\n}\r\nexports.MethodParameters = MethodParameters;\r\n//# sourceMappingURL=method_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_source.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_source.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodSource = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodSource extends combi_1.Expression {\r\n    getRunnable() {\r\n        const mname = combi_1.alt(_1.MethodName, _1.Dynamic);\r\n        const cname = combi_1.alt(_1.FieldChain, _1.MethodCallChain, _1.Dynamic);\r\n        const stati = combi_1.seq(_1.ClassName, combi_1.tok(tokens_1.StaticArrow));\r\n        const part1 = combi_1.seq(cname, combi_1.alt(combi_1.tok(tokens_1.InstanceArrow), combi_1.tok(tokens_1.StaticArrow)));\r\n        return combi_1.seq(combi_1.optPrio(stati), combi_1.starPrio(part1), mname);\r\n    }\r\n}\r\nexports.MethodSource = MethodSource;\r\n//# sourceMappingURL=method_source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/modif.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/modif.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Modif = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Modif extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^[\\w\\*]{1,3}$/);\r\n    }\r\n}\r\nexports.Modif = Modif;\r\n//# sourceMappingURL=modif.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/modif.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/namespace_simple_name.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/namespace_simple_name.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NamespaceSimpleName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass NamespaceSimpleName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^((\\w*\\/\\w+\\/)|(\\w*\\/\\w+\\/)?[\\w\\*$%]+)$/);\r\n    }\r\n}\r\nexports.NamespaceSimpleName = NamespaceSimpleName;\r\n//# sourceMappingURL=namespace_simple_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/namespace_simple_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/new_object.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/new_object.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NewObject = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst field_assignment_1 = __webpack_require__(/*! ./field_assignment */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_assignment.js\");\r\n// note: this can also be new data reference\r\nclass NewObject extends combi_1.Expression {\r\n    getRunnable() {\r\n        const lines = combi_1.plus(combi_1.seq(combi_1.tok(tokens_1.WParenLeftW), _1.Source, combi_1.tok(tokens_1.WParenRightW)));\r\n        const linesFields = combi_1.plus(combi_1.seq(combi_1.tok(tokens_1.WParenLeftW), combi_1.plus(field_assignment_1.FieldAssignment), combi_1.tok(tokens_1.WParenRightW)));\r\n        const rparen = combi_1.altPrio(combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.WParenRight));\r\n        const neww = combi_1.seq(\"NEW\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), combi_1.optPrio(combi_1.alt(_1.Source, _1.ParameterListS, lines, linesFields)), rparen);\r\n        return combi_1.ver(version_1.Version.v740sp02, neww);\r\n    }\r\n}\r\nexports.NewObject = NewObject;\r\n//# sourceMappingURL=new_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/new_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/ole_exporting.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/ole_exporting.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OLEExporting = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass OLEExporting extends combi_1.Expression {\r\n    getRunnable() {\r\n        const fields = combi_1.seq(combi_1.regex(/^[&_!#\\*]?[\\w\\d\\*%\\$\\?#]+$/), \"=\", _1.Source);\r\n        return combi_1.seq(\"EXPORTING\", combi_1.plus(fields));\r\n    }\r\n}\r\nexports.OLEExporting = OLEExporting;\r\n//# sourceMappingURL=ole_exporting.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/ole_exporting.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/or.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/or.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Or = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Or extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"OR\", _1.Source);\r\n    }\r\n}\r\nexports.Or = Or;\r\n//# sourceMappingURL=or.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/or.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_exception.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_exception.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParameterException = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ParameterException extends combi_1.Expression {\r\n    getRunnable() {\r\n        const name = combi_1.altPrio(\"OTHERS\", _1.ParameterName);\r\n        return combi_1.seq(name, \"=\", _1.SimpleName, combi_1.optPrio(combi_1.seq(\"MESSAGE\", _1.Target)));\r\n    }\r\n}\r\nexports.ParameterException = ParameterException;\r\n//# sourceMappingURL=parameter_exception.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_exception.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_exceptions.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_exceptions.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParameterListExceptions = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ParameterListExceptions extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.plus(_1.ParameterException);\r\n    }\r\n}\r\nexports.ParameterListExceptions = ParameterListExceptions;\r\n//# sourceMappingURL=parameter_list_exceptions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_exceptions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_s.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_s.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParameterListS = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ParameterListS extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.plus(_1.ParameterS);\r\n    }\r\n}\r\nexports.ParameterListS = ParameterListS;\r\n//# sourceMappingURL=parameter_list_s.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_s.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_t.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_t.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParameterListT = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ParameterListT extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.plus(_1.ParameterT);\r\n    }\r\n}\r\nexports.ParameterListT = ParameterListT;\r\n//# sourceMappingURL=parameter_list_t.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_list_t.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_name.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_name.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParameterName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass ParameterName extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, think this can be reduced,\r\n        return combi_1.regex(/^[&_!]?\\*?\\w*(\\/\\w+\\/)?\\d*[a-zA-Z_%\\$][\\w\\*%\\$\\?]*(~\\w+)?$/);\r\n    }\r\n}\r\nexports.ParameterName = ParameterName;\r\n//# sourceMappingURL=parameter_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_s.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_s.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParameterS = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ParameterS extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(_1.ParameterName, \"=\", _1.Source);\r\n    }\r\n}\r\nexports.ParameterS = ParameterS;\r\n//# sourceMappingURL=parameter_s.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_s.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_t.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_t.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParameterT = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ParameterT extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(_1.ParameterName, \"=\", _1.Target);\r\n    }\r\n}\r\nexports.ParameterT = ParameterT;\r\n//# sourceMappingURL=parameter_t.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/parameter_t.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/pass_by_value.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/pass_by_value.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PassByValue = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass PassByValue extends combi_1.Expression {\r\n    getRunnable() {\r\n        const value = combi_1.seq(\"VALUE\", combi_1.tok(tokens_1.ParenLeft), _1.FormParamName, combi_1.tok(tokens_1.ParenRightW));\r\n        return value;\r\n    }\r\n}\r\nexports.PassByValue = PassByValue;\r\n//# sourceMappingURL=pass_by_value.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/pass_by_value.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_changing.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_changing.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PerformChanging = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js\");\r\nclass PerformChanging extends combi_1.Expression {\r\n    getRunnable() {\r\n        const changing = combi_1.seq(\"CHANGING\", combi_1.plus(source_1.Source));\r\n        return changing;\r\n    }\r\n}\r\nexports.PerformChanging = PerformChanging;\r\n//# sourceMappingURL=perform_changing.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_changing.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_tables.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_tables.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PerformTables = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js\");\r\nclass PerformTables extends combi_1.Expression {\r\n    getRunnable() {\r\n        const tables = combi_1.seq(\"TABLES\", combi_1.plus(source_1.Source));\r\n        return tables;\r\n    }\r\n}\r\nexports.PerformTables = PerformTables;\r\n//# sourceMappingURL=perform_tables.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_tables.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_using.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_using.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PerformUsing = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js\");\r\nclass PerformUsing extends combi_1.Expression {\r\n    getRunnable() {\r\n        const using = combi_1.seq(\"USING\", combi_1.plus(source_1.Source));\r\n        return using;\r\n    }\r\n}\r\nexports.PerformUsing = PerformUsing;\r\n//# sourceMappingURL=perform_using.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/perform_using.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/radio_group_name.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/radio_group_name.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RadioGroupName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass RadioGroupName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^[\\w\\d%]+$/);\r\n    }\r\n}\r\nexports.RadioGroupName = RadioGroupName;\r\n//# sourceMappingURL=radio_group_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/radio_group_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/read_table_target.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/read_table_target.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadTableTarget = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst fstarget_1 = __webpack_require__(/*! ./fstarget */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/fstarget.js\");\r\nconst target_1 = __webpack_require__(/*! ./target */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target.js\");\r\nclass ReadTableTarget extends combi_1.Expression {\r\n    getRunnable() {\r\n        const target = combi_1.altPrio(combi_1.seq(\"ASSIGNING\", fstarget_1.FSTarget), combi_1.seq(combi_1.optPrio(\"REFERENCE\"), \"INTO\", target_1.Target), \"TRANSPORTING NO FIELDS\");\r\n        return target;\r\n    }\r\n}\r\nexports.ReadTableTarget = ReadTableTarget;\r\n//# sourceMappingURL=read_table_target.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/read_table_target.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/receive_parameters.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/receive_parameters.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReceiveParameters = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ReceiveParameters extends combi_1.Expression {\r\n    getRunnable() {\r\n        const importing = combi_1.seq(\"IMPORTING\", _1.ParameterListT);\r\n        const tables = combi_1.seq(\"TABLES\", _1.ParameterListT);\r\n        const changing = combi_1.seq(\"CHANGING\", _1.ParameterListT);\r\n        const exceptions = combi_1.seq(\"EXCEPTIONS\", combi_1.opt(_1.ParameterListExceptions), combi_1.opt(_1.Field));\r\n        const long = combi_1.seq(combi_1.opt(importing), combi_1.opt(changing), combi_1.opt(tables), combi_1.opt(exceptions));\r\n        return long;\r\n    }\r\n}\r\nexports.ReceiveParameters = ReceiveParameters;\r\n//# sourceMappingURL=receive_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/receive_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/redefinition.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/redefinition.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Redefinition = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Redefinition extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(combi_1.opt(\"FINAL\"), \"REDEFINITION\");\r\n    }\r\n}\r\nexports.Redefinition = Redefinition;\r\n//# sourceMappingURL=redefinition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/redefinition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/reduce_body.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/reduce_body.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReduceBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ReduceBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const fields = combi_1.seq(_1.Field, \"=\", _1.Source);\r\n        const init = combi_1.seq(\"INIT\", combi_1.plus(_1.InlineFieldDefinition));\r\n        return combi_1.seq(combi_1.opt(_1.Let), init, _1.For, \"NEXT\", combi_1.plus(fields));\r\n    }\r\n}\r\nexports.ReduceBody = ReduceBody;\r\n//# sourceMappingURL=reduce_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/reduce_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/report_name.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/report_name.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReportName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass ReportName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(combi_1.regex(/^[\\w/$%]+$/), combi_1.star(combi_1.seq(combi_1.tok(tokens_1.Dash), combi_1.regex(/^\\w+$/))));\r\n    }\r\n}\r\nexports.ReportName = ReportName;\r\n//# sourceMappingURL=report_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/report_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Select = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst sql_group_by_1 = __webpack_require__(/*! ./sql_group_by */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_group_by.js\");\r\nconst sql_into_structure_1 = __webpack_require__(/*! ./sql_into_structure */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_structure.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst sql_field_name_1 = __webpack_require__(/*! ./sql_field_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js\");\r\nclass Select extends combi_1.Expression {\r\n    getRunnable() {\r\n        const into = combi_1.altPrio(_1.SQLIntoTable, sql_into_structure_1.SQLIntoStructure);\r\n        const where = combi_1.seq(\"WHERE\", _1.SQLCond);\r\n        const up = combi_1.seq(\"UP TO\", _1.SQLSource, \"ROWS\");\r\n        const offset = combi_1.ver(version_1.Version.v751, combi_1.seq(\"OFFSET\", _1.SQLSource));\r\n        const client = combi_1.str(\"CLIENT SPECIFIED\");\r\n        const bypass = combi_1.str(\"BYPASSING BUFFER\");\r\n        const fields = combi_1.seq(\"FIELDS\", _1.SQLFieldList);\r\n        const perm = combi_1.per(_1.SQLFrom, into, _1.SQLForAllEntries, where, _1.SQLOrderBy, up, offset, client, _1.SQLHaving, bypass, sql_group_by_1.SQLGroupBy, fields, _1.DatabaseConnection);\r\n        const paren = combi_1.seq(combi_1.tok(tokens_1.WParenLeftW), sql_field_name_1.SQLFieldName, combi_1.tok(tokens_1.WParenRightW));\r\n        const ret = combi_1.seq(\"SELECT\", combi_1.altPrio(\"DISTINCT\", combi_1.optPrio(combi_1.seq(\"SINGLE\", combi_1.optPrio(\"FOR UPDATE\")))), combi_1.optPrio(combi_1.altPrio(_1.SQLFieldList, paren)), perm);\r\n        return ret;\r\n    }\r\n}\r\nexports.Select = Select;\r\n//# sourceMappingURL=select.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select_loop.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select_loop.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectLoop = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst sql_order_by_1 = __webpack_require__(/*! ./sql_order_by */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_order_by.js\");\r\nconst sql_having_1 = __webpack_require__(/*! ./sql_having */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_having.js\");\r\nconst sql_path_1 = __webpack_require__(/*! ./sql_path */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_path.js\");\r\nconst sql_as_name_1 = __webpack_require__(/*! ./sql_as_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_as_name.js\");\r\nconst sql_case_1 = __webpack_require__(/*! ./sql_case */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_case.js\");\r\nconst sql_into_structure_1 = __webpack_require__(/*! ./sql_into_structure */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_structure.js\");\r\nconst sql_field_list_1 = __webpack_require__(/*! ./sql_field_list */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_list.js\");\r\nconst sql_hints_1 = __webpack_require__(/*! ./sql_hints */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_hints.js\");\r\nconst sql_function_1 = __webpack_require__(/*! ./sql_function */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_function.js\");\r\nclass SelectLoop extends combi_1.Expression {\r\n    getRunnable() {\r\n        const where = combi_1.seq(\"WHERE\", _1.SQLCond);\r\n        const comma = combi_1.opt(combi_1.ver(version_1.Version.v740sp05, \",\"));\r\n        const as = combi_1.seq(\"AS\", sql_as_name_1.SQLAsName);\r\n        const someField = combi_1.seq(combi_1.alt(_1.SQLFieldName, sql_path_1.SQLPath, _1.SQLAggregation, sql_function_1.SQLFunction, sql_case_1.SQLCase), combi_1.optPrio(as), comma);\r\n        const fieldList = combi_1.seq(combi_1.star(someField), combi_1.alt(_1.SQLFieldName, sql_path_1.SQLPath), combi_1.optPrio(as), comma, combi_1.star(someField));\r\n        // todo, use SQLFieldList instead?\r\n        const fields = combi_1.alt(\"*\", _1.Dynamic, fieldList);\r\n        const client = \"CLIENT SPECIFIED\";\r\n        const bypass = \"BYPASSING BUFFER\";\r\n        const up = combi_1.seq(\"UP TO\", _1.SQLSource, \"ROWS\");\r\n        const pack = combi_1.seq(\"PACKAGE SIZE\", _1.SQLSource);\r\n        const tab = combi_1.seq(_1.SQLIntoTable, combi_1.alt(pack, combi_1.seq(_1.SQLFrom, pack), combi_1.seq(pack, _1.SQLFrom)));\r\n        const perm = combi_1.per(_1.SQLFrom, where, up, sql_order_by_1.SQLOrderBy, sql_having_1.SQLHaving, client, bypass, _1.SQLGroupBy, _1.SQLForAllEntries, combi_1.alt(tab, sql_into_structure_1.SQLIntoStructure));\r\n        const strict = combi_1.seq(_1.SQLFrom, \"FIELDS\", sql_field_list_1.SQLFieldList, where, sql_into_structure_1.SQLIntoStructure, up);\r\n        const ret = combi_1.seq(\"SELECT\", combi_1.altPrio(combi_1.seq(combi_1.optPrio(\"DISTINCT\"), fields, perm), strict), combi_1.optPrio(sql_hints_1.SQLHints));\r\n        return ret;\r\n    }\r\n}\r\nexports.SelectLoop = SelectLoop;\r\n//# sourceMappingURL=select_loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/select_loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_field_chain.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_field_chain.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SimpleFieldChain = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst attribute_name_1 = __webpack_require__(/*! ./attribute_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_name.js\");\r\nclass SimpleFieldChain extends combi_1.Expression {\r\n    getRunnable() {\r\n        const chain = combi_1.starPrio(combi_1.seq(combi_1.tok(tokens_1.Dash), _1.ComponentName));\r\n        const clas = combi_1.seq(_1.ClassName, combi_1.tok(tokens_1.StaticArrow), attribute_name_1.AttributeName);\r\n        const start = combi_1.altPrio(clas, _1.Field);\r\n        const ret = combi_1.seq(start, chain);\r\n        return ret;\r\n    }\r\n}\r\nexports.SimpleFieldChain = SimpleFieldChain;\r\n//# sourceMappingURL=simple_field_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_field_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_name.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_name.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SimpleName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass SimpleName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^[\\w$%]+$/);\r\n    }\r\n}\r\nexports.SimpleName = SimpleName;\r\n//# sourceMappingURL=simple_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source1.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source1.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SimpleSource1 = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SimpleSource1 extends combi_1.Expression {\r\n    getRunnable() {\r\n        const concat = combi_1.seq(\"&&\", _1.StringTemplate);\r\n        const template = combi_1.seq(_1.StringTemplate, combi_1.star(concat));\r\n        return combi_1.alt(_1.Constant, _1.TextElement, _1.MethodCallChain, template, _1.FieldChain);\r\n    }\r\n}\r\nexports.SimpleSource1 = SimpleSource1;\r\n//# sourceMappingURL=simple_source1.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source1.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source2.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source2.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SimpleSource2 = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\n/** Reduced version of SimpleSource, omits MethodCallChains. */\r\nclass SimpleSource2 extends combi_1.Expression {\r\n    getRunnable() {\r\n        const concat = combi_1.seq(\"&&\", _1.StringTemplate);\r\n        const template = combi_1.seq(_1.StringTemplate, combi_1.star(concat));\r\n        return combi_1.altPrio(_1.Constant, _1.TextElement, template, _1.FieldChain);\r\n    }\r\n}\r\nexports.SimpleSource2 = SimpleSource2;\r\n//# sourceMappingURL=simple_source2.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source2.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source3.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source3.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SimpleSource3 = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SimpleSource3 extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.alt(_1.Constant, _1.TextElement, _1.FieldChain);\r\n    }\r\n}\r\nexports.SimpleSource3 = SimpleSource3;\r\n//# sourceMappingURL=simple_source3.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source3.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source4.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source4.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SimpleSource4 = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_call_chain_1 = __webpack_require__(/*! ./method_call_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/method_call_chain.js\");\r\nclass SimpleSource4 extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.alt(_1.Constant, _1.TextElement, _1.FieldChain, method_call_chain_1.MethodCallChain);\r\n    }\r\n}\r\nexports.SimpleSource4 = SimpleSource4;\r\n//# sourceMappingURL=simple_source4.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source4.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Source = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst text_element_1 = __webpack_require__(/*! ./text_element */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element.js\");\r\nconst attribute_chain_1 = __webpack_require__(/*! ./attribute_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_chain.js\");\r\nconst dereference_1 = __webpack_require__(/*! ./dereference */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dereference.js\");\r\n// todo, COND and SWITCH are quite similar?\r\n// this class is used quite often, so its nice to have the differentiating tokens part of it\r\nclass Source extends combi_1.Expression {\r\n    getRunnable() {\r\n        const comp = combi_1.seq(combi_1.tok(tokens_1.Dash), _1.ComponentChain);\r\n        const attr = combi_1.seq(_1.Arrow, attribute_chain_1.AttributeChain);\r\n        const method = combi_1.seq(_1.MethodCallChain, combi_1.optPrio(combi_1.altPrio(attr, comp)), combi_1.optPrio(dereference_1.Dereference));\r\n        const rparen = combi_1.tok(tokens_1.WParenRightW);\r\n        const rparenNoSpace = combi_1.altPrio(combi_1.tok(tokens_1.ParenRightW), combi_1.tok(tokens_1.WParenRightW));\r\n        // paren used for eg. \"( 2 + 1 ) * 4\"\r\n        const paren = combi_1.seq(combi_1.tok(tokens_1.WParenLeftW), Source, rparen);\r\n        const after = combi_1.seq(combi_1.altPrio(\"&\", \"&&\", _1.ArithOperator), Source);\r\n        const bool = combi_1.seq(combi_1.altPrio(combi_1.ver(version_1.Version.v702, combi_1.regex(/^BOOLC$/i)), combi_1.ver(version_1.Version.v740sp08, combi_1.regex(/^XSDBOOL$/i))), combi_1.tok(tokens_1.ParenLeftW), _1.Cond, \")\");\r\n        const prefix = combi_1.altPrio(combi_1.tok(tokens_1.WDashW), combi_1.tok(tokens_1.WPlus), combi_1.tok(tokens_1.WPlusW), \"BIT-NOT\");\r\n        const old = combi_1.seq(combi_1.optPrio(prefix), combi_1.altPrio(_1.Constant, _1.StringTemplate, text_element_1.TextElement, bool, method, combi_1.seq(_1.FieldChain, combi_1.optPrio(dereference_1.Dereference)), paren), combi_1.optPrio(after));\r\n        const corr = combi_1.ver(version_1.Version.v740sp05, combi_1.seq(\"CORRESPONDING\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), _1.CorrespondingBody, rparen, combi_1.optPrio(after)));\r\n        const conv = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"CONV\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), _1.ConvBody, rparenNoSpace, combi_1.optPrio(after)));\r\n        const swit = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"SWITCH\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), _1.SwitchBody, rparenNoSpace, combi_1.optPrio(after)));\r\n        const value = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"VALUE\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), _1.ValueBody, rparenNoSpace, combi_1.optPrio(after)));\r\n        const cond = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"COND\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), _1.CondBody, rparenNoSpace, combi_1.optPrio(after)));\r\n        const reff = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"REF\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), Source, combi_1.optPrio(\"OPTIONAL\"), rparen));\r\n        const exact = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"EXACT\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), Source, rparen, combi_1.optPrio(after)));\r\n        const filter = combi_1.ver(version_1.Version.v740sp08, combi_1.seq(\"FILTER\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), _1.FilterBody, rparen));\r\n        const reduce = combi_1.ver(version_1.Version.v740sp08, combi_1.seq(\"REDUCE\", _1.TypeNameOrInfer, combi_1.tok(tokens_1.ParenLeftW), _1.ReduceBody, rparen, combi_1.optPrio(after)));\r\n        const ret = combi_1.altPrio(filter, reff, corr, conv, value, cond, exact, swit, reduce, old);\r\n        return ret;\r\n    }\r\n}\r\nexports.Source = Source;\r\n//# sourceMappingURL=source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SourceField = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SourceField extends combi_1.Expression {\r\n    getRunnable() {\r\n        return new _1.Field();\r\n    }\r\n}\r\nexports.SourceField = SourceField;\r\n//# sourceMappingURL=source_field.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field_symbol.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field_symbol.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SourceFieldSymbol = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SourceFieldSymbol extends combi_1.Expression {\r\n    getRunnable() {\r\n        return new _1.FieldSymbol();\r\n    }\r\n}\r\nexports.SourceFieldSymbol = SourceFieldSymbol;\r\n//# sourceMappingURL=source_field_symbol.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source_field_symbol.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_aggregation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_aggregation.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLAggregation = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js\");\r\nconst sql_arithmetics_1 = __webpack_require__(/*! ./sql_arithmetics */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_arithmetics.js\");\r\nclass SQLAggregation extends combi_1.Expression {\r\n    getRunnable() {\r\n        const f = combi_1.altPrio(sql_arithmetics_1.SQLArithmetics, dynamic_1.Dynamic);\r\n        const fparen = combi_1.seq(\"(\", _1.Field, \")\");\r\n        const count = combi_1.seq(\"COUNT\", combi_1.altPrio(combi_1.tok(tokens_1.ParenLeft), combi_1.tok(tokens_1.ParenLeftW)), combi_1.optPrio(\"DISTINCT\"), combi_1.altPrio(\"*\", _1.Field, fparen), \")\");\r\n        const max = combi_1.seq(\"MAX\", combi_1.altPrio(combi_1.tok(tokens_1.ParenLeft), combi_1.tok(tokens_1.ParenLeftW)), f, \")\");\r\n        const min = combi_1.seq(\"MIN\", combi_1.altPrio(combi_1.tok(tokens_1.ParenLeft), combi_1.tok(tokens_1.ParenLeftW)), f, \")\");\r\n        const sum = combi_1.seq(\"SUM\", combi_1.altPrio(combi_1.tok(tokens_1.ParenLeft), combi_1.tok(tokens_1.ParenLeftW)), f, \")\");\r\n        const avg = combi_1.seq(\"AVG\", combi_1.altPrio(combi_1.tok(tokens_1.ParenLeft), combi_1.tok(tokens_1.ParenLeftW)), f, \")\");\r\n        return combi_1.altPrio(count, max, min, sum, avg);\r\n    }\r\n}\r\nexports.SQLAggregation = SQLAggregation;\r\n//# sourceMappingURL=sql_aggregation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_aggregation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_alias_field.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_alias_field.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLAliasField = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass SQLAliasField extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^\\w+~\\w+$/);\r\n    }\r\n}\r\nexports.SQLAliasField = SQLAliasField;\r\n//# sourceMappingURL=sql_alias_field.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_alias_field.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_arithmetics.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_arithmetics.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLArithmetics = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass SQLArithmetics extends combi_1.Expression {\r\n    getRunnable() {\r\n        const operator = combi_1.altPrio(combi_1.tok(tokens_1.WPlusW), combi_1.tok(tokens_1.WDashW), \"*\", \"/\");\r\n        return combi_1.seq(_1.SQLFieldName, combi_1.starPrio(combi_1.seq(operator, _1.SQLFieldName)));\r\n    }\r\n}\r\nexports.SQLArithmetics = SQLArithmetics;\r\n//# sourceMappingURL=sql_arithmetics.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_arithmetics.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_as_name.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_as_name.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLAsName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass SQLAsName extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, below allows too much?\r\n        return combi_1.regex(/^[&_!]?\\*?\\w*(\\/\\w+\\/)?\\d*[a-zA-Z_%\\$][\\w\\*%\\$\\?]*(~\\w+)?$/);\r\n    }\r\n}\r\nexports.SQLAsName = SQLAsName;\r\n//# sourceMappingURL=sql_as_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_as_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_case.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_case.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLCase = void 0;\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst constant_1 = __webpack_require__(/*! ./constant */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant.js\");\r\nconst sql_cond_1 = __webpack_require__(/*! ./sql_cond */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cond.js\");\r\nconst sql_field_name_1 = __webpack_require__(/*! ./sql_field_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js\");\r\nconst sql_source_1 = __webpack_require__(/*! ./sql_source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source.js\");\r\nclass SQLCase extends combi_1.Expression {\r\n    getRunnable() {\r\n        const when = combi_1.seq(\"WHEN\", combi_1.alt(constant_1.Constant, sql_cond_1.SQLCond), \"THEN\", sql_source_1.SQLSource);\r\n        const els = combi_1.seq(\"ELSE\", sql_source_1.SQLSource);\r\n        return combi_1.ver(version_1.Version.v740sp05, combi_1.seq(\"CASE\", combi_1.opt(sql_field_name_1.SQLFieldName), combi_1.plus(when), combi_1.optPrio(els), \"END\"));\r\n    }\r\n}\r\nexports.SQLCase = SQLCase;\r\n//# sourceMappingURL=sql_case.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_case.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cds_parameters.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cds_parameters.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLCDSParameters = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js\");\r\nclass SQLCDSParameters extends combi_1.Expression {\r\n    getRunnable() {\r\n        const param = combi_1.seq(_1.Field, \"=\", combi_1.alt(combi_1.seq(combi_1.tok(tokens_1.WAt), field_chain_1.FieldChain), _1.Constant));\r\n        return combi_1.seq(\"(\", param, combi_1.star(combi_1.seq(\",\", param)), \")\");\r\n    }\r\n}\r\nexports.SQLCDSParameters = SQLCDSParameters;\r\n//# sourceMappingURL=sql_cds_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cds_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_client.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_client.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLClient = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst sql_source_simple_1 = __webpack_require__(/*! ./sql_source_simple */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source_simple.js\");\r\nclass SQLClient extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, client specified and connection not possible in Cloud\r\n        const client = combi_1.alt(\"CLIENT SPECIFIED\", combi_1.seq(\"USING CLIENT\", sql_source_simple_1.SQLSourceSimple));\r\n        return client;\r\n    }\r\n}\r\nexports.SQLClient = SQLClient;\r\n//# sourceMappingURL=sql_client.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_client.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLCompare = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SQLCompare extends combi_1.Expression {\r\n    getRunnable() {\r\n        const val = new _1.SQLSource();\r\n        const list = combi_1.seq(combi_1.altPrio(combi_1.tok(tokens_1.WParenLeft), combi_1.tok(tokens_1.WParenLeftW)), val, combi_1.starPrio(combi_1.seq(\",\", val)), \")\");\r\n        const subSelect = combi_1.seq(\"(\", _1.Select, \")\");\r\n        const inn = combi_1.seq(combi_1.optPrio(\"NOT\"), \"IN\", combi_1.altPrio(_1.SQLSource, list, subSelect));\r\n        const between = combi_1.seq(combi_1.optPrio(\"NOT\"), \"BETWEEN\", _1.SQLSource, \"AND\", _1.SQLSource);\r\n        const like = combi_1.seq(combi_1.optPrio(\"NOT\"), \"LIKE\", _1.SQLSource, combi_1.optPrio(combi_1.seq(\"ESCAPE\", _1.SQLSource)));\r\n        const nul = combi_1.seq(\"IS\", combi_1.optPrio(\"NOT\"), combi_1.alt(\"NULL\", combi_1.ver(version_1.Version.v753, \"INITIAL\")));\r\n        const source = new _1.SQLSource();\r\n        const sub = combi_1.seq(combi_1.optPrio(combi_1.altPrio(\"ALL\", \"ANY\", \"SOME\")), subSelect);\r\n        const builtin = combi_1.ver(version_1.Version.v751, combi_1.seq(combi_1.alt(\"lower\", \"upper\"), combi_1.tok(tokens_1.ParenLeftW), _1.SQLFieldName, combi_1.tok(tokens_1.WParenRightW)));\r\n        const rett = combi_1.seq(combi_1.altPrio(builtin, _1.SQLFieldName), combi_1.altPrio(combi_1.seq(_1.SQLCompareOperator, combi_1.altPrio(sub, source)), inn, like, between, nul));\r\n        const exists = combi_1.seq(\"EXISTS\", subSelect);\r\n        return combi_1.altPrio(exists, _1.Dynamic, rett);\r\n    }\r\n}\r\nexports.SQLCompare = SQLCompare;\r\n//# sourceMappingURL=sql_compare.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare_operator.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare_operator.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLCompareOperator = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass SQLCompareOperator extends combi_1.Expression {\r\n    getRunnable() {\r\n        const operator = combi_1.altPrio(\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"EQ\", \"NE\", \"GE\", \"GT\", \"LT\", \"LE\", \"><\", \"=>\");\r\n        return operator;\r\n    }\r\n}\r\nexports.SQLCompareOperator = SQLCompareOperator;\r\n//# sourceMappingURL=sql_compare_operator.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_compare_operator.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cond.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cond.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLCond = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SQLCond extends combi_1.Expression {\r\n    getRunnable() {\r\n        const operator = combi_1.altPrio(\"AND\", \"OR\");\r\n        const paren = combi_1.seq(combi_1.tok(tokens_1.WParenLeftW), SQLCond, combi_1.altPrio(combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.ParenRightW)));\r\n        const cnd = combi_1.seq(combi_1.optPrio(\"NOT\"), combi_1.altPrio(_1.SQLCompare, paren));\r\n        const ret = combi_1.seq(cnd, combi_1.starPrio(combi_1.seq(operator, cnd)));\r\n        return ret;\r\n    }\r\n}\r\nexports.SQLCond = SQLCond;\r\n//# sourceMappingURL=sql_cond.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_cond.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_list.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_list.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLFieldList = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst sql_function_1 = __webpack_require__(/*! ./sql_function */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_function.js\");\r\nconst simple_field_chain_1 = __webpack_require__(/*! ./simple_field_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_field_chain.js\");\r\nconst sql_path_1 = __webpack_require__(/*! ./sql_path */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_path.js\");\r\nclass SQLFieldList extends combi_1.Expression {\r\n    getRunnable() {\r\n        const comma = combi_1.optPrio(combi_1.ver(version_1.Version.v740sp05, \",\"));\r\n        const abap = combi_1.ver(version_1.Version.v740sp05, combi_1.seq(combi_1.tok(tokens_1.WAt), simple_field_chain_1.SimpleFieldChain));\r\n        const as = combi_1.seq(\"AS\", _1.Field);\r\n        return combi_1.altPrio(\"*\", _1.Dynamic, combi_1.plusPrio(combi_1.seq(combi_1.altPrio(_1.SQLAggregation, _1.SQLCase, sql_function_1.SQLFunction, sql_path_1.SQLPath, _1.SQLFieldName, abap, _1.Constant), combi_1.optPrio(as), comma)));\r\n    }\r\n}\r\nexports.SQLFieldList = SQLFieldList;\r\n//# sourceMappingURL=sql_field_list.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_list.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLFieldName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass SQLFieldName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^(?!(?:SINGLE|INTO|DISTINCT|AS|WHERE|HAVING|APPENDING|UP|FROM)$)(\\/\\w+\\/)?(\\w+~(\\w+|\\*)|\\w+)$/i);\r\n    }\r\n}\r\nexports.SQLFieldName = SQLFieldName;\r\n//# sourceMappingURL=sql_field_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_for_all_entries.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_for_all_entries.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLForAllEntries = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst sql_source_1 = __webpack_require__(/*! ./sql_source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source.js\");\r\nclass SQLForAllEntries extends combi_1.Expression {\r\n    getRunnable() {\r\n        const forAll = combi_1.seq(\"FOR ALL ENTRIES IN\", sql_source_1.SQLSource);\r\n        return forAll;\r\n    }\r\n}\r\nexports.SQLForAllEntries = SQLForAllEntries;\r\n//# sourceMappingURL=sql_for_all_entries.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_for_all_entries.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLFrom = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SQLFrom extends combi_1.Expression {\r\n    getRunnable() {\r\n        const from = combi_1.seq(\"FROM\", combi_1.starPrio(combi_1.tok(tokens_1.WParenLeftW)), _1.SQLFromSource);\r\n        const source = combi_1.seq(from, combi_1.starPrio(combi_1.seq(combi_1.optPrio(combi_1.tok(tokens_1.WParenRightW)), _1.SQLJoin, combi_1.optPrio(combi_1.tok(tokens_1.WParenRightW)))));\r\n        return source;\r\n    }\r\n}\r\nexports.SQLFrom = SQLFrom;\r\n//# sourceMappingURL=sql_from.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from_source.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from_source.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLFromSource = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst with_name_1 = __webpack_require__(/*! ./with_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/with_name.js\");\r\nclass SQLFromSource extends combi_1.Expression {\r\n    getRunnable() {\r\n        // https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abennews-752-open_sql.htm#!ABAP_MODIFICATION_1@1@\r\n        const tab = combi_1.ver(version_1.Version.v752, combi_1.seq(combi_1.tok(tokens_1.WAt), _1.FieldChain));\r\n        const aas = combi_1.seq(\"AS\", _1.SQLAsName);\r\n        return combi_1.seq(combi_1.altPrio(_1.Dynamic, with_name_1.WithName, combi_1.seq(_1.DatabaseTable, combi_1.optPrio(_1.SQLCDSParameters)), tab), combi_1.optPrio(combi_1.ver(version_1.Version.v752, \"WITH PRIVILEGED ACCESS\")), combi_1.optPrio(aas));\r\n    }\r\n}\r\nexports.SQLFromSource = SQLFromSource;\r\n//# sourceMappingURL=sql_from_source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_from_source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_function.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_function.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLFunction = void 0;\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst integer_1 = __webpack_require__(/*! ./integer */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/integer.js\");\r\nconst sql_alias_field_1 = __webpack_require__(/*! ./sql_alias_field */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_alias_field.js\");\r\nconst sql_field_name_1 = __webpack_require__(/*! ./sql_field_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js\");\r\nclass SQLFunction extends combi_1.Expression {\r\n    getRunnable() {\r\n        const uuid = combi_1.ver(version_1.Version.v754, combi_1.seq(\"uuid\", combi_1.tok(tokens_1.ParenLeftW), combi_1.tok(tokens_1.WParenRightW)));\r\n        const abs = combi_1.ver(version_1.Version.v751, combi_1.seq(\"abs\", combi_1.tok(tokens_1.ParenLeftW), combi_1.altPrio(sql_field_name_1.SQLFieldName, sql_alias_field_1.SQLAliasField), combi_1.tok(tokens_1.WParenRightW)));\r\n        const cast = combi_1.ver(version_1.Version.v750, combi_1.seq(\"cast\", combi_1.tok(tokens_1.ParenLeftW), combi_1.altPrio(sql_field_name_1.SQLFieldName, sql_alias_field_1.SQLAliasField), \"AS CHAR\", combi_1.tok(tokens_1.ParenLeftW), integer_1.Integer, combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.WParenRightW)));\r\n        return combi_1.altPrio(uuid, abs, cast);\r\n    }\r\n}\r\nexports.SQLFunction = SQLFunction;\r\n//# sourceMappingURL=sql_function.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_function.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_group_by.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_group_by.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLGroupBy = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js\");\r\nconst sql_field_name_1 = __webpack_require__(/*! ./sql_field_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js\");\r\nclass SQLGroupBy extends combi_1.Expression {\r\n    getRunnable() {\r\n        const f = combi_1.alt(sql_field_name_1.SQLFieldName, dynamic_1.Dynamic);\r\n        const strict = combi_1.seq(combi_1.plus(combi_1.seq(f, \",\")), f);\r\n        const group = combi_1.seq(\"GROUP BY\", combi_1.altPrio(strict, combi_1.plus(f)));\r\n        return group;\r\n    }\r\n}\r\nexports.SQLGroupBy = SQLGroupBy;\r\n//# sourceMappingURL=sql_group_by.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_group_by.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_having.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_having.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLHaving = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js\");\r\nclass SQLHaving extends combi_1.Expression {\r\n    getRunnable() {\r\n        const having = combi_1.seq(\"HAVING\", dynamic_1.Dynamic);\r\n        return having;\r\n    }\r\n}\r\nexports.SQLHaving = SQLHaving;\r\n//# sourceMappingURL=sql_having.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_having.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_hints.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_hints.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLHints = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SQLHints extends combi_1.Expression {\r\n    getRunnable() {\r\n        const type = combi_1.altPrio(\"ORACLE\", \"ADABAS\", \"AS400\", \"DB2\", \"HDB\", \"MSSQLNT\", \"SYBASE\", \"DB6\");\r\n        const ret = combi_1.seq(\"%_HINTS\", combi_1.plus(combi_1.seq(type, _1.Constant)));\r\n        return ret;\r\n    }\r\n}\r\nexports.SQLHints = SQLHints;\r\n//# sourceMappingURL=sql_hints.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_hints.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_structure.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_structure.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLIntoStructure = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst paren_left_1 = __webpack_require__(/*! ../../1_lexer/tokens/paren_left */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/paren_left.js\");\r\nclass SQLIntoStructure extends combi_1.Expression {\r\n    getRunnable() {\r\n        const intoList = combi_1.seq(combi_1.altPrio(combi_1.tok(paren_left_1.WParenLeft), combi_1.tok(paren_left_1.WParenLeftW)), combi_1.starPrio(combi_1.seq(_1.SQLTarget, \",\")), _1.SQLTarget, \")\");\r\n        const intoSimple = combi_1.seq(combi_1.optPrio(\"CORRESPONDING FIELDS OF\"), _1.SQLTarget);\r\n        return combi_1.seq(\"INTO\", combi_1.altPrio(intoList, intoSimple));\r\n    }\r\n}\r\nexports.SQLIntoStructure = SQLIntoStructure;\r\n//# sourceMappingURL=sql_into_structure.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_structure.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_table.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_table.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLIntoTable = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SQLIntoTable extends combi_1.Expression {\r\n    getRunnable() {\r\n        const into = combi_1.seq(combi_1.altPrio(\"INTO\", \"APPENDING\"), combi_1.optPrio(\"CORRESPONDING FIELDS OF\"), \"TABLE\", _1.SQLTarget);\r\n        return into;\r\n    }\r\n}\r\nexports.SQLIntoTable = SQLIntoTable;\r\n//# sourceMappingURL=sql_into_table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_join.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_join.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLJoin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SQLJoin extends combi_1.Expression {\r\n    getRunnable() {\r\n        const joinType = combi_1.seq(combi_1.optPrio(combi_1.altPrio(\"INNER\", \"LEFT OUTER\", \"LEFT\")), \"JOIN\");\r\n        const join = combi_1.seq(joinType, _1.SQLFromSource, \"ON\", combi_1.plusPrio(_1.SQLCond));\r\n        return join;\r\n    }\r\n}\r\nexports.SQLJoin = SQLJoin;\r\n//# sourceMappingURL=sql_join.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_join.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_order_by.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_order_by.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLOrderBy = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js\");\r\nconst sql_field_name_1 = __webpack_require__(/*! ./sql_field_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_field_name.js\");\r\nclass SQLOrderBy extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ding = combi_1.alt(\"ASCENDING\", \"DESCENDING\");\r\n        const ofields = combi_1.plus(combi_1.seq(sql_field_name_1.SQLFieldName, combi_1.opt(ding), combi_1.opt(\",\")));\r\n        const order = combi_1.seq(\"ORDER BY\", combi_1.altPrio(\"PRIMARY KEY\", dynamic_1.Dynamic, ofields));\r\n        return order;\r\n    }\r\n}\r\nexports.SQLOrderBy = SQLOrderBy;\r\n//# sourceMappingURL=sql_order_by.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_order_by.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_path.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_path.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLPath = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass SQLPath extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, only from version?\r\n        const ret = combi_1.seq(combi_1.regex(/\\\\_\\w+/), combi_1.tok(tokens_1.Dash), combi_1.regex(/\\w+/));\r\n        return ret;\r\n    }\r\n}\r\nexports.SQLPath = SQLPath;\r\n//# sourceMappingURL=sql_path.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_path.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLSource = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SQLSource extends combi_1.Expression {\r\n    getRunnable() {\r\n        const paren = combi_1.seq(combi_1.tok(tokens_1.ParenLeftW), _1.Source, combi_1.tok(tokens_1.WParenRightW));\r\n        // todo, this Source must be a simple field?\r\n        const at = combi_1.ver(version_1.Version.v740sp05, combi_1.seq(combi_1.tok(tokens_1.WAt), combi_1.altPrio(_1.Source, paren)));\r\n        return combi_1.altPrio(_1.SQLAliasField, _1.Source, at);\r\n    }\r\n}\r\nexports.SQLSource = SQLSource;\r\n//# sourceMappingURL=sql_source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source_simple.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source_simple.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLSourceSimple = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst constant_string_1 = __webpack_require__(/*! ./constant_string */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/constant_string.js\");\r\nclass SQLSourceSimple extends combi_1.Expression {\r\n    getRunnable() {\r\n        const paren = combi_1.seq(combi_1.tok(tokens_1.ParenLeftW), _1.Source, combi_1.tok(tokens_1.WParenRightW));\r\n        const at = combi_1.ver(version_1.Version.v740sp05, combi_1.seq(combi_1.tok(tokens_1.WAt), combi_1.alt(_1.FieldChain, paren)));\r\n        return combi_1.alt(_1.FieldChain, at, constant_string_1.ConstantString);\r\n    }\r\n}\r\nexports.SQLSourceSimple = SQLSourceSimple;\r\n//# sourceMappingURL=sql_source_simple.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_source_simple.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_target.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_target.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLTarget = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SQLTarget extends combi_1.Expression {\r\n    getRunnable() {\r\n        const at = combi_1.ver(version_1.Version.v740sp05, combi_1.seq(combi_1.altPrio(combi_1.tok(tokens_1.WAt), combi_1.tok(tokens_1.At)), _1.Target));\r\n        return combi_1.altPrio(at, _1.Target);\r\n    }\r\n}\r\nexports.SQLTarget = SQLTarget;\r\n//# sourceMappingURL=sql_target.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_target.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StringTemplate = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Tokens = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass StringTemplate extends combi_1.Expression {\r\n    getRunnable() {\r\n        const nest = combi_1.seq(combi_1.tok(Tokens.StringTemplateBegin), _1.Source, combi_1.optPrio(_1.StringTemplateFormatting), combi_1.starPrio(combi_1.seq(combi_1.tok(Tokens.StringTemplateMiddle), _1.Source, combi_1.optPrio(_1.StringTemplateFormatting))), combi_1.tok(Tokens.StringTemplateEnd));\r\n        return combi_1.ver(version_1.Version.v702, combi_1.altPrio(nest, combi_1.tok(Tokens.StringTemplate)));\r\n    }\r\n}\r\nexports.StringTemplate = StringTemplate;\r\n//# sourceMappingURL=string_template.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template_formatting.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template_formatting.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StringTemplateFormatting = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dynamic.js\");\r\nclass StringTemplateFormatting extends combi_1.Expression {\r\n    getRunnable() {\r\n        // https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-us/abapcompute_string_format_options.htm\r\n        const alphaOptions = combi_1.altPrio(\"OUT\", \"RAW\", \"IN\", _1.Source);\r\n        const alignOptions = combi_1.altPrio(\"LEFT\", \"RIGHT\", \"CENTER\", _1.Source);\r\n        const dateTimeOptions = combi_1.altPrio(\"RAW\", \"ISO\", \"USER\", \"ENVIRONMENT\", _1.Source, dynamic_1.Dynamic);\r\n        const timeStampOptions = combi_1.altPrio(\"SPACE\", \"ISO\", \"USER\", \"ENVIRONMENT\", _1.Source);\r\n        const numberOptions = combi_1.altPrio(\"RAW\", \"USER\", \"ENVIRONMENT\", _1.Source);\r\n        const signOptions = combi_1.altPrio(\"LEFT\", \"LEFTPLUS\", \"LEFTSPACE\", \"RIGHT\", \"RIGHTPLUS\", \"RIGHTSPACE\", _1.Source);\r\n        const caseOptions = combi_1.altPrio(\"RAW\", \"UPPER\", \"LOWER\", _1.Source, dynamic_1.Dynamic);\r\n        const zeroXSDOptions = combi_1.altPrio(\"YES\", \"NO\", _1.Source);\r\n        const styleOptions = combi_1.altPrio(\"SIMPLE\", \"SIGN_AS_POSTFIX\", \"SCALE_PRESERVING\", \"SCIENTIFIC\", \"SCIENTIFIC_WITH_LEADING_ZERO\", \"SCALE_PRESERVING_SCIENTIFIC\", \"ENGINEERING\", _1.Source);\r\n        const width = combi_1.seq(\"WIDTH =\", _1.Source);\r\n        const align = combi_1.seq(\"ALIGN =\", alignOptions);\r\n        const timezone = combi_1.seq(\"TIMEZONE =\", _1.Source);\r\n        const timestamp = combi_1.seq(\"TIMESTAMP =\", timeStampOptions);\r\n        const pad = combi_1.seq(\"PAD =\", _1.Source);\r\n        const number = combi_1.seq(\"NUMBER =\", numberOptions);\r\n        const sign = combi_1.seq(\"SIGN =\", signOptions);\r\n        const decimals = combi_1.seq(\"DECIMALS =\", _1.Source);\r\n        const alpha = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"ALPHA =\", alphaOptions));\r\n        const xsd = combi_1.ver(version_1.Version.v740sp02, combi_1.seq(\"XSD =\", zeroXSDOptions));\r\n        const formatting = combi_1.altPrio(combi_1.seq(\"TIME =\", dateTimeOptions), combi_1.seq(\"DATE =\", dateTimeOptions), combi_1.seq(\"CASE =\", caseOptions), combi_1.seq(\"EXPONENT\", _1.Source), combi_1.seq(\"ZERO =\", zeroXSDOptions), xsd, combi_1.seq(\"STYLE =\", styleOptions), combi_1.seq(\"CURRENCY =\", _1.Source), combi_1.seq(\"COUNTRY =\", _1.Source), combi_1.per(sign, number, decimals, width, pad, alpha, align), combi_1.per(timezone, timestamp));\r\n        return formatting;\r\n    }\r\n}\r\nexports.StringTemplateFormatting = StringTemplateFormatting;\r\n//# sourceMappingURL=string_template_formatting.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/string_template_formatting.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/super_class_name.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/super_class_name.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SuperClassName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SuperClassName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return new _1.ClassName();\r\n    }\r\n}\r\nexports.SuperClassName = SuperClassName;\r\n//# sourceMappingURL=super_class_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/super_class_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/switch_body.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/switch_body.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SwitchBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SwitchBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const or = combi_1.seq(\"OR\", _1.Source);\r\n        const swhen = combi_1.seq(\"WHEN\", _1.Source, combi_1.star(or), \"THEN\", combi_1.alt(_1.Source, _1.Throw));\r\n        return combi_1.seq(combi_1.opt(_1.Let), _1.Source, combi_1.plus(swhen), combi_1.opt(combi_1.seq(\"ELSE\", combi_1.alt(_1.Source, _1.Throw))));\r\n    }\r\n}\r\nexports.SwitchBody = SwitchBody;\r\n//# sourceMappingURL=switch_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/switch_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_body.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_body.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TableBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass TableBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(combi_1.tok(tokens_1.BracketLeft), combi_1.tok(tokens_1.BracketRightW));\r\n        return ret;\r\n    }\r\n}\r\nexports.TableBody = TableBody;\r\n//# sourceMappingURL=table_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_expression.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_expression.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TableExpression = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass TableExpression extends combi_1.Expression {\r\n    getRunnable() {\r\n        const fields = combi_1.plus(combi_1.seq(combi_1.altPrio(_1.ComponentChainSimple, _1.Dynamic), \"=\", _1.Source));\r\n        const key = combi_1.seq(\"KEY\", _1.SimpleName);\r\n        const index = combi_1.seq(\"INDEX\", _1.Source);\r\n        const ret = combi_1.seq(combi_1.tok(tokens_1.BracketLeftW), combi_1.alt(_1.Source, combi_1.seq(combi_1.optPrio(key), combi_1.opt(\"COMPONENTS\"), combi_1.altPrio(fields, index))), combi_1.altPrio(combi_1.tok(tokens_1.WBracketRight), combi_1.tok(tokens_1.WBracketRightW)));\r\n        return combi_1.ver(version_1.Version.v740sp02, ret);\r\n    }\r\n}\r\nexports.TableExpression = TableExpression;\r\n//# sourceMappingURL=table_expression.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/table_expression.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Target = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst attribute_name_1 = __webpack_require__(/*! ./attribute_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/attribute_name.js\");\r\nconst dereference_1 = __webpack_require__(/*! ./dereference */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/dereference.js\");\r\nclass Target extends combi_1.Expression {\r\n    getRunnable() {\r\n        const attr = combi_1.seq(combi_1.tok(tokens_1.InstanceArrow), attribute_name_1.AttributeName);\r\n        const comp = combi_1.seq(combi_1.tok(tokens_1.Dash), _1.ComponentName);\r\n        const something = combi_1.starPrio(combi_1.altPrio(attr, comp, _1.TableExpression));\r\n        const cast = combi_1.seq(combi_1.altPrio(_1.Cast, _1.NewObject), _1.Arrow, _1.FieldAll);\r\n        const clas = combi_1.seq(_1.ClassName, combi_1.tok(tokens_1.StaticArrow), attribute_name_1.AttributeName);\r\n        const start = combi_1.altPrio(cast, clas, _1.TargetField, _1.TargetFieldSymbol);\r\n        const fields = combi_1.seq(combi_1.optPrio(_1.FieldOffset), combi_1.optPrio(_1.FieldLength));\r\n        const optional = combi_1.altPrio(_1.TableBody, fields, dereference_1.Dereference);\r\n        return combi_1.altPrio(_1.InlineData, _1.InlineFS, combi_1.seq(start, something, optional));\r\n    }\r\n}\r\nexports.Target = Target;\r\n//# sourceMappingURL=target.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TargetField = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TargetField extends combi_1.Expression {\r\n    getRunnable() {\r\n        return new _1.Field();\r\n    }\r\n}\r\nexports.TargetField = TargetField;\r\n//# sourceMappingURL=target_field.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field_symbol.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field_symbol.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TargetFieldSymbol = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TargetFieldSymbol extends combi_1.Expression {\r\n    getRunnable() {\r\n        return new _1.FieldSymbol();\r\n    }\r\n}\r\nexports.TargetFieldSymbol = TargetFieldSymbol;\r\n//# sourceMappingURL=target_field_symbol.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target_field_symbol.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TextElement = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TextElement extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(\"TEXT\", combi_1.tok(tokens_1.Dash), _1.TextElementKey);\r\n    }\r\n}\r\nexports.TextElement = TextElement;\r\n//# sourceMappingURL=text_element.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_key.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_key.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TextElementKey = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass TextElementKey extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.regex(/^\\w{3}$/);\r\n    }\r\n}\r\nexports.TextElementKey = TextElementKey;\r\n//# sourceMappingURL=text_element_key.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_key.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_string.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_string.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TextElementString = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TextElementString extends combi_1.Expression {\r\n    getRunnable() {\r\n        const text = combi_1.seq(combi_1.tok(tokens_1.ParenLeft), _1.TextElementKey, combi_1.tok(tokens_1.ParenRightW));\r\n        const stri = combi_1.seq(combi_1.regex(/^('.*')|(`.*`)$/), text);\r\n        return stri;\r\n    }\r\n}\r\nexports.TextElementString = TextElementString;\r\n//# sourceMappingURL=text_element_string.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/text_element_string.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/throw.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/throw.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Throw = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass Throw extends combi_1.Expression {\r\n    getRunnable() {\r\n        // todo, MESSAGE\r\n        return combi_1.seq(\"THROW\", combi_1.opt(\"RESUMABLE\"), _1.ClassName, combi_1.tok(tokens_1.ParenLeftW), combi_1.opt(combi_1.alt(_1.Source, _1.ParameterListS)), combi_1.tok(tokens_1.WParenRightW));\r\n    }\r\n}\r\nexports.Throw = Throw;\r\n//# sourceMappingURL=throw.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/throw.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Type = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Type extends combi_1.Expression {\r\n    getRunnable() {\r\n        const typeType = combi_1.seq(_1.TypeName, combi_1.optPrio(_1.Default));\r\n        const like = combi_1.altPrio(combi_1.seq(\"LINE OF\", _1.FieldChain), combi_1.seq(\"REF TO\", _1.FieldChain), _1.FieldChain);\r\n        const type = combi_1.altPrio(combi_1.seq(\"LINE OF\", typeType), combi_1.seq(\"REF TO\", typeType), typeType);\r\n        const ret = combi_1.altPrio(combi_1.seq(\"LIKE\", like), combi_1.seq(\"TYPE\", type));\r\n        return ret;\r\n    }\r\n}\r\nexports.Type = Type;\r\n//# sourceMappingURL=type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeName = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\n// todo, can this be replaced with one of the FieldChain expressions?\r\nclass TypeName extends combi_1.Expression {\r\n    getRunnable() {\r\n        const name = combi_1.regex(/^[\\w~\\/%$]+$/);\r\n        const cla = combi_1.seq(name, combi_1.alt(combi_1.tok(tokens_1.StaticArrow), combi_1.tok(tokens_1.InstanceArrow)));\r\n        const field = combi_1.seq(combi_1.tok(tokens_1.Dash), name);\r\n        return combi_1.seq(combi_1.opt(cla), name, combi_1.starPrio(field));\r\n    }\r\n}\r\nexports.TypeName = TypeName;\r\n//# sourceMappingURL=type_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name_or_infer.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name_or_infer.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeNameOrInfer = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TypeNameOrInfer extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.altPrio(\"#\", _1.TypeName);\r\n    }\r\n}\r\nexports.TypeNameOrInfer = TypeNameOrInfer;\r\n//# sourceMappingURL=type_name_or_infer.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_name_or_infer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_param.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_param.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeParam = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TypeParam extends combi_1.Expression {\r\n    getRunnable() {\r\n        const table = combi_1.seq(combi_1.altPrio(\"STANDARD\", \"HASHED\", \"INDEX\", \"SORTED\", \"ANY\"), \"TABLE\");\r\n        const foo = combi_1.seq(combi_1.optPrio(combi_1.seq(table, \"OF\")), combi_1.optPrio(\"REF TO\"));\r\n        const typeLine = \"LINE OF\";\r\n        const ret = combi_1.seq(combi_1.alt(foo, typeLine), _1.TypeNameOrInfer, combi_1.opt(_1.Default));\r\n        const like = combi_1.seq(\"LIKE\", combi_1.opt(\"LINE OF\"), _1.FieldChain, combi_1.optPrio(_1.Default));\r\n        return combi_1.alt(combi_1.seq(\"TYPE\", combi_1.alt(table, ret)), like);\r\n    }\r\n}\r\nexports.TypeParam = TypeParam;\r\n//# sourceMappingURL=type_param.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_param.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_table.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_table.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeTable = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js\");\r\nclass TypeTable extends combi_1.Expression {\r\n    getRunnable() {\r\n        const header = \"WITH HEADER LINE\";\r\n        const initial = combi_1.seq(\"INITIAL SIZE\", _1.Constant);\r\n        const uniqueness = combi_1.alt(\"NON-UNIQUE\", \"UNIQUE\");\r\n        const defaultKey = \"DEFAULT KEY\";\r\n        const emptyKey = combi_1.ver(version_1.Version.v740sp02, \"EMPTY KEY\");\r\n        const key = combi_1.seq(\"WITH\", combi_1.opt(uniqueness), combi_1.altPrio(defaultKey, emptyKey, combi_1.seq(combi_1.opt(combi_1.alt(\"SORTED\", \"HASHED\")), \"KEY\", combi_1.alt(combi_1.seq(_1.Field, \"COMPONENTS\", combi_1.plus(_1.FieldSub)), combi_1.plus(_1.FieldSub)))));\r\n        const normal1 = combi_1.seq(combi_1.opt(combi_1.alt(\"STANDARD\", \"HASHED\", \"INDEX\", \"SORTED\", \"ANY\")), \"TABLE\", combi_1.opt(\"OF\"), combi_1.opt(\"REF TO\"), combi_1.opt(_1.TypeName));\r\n        const likeType = combi_1.seq(combi_1.opt(combi_1.alt(\"STANDARD\", \"HASHED\", \"INDEX\", \"SORTED\", \"ANY\")), \"TABLE OF\", combi_1.optPrio(\"REF TO\"), combi_1.opt(field_chain_1.FieldChain), combi_1.opt(combi_1.per(key, header)));\r\n        const rangeType = combi_1.seq(\"RANGE OF\", _1.TypeName, combi_1.opt(header), combi_1.opt(initial));\r\n        const rangeLike = combi_1.seq(\"RANGE OF\", _1.FieldSub, combi_1.opt(header), combi_1.opt(initial));\r\n        const typetable = combi_1.seq(normal1, combi_1.opt(combi_1.per(header, initial, combi_1.plusPrio(key))));\r\n        const occurs = combi_1.seq(\"OCCURS\", _1.Integer);\r\n        const oldType = combi_1.seq(combi_1.opt(\"REF TO\"), _1.TypeName, combi_1.alt(combi_1.seq(occurs, combi_1.opt(header)), header));\r\n        const oldLike = combi_1.seq(combi_1.opt(\"REF TO\"), field_chain_1.FieldChain, combi_1.alt(combi_1.seq(occurs, combi_1.opt(header)), header));\r\n        const ret = combi_1.altPrio(combi_1.seq(occurs, combi_1.opt(header)), combi_1.seq(\"LIKE\", combi_1.alt(oldLike, likeType, rangeLike)), combi_1.seq(\"TYPE\", combi_1.alt(oldType, typetable, rangeType)));\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeTable = TypeTable;\r\n//# sourceMappingURL=type_table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/type_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Value = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Value extends combi_1.Expression {\r\n    getRunnable() {\r\n        const ret = combi_1.seq(\"VALUE\", combi_1.alt(_1.Constant, _1.SimpleFieldChain, \"IS INITIAL\"));\r\n        return ret;\r\n    }\r\n}\r\nexports.Value = Value;\r\n//# sourceMappingURL=value.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value_body.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value_body.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ValueBody = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ValueBody extends combi_1.Expression {\r\n    getRunnable() {\r\n        const base = combi_1.seq(\"BASE\", _1.Source);\r\n        // missing spaces caught by rule \"parser_missing_space\"\r\n        const foo = combi_1.seq(combi_1.altPrio(combi_1.tok(tokens_1.WParenLeftW), combi_1.tok(tokens_1.WParenLeft)), combi_1.optPrio(combi_1.altPrio(combi_1.plusPrio(_1.FieldAssignment), combi_1.seq(combi_1.optPrio(\"LINES OF\"), _1.Source))), combi_1.altPrio(combi_1.tok(tokens_1.WParenRightW), combi_1.tok(tokens_1.ParenRightW)));\r\n        const strucOrTab = combi_1.seq(combi_1.optPrio(_1.Let), combi_1.optPrio(base), combi_1.optPrio(_1.For), combi_1.plusPrio(combi_1.altPrio(_1.FieldAssignment, foo)));\r\n        const tabdef = combi_1.ver(version_1.Version.v740sp08, combi_1.altPrio(\"OPTIONAL\", combi_1.seq(\"DEFAULT\", _1.Source)));\r\n        return combi_1.optPrio(combi_1.altPrio(strucOrTab, combi_1.seq(_1.Source, combi_1.optPrio(tabdef))));\r\n    }\r\n}\r\nexports.ValueBody = ValueBody;\r\n//# sourceMappingURL=value_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/value_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/with_name.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/with_name.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WithName = void 0;\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass WithName extends combi_1.Expression {\r\n    getRunnable() {\r\n        return combi_1.seq(combi_1.tok(tokens_1.WPlus), combi_1.regex(/^\\w+$/));\r\n    }\r\n}\r\nexports.WithName = WithName;\r\n//# sourceMappingURL=with_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/with_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/write_offset_length.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/write_offset_length.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WriteOffsetLength = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/field_chain.js\");\r\nclass WriteOffsetLength extends combi_1.Expression {\r\n    getRunnable() {\r\n        const post = combi_1.seq(combi_1.alt(field_chain_1.FieldChain, combi_1.regex(/^[\\d]+$/), combi_1.regex(/^\\*$/)), combi_1.alt(combi_1.tok(tokens_1.ParenRightW), combi_1.tok(tokens_1.ParenRight)));\r\n        const wlength = combi_1.seq(combi_1.tok(tokens_1.WParenLeft), post);\r\n        const length = combi_1.seq(combi_1.tok(tokens_1.ParenLeft), post);\r\n        const complex = combi_1.alt(wlength, combi_1.seq(combi_1.alt(field_chain_1.FieldChain, combi_1.regex(/^\\/?[\\w\\d]+$/), \"/\"), combi_1.opt(length)));\r\n        const at = combi_1.seq(combi_1.opt(\"AT\"), complex);\r\n        return at;\r\n    }\r\n}\r\nexports.WriteOffsetLength = WriteOffsetLength;\r\n//# sourceMappingURL=write_offset_length.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/write_offset_length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/result.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/result.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Result = void 0;\r\nclass Result {\r\n    constructor(tokens, tokenIndex, nodes) {\r\n        // tokens: all tokens, from the tokenIndex = not yet matched\r\n        // nodes: matched tokens\r\n        this.tokens = tokens;\r\n        this.tokenIndex = tokenIndex;\r\n        this.nodes = nodes;\r\n        if (this.nodes === undefined) {\r\n            this.nodes = [];\r\n        }\r\n    }\r\n    peek() {\r\n        return this.tokens[this.tokenIndex];\r\n    }\r\n    shift(node) {\r\n        const cp = this.nodes.slice();\r\n        cp.push(node);\r\n        return new Result(this.tokens, this.tokenIndex + 1, cp);\r\n    }\r\n    popNode() {\r\n        return this.nodes.pop();\r\n    }\r\n    getNodes() {\r\n        return this.nodes;\r\n    }\r\n    setNodes(n) {\r\n        this.nodes = n;\r\n    }\r\n    remainingLength() {\r\n        return this.tokens.length - this.tokenIndex;\r\n    }\r\n}\r\nexports.Result = Result;\r\n//# sourceMappingURL=result.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/result.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statement_parser.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statement_parser.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StatementParser = exports.STATEMENT_MAX_TOKENS = void 0;\r\nconst Statements = __webpack_require__(/*! ./statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ./expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Tokens = __webpack_require__(/*! ../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst artifacts_1 = __webpack_require__(/*! ../artifacts */ \"./node_modules/@abaplint/core/build/src/abap/artifacts.js\");\r\nconst combi_1 = __webpack_require__(/*! ./combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst _statement_1 = __webpack_require__(/*! ./statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst expand_macros_1 = __webpack_require__(/*! ./expand_macros */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expand_macros.js\");\r\nexports.STATEMENT_MAX_TOKENS = 1000;\r\nclass StatementMap {\r\n    constructor() {\r\n        this.map = {};\r\n        for (const stat of artifacts_1.Artifacts.getStatements()) {\r\n            const f = stat.getMatcher().first();\r\n            if (f.length === 0) {\r\n                throw new Error(\"StatementMap, first must have contents\");\r\n            }\r\n            for (const first of f) {\r\n                if (this.map[first]) {\r\n                    this.map[first].push(stat);\r\n                }\r\n                else {\r\n                    this.map[first] = [stat];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    lookup(str) {\r\n        const res = this.map[str.toUpperCase()];\r\n        if (res === undefined) {\r\n            return [];\r\n        }\r\n        return res;\r\n    }\r\n}\r\nclass WorkArea {\r\n    constructor(file, tokens) {\r\n        this.file = file;\r\n        this.tokens = tokens;\r\n        this.statements = [];\r\n    }\r\n    addUnknown(pre, post, colon) {\r\n        const st = new nodes_1.StatementNode(new _statement_1.Unknown(), colon);\r\n        st.setChildren(this.tokensToNodes(pre, post));\r\n        this.statements.push(st);\r\n    }\r\n    toResult() {\r\n        return { file: this.file, tokens: this.tokens, statements: this.statements };\r\n    }\r\n    tokensToNodes(tokens1, tokens2) {\r\n        const ret = [];\r\n        for (const t of tokens1) {\r\n            ret.push(new nodes_1.TokenNode(t));\r\n        }\r\n        for (const t of tokens2) {\r\n            ret.push(new nodes_1.TokenNode(t));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nclass StatementParser {\r\n    constructor(version) {\r\n        if (!StatementParser.map) {\r\n            StatementParser.map = new StatementMap();\r\n        }\r\n        this.version = version;\r\n    }\r\n    /** input is one full object */\r\n    run(input, globalMacros) {\r\n        const macros = new expand_macros_1.ExpandMacros(globalMacros, this.version);\r\n        const wa = input.map(i => new WorkArea(i.file, i.tokens));\r\n        for (const w of wa) {\r\n            this.process(w);\r\n            this.categorize(w);\r\n            macros.find(w.statements);\r\n        }\r\n        for (const w of wa) {\r\n            const res = macros.handleMacros(w.statements);\r\n            w.statements = res.statements;\r\n            if (res.containsUnknown === true) {\r\n                this.lazyUnknown(w);\r\n            }\r\n            this.nativeSQL(w);\r\n        }\r\n        return wa.map(w => w.toResult());\r\n    }\r\n    // todo, refactor, remove method here and only have in WorkArea class\r\n    tokensToNodes(tokens) {\r\n        const ret = [];\r\n        for (const t of tokens) {\r\n            ret.push(new nodes_1.TokenNode(t));\r\n        }\r\n        return ret;\r\n    }\r\n    // tries to split Unknown statements by newlines, when adding/writing a new statement\r\n    // in an editor, adding the statement terminator is typically the last thing to do\r\n    // note: this will not work if the second statement is a macro call, guess this is okay\r\n    lazyUnknown(wa) {\r\n        const result = [];\r\n        for (let statement of wa.statements) {\r\n            if (statement.get() instanceof _statement_1.Unknown) {\r\n                for (const { first, second } of this.buildSplits(statement.getTokens())) {\r\n                    const s = this.categorizeStatement(new nodes_1.StatementNode(new _statement_1.Unknown()).setChildren(this.tokensToNodes(second)));\r\n                    if (!(s.get() instanceof _statement_1.Unknown)) {\r\n                        result.push(new nodes_1.StatementNode(new _statement_1.Unknown()).setChildren(this.tokensToNodes(first)));\r\n                        statement = s;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            result.push(statement);\r\n        }\r\n        wa.statements = result;\r\n    }\r\n    buildSplits(tokens) {\r\n        const res = [];\r\n        const before = [];\r\n        let prevRow = tokens[0].getRow();\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            if (tokens[i].getRow() !== prevRow) {\r\n                res.push({ first: [...before], second: [...tokens].splice(i) });\r\n            }\r\n            prevRow = tokens[i].getRow();\r\n            before.push(tokens[i]);\r\n        }\r\n        return res;\r\n    }\r\n    nativeSQL(wa) {\r\n        let sql = false;\r\n        for (let i = 0; i < wa.statements.length; i++) {\r\n            const statement = wa.statements[i];\r\n            const type = statement.get();\r\n            if (type instanceof Statements.ExecSQL\r\n                || (type instanceof Statements.MethodImplementation && statement.findDirectExpression(Expressions.Language))) {\r\n                sql = true;\r\n            }\r\n            else if (sql === true) {\r\n                if (type instanceof Statements.EndExec\r\n                    || type instanceof Statements.EndMethod) {\r\n                    sql = false;\r\n                }\r\n                else if (!(type instanceof _statement_1.Comment)) {\r\n                    wa.statements[i] = new nodes_1.StatementNode(new _statement_1.NativeSQL()).setChildren(this.tokensToNodes(statement.getTokens()));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // for each statement, run statement matchers to figure out which kind of statement it is\r\n    categorize(wa) {\r\n        const result = [];\r\n        for (const statement of wa.statements) {\r\n            result.push(this.categorizeStatement(statement));\r\n        }\r\n        wa.statements = result;\r\n    }\r\n    categorizeStatement(input) {\r\n        let statement = input;\r\n        const length = input.getChildren().length;\r\n        const isPunctuation = input.getLastToken() instanceof Tokens.Punctuation;\r\n        if (length === 1 && isPunctuation) {\r\n            const tokens = statement.getTokens();\r\n            statement = new nodes_1.StatementNode(new _statement_1.Empty()).setChildren(this.tokensToNodes(tokens));\r\n            // if the statement contains more than STATEMENT_MAX_TOKENS tokens, just give up\r\n        }\r\n        else if (length > exports.STATEMENT_MAX_TOKENS && statement.get() instanceof _statement_1.Unknown) {\r\n            statement = input;\r\n        }\r\n        else if (statement.get() instanceof _statement_1.Unknown && isPunctuation) {\r\n            statement = this.match(statement);\r\n        }\r\n        return statement;\r\n    }\r\n    removePragma(tokens) {\r\n        const result = [];\r\n        const pragmas = [];\r\n        // skip the last token as it is the punctuation\r\n        for (let i = 0; i < tokens.length - 1; i++) {\r\n            const t = tokens[i];\r\n            if (t instanceof Tokens.Pragma) {\r\n                pragmas.push(t);\r\n            }\r\n            else {\r\n                result.push(t);\r\n            }\r\n        }\r\n        return { tokens: result, pragmas: pragmas };\r\n    }\r\n    match(statement) {\r\n        const tokens = statement.getTokens();\r\n        const { tokens: filtered, pragmas } = this.removePragma(tokens);\r\n        if (filtered.length === 0) {\r\n            return new nodes_1.StatementNode(new _statement_1.Empty()).setChildren(this.tokensToNodes(tokens));\r\n        }\r\n        for (const st of StatementParser.map.lookup(filtered[0].getStr())) {\r\n            const match = combi_1.Combi.run(st.getMatcher(), filtered, this.version);\r\n            if (match) {\r\n                const last = tokens[tokens.length - 1];\r\n                match.push(new nodes_1.TokenNode(last));\r\n                return new nodes_1.StatementNode(st, statement.getColon(), pragmas).setChildren(match);\r\n            }\r\n        }\r\n        // next try the statements without specific keywords\r\n        for (const st of StatementParser.map.lookup(\"\")) {\r\n            const match = combi_1.Combi.run(st.getMatcher(), filtered, this.version);\r\n            if (match) {\r\n                const last = tokens[tokens.length - 1];\r\n                match.push(new nodes_1.TokenNode(last));\r\n                return new nodes_1.StatementNode(st, statement.getColon(), pragmas).setChildren(match);\r\n            }\r\n        }\r\n        return statement;\r\n    }\r\n    // takes care of splitting tokens into statements, also handles chained statements\r\n    // statements are split by \",\" or \".\"\r\n    // additional colons/chaining after the first colon are ignored\r\n    process(wa) {\r\n        let add = [];\r\n        let pre = [];\r\n        let colon = undefined;\r\n        for (const token of wa.tokens) {\r\n            if (token instanceof Tokens.Comment) {\r\n                wa.statements.push(new nodes_1.StatementNode(new _statement_1.Comment()).setChildren(this.tokensToNodes([token])));\r\n                continue;\r\n            }\r\n            add.push(token);\r\n            const str = token.getStr();\r\n            if (str === \".\") {\r\n                wa.addUnknown(pre, add, colon);\r\n                add = [];\r\n                pre = [];\r\n                colon = undefined;\r\n            }\r\n            else if (str === \",\" && pre.length > 0) {\r\n                wa.addUnknown(pre, add, colon);\r\n                add = [];\r\n            }\r\n            else if (str === \":\" && colon === undefined) {\r\n                colon = token;\r\n                add.pop(); // do not add colon token to statement\r\n                pre.push(...add);\r\n                add = [];\r\n            }\r\n            else if (str === \":\") {\r\n                add.pop(); // do not add colon token to statement\r\n            }\r\n        }\r\n        if (add.length > 0) {\r\n            wa.addUnknown(pre, add, colon);\r\n        }\r\n    }\r\n}\r\nexports.StatementParser = StatementParser;\r\n//# sourceMappingURL=statement_parser.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statement_parser.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NativeSQL = exports.MacroContent = exports.MacroCall = exports.Empty = exports.Comment = exports.Unknown = void 0;\r\nclass Unknown {\r\n    getMatcher() {\r\n        throw new Error(\"Unknown Statement, get_matcher\");\r\n    }\r\n}\r\nexports.Unknown = Unknown;\r\nclass Comment {\r\n    getMatcher() {\r\n        throw new Error(\"Comment Statement, get_matcher\");\r\n    }\r\n}\r\nexports.Comment = Comment;\r\nclass Empty {\r\n    getMatcher() {\r\n        throw new Error(\"Empty Statement, get_matcher\");\r\n    }\r\n}\r\nexports.Empty = Empty;\r\nclass MacroCall {\r\n    getMatcher() {\r\n        throw new Error(\"MacroCall Statement, get_matcher\");\r\n    }\r\n}\r\nexports.MacroCall = MacroCall;\r\nclass MacroContent {\r\n    getMatcher() {\r\n        throw new Error(\"MacroContent Statement, get_matcher\");\r\n    }\r\n}\r\nexports.MacroContent = MacroContent;\r\nclass NativeSQL {\r\n    getMatcher() {\r\n        throw new Error(\"NativeSQL Statement, get_matcher\");\r\n    }\r\n}\r\nexports.NativeSQL = NativeSQL;\r\n//# sourceMappingURL=_statement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Add = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Add {\r\n    getMatcher() {\r\n        const to = combi_1.seq(\"TO\", expressions_1.Target);\r\n        const then = combi_1.seq(\"THEN\", expressions_1.FieldSub, \"UNTIL\", expressions_1.FieldSub, \"GIVING\", expressions_1.FieldSub);\r\n        const ret = combi_1.seq(\"ADD\", expressions_1.Source, combi_1.altPrio(to, then));\r\n        return ret;\r\n    }\r\n}\r\nexports.Add = Add;\r\n//# sourceMappingURL=add.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add_corresponding.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add_corresponding.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AddCorresponding = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass AddCorresponding {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"ADD-CORRESPONDING\", expressions_1.Source, \"TO\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.AddCorresponding = AddCorresponding;\r\n//# sourceMappingURL=add_corresponding.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add_corresponding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/aliases.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/aliases.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Aliases = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Aliases {\r\n    getMatcher() {\r\n        return combi_1.seq(\"ALIASES\", expressions_1.SimpleName, \"FOR\", expressions_1.Field);\r\n    }\r\n}\r\nexports.Aliases = Aliases;\r\n//# sourceMappingURL=aliases.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/aliases.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/append.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/append.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Append = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Append {\r\n    getMatcher() {\r\n        const assigning = combi_1.seq(\"ASSIGNING\", expressions_1.FSTarget);\r\n        const reference = combi_1.seq(\"REFERENCE INTO\", expressions_1.Target);\r\n        const sorted = combi_1.seq(\"SORTED BY\", expressions_1.Field);\r\n        const range = combi_1.seq(combi_1.optPrio(combi_1.seq(\"FROM\", expressions_1.Source)), combi_1.optPrio(combi_1.seq(\"TO\", expressions_1.Source)));\r\n        const src = combi_1.alt(expressions_1.SimpleSource4, combi_1.ver(version_1.Version.v740sp02, expressions_1.Source));\r\n        return combi_1.seq(\"APPEND\", combi_1.altPrio(\"INITIAL LINE\", combi_1.seq(combi_1.optPrio(\"LINES OF\"), src)), combi_1.opt(range), combi_1.optPrio(combi_1.seq(\"TO\", expressions_1.Target)), combi_1.opt(combi_1.altPrio(assigning, reference)), combi_1.optPrio(\"CASTING\"), combi_1.optPrio(sorted));\r\n    }\r\n}\r\nexports.Append = Append;\r\n//# sourceMappingURL=append.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/append.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assert.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assert.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Assert = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Assert {\r\n    getMatcher() {\r\n        const fields = combi_1.seq(\"FIELDS\", combi_1.plus(expressions_1.Source));\r\n        const subkey = combi_1.seq(\"SUBKEY\", expressions_1.Source);\r\n        const id = combi_1.seq(\"ID\", expressions_1.NamespaceSimpleName);\r\n        return combi_1.seq(\"ASSERT\", combi_1.optPrio(id), combi_1.optPrio(subkey), combi_1.opt(fields), combi_1.optPrio(\"CONDITION\"), expressions_1.Cond);\r\n    }\r\n}\r\nexports.Assert = Assert;\r\n//# sourceMappingURL=assert.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assert.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Assign = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Assign {\r\n    getMatcher() {\r\n        const component = combi_1.seq(\"COMPONENT\", expressions_1.Source, \"OF STRUCTURE\", expressions_1.Source);\r\n        const tableField = combi_1.seq(\"TABLE FIELD\", combi_1.alt(expressions_1.Source, expressions_1.Dynamic));\r\n        const arrow = combi_1.alt(combi_1.tok(tokens_1.InstanceArrow), combi_1.tok(tokens_1.StaticArrow));\r\n        const source = combi_1.alt(combi_1.seq(expressions_1.Source, combi_1.opt(combi_1.seq(arrow, expressions_1.Dynamic))), component, tableField, combi_1.seq(expressions_1.Dynamic, combi_1.opt(combi_1.seq(arrow, combi_1.alt(expressions_1.Field, expressions_1.Dynamic)))));\r\n        const type = combi_1.seq(\"TYPE\", combi_1.alt(expressions_1.Dynamic, expressions_1.Source));\r\n        const like = combi_1.seq(\"LIKE\", combi_1.alt(expressions_1.Dynamic, expressions_1.Source));\r\n        const handle = combi_1.seq(\"TYPE HANDLE\", expressions_1.Source);\r\n        const range = combi_1.seq(\"RANGE\", expressions_1.Source);\r\n        const decimals = combi_1.seq(\"DECIMALS\", expressions_1.Source);\r\n        const casting = combi_1.seq(combi_1.opt(\"CASTING\"), combi_1.opt(combi_1.alt(like, handle, combi_1.per(type, decimals))));\r\n        const ret = combi_1.seq(\"ASSIGN\", combi_1.opt(combi_1.seq(expressions_1.Target, \"INCREMENT\")), source, \"TO\", expressions_1.FSTarget, casting, combi_1.opt(range));\r\n        return ret;\r\n    }\r\n}\r\nexports.Assign = Assign;\r\n//# sourceMappingURL=assign.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign_local_copy.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign_local_copy.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AssignLocalCopy = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass AssignLocalCopy {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"ASSIGN LOCAL COPY OF\", combi_1.opt(combi_1.seq(\"INITIAL\", combi_1.opt(\"LINE OF\"))), combi_1.alt(expressions_1.Source, expressions_1.Dynamic), \"TO\", expressions_1.TargetFieldSymbol);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.AssignLocalCopy = AssignLocalCopy;\r\n//# sourceMappingURL=assign_local_copy.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign_local_copy.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.At = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass At {\r\n    getMatcher() {\r\n        const field = combi_1.alt(combi_1.seq(expressions_1.FieldSub, combi_1.opt(expressions_1.FieldOffset), combi_1.opt(expressions_1.FieldLength)), expressions_1.Dynamic, expressions_1.SourceFieldSymbol);\r\n        const atNew = combi_1.seq(\"NEW\", field);\r\n        const atEnd = combi_1.seq(\"END OF\", field);\r\n        const group = combi_1.regex(/^\\w+$/);\r\n        const ret = combi_1.seq(\"AT\", combi_1.altPrio(\"FIRST\", \"LAST\", atNew, atEnd, group));\r\n        return ret;\r\n    }\r\n}\r\nexports.At = At;\r\n//# sourceMappingURL=at.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_line_selection.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_line_selection.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AtLineSelection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass AtLineSelection {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"AT LINE-SELECTION\");\r\n    }\r\n}\r\nexports.AtLineSelection = AtLineSelection;\r\n//# sourceMappingURL=at_line_selection.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_line_selection.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_selection_screen.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_selection_screen.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AtSelectionScreen = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass AtSelectionScreen {\r\n    getMatcher() {\r\n        const output = \"OUTPUT\";\r\n        const value = combi_1.seq(\"ON VALUE-REQUEST FOR\", expressions_1.FieldSub);\r\n        const exit = \"ON EXIT-COMMAND\";\r\n        const field = combi_1.seq(\"ON\", expressions_1.FieldSub);\r\n        const end = combi_1.seq(\"ON END OF\", expressions_1.Field);\r\n        const radio = combi_1.seq(\"ON RADIOBUTTON GROUP\", expressions_1.Field);\r\n        const block = combi_1.seq(\"ON BLOCK\", combi_1.regex(/^\\w+$/));\r\n        const help = combi_1.seq(\"ON HELP-REQUEST FOR\", expressions_1.FieldSub);\r\n        const ret = combi_1.seq(\"AT SELECTION-SCREEN\", combi_1.opt(combi_1.alt(output, value, radio, exit, field, end, help, block)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.AtSelectionScreen = AtSelectionScreen;\r\n//# sourceMappingURL=at_selection_screen.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_selection_screen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_user_command.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_user_command.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AtUserCommand = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass AtUserCommand {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"AT USER-COMMAND\");\r\n    }\r\n}\r\nexports.AtUserCommand = AtUserCommand;\r\n//# sourceMappingURL=at_user_command.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_user_command.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/authority_check.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/authority_check.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthorityCheck = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass AuthorityCheck {\r\n    getMatcher() {\r\n        const field = combi_1.seq(\"FIELD\", expressions_1.Source);\r\n        const id = combi_1.seq(\"ID\", expressions_1.Source, combi_1.alt(field, \"DUMMY\"));\r\n        const ret = combi_1.seq(\"AUTHORITY-CHECK OBJECT\", expressions_1.Source, combi_1.opt(combi_1.seq(\"FOR USER\", expressions_1.Source)), combi_1.plus(id));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.AuthorityCheck = AuthorityCheck;\r\n//# sourceMappingURL=authority_check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/authority_check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/back.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/back.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Back = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Back {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"BACK\");\r\n    }\r\n}\r\nexports.Back = Back;\r\n//# sourceMappingURL=back.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/back.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Break = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Break {\r\n    getMatcher() {\r\n        const next = combi_1.str(\"AT NEXT APPLICATION STATEMENT\");\r\n        const ret = combi_1.alt(combi_1.seq(\"BREAK-POINT\", combi_1.opt(combi_1.alt(next, expressions_1.Source))), combi_1.seq(\"BREAK\", expressions_1.FieldSub));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Break = Break;\r\n//# sourceMappingURL=break.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break_id.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break_id.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BreakId = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass BreakId {\r\n    getMatcher() {\r\n        const id = combi_1.seq(\"ID\", expressions_1.Field);\r\n        const ret = combi_1.seq(\"BREAK-POINT\", id);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.BreakId = BreakId;\r\n//# sourceMappingURL=break_id.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break_id.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Call = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\n// method call\r\nclass Call {\r\n    getMatcher() {\r\n        const call = combi_1.seq(\"CALL METHOD\", expressions_1.MethodSource, expressions_1.MethodCallBody);\r\n        return combi_1.altPrio(call, expressions_1.MethodCallChain);\r\n    }\r\n}\r\nexports.Call = Call;\r\n//# sourceMappingURL=call.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_badi.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_badi.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallBadi = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallBadi {\r\n    getMatcher() {\r\n        const call = combi_1.seq(\"CALL\", \"BADI\", expressions_1.MethodSource, expressions_1.MethodCallBody);\r\n        return combi_1.verNot(version_1.Version.Cloud, call);\r\n    }\r\n}\r\nexports.CallBadi = CallBadi;\r\n//# sourceMappingURL=call_badi.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_badi.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_database.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_database.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallDatabase = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallDatabase {\r\n    getMatcher() {\r\n        const exporting = combi_1.seq(\"EXPORTING\", expressions_1.ParameterListS);\r\n        const importing = combi_1.seq(\"IMPORTING\", expressions_1.ParameterListT);\r\n        const expl = combi_1.seq(combi_1.opt(exporting), combi_1.opt(importing));\r\n        const tab = combi_1.seq(\"PARAMETER-TABLE\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"CALL DATABASE PROCEDURE\", expressions_1.Dynamic, combi_1.opt(expressions_1.DatabaseConnection), combi_1.alt(expl, tab));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CallDatabase = CallDatabase;\r\n//# sourceMappingURL=call_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_dialog.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_dialog.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallDialog = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallDialog {\r\n    getMatcher() {\r\n        const from = combi_1.seq(expressions_1.FieldSub, combi_1.optPrio(combi_1.seq(\"FROM\", expressions_1.Source)));\r\n        const exporting = combi_1.seq(\"EXPORTING\", combi_1.plus(from));\r\n        const to = combi_1.seq(expressions_1.Field, combi_1.optPrio(combi_1.seq(\"TO\", expressions_1.Field)));\r\n        const importing = combi_1.seq(\"IMPORTING\", combi_1.plus(to));\r\n        const ret = combi_1.seq(\"CALL DIALOG\", expressions_1.Constant, combi_1.opt(exporting), combi_1.opt(importing));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CallDialog = CallDialog;\r\n//# sourceMappingURL=call_dialog.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_dialog.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_function.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_function.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallFunction = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallFunction {\r\n    getMatcher() {\r\n        const starting = combi_1.seq(\"STARTING NEW TASK\", expressions_1.SimpleSource2);\r\n        const update = combi_1.str(\"IN UPDATE TASK\");\r\n        const unit = combi_1.seq(\"UNIT\", expressions_1.Source);\r\n        const background = combi_1.seq(\"IN BACKGROUND\", combi_1.alt(\"TASK\", unit));\r\n        const calling = combi_1.seq(\"CALLING\", expressions_1.MethodName, \"ON END OF TASK\");\r\n        const performing = combi_1.seq(\"PERFORMING\", expressions_1.FormName, \"ON END OF TASK\");\r\n        const separate = combi_1.str(\"AS SEPARATE UNIT\");\r\n        const keeping = combi_1.str(\"KEEPING LOGICAL UNIT OF WORK\");\r\n        const options = combi_1.per(starting, update, background, expressions_1.Destination, calling, performing, separate, keeping);\r\n        const dynamic = combi_1.seq(\"PARAMETER-TABLE\", expressions_1.Source, combi_1.opt(combi_1.seq(\"EXCEPTION-TABLE\", expressions_1.Source)));\r\n        const call = combi_1.seq(\"CALL\", combi_1.alt(\"FUNCTION\", combi_1.verNot(version_1.Version.Cloud, \"CUSTOMER-FUNCTION\")), expressions_1.FunctionName, combi_1.opt(options), combi_1.alt(expressions_1.FunctionParameters, dynamic));\r\n        return call;\r\n    }\r\n}\r\nexports.CallFunction = CallFunction;\r\n//# sourceMappingURL=call_function.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_function.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_kernel.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_kernel.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallKernel = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallKernel {\r\n    getMatcher() {\r\n        const field = combi_1.seq(\"ID\", expressions_1.Source, \"FIELD\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"CALL\", combi_1.altPrio(expressions_1.Constant, expressions_1.Field), combi_1.starPrio(field));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CallKernel = CallKernel;\r\n//# sourceMappingURL=call_kernel.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_kernel.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_ole.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_ole.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallOLE = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallOLE {\r\n    getMatcher() {\r\n        const rc = combi_1.seq(\"=\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"CALL METHOD OF\", expressions_1.Source, expressions_1.Source, combi_1.opt(rc), combi_1.opt(\"NO FLUSH\"), combi_1.opt(\"QUEUEONLY\"), combi_1.opt(expressions_1.OLEExporting));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CallOLE = CallOLE;\r\n//# sourceMappingURL=call_ole.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_ole.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_screen.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_screen.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallScreen = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallScreen {\r\n    getMatcher() {\r\n        const starting = combi_1.seq(\"STARTING AT\", expressions_1.Source, expressions_1.Source);\r\n        const ending = combi_1.seq(\"ENDING AT\", expressions_1.Source, expressions_1.Source);\r\n        const ret = combi_1.seq(\"CALL SCREEN\", expressions_1.Source, combi_1.optPrio(combi_1.seq(starting, combi_1.optPrio(ending))));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CallScreen = CallScreen;\r\n//# sourceMappingURL=call_screen.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_screen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_selection_screen.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_selection_screen.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallSelectionScreen = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallSelectionScreen {\r\n    getMatcher() {\r\n        const ending = combi_1.seq(\"ENDING AT\", expressions_1.Source, expressions_1.Source);\r\n        const starting = combi_1.seq(\"STARTING AT\", expressions_1.Source, expressions_1.Source);\r\n        const using = combi_1.seq(\"USING SELECTION-SET\", expressions_1.Source);\r\n        const at = combi_1.seq(starting, combi_1.opt(ending));\r\n        const ret = combi_1.seq(\"CALL SELECTION-SCREEN\", expressions_1.Source, combi_1.opt(at), combi_1.opt(using));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CallSelectionScreen = CallSelectionScreen;\r\n//# sourceMappingURL=call_selection_screen.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_selection_screen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transaction.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transaction.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallTransaction = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CallTransaction {\r\n    getMatcher() {\r\n        const options = combi_1.seq(\"OPTIONS FROM\", expressions_1.Source);\r\n        const messages = combi_1.seq(\"MESSAGES INTO\", expressions_1.Target);\r\n        const auth = combi_1.seq(combi_1.altPrio(\"WITH\", \"WITHOUT\"), \"AUTHORITY-CHECK\");\r\n        const perm = combi_1.per(combi_1.seq(\"UPDATE\", expressions_1.Source), \"AND SKIP FIRST SCREEN\", options, messages, combi_1.seq(\"MODE\", expressions_1.Source));\r\n        const ret = combi_1.seq(\"CALL TRANSACTION\", expressions_1.Source, combi_1.optPrio(auth), combi_1.optPrio(combi_1.seq(\"USING\", expressions_1.Source)), combi_1.opt(perm));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CallTransaction = CallTransaction;\r\n//# sourceMappingURL=call_transaction.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transaction.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transformation.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transformation.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallTransformation = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass CallTransformation {\r\n    getMatcher() {\r\n        const field = combi_1.seq(combi_1.alt(expressions_1.Field, expressions_1.Integer), \"=\", expressions_1.Source);\r\n        const options = combi_1.seq(\"OPTIONS\", combi_1.plus(field));\r\n        const parameters = combi_1.seq(\"PARAMETERS\", combi_1.alt(combi_1.plus(field), expressions_1.Dynamic));\r\n        const objects = combi_1.seq(\"OBJECTS\", combi_1.alt(combi_1.plus(field), expressions_1.Dynamic));\r\n        const source2 = combi_1.seq(\"XML\", expressions_1.Source);\r\n        const source = combi_1.seq(\"SOURCE\", combi_1.alt(combi_1.plus(field), source2, expressions_1.Dynamic));\r\n        const result2 = combi_1.seq(\"XML\", expressions_1.Target);\r\n        const result = combi_1.seq(\"RESULT\", combi_1.alt(combi_1.plus(field), result2, expressions_1.Dynamic));\r\n        const call = combi_1.seq(\"CALL TRANSFORMATION\", combi_1.alt(expressions_1.NamespaceSimpleName, expressions_1.Dynamic), combi_1.per(options, parameters, objects, source, result));\r\n        return call;\r\n    }\r\n}\r\nexports.CallTransformation = CallTransformation;\r\n//# sourceMappingURL=call_transformation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transformation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Case = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Case {\r\n    getMatcher() {\r\n        return combi_1.seq(\"CASE\", expressions_1.Source);\r\n    }\r\n}\r\nexports.Case = Case;\r\n//# sourceMappingURL=case.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case_type.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case_type.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CaseType = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass CaseType {\r\n    getMatcher() {\r\n        return combi_1.ver(version_1.Version.v750, combi_1.seq(\"CASE TYPE OF\", expressions_1.Source));\r\n    }\r\n}\r\nexports.CaseType = CaseType;\r\n//# sourceMappingURL=case_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Catch = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Catch {\r\n    getMatcher() {\r\n        return combi_1.seq(\"CATCH\", combi_1.optPrio(\"BEFORE UNWIND\"), combi_1.plus(expressions_1.ClassName), combi_1.opt(combi_1.seq(\"INTO\", expressions_1.Target)));\r\n    }\r\n}\r\nexports.Catch = Catch;\r\n//# sourceMappingURL=catch.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch_system_exceptions.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch_system_exceptions.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CatchSystemExceptions = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CatchSystemExceptions {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CATCH SYSTEM-EXCEPTIONS\", combi_1.plus(combi_1.seq(expressions_1.Field, \"=\", expressions_1.Source)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CatchSystemExceptions = CatchSystemExceptions;\r\n//# sourceMappingURL=catch_system_exceptions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch_system_exceptions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Check = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Check {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CHECK\", combi_1.altPrio(expressions_1.Cond, expressions_1.Field));\r\n        return ret;\r\n    }\r\n}\r\nexports.Check = Check;\r\n//# sourceMappingURL=check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check_select_options.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check_select_options.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckSelectOptions = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CheckSelectOptions {\r\n    getMatcher() {\r\n        const ret = \"CHECK SELECT-OPTIONS\";\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CheckSelectOptions = CheckSelectOptions;\r\n//# sourceMappingURL=check_select_options.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check_select_options.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassData = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassData {\r\n    getMatcher() {\r\n        return combi_1.seq(\"CLASS-DATA\", expressions_1.DataDefinition);\r\n    }\r\n}\r\nexports.ClassData = ClassData;\r\n//# sourceMappingURL=class_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_begin.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_begin.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDataBegin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassDataBegin {\r\n    getMatcher() {\r\n        const occurs = combi_1.seq(\"OCCURS\", expressions_1.Integer);\r\n        const structure = combi_1.seq(\"BEGIN OF\", combi_1.opt(\"COMMON PART\"), expressions_1.NamespaceSimpleName, combi_1.opt(\"READ-ONLY\"), combi_1.opt(occurs));\r\n        return combi_1.seq(\"CLASS-DATA\", structure);\r\n    }\r\n}\r\nexports.ClassDataBegin = ClassDataBegin;\r\n//# sourceMappingURL=class_data_begin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_begin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_end.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_end.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDataEnd = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassDataEnd {\r\n    getMatcher() {\r\n        const common = combi_1.seq(\"COMMON PART\", combi_1.optPrio(expressions_1.NamespaceSimpleName));\r\n        const structure = combi_1.seq(\"END OF\", combi_1.alt(common, expressions_1.NamespaceSimpleName));\r\n        return combi_1.seq(\"CLASS-DATA\", structure);\r\n    }\r\n}\r\nexports.ClassDataEnd = ClassDataEnd;\r\n//# sourceMappingURL=class_data_end.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_end.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_deferred.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_deferred.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDeferred = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassDeferred {\r\n    getMatcher() {\r\n        const def = combi_1.seq(\"DEFERRED\", combi_1.opt(\"PUBLIC\"));\r\n        return combi_1.seq(\"CLASS\", expressions_1.ClassName, combi_1.str(\"DEFINITION\"), def);\r\n    }\r\n}\r\nexports.ClassDeferred = ClassDeferred;\r\n//# sourceMappingURL=class_deferred.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_deferred.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDefinition = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ClassDefinition {\r\n    getMatcher() {\r\n        const create = combi_1.seq(\"CREATE\", combi_1.alt(\"PUBLIC\", \"PROTECTED\", \"PRIVATE\"));\r\n        const level = combi_1.alt(\"CRITICAL\", \"HARMLESS\", \"DANGEROUS\");\r\n        const risk = combi_1.seq(\"RISK LEVEL\", level);\r\n        const time = combi_1.alt(\"LONG\", \"MEDIUM\", \"SHORT\");\r\n        const duration = combi_1.seq(\"DURATION\", time);\r\n        const blah = combi_1.per(expressions_1.ClassGlobal, expressions_1.ClassFinal, \"ABSTRACT\", combi_1.seq(\"INHERITING FROM\", expressions_1.SuperClassName), create, \"FOR TESTING\", risk, \"SHARED MEMORY ENABLED\", duration, combi_1.ver(version_1.Version.v754, combi_1.seq(\"FOR BEHAVIOR OF\", expressions_1.SimpleName)), expressions_1.ClassFriends);\r\n        const def = combi_1.seq(\"DEFINITION\", combi_1.opt(blah));\r\n        return combi_1.seq(\"CLASS\", expressions_1.ClassName, def);\r\n    }\r\n}\r\nexports.ClassDefinition = ClassDefinition;\r\n//# sourceMappingURL=class_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition_load.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition_load.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDefinitionLoad = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassDefinitionLoad {\r\n    getMatcher() {\r\n        return combi_1.seq(\"CLASS\", expressions_1.ClassName, \"DEFINITION LOAD\");\r\n    }\r\n}\r\nexports.ClassDefinitionLoad = ClassDefinitionLoad;\r\n//# sourceMappingURL=class_definition_load.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition_load.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_implementation.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_implementation.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassImplementation = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassImplementation {\r\n    getMatcher() {\r\n        return combi_1.seq(\"CLASS\", expressions_1.ClassName, \"IMPLEMENTATION\");\r\n    }\r\n}\r\nexports.ClassImplementation = ClassImplementation;\r\n//# sourceMappingURL=class_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_local_friends.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_local_friends.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassLocalFriends = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassLocalFriends {\r\n    getMatcher() {\r\n        const local = combi_1.seq(\"LOCAL FRIENDS\", combi_1.plus(expressions_1.ClassName));\r\n        return combi_1.seq(\"CLASS\", expressions_1.ClassName, \"DEFINITION\", local);\r\n    }\r\n}\r\nexports.ClassLocalFriends = ClassLocalFriends;\r\n//# sourceMappingURL=class_local_friends.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_local_friends.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/cleanup.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/cleanup.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Cleanup = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Cleanup {\r\n    getMatcher() {\r\n        const into = combi_1.seq(\"INTO\", expressions_1.Target);\r\n        return combi_1.seq(\"CLEANUP\", combi_1.opt(into));\r\n    }\r\n}\r\nexports.Cleanup = Cleanup;\r\n//# sourceMappingURL=cleanup.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/cleanup.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/clear.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/clear.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Clear = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Clear {\r\n    getMatcher() {\r\n        const wit = combi_1.seq(\"WITH\", expressions_1.Source);\r\n        const mode = combi_1.alt(\"IN CHARACTER MODE\", \"IN BYTE MODE\");\r\n        return combi_1.seq(\"CLEAR\", expressions_1.Target, combi_1.opt(wit), combi_1.opt(mode));\r\n    }\r\n}\r\nexports.Clear = Clear;\r\n//# sourceMappingURL=clear.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/clear.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_cursor.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_cursor.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CloseCursor = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CloseCursor {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CLOSE CURSOR\", expressions_1.SQLSource);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CloseCursor = CloseCursor;\r\n//# sourceMappingURL=close_cursor.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_cursor.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_dataset.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_dataset.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CloseDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CloseDataset {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CLOSE DATASET\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CloseDataset = CloseDataset;\r\n//# sourceMappingURL=close_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/collect.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/collect.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Collect = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Collect {\r\n    getMatcher() {\r\n        const into = combi_1.seq(\"INTO\", expressions_1.Target);\r\n        const assigning = combi_1.seq(\"ASSIGNING\", expressions_1.FSTarget);\r\n        return combi_1.seq(\"COLLECT\", expressions_1.Source, combi_1.opt(into), combi_1.opt(assigning));\r\n    }\r\n}\r\nexports.Collect = Collect;\r\n//# sourceMappingURL=collect.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/collect.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Commit = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Commit {\r\n    getMatcher() {\r\n        const work = combi_1.seq(\"WORK\", combi_1.opt(\"AND WAIT\"));\r\n        return combi_1.seq(\"COMMIT\", combi_1.alt(work, expressions_1.DatabaseConnection));\r\n    }\r\n}\r\nexports.Commit = Commit;\r\n//# sourceMappingURL=commit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit_entities.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit_entities.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CommitEntities = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CommitEntities {\r\n    getMatcher() {\r\n        const s = combi_1.seq(\"COMMIT ENTITIES RESPONSE OF\", expressions_1.SimpleName, \"FAILED\", expressions_1.Target, \"REPORTED\", expressions_1.Target);\r\n        return combi_1.ver(version_1.Version.v754, s);\r\n    }\r\n}\r\nexports.CommitEntities = CommitEntities;\r\n//# sourceMappingURL=commit_entities.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit_entities.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/communication.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/communication.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Communication = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Communication {\r\n    getMatcher() {\r\n        const length = combi_1.seq(\"LENGTH\", expressions_1.Target);\r\n        const init = combi_1.seq(\"INIT ID\", expressions_1.Source, \"DESTINATION\", expressions_1.Target);\r\n        const allocate = combi_1.seq(\"ALLOCATE ID\", expressions_1.Source);\r\n        const send = combi_1.seq(\"SEND ID\", expressions_1.Source, \"BUFFER\", expressions_1.Target, combi_1.opt(length));\r\n        const deallocate = combi_1.seq(\"DEALLOCATE ID\", expressions_1.Source);\r\n        const accept = combi_1.seq(\"ACCEPT ID\", expressions_1.Source);\r\n        const receive = combi_1.seq(\"RECEIVE ID\", expressions_1.Source, \"BUFFER\", expressions_1.Source, combi_1.opt(length), \"DATAINFO\", expressions_1.Target, \"STATUSINFO\", expressions_1.Target, \"RECEIVED\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"COMMUNICATION\", combi_1.alt(init, allocate, send, deallocate, receive, accept));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Communication = Communication;\r\n//# sourceMappingURL=communication.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/communication.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/compute.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/compute.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Compute = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Compute {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"COMPUTE\", combi_1.opt(\"EXACT\"), expressions_1.Target, \"=\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Compute = Compute;\r\n//# sourceMappingURL=compute.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/compute.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/concatenate.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/concatenate.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Concatenate = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Concatenate {\r\n    getMatcher() {\r\n        const mode = combi_1.seq(\"IN\", combi_1.alt(\"BYTE\", \"CHARACTER\"), \"MODE\");\r\n        const blanks = combi_1.str(\"RESPECTING BLANKS\");\r\n        const sep = combi_1.seq(\"SEPARATED BY\", expressions_1.Source);\r\n        const options = combi_1.per(mode, blanks, sep);\r\n        const sourc = combi_1.seq(expressions_1.Source, combi_1.plus(expressions_1.Source));\r\n        const lines = combi_1.seq(\"LINES OF\", expressions_1.Source);\r\n        return combi_1.seq(\"CONCATENATE\", combi_1.altPrio(lines, sourc), \"INTO\", expressions_1.Target, combi_1.optPrio(options));\r\n    }\r\n}\r\nexports.Concatenate = Concatenate;\r\n//# sourceMappingURL=concatenate.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/concatenate.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/condense.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/condense.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Condense = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Condense {\r\n    getMatcher() {\r\n        return combi_1.seq(\"CONDENSE\", expressions_1.Target, combi_1.opt(\"NO-GAPS\"));\r\n    }\r\n}\r\nexports.Condense = Condense;\r\n//# sourceMappingURL=condense.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/condense.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Constant = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Constant {\r\n    getMatcher() {\r\n        const def = combi_1.seq(expressions_1.DefinitionName, combi_1.opt(expressions_1.ConstantFieldLength), combi_1.per(expressions_1.Type, expressions_1.Value, expressions_1.Decimals, expressions_1.Length));\r\n        const ret = combi_1.seq(combi_1.alt(\"CONSTANT\", \"CONSTANTS\"), def, combi_1.optPrio(\"%_PREDEFINED\"));\r\n        return ret;\r\n    }\r\n}\r\nexports.Constant = Constant;\r\n//# sourceMappingURL=constant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_begin.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_begin.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConstantBegin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ConstantBegin {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CONSTANTS BEGIN OF\", expressions_1.DefinitionName, combi_1.optPrio(\"%_PREDEFINED\"));\r\n        return ret;\r\n    }\r\n}\r\nexports.ConstantBegin = ConstantBegin;\r\n//# sourceMappingURL=constant_begin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_begin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_end.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_end.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConstantEnd = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ConstantEnd {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CONSTANTS\", \"END\", \"OF\", expressions_1.DefinitionName);\r\n        return ret;\r\n    }\r\n}\r\nexports.ConstantEnd = ConstantEnd;\r\n//# sourceMappingURL=constant_end.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_end.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/contexts.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/contexts.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Contexts = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Contexts {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CONTEXTS\", expressions_1.Field);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Contexts = Contexts;\r\n//# sourceMappingURL=contexts.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/contexts.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/continue.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/continue.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Continue = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Continue {\r\n    getMatcher() {\r\n        return combi_1.str(\"CONTINUE\");\r\n    }\r\n}\r\nexports.Continue = Continue;\r\n//# sourceMappingURL=continue.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/continue.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/controls.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/controls.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Controls = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Controls {\r\n    getMatcher() {\r\n        const tableview = combi_1.seq(\"TABLEVIEW USING SCREEN\", expressions_1.Source);\r\n        const type = combi_1.seq(\"TYPE\", combi_1.alt(tableview, \"TABSTRIP\"));\r\n        const ret = combi_1.seq(\"CONTROLS\", expressions_1.NamespaceSimpleName, type);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Controls = Controls;\r\n//# sourceMappingURL=controls.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/controls.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Convert = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Convert {\r\n    getMatcher() {\r\n        const intoTime = combi_1.seq(\"TIME\", expressions_1.Target);\r\n        const intoDate = combi_1.seq(\"DATE\", expressions_1.Target);\r\n        const into = combi_1.seq(\"INTO\", combi_1.per(intoTime, intoDate));\r\n        const daylight = combi_1.seq(\"DAYLIGHT SAVING TIME\", expressions_1.Source);\r\n        const zone = combi_1.seq(\"TIME ZONE\", expressions_1.Source);\r\n        const time = combi_1.seq(\"TIME STAMP\", expressions_1.Source, combi_1.per(zone, into, daylight));\r\n        const dat = combi_1.seq(\"DATE\", expressions_1.Source);\r\n        const tim = combi_1.seq(\"TIME\", expressions_1.Source);\r\n        const stamp = combi_1.seq(\"INTO TIME STAMP\", expressions_1.Target);\r\n        const invert = combi_1.seq(\"INTO INVERTED-DATE\", expressions_1.Target);\r\n        const date = combi_1.seq(combi_1.per(dat, tim), combi_1.per(daylight, stamp, zone, invert));\r\n        const inv = combi_1.seq(\"INVERTED-DATE\", expressions_1.Source, \"INTO DATE\", expressions_1.Target);\r\n        return combi_1.seq(\"CONVERT\", combi_1.alt(time, date, inv));\r\n    }\r\n}\r\nexports.Convert = Convert;\r\n//# sourceMappingURL=convert.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert_text.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert_text.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConvertText = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ConvertText {\r\n    getMatcher() {\r\n        return combi_1.seq(\"CONVERT TEXT\", expressions_1.Source, \"INTO SORTABLE CODE\", expressions_1.Target);\r\n    }\r\n}\r\nexports.ConvertText = ConvertText;\r\n//# sourceMappingURL=convert_text.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert_text.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_data.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_data.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CreateData = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CreateData {\r\n    getMatcher() {\r\n        // todo, similar to DATA or TYPES?\r\n        const area = combi_1.seq(\"AREA HANDLE\", expressions_1.Source);\r\n        const type = combi_1.seq(combi_1.alt(\"TYPE\", \"TYPE REF TO\", \"TYPE TABLE OF\", \"TYPE TABLE OF REF TO\", \"TYPE SORTED TABLE OF\", \"TYPE HASHED TABLE OF\", \"TYPE STANDARD TABLE OF\", \"TYPE LINE OF\"), combi_1.alt(expressions_1.TypeName, expressions_1.Dynamic));\r\n        const like = combi_1.seq(combi_1.alt(\"LIKE\", \"LIKE HASHED TABLE OF\", \"LIKE LINE OF\", \"LIKE STANDARD TABLE OF\", \"LIKE SORTED TABLE OF\", \"LIKE TABLE OF\", \"TYPE HANDLE\"), combi_1.alt(expressions_1.Source, expressions_1.Dynamic));\r\n        const length = combi_1.seq(\"LENGTH\", expressions_1.Source);\r\n        const initial = combi_1.seq(\"INITIAL SIZE\", expressions_1.Source);\r\n        const decimals = combi_1.seq(\"DECIMALS\", expressions_1.Source);\r\n        const uniq = combi_1.alt(\"UNIQUE\", \"NON-UNIQUE\");\r\n        const emptyKey = combi_1.ver(version_1.Version.v740sp02, \"EMPTY KEY\");\r\n        const def = combi_1.seq(combi_1.opt(uniq), combi_1.alt(\"DEFAULT KEY\", emptyKey));\r\n        const kdef = combi_1.seq(combi_1.opt(uniq), \"KEY\", combi_1.alt(combi_1.plus(expressions_1.Field), expressions_1.Dynamic));\r\n        const key = combi_1.seq(\"WITH\", combi_1.alt(def, kdef));\r\n        const ret = combi_1.seq(\"CREATE DATA\", expressions_1.Target, combi_1.opt(area), combi_1.opt(combi_1.alt(type, like)), combi_1.opt(key), combi_1.opt(initial), combi_1.opt(length), combi_1.opt(decimals));\r\n        return ret;\r\n    }\r\n}\r\nexports.CreateData = CreateData;\r\n//# sourceMappingURL=create_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_object.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_object.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CreateObject = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass CreateObject {\r\n    getMatcher() {\r\n        const exporting = combi_1.seq(\"EXPORTING\", expressions_1.ParameterListS);\r\n        const exceptions = combi_1.seq(\"EXCEPTIONS\", expressions_1.ParameterListExceptions);\r\n        const ptable = combi_1.seq(\"PARAMETER-TABLE\", expressions_1.Source);\r\n        const etable = combi_1.seq(\"EXCEPTION-TABLE\", expressions_1.Source);\r\n        const area = combi_1.seq(\"AREA HANDLE\", expressions_1.Source);\r\n        const type = combi_1.seq(\"TYPE\", combi_1.altPrio(expressions_1.ClassName, expressions_1.Dynamic));\r\n        const ret = combi_1.seq(\"CREATE OBJECT\", expressions_1.Target, combi_1.optPrio(combi_1.per(type, area)), combi_1.optPrio(combi_1.altPrio(exporting, ptable)), combi_1.optPrio(combi_1.altPrio(exceptions, etable)));\r\n        return ret;\r\n    }\r\n}\r\nexports.CreateObject = CreateObject;\r\n//# sourceMappingURL=create_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_ole.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_ole.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CreateOLE = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass CreateOLE {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"CREATE OBJECT\", expressions_1.Target, expressions_1.Source, combi_1.opt(\"NO FLUSH\"), combi_1.opt(\"QUEUE-ONLY\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.CreateOLE = CreateOLE;\r\n//# sourceMappingURL=create_ole.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_ole.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Data = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Data {\r\n    getMatcher() {\r\n        return combi_1.seq(\"DATA\", expressions_1.DataDefinition, combi_1.optPrio(\"%_PREDEFINED\"));\r\n    }\r\n}\r\nexports.Data = Data;\r\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_begin.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_begin.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataBegin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass DataBegin {\r\n    getMatcher() {\r\n        const occurs = combi_1.seq(\"OCCURS\", expressions_1.Integer);\r\n        const structure = combi_1.seq(\"BEGIN OF\", combi_1.opt(\"COMMON PART\"), expressions_1.DefinitionName, combi_1.opt(\"READ-ONLY\"), combi_1.opt(occurs));\r\n        return combi_1.seq(\"DATA\", structure);\r\n    }\r\n}\r\nexports.DataBegin = DataBegin;\r\n//# sourceMappingURL=data_begin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_begin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_end.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_end.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataEnd = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass DataEnd {\r\n    getMatcher() {\r\n        const common = combi_1.seq(\"COMMON PART\", combi_1.optPrio(expressions_1.DefinitionName));\r\n        const structure = combi_1.seq(\"END OF\", combi_1.alt(common, expressions_1.DefinitionName));\r\n        const valid = combi_1.seq(\"VALID BETWEEN\", expressions_1.ComponentName, \"AND\", expressions_1.ComponentName);\r\n        return combi_1.seq(\"DATA\", structure, combi_1.optPrio(valid));\r\n    }\r\n}\r\nexports.DataEnd = DataEnd;\r\n//# sourceMappingURL=data_end.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_end.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/define.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/define.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Define = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Define {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"DEFINE\", expressions_1.MacroName);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Define = Define;\r\n//# sourceMappingURL=define.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/define.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_cluster.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_cluster.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteCluster = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass DeleteCluster {\r\n    getMatcher() {\r\n        const client = combi_1.seq(\"CLIENT\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"DELETE FROM DATABASE\", expressions_1.NamespaceSimpleName, combi_1.tok(tokens_1.ParenLeft), expressions_1.SimpleName, combi_1.tok(tokens_1.ParenRightW), combi_1.opt(client), \"ID\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.DeleteCluster = DeleteCluster;\r\n//# sourceMappingURL=delete_cluster.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_cluster.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_database.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_database.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteDatabase = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst sql_client_1 = __webpack_require__(/*! ../expressions/sql_client */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_client.js\");\r\nclass DeleteDatabase {\r\n    getMatcher() {\r\n        const where = combi_1.seq(\"WHERE\", combi_1.alt(expressions_1.SQLCond, expressions_1.Dynamic));\r\n        const from = combi_1.seq(\"FROM\", expressions_1.DatabaseTable, combi_1.optPrio(sql_client_1.SQLClient), combi_1.optPrio(expressions_1.DatabaseConnection), combi_1.opt(where));\r\n        const table = combi_1.seq(expressions_1.DatabaseTable, combi_1.optPrio(sql_client_1.SQLClient), combi_1.opt(expressions_1.DatabaseConnection), \"FROM\", combi_1.opt(\"TABLE\"), expressions_1.SQLSourceSimple);\r\n        const ret = combi_1.seq(\"DELETE\", combi_1.alt(from, table));\r\n        return ret;\r\n    }\r\n}\r\nexports.DeleteDatabase = DeleteDatabase;\r\n//# sourceMappingURL=delete_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dataset.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dataset.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass DeleteDataset {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"DELETE DATASET\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.DeleteDataset = DeleteDataset;\r\n//# sourceMappingURL=delete_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dynpro.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dynpro.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteDynpro = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass DeleteDynpro {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"DELETE DYNPRO\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.DeleteDynpro = DeleteDynpro;\r\n//# sourceMappingURL=delete_dynpro.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dynpro.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_internal.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_internal.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteInternal = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass DeleteInternal {\r\n    getMatcher() {\r\n        // todo, is READ and DELETE similar? something can be reused?\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const keyName = combi_1.altPrio(expressions_1.SimpleName, expressions_1.Dynamic);\r\n        const using = combi_1.seq(\"USING KEY\", keyName);\r\n        const fromTo = combi_1.seq(combi_1.optPrio(combi_1.seq(\"FROM\", expressions_1.Source)), combi_1.optPrio(combi_1.seq(\"TO\", expressions_1.Source)));\r\n        const where = combi_1.seq(\"WHERE\", combi_1.alt(expressions_1.ComponentCond, expressions_1.Dynamic));\r\n        const key = combi_1.seq(\"WITH TABLE KEY\", combi_1.opt(combi_1.seq(keyName, \"COMPONENTS\")), combi_1.plus(expressions_1.ComponentCompare));\r\n        const table = combi_1.seq(combi_1.opt(\"TABLE\"), expressions_1.Target, combi_1.alt(combi_1.per(index, using), fromTo, key), combi_1.opt(where));\r\n        const f = combi_1.seq(expressions_1.FieldSub, combi_1.optPrio(expressions_1.FieldOffset), combi_1.optPrio(expressions_1.FieldLength));\r\n        const adjacent = combi_1.seq(\"ADJACENT DUPLICATES FROM\", expressions_1.Target, combi_1.optPrio(using), combi_1.opt(combi_1.seq(\"COMPARING\", combi_1.altPrio(\"ALL FIELDS\", combi_1.plus(combi_1.altPrio(f, expressions_1.Dynamic))))), combi_1.optPrio(using));\r\n        return combi_1.seq(\"DELETE\", combi_1.alt(table, adjacent));\r\n    }\r\n}\r\nexports.DeleteInternal = DeleteInternal;\r\n//# sourceMappingURL=delete_internal.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_memory.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_memory.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteMemory = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass DeleteMemory {\r\n    getMatcher() {\r\n        const memory = combi_1.seq(\"MEMORY ID\", expressions_1.Source);\r\n        const id = combi_1.seq(\"ID\", expressions_1.Source);\r\n        const shared = combi_1.seq(\"SHARED MEMORY\", expressions_1.Field, \"(\", expressions_1.Field, \")\", id);\r\n        const ret = combi_1.seq(\"DELETE FROM\", combi_1.alt(memory, shared));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.DeleteMemory = DeleteMemory;\r\n//# sourceMappingURL=delete_memory.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_memory.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_report.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_report.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteReport = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass DeleteReport {\r\n    getMatcher() {\r\n        const state = combi_1.seq(\"STATE\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"DELETE REPORT\", expressions_1.Source, combi_1.optPrio(state));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.DeleteReport = DeleteReport;\r\n//# sourceMappingURL=delete_report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_textpool.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_textpool.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteTextpool = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass DeleteTextpool {\r\n    getMatcher() {\r\n        const language = combi_1.seq(\"LANGUAGE\", expressions_1.Source);\r\n        const state = combi_1.seq(\"STATE\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"DELETE TEXTPOOL\", expressions_1.Source, combi_1.opt(language), combi_1.opt(state));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.DeleteTextpool = DeleteTextpool;\r\n//# sourceMappingURL=delete_textpool.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_textpool.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/demand.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/demand.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Demand = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Demand {\r\n    getMatcher() {\r\n        const field = combi_1.seq(expressions_1.Field, \"=\", expressions_1.Target);\r\n        const messages = combi_1.seq(\"MESSAGES INTO\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"DEMAND\", combi_1.plus(field), \"FROM CONTEXT\", expressions_1.Field, combi_1.opt(messages));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Demand = Demand;\r\n//# sourceMappingURL=demand.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/demand.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/describe.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/describe.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Describe = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Describe {\r\n    getMatcher() {\r\n        const tlines = combi_1.seq(\"LINES\", expressions_1.Target);\r\n        const kind = combi_1.seq(\"KIND\", expressions_1.Target);\r\n        const occurs = combi_1.seq(\"OCCURS\", expressions_1.Target);\r\n        const table = combi_1.seq(\"TABLE\", expressions_1.FieldChain, combi_1.opt(combi_1.per(tlines, kind, occurs)));\r\n        const mode = combi_1.seq(\"IN\", combi_1.alt(\"BYTE\", \"CHARACTER\"), \"MODE\");\r\n        const field = combi_1.seq(\"FIELD\", expressions_1.Source, combi_1.per(combi_1.seq(\"TYPE\", expressions_1.Target), combi_1.seq(\"COMPONENTS\", expressions_1.Target), combi_1.seq(\"LENGTH\", expressions_1.Target, combi_1.opt(mode)), combi_1.seq(\"DECIMALS\", expressions_1.Target), combi_1.seq(\"HELP-ID\", expressions_1.Target), combi_1.seq(\"OUTPUT-LENGTH\", expressions_1.Target), combi_1.seq(\"EDIT MASK\", expressions_1.Target), combi_1.seq(\"INTO\", expressions_1.Target)));\r\n        const distance = combi_1.seq(\"DISTANCE BETWEEN\", expressions_1.Source, \"AND\", expressions_1.Source, \"INTO\", expressions_1.Target, mode);\r\n        const lines = combi_1.seq(\"NUMBER OF LINES\", expressions_1.Target);\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Source);\r\n        const page = combi_1.seq(\"PAGE\", expressions_1.Source);\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const top = combi_1.seq(\"TOP-LINES\", expressions_1.Target);\r\n        const lineSize = combi_1.seq(\"LINE-SIZE\", expressions_1.Target);\r\n        const first = combi_1.seq(\"FIRST-LINE\", expressions_1.Target);\r\n        const list = combi_1.seq(\"LIST\", combi_1.per(lines, index, line, page, top, first, lineSize));\r\n        const ret = combi_1.seq(\"DESCRIBE\", combi_1.altPrio(table, field, distance, list));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Describe = Describe;\r\n//# sourceMappingURL=describe.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/describe.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/detail.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/detail.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Detail = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Detail {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"DETAIL\");\r\n    }\r\n}\r\nexports.Detail = Detail;\r\n//# sourceMappingURL=detail.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/detail.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/divide.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/divide.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Divide = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Divide {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"DIVIDE\", expressions_1.Target, \"BY\", expressions_1.Source);\r\n        return ret;\r\n    }\r\n}\r\nexports.Divide = Divide;\r\n//# sourceMappingURL=divide.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/divide.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/do.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/do.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Do = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Do {\r\n    getMatcher() {\r\n        const range = combi_1.seq(\"RANGE\", expressions_1.Source);\r\n        const vary = combi_1.seq(\"VARYING\", expressions_1.Target, \"FROM\", expressions_1.Source, \"NEXT\", expressions_1.Source, combi_1.optPrio(range));\r\n        const times = combi_1.seq(expressions_1.Source, \"TIMES\");\r\n        return combi_1.seq(\"DO\", combi_1.optPrio(combi_1.per(combi_1.plus(vary), times)));\r\n    }\r\n}\r\nexports.Do = Do;\r\n//# sourceMappingURL=do.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/do.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/editor_call.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/editor_call.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EditorCall = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EditorCall {\r\n    getMatcher() {\r\n        const title = combi_1.seq(\"TITLE\", expressions_1.Source);\r\n        const options = combi_1.per(\"DISPLAY-MODE\", title);\r\n        const ret = combi_1.seq(\"EDITOR-CALL FOR\", combi_1.opt(\"REPORT\"), expressions_1.Source, combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.EditorCall = EditorCall;\r\n//# sourceMappingURL=editor_call.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/editor_call.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/else.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/else.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Else = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Else {\r\n    getMatcher() {\r\n        return combi_1.str(\"ELSE\");\r\n    }\r\n}\r\nexports.Else = Else;\r\n//# sourceMappingURL=else.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/else.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/elseif.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/elseif.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ElseIf = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ElseIf {\r\n    getMatcher() {\r\n        return combi_1.seq(\"ELSEIF\", expressions_1.Cond);\r\n    }\r\n}\r\nexports.ElseIf = ElseIf;\r\n//# sourceMappingURL=elseif.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/elseif.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndEnhancement = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndEnhancement {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"ENDENHANCEMENT\");\r\n    }\r\n}\r\nexports.EndEnhancement = EndEnhancement;\r\n//# sourceMappingURL=end_enhancement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement_section.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement_section.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndEnhancementSection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndEnhancementSection {\r\n    getMatcher() {\r\n        const ret = combi_1.str(\"END-ENHANCEMENT-SECTION\");\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.EndEnhancementSection = EndEnhancementSection;\r\n//# sourceMappingURL=end_enhancement_section.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement_section.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_page.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_page.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndOfPage = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndOfPage {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"END-OF-PAGE\");\r\n    }\r\n}\r\nexports.EndOfPage = EndOfPage;\r\n//# sourceMappingURL=end_of_page.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_page.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_selection.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_selection.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndOfSelection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndOfSelection {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"END-OF-SELECTION\");\r\n    }\r\n}\r\nexports.EndOfSelection = EndOfSelection;\r\n//# sourceMappingURL=end_of_selection.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_selection.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_injection.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_injection.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndTestInjection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndTestInjection {\r\n    getMatcher() {\r\n        return combi_1.str(\"END-TEST-INJECTION\");\r\n    }\r\n}\r\nexports.EndTestInjection = EndTestInjection;\r\n//# sourceMappingURL=end_test_injection.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_injection.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_seam.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_seam.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndTestSeam = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndTestSeam {\r\n    getMatcher() {\r\n        return combi_1.str(\"END-TEST-SEAM\");\r\n    }\r\n}\r\nexports.EndTestSeam = EndTestSeam;\r\n//# sourceMappingURL=end_test_seam.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_seam.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endat.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endat.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndAt = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndAt {\r\n    getMatcher() {\r\n        const ret = combi_1.str(\"ENDAT\");\r\n        return ret;\r\n    }\r\n}\r\nexports.EndAt = EndAt;\r\n//# sourceMappingURL=endat.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endat.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcase.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcase.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndCase = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndCase {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDCASE\");\r\n    }\r\n}\r\nexports.EndCase = EndCase;\r\n//# sourceMappingURL=endcase.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcase.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcatch.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcatch.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndCatch = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndCatch {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"ENDCATCH\");\r\n    }\r\n}\r\nexports.EndCatch = EndCatch;\r\n//# sourceMappingURL=endcatch.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcatch.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endclass.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endclass.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndClass = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndClass {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDCLASS\");\r\n    }\r\n}\r\nexports.EndClass = EndClass;\r\n//# sourceMappingURL=endclass.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endclass.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddefine.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddefine.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndOfDefinition = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndOfDefinition {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"END-OF-DEFINITION\");\r\n    }\r\n}\r\nexports.EndOfDefinition = EndOfDefinition;\r\n//# sourceMappingURL=enddefine.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddefine.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddo.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddo.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndDo = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndDo {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDDO\");\r\n    }\r\n}\r\nexports.EndDo = EndDo;\r\n//# sourceMappingURL=enddo.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddo.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endexec.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endexec.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndExec = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndExec {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"ENDEXEC\");\r\n    }\r\n}\r\nexports.EndExec = EndExec;\r\n//# sourceMappingURL=endexec.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endexec.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endform.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endform.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndForm = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndForm {\r\n    getMatcher() {\r\n        const ret = combi_1.str(\"ENDFORM\");\r\n        return ret;\r\n    }\r\n}\r\nexports.EndForm = EndForm;\r\n//# sourceMappingURL=endform.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endform.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endfunction.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endfunction.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndFunction = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndFunction {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDFUNCTION\");\r\n    }\r\n}\r\nexports.EndFunction = EndFunction;\r\n//# sourceMappingURL=endfunction.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endfunction.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endif.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endif.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndIf = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndIf {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDIF\");\r\n    }\r\n}\r\nexports.EndIf = EndIf;\r\n//# sourceMappingURL=endif.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endif.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endinterface.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endinterface.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndInterface = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndInterface {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDINTERFACE\");\r\n    }\r\n}\r\nexports.EndInterface = EndInterface;\r\n//# sourceMappingURL=endinterface.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endinterface.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endloop.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endloop.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndLoop = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndLoop {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDLOOP\");\r\n    }\r\n}\r\nexports.EndLoop = EndLoop;\r\n//# sourceMappingURL=endloop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endloop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmethod.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmethod.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndMethod = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndMethod {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDMETHOD\");\r\n    }\r\n}\r\nexports.EndMethod = EndMethod;\r\n//# sourceMappingURL=endmethod.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmethod.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmodule.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmodule.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndModule = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndModule {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"ENDMODULE\");\r\n    }\r\n}\r\nexports.EndModule = EndModule;\r\n//# sourceMappingURL=endmodule.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmodule.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endon.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endon.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndOn = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndOn {\r\n    getMatcher() {\r\n        const ret = combi_1.str(\"ENDON\");\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.EndOn = EndOn;\r\n//# sourceMappingURL=endon.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endon.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endprovide.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endprovide.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndProvide = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndProvide {\r\n    getMatcher() {\r\n        const ret = combi_1.str(\"ENDPROVIDE\");\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.EndProvide = EndProvide;\r\n//# sourceMappingURL=endprovide.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endprovide.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endselect.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endselect.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndSelect = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndSelect {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDSELECT\");\r\n    }\r\n}\r\nexports.EndSelect = EndSelect;\r\n//# sourceMappingURL=endselect.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endselect.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endtry.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endtry.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndTry = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndTry {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDTRY\");\r\n    }\r\n}\r\nexports.EndTry = EndTry;\r\n//# sourceMappingURL=endtry.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endtry.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwhile.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwhile.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndWhile = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass EndWhile {\r\n    getMatcher() {\r\n        return combi_1.str(\"ENDWHILE\");\r\n    }\r\n}\r\nexports.EndWhile = EndWhile;\r\n//# sourceMappingURL=endwhile.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwhile.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwith.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwith.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EndWith = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EndWith {\r\n    getMatcher() {\r\n        return combi_1.ver(version_1.Version.v751, \"ENDWITH\");\r\n    }\r\n}\r\nexports.EndWith = EndWith;\r\n//# sourceMappingURL=endwith.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwith.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Enhancement = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst namespace_simple_name_1 = __webpack_require__(/*! ../expressions/namespace_simple_name */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/namespace_simple_name.js\");\r\nclass Enhancement {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"ENHANCEMENT\", combi_1.plus(namespace_simple_name_1.NamespaceSimpleName));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Enhancement = Enhancement;\r\n//# sourceMappingURL=enhancement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_point.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_point.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EnhancementPoint = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass EnhancementPoint {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"ENHANCEMENT-POINT\", expressions_1.FieldSub, \"SPOTS\", expressions_1.Field, combi_1.opt(\"STATIC\"), combi_1.opt(\"INCLUDE BOUND\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.EnhancementPoint = EnhancementPoint;\r\n//# sourceMappingURL=enhancement_point.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_point.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_section.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_section.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EnhancementSection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst dash_1 = __webpack_require__(/*! ../../1_lexer/tokens/dash */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/dash.js\");\r\nclass EnhancementSection {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"ENHANCEMENT-SECTION\", combi_1.seq(expressions_1.Field, combi_1.starPrio(combi_1.seq(combi_1.tok(dash_1.Dash), expressions_1.Field))), \"SPOTS\", expressions_1.Field, combi_1.opt(\"STATIC\"), combi_1.opt(\"INCLUDE BOUND\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.EnhancementSection = EnhancementSection;\r\n//# sourceMappingURL=enhancement_section.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_section.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/events.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/events.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Events = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Events {\r\n    getMatcher() {\r\n        const exporting = combi_1.seq(\"EXPORTING\", combi_1.plus(expressions_1.MethodParamOptional));\r\n        return combi_1.seq(combi_1.alt(\"CLASS-EVENTS\", \"EVENTS\"), expressions_1.Field, combi_1.opt(exporting));\r\n    }\r\n}\r\nexports.Events = Events;\r\n//# sourceMappingURL=events.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/events.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exec_sql.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exec_sql.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExecSQL = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ExecSQL {\r\n    getMatcher() {\r\n        const performing = combi_1.seq(\"PERFORMING\", expressions_1.SimpleName);\r\n        const ret = combi_1.seq(\"EXEC SQL\", combi_1.opt(performing));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ExecSQL = ExecSQL;\r\n//# sourceMappingURL=exec_sql.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exec_sql.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exit.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exit.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Exit = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Exit {\r\n    getMatcher() {\r\n        return combi_1.seq(\"EXIT\", combi_1.opt(combi_1.alt(\"FROM SQL\", \"FROM STEP-LOOP\")));\r\n    }\r\n}\r\nexports.Exit = Exit;\r\n//# sourceMappingURL=exit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Export = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\n// todo, cloud, split?\r\nclass Export {\r\n    getMatcher() {\r\n        const from = combi_1.seq(\"FROM\", expressions_1.Source);\r\n        const client = combi_1.seq(\"CLIENT\", expressions_1.Source);\r\n        const id = combi_1.seq(\"ID\", expressions_1.Source);\r\n        const using = combi_1.seq(\"USING\", expressions_1.Source);\r\n        const cluster = combi_1.seq(expressions_1.NamespaceSimpleName, combi_1.tok(tokens_1.ParenLeft), combi_1.regex(/^[\\w$%\\^]{2}$/), combi_1.tok(tokens_1.ParenRightW));\r\n        const buffer = combi_1.seq(\"DATA BUFFER\", expressions_1.Target);\r\n        const memory = combi_1.seq(\"MEMORY\", combi_1.opt(combi_1.seq(\"ID\", expressions_1.Source)));\r\n        const table = combi_1.seq(\"INTERNAL TABLE\", expressions_1.Target);\r\n        const shared = combi_1.seq(combi_1.alt(\"SHARED MEMORY\", \"SHARED BUFFER\"), cluster, combi_1.per(from, client, id));\r\n        const database = combi_1.seq(\"DATABASE\", cluster, combi_1.per(from, client, id, using));\r\n        const target = combi_1.alt(buffer, memory, database, table, shared);\r\n        const left = combi_1.alt(expressions_1.FieldSub, expressions_1.FieldSymbol);\r\n        const source = combi_1.alt(combi_1.plus(combi_1.altPrio(expressions_1.ParameterS, combi_1.seq(left, from), left)), expressions_1.Dynamic);\r\n        const compression = combi_1.seq(\"COMPRESSION\", combi_1.alt(\"ON\", \"OFF\"));\r\n        const hint = combi_1.seq(\"CODE PAGE HINT\", expressions_1.Source);\r\n        return combi_1.seq(\"EXPORT\", source, \"TO\", target, combi_1.opt(compression), combi_1.opt(hint));\r\n    }\r\n}\r\nexports.Export = Export;\r\n//# sourceMappingURL=export.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export_dynpro.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export_dynpro.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExportDynpro = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ExportDynpro {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"EXPORT DYNPRO\", expressions_1.Source, expressions_1.Source, expressions_1.Source, expressions_1.Source, \"ID\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ExportDynpro = ExportDynpro;\r\n//# sourceMappingURL=export_dynpro.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export_dynpro.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/extract.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/extract.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Extract = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Extract {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"EXTRACT\", combi_1.opt(expressions_1.Field));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Extract = Extract;\r\n//# sourceMappingURL=extract.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/extract.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fetch_next_cursor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fetch_next_cursor.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FetchNextCursor = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst sql_into_structure_1 = __webpack_require__(/*! ../expressions/sql_into_structure */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/sql_into_structure.js\");\r\nclass FetchNextCursor {\r\n    getMatcher() {\r\n        const size = combi_1.seq(\"PACKAGE SIZE\", expressions_1.SQLSource);\r\n        const ret = combi_1.seq(\"FETCH NEXT CURSOR\", expressions_1.SQLSource, combi_1.alt(sql_into_structure_1.SQLIntoStructure, expressions_1.SQLIntoTable), combi_1.opt(size));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.FetchNextCursor = FetchNextCursor;\r\n//# sourceMappingURL=fetch_next_cursor.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fetch_next_cursor.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/field_group.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/field_group.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldGroup = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass FieldGroup {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"FIELD-GROUPS\", combi_1.plus(expressions_1.Field));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.FieldGroup = FieldGroup;\r\n//# sourceMappingURL=field_group.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/field_group.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fields.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fields.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Fields = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Fields {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"FIELDS\", expressions_1.FieldSub);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Fields = Fields;\r\n//# sourceMappingURL=fields.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fields.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fieldsymbol.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fieldsymbol.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldSymbol = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FieldSymbol {\r\n    getMatcher() {\r\n        const stru = combi_1.seq(\"STRUCTURE\", expressions_1.TypeName, \"DEFAULT\", expressions_1.Field);\r\n        return combi_1.seq(\"FIELD-SYMBOLS\", expressions_1.FieldSymbol, combi_1.opt(combi_1.alt(expressions_1.Type, expressions_1.TypeTable, stru)));\r\n    }\r\n}\r\nexports.FieldSymbol = FieldSymbol;\r\n//# sourceMappingURL=fieldsymbol.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fieldsymbol.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/find.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/find.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Find = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Find {\r\n    getMatcher() {\r\n        // SUBMATCHES handling is a workaround\r\n        const options = combi_1.per(\"IGNORING CASE\", \"RESPECTING CASE\", \"IN BYTE MODE\", \"IN CHARACTER MODE\", combi_1.seq(\"OF\", expressions_1.Source), combi_1.seq(\"FROM\", expressions_1.Source), combi_1.seq(\"TO\", expressions_1.Source), combi_1.seq(\"MATCH OFFSET\", expressions_1.Target), combi_1.seq(\"MATCH LINE\", expressions_1.Target), combi_1.seq(\"MATCH COUNT\", expressions_1.Target), combi_1.seq(\"MATCH LENGTH\", expressions_1.Target), combi_1.seq(\"LENGTH\", expressions_1.Source), combi_1.seq(\"RESULTS\", expressions_1.Target), combi_1.seq(\"SUBMATCHES\", expressions_1.Target), combi_1.seq(\"SUBMATCHES\", expressions_1.Target, expressions_1.Target), combi_1.seq(\"SUBMATCHES\", combi_1.plus(expressions_1.Target)));\r\n        const sectionLength = combi_1.seq(\"SECTION LENGTH\", expressions_1.Source, \"OF\");\r\n        const before = combi_1.seq(combi_1.optPrio(combi_1.alt(\"TABLE\", \"SECTION OFFSET\", sectionLength)), expressions_1.Source);\r\n        const ret = combi_1.seq(\"FIND\", combi_1.opt(combi_1.alt(\"FIRST OCCURRENCE OF\", \"ALL OCCURRENCES OF\")), combi_1.opt(combi_1.alt(\"REGEX\", \"SUBSTRING\")), expressions_1.Source, \"IN\", before, combi_1.opt(options));\r\n        return ret;\r\n    }\r\n}\r\nexports.Find = Find;\r\n//# sourceMappingURL=find.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/find.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/form.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/form.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Form = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Form {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"FORM\", expressions_1.FormName, combi_1.opt(expressions_1.FormTables), combi_1.opt(expressions_1.FormUsing), combi_1.opt(expressions_1.FormChanging), combi_1.opt(expressions_1.FormRaising));\r\n        return ret;\r\n    }\r\n}\r\nexports.Form = Form;\r\n//# sourceMappingURL=form.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/form.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/format.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/format.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Format = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Format {\r\n    getMatcher() {\r\n        const eq = combi_1.seq(\"=\", expressions_1.Source);\r\n        const value = combi_1.altPrio(eq, \"ON\", \"OFF\");\r\n        const options = combi_1.per(\"RESET\", combi_1.seq(\"INTENSIFIED\", combi_1.opt(value)), combi_1.seq(\"INVERSE\", combi_1.opt(value)), combi_1.seq(\"HOTSPOT\", combi_1.opt(value)), combi_1.seq(\"FRAMES\", value), combi_1.seq(\"INPUT\", value), expressions_1.Color);\r\n        const ret = combi_1.seq(\"FORMAT\", options);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Format = Format;\r\n//# sourceMappingURL=format.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/format.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Free = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Free {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"FREE\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Free = Free;\r\n//# sourceMappingURL=free.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_memory.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_memory.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FreeMemory = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass FreeMemory {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"FREE MEMORY\", combi_1.optPrio(combi_1.seq(\"ID\", expressions_1.Source)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.FreeMemory = FreeMemory;\r\n//# sourceMappingURL=free_memory.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_memory.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_object.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_object.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FreeObject = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass FreeObject {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"FREE OBJECT\", expressions_1.Target, combi_1.opt(\"NO FLUSH\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.FreeObject = FreeObject;\r\n//# sourceMappingURL=free_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_module.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_module.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionModule = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FunctionModule {\r\n    getMatcher() {\r\n        return combi_1.seq(\"FUNCTION\", expressions_1.Field);\r\n    }\r\n}\r\nexports.FunctionModule = FunctionModule;\r\n//# sourceMappingURL=function_module.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_module.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_pool.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_pool.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionPool = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass FunctionPool {\r\n    getMatcher() {\r\n        const message = combi_1.seq(\"MESSAGE-ID\", expressions_1.MessageClass);\r\n        const line = combi_1.seq(\"LINE-SIZE\", expressions_1.Integer);\r\n        const no = combi_1.str(\"NO STANDARD PAGE HEADING\");\r\n        return combi_1.seq(\"FUNCTION-POOL\", expressions_1.Field, combi_1.opt(combi_1.per(message, line, no)));\r\n    }\r\n}\r\nexports.FunctionPool = FunctionPool;\r\n//# sourceMappingURL=function_pool.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_pool.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_dynpro.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_dynpro.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GenerateDynpro = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GenerateDynpro {\r\n    getMatcher() {\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Target);\r\n        const word = combi_1.seq(\"WORD\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"GENERATE DYNPRO\", expressions_1.Source, expressions_1.Source, expressions_1.Source, expressions_1.Source, \"ID\", expressions_1.Source, \"MESSAGE\", expressions_1.Target, combi_1.per(line, word));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GenerateDynpro = GenerateDynpro;\r\n//# sourceMappingURL=generate_dynpro.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_dynpro.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_report.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_report.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GenerateReport = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GenerateReport {\r\n    getMatcher() {\r\n        const without = combi_1.str(\"WITHOUT SELECTION-SCREEN\");\r\n        const message = combi_1.seq(\"MESSAGE\", expressions_1.Target);\r\n        const include = combi_1.seq(\"INCLUDE\", expressions_1.Target);\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Target);\r\n        const word = combi_1.seq(\"WORD\", expressions_1.Target);\r\n        const offset = combi_1.seq(\"OFFSET\", expressions_1.Target);\r\n        const headers = combi_1.str(\"WITH PRECOMPILED HEADERS\");\r\n        const test = combi_1.str(\"WITH TEST CODE\");\r\n        const messageid = combi_1.seq(\"MESSAGE-ID\", expressions_1.Target);\r\n        const trace = combi_1.seq(\"TRACE-FILE\", expressions_1.Target);\r\n        const shortdumpid = combi_1.seq(\"SHORTDUMP-ID\", expressions_1.Target);\r\n        const directory = combi_1.seq(\"DIRECTORY ENTRY\", expressions_1.Target);\r\n        const options = combi_1.per(without, message, include, trace, line, word, offset, headers, test, messageid, shortdumpid, directory);\r\n        const ret = combi_1.seq(\"GENERATE REPORT\", expressions_1.Source, combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GenerateReport = GenerateReport;\r\n//# sourceMappingURL=generate_report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_subroutine.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_subroutine.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GenerateSubroutine = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GenerateSubroutine {\r\n    getMatcher() {\r\n        const name = combi_1.seq(\"NAME\", expressions_1.Source);\r\n        const message = combi_1.seq(\"MESSAGE\", expressions_1.Target);\r\n        const messageid = combi_1.seq(\"MESSAGE-ID\", expressions_1.Target);\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Target);\r\n        const word = combi_1.seq(\"WORD\", expressions_1.Target);\r\n        const offset = combi_1.seq(\"OFFSET\", expressions_1.Target);\r\n        const short = combi_1.seq(\"SHORTDUMP-ID\", expressions_1.Target);\r\n        const include = combi_1.seq(\"INCLUDE\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"GENERATE SUBROUTINE POOL\", expressions_1.Source, combi_1.per(name, message, line, word, include, offset, messageid, short));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GenerateSubroutine = GenerateSubroutine;\r\n//# sourceMappingURL=generate_subroutine.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_subroutine.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Get = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Get {\r\n    getMatcher() {\r\n        const fields = combi_1.seq(\"FIELDS\", combi_1.plus(expressions_1.Field));\r\n        const options = combi_1.per(\"LATE\", fields);\r\n        const ret = combi_1.seq(\"GET\", expressions_1.Target, combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Get = Get;\r\n//# sourceMappingURL=get.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_badi.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_badi.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetBadi = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetBadi {\r\n    getMatcher() {\r\n        const filters = combi_1.seq(\"FILTERS\", expressions_1.ParameterListS);\r\n        const context = combi_1.seq(\"CONTEXT\", expressions_1.Source);\r\n        const type = combi_1.seq(\"TYPE\", expressions_1.Dynamic);\r\n        const ret = combi_1.seq(\"GET BADI\", expressions_1.Target, combi_1.opt(type), combi_1.opt(filters), combi_1.opt(context));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetBadi = GetBadi;\r\n//# sourceMappingURL=get_badi.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_badi.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_bit.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_bit.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetBit = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass GetBit {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"GET BIT\", expressions_1.Source, \"OF\", expressions_1.Source, \"INTO\", expressions_1.Target);\r\n        return ret;\r\n    }\r\n}\r\nexports.GetBit = GetBit;\r\n//# sourceMappingURL=get_bit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_bit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_cursor.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_cursor.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetCursor = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetCursor {\r\n    getMatcher() {\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Target);\r\n        const field = combi_1.seq(\"FIELD\", expressions_1.Target);\r\n        const offset = combi_1.seq(\"OFFSET\", expressions_1.Target);\r\n        const value = combi_1.seq(\"VALUE\", expressions_1.Target);\r\n        const length = combi_1.seq(\"LENGTH\", expressions_1.Target);\r\n        const area = combi_1.seq(\"AREA\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"GET CURSOR\", combi_1.per(line, combi_1.opt(\"DISPLAY\"), field, offset, value, length, area));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetCursor = GetCursor;\r\n//# sourceMappingURL=get_cursor.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_cursor.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_dataset.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_dataset.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetDataset {\r\n    getMatcher() {\r\n        const position = combi_1.seq(\"POSITION\", expressions_1.Target);\r\n        const attr = combi_1.seq(\"ATTRIBUTES\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"GET DATASET\", expressions_1.Target, combi_1.opt(combi_1.per(position, attr)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetDataset = GetDataset;\r\n//# sourceMappingURL=get_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_locale.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_locale.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetLocale = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetLocale {\r\n    getMatcher() {\r\n        const country = combi_1.seq(\"COUNTRY\", expressions_1.Target);\r\n        const modifier = combi_1.seq(\"MODIFIER\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"GET LOCALE LANGUAGE\", expressions_1.Target, country, combi_1.opt(modifier));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetLocale = GetLocale;\r\n//# sourceMappingURL=get_locale.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_locale.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_parameter.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_parameter.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetParameter = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetParameter {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"GET PARAMETER ID\", expressions_1.Source, \"FIELD\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetParameter = GetParameter;\r\n//# sourceMappingURL=get_parameter.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_parameter.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_pf_status.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_pf_status.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetPFStatus = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetPFStatus {\r\n    getMatcher() {\r\n        const program = combi_1.seq(\"PROGRAM\", expressions_1.Source);\r\n        const excl = combi_1.seq(\"EXCLUDING\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"GET PF-STATUS\", expressions_1.Target, combi_1.opt(program), combi_1.opt(excl));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetPFStatus = GetPFStatus;\r\n//# sourceMappingURL=get_pf_status.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_pf_status.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_property.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_property.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetProperty = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetProperty {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"GET PROPERTY OF\", expressions_1.FieldSub, expressions_1.Source, \"=\", expressions_1.Source, combi_1.opt(\"NO FLUSH\"), combi_1.opt(expressions_1.OLEExporting));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetProperty = GetProperty;\r\n//# sourceMappingURL=get_property.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_property.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_reference.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_reference.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetReference = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass GetReference {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"GET REFERENCE OF\", expressions_1.Source, \"INTO\", expressions_1.Target);\r\n        return ret;\r\n    }\r\n}\r\nexports.GetReference = GetReference;\r\n//# sourceMappingURL=get_reference.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_reference.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_run_time.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_run_time.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetRunTime = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass GetRunTime {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"GET RUN TIME FIELD\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.GetRunTime = GetRunTime;\r\n//# sourceMappingURL=get_run_time.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_run_time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_time.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_time.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetTime = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass GetTime {\r\n    getMatcher() {\r\n        const options = combi_1.seq(combi_1.alt(\"STAMP FIELD\", \"FIELD\"), expressions_1.Target);\r\n        return combi_1.seq(\"GET TIME\", combi_1.opt(options));\r\n    }\r\n}\r\nexports.GetTime = GetTime;\r\n//# sourceMappingURL=get_time.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/hide.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/hide.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Hide = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Hide {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"HIDE\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Hide = Hide;\r\n//# sourceMappingURL=hide.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/hide.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/if.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/if.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.If = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass If {\r\n    getMatcher() {\r\n        return combi_1.seq(\"IF\", expressions_1.Cond);\r\n    }\r\n}\r\nexports.If = If;\r\n//# sourceMappingURL=if.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/if.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Import = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Import {\r\n    getMatcher() {\r\n        const dto = combi_1.seq(\"TO\", expressions_1.Target);\r\n        const client = combi_1.seq(\"CLIENT\", expressions_1.Source);\r\n        const id = combi_1.seq(\"ID\", expressions_1.Source);\r\n        const using = combi_1.seq(\"USING\", expressions_1.Source);\r\n        const cluster = combi_1.seq(expressions_1.NamespaceSimpleName, combi_1.tok(tokens_1.ParenLeft), combi_1.regex(/^[\\w$%\\^]{2}$/), combi_1.tok(tokens_1.ParenRightW));\r\n        const buffer = combi_1.seq(\"DATA BUFFER\", expressions_1.Source);\r\n        const memory = combi_1.seq(\"MEMORY ID\", expressions_1.Source);\r\n        const table = combi_1.seq(\"INTERNAL TABLE\", expressions_1.Source);\r\n        const shared = combi_1.seq(combi_1.alt(\"SHARED MEMORY\", \"SHARED BUFFER\"), cluster, combi_1.per(dto, client, id));\r\n        const database = combi_1.seq(\"DATABASE\", cluster, combi_1.per(dto, client, id, using));\r\n        const source = combi_1.alt(buffer, memory, database, table, shared);\r\n        const to = combi_1.plus(combi_1.seq(expressions_1.ComponentChainSimple, combi_1.alt(\"TO\", \"INTO\"), expressions_1.Target));\r\n        const toeq = combi_1.plus(combi_1.seq(combi_1.alt(expressions_1.ComponentChainSimple, expressions_1.FieldSymbol), \"=\", expressions_1.Target));\r\n        const target = combi_1.alt(toeq, to, expressions_1.Dynamic, combi_1.plus(expressions_1.Target));\r\n        const options = combi_1.per(\"ACCEPTING PADDING\", \"IGNORING CONVERSION ERRORS\", \"IN CHAR-TO-HEX MODE\", \"IGNORING STRUCTURE BOUNDARIES\", \"ACCEPTING TRUNCATION\", combi_1.seq(\"REPLACEMENT CHARACTER\", expressions_1.Source), combi_1.seq(\"CODE PAGE INTO\", expressions_1.Source), combi_1.seq(\"ENDIAN INTO\", expressions_1.Source));\r\n        const ret = combi_1.seq(\"IMPORT\", target, \"FROM\", source, combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Import = Import;\r\n//# sourceMappingURL=import.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_dynpro.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_dynpro.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ImportDynpro = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ImportDynpro {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"IMPORT DYNPRO\", expressions_1.Target, expressions_1.Target, expressions_1.Target, expressions_1.Target, \"ID\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ImportDynpro = ImportDynpro;\r\n//# sourceMappingURL=import_dynpro.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_dynpro.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_nametab.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_nametab.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ImportNametab = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ImportNametab {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"IMPORT NAMETAB\", expressions_1.Target, expressions_1.Target, \"ID\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ImportNametab = ImportNametab;\r\n//# sourceMappingURL=import_nametab.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_nametab.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Include = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Include {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"INCLUDE\", expressions_1.IncludeName, combi_1.opt(\"IF FOUND\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Include = Include;\r\n//# sourceMappingURL=include.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include_type.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include_type.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IncludeType = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Expressions = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass IncludeType {\r\n    getMatcher() {\r\n        const tas = combi_1.seq(\"AS\", Expressions.Field);\r\n        const renaming = combi_1.seq(\"RENAMING WITH SUFFIX\", Expressions.Source);\r\n        const ret = combi_1.seq(\"INCLUDE\", combi_1.alt(\"TYPE\", \"STRUCTURE\"), Expressions.TypeName, combi_1.opt(tas), combi_1.opt(renaming));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.IncludeType = IncludeType;\r\n//# sourceMappingURL=include_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n// do not include statement.ts in this file.\r\n// this file only contains \"real\" statements\r\n// sequence of exports is optimized for parsing and precedence\r\n// see statement.ts for Unknown, Empty, Macro and Comment statements\r\n__exportStar(__webpack_require__(/*! ./data */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./report */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/report.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./write */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/write.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endmethod */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmethod.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_implementation */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endform */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endform.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/form.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./import_nametab */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_nametab.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_select_options */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check_select_options.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_badi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_badi.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_data */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_data_begin */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_begin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_data_end */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_data_end.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./select_loop */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select_loop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./do */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/do.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./break_id */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break_id.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface_deferred */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_deferred.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./while */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/while.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./loop */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/loop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/check.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endprovide */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endprovide.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./if */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/if.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./convert_text */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert_text.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./log_point */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/log_point.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./window */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/window.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endif */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endif.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_enum */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_enum_begin */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_begin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_enum_end */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_end.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_run_time */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_run_time.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_group */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/field_group.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./print_control */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/print_control.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./extract */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/extract.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sum */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sum.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./end_of_page */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_page.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./generate_report */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_report.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./elseif */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/elseif.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./else */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/else.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./perform */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/perform.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./append */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/append.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./clear */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/clear.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./concatenate */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/concatenate.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enddo */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddo.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endclass */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endclass.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./try */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/try.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endtry */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endtry.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./assert */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assert.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./return */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/return.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endwhile */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwhile.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constant */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./catch */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./infotypes */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/infotypes.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./message */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/message.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./read_table */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_table.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endloop */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endloop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./case */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./create_object */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./select */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_local_friends */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_local_friends.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_deferred */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_deferred.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./fieldsymbol */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fieldsymbol.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_definition */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_implementation */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./translate */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/translate.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./exit */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exit.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endcase */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcase.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constant_begin */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_begin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constant_end */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/constant_end.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./when_others */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_others.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./when */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./continue */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/continue.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./assign */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_badi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_badi.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./suppress_dialog */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/suppress_dialog.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./hide */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/hide.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_locale */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_locale.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_locale */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_locale.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./commit */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./commit_entities */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/commit_entities.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./modify_entities */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_entities.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./read_entities */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_entities.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./rollback_entities */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback_entities.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./summary */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/summary.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./on_change */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/on_change.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./at_user_command */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_user_command.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./position */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/position.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./resume */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/resume.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./stop */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/stop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_pf_status */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_pf_status.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_report */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_report.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./controls */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/controls.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./at_line_selection */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_line_selection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./new_page */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_page.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_property */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_property.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./scroll_list */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scroll_list.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./load_of_program */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_of_program.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./top_of_page */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/top_of_page.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./truncate_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/truncate_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_update_task */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_update_task.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_user_command */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_user_command.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./rollback */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_internal */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_internal.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_database */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_database.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./free_memory */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_memory.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./catch_system_exceptions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/catch_system_exceptions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endcatch */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endcatch.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./assign_local_copy */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/assign_local_copy.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_extended_check */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_extended_check.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./split */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/split.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./new_line */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_line.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./free_object */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sort */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./replace */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/replace.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./with_loop */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with_loop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./with */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endwith */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endwith.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./condense */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/condense.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./insert_internal */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_internal.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./insert_database */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_database.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./insert_field_group */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_field_group.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./update_database */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/update_database.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./modify_database */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_database.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./modify_internal */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_internal.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./raise */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./define */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/define.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enddefine */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enddefine.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./find */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/find.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./move */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./move_corresponding */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move_corresponding.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_time */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_time.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enhancement_point */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_point.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enhancement_section */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement_section.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./end_enhancement_section */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement_section.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_handler */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_handler.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_left */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_left.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./pack */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/pack.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./case_type */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/case_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./when_type */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./exec_sql */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/exec_sql.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./open_cursor */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_cursor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./communication */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/communication.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./generate_subroutine */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_subroutine.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./reject */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reject.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./load_report */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_report.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./private */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/private.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./system_call */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/system_call.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_language */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_language.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_dialog */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_dialog.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./protected */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/protected.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./public */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/public.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./nodes */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/nodes.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./demand */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/demand.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./supply */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/supply.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./fields */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fields.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_cluster */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_cluster.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_margin */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_margin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_database */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_database.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./contexts */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/contexts.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endinterface */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endinterface.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/parameter.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./include */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./collect */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/collect.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ranges */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/ranges.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./events */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/events.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./receive */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/receive.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./back */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/back.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./add_corresponding */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add_corresponding.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./subtract_corresponding */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract_corresponding.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./static_begin */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_begin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./static_end */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_end.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./tables */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/tables.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./local */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/local.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./add */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/add.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./describe */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/describe.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./submit */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/submit.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./scan */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scan.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./export */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./import */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./at */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./put */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/put.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endat */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endat.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endselect */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endselect.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./refresh */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./shift */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/shift.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./transfer */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/transfer.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./subtract */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unassign */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unassign.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./open_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./close_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface_load */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_load.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./close_cursor */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/close_cursor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./leave */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/leave.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_definition_load */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/class_definition_load.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./initialization */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/initialization.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./start_of_selection */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/start_of_selection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_blank */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_blank.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./export_dynpro */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/export_dynpro.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./end_of_selection */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_of_selection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./search */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/search.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./modify_line */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_line.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./selectionscreen */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectionscreen.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./free */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/free.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endon */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endon.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./fetch_next_cursor */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/fetch_next_cursor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./reserve */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reserve.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./refresh_control */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh_control.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_dynpro */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_dynpro.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./generate_dynpro */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/generate_dynpro.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./detail */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/detail.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./editor_call */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/editor_call.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./break */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/break.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_textpool */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_textpool.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./selectoption */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectoption.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./convert */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/convert.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./static */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./compute */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/compute.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./multiply */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/multiply.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./divide */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/divide.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./format */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/format.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./syntax_check */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/syntax_check.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./aliases */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/aliases.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_def */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_def.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface_def */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_def.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./at_selection_screen */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/at_selection_screen.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./include_type */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/include_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./import_dynpro */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/import_dynpro.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_function */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_function.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_selection_screen */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_selection_screen.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_transformation */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transformation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./read_line */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_line.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./read_textpool */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_textpool.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./read_report */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_report.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./read_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_bit */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_bit.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_reference */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_reference.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./insert_report */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_report.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./insert_textpool */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_textpool.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_bit */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_bit.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_run_time */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_run_time.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_parameter */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_parameter.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./create_data */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_data.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_country */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_country.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_module */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_module.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_pools */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pools.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_pool */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pool.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./wait */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/wait.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./overlay */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/overlay.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_screen */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_screen.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_cursor */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_cursor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_screen */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_screen.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_pf_status */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_pf_status.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_titlebar */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_titlebar.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./program */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/program.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_pool */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/function_pool.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./module */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/module.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endmodule */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endmodule.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endfunction */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endfunction.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./retry */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/retry.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./authority_check */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/authority_check.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_parameter */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_parameter.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./get_cursor */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/get_cursor.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_kernel */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_kernel.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_transaction */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_transaction.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unpack */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unpack.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./skip */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/skip.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./uline */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/uline.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_begin */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_begin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_end */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/data_end.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_begin */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_begin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_end */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_end.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./raise_event */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise_event.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cleanup */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/cleanup.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./create_ole */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/create_ole.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_ole */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/call_ole.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./set_property */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_property.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./test_injection */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_injection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./end_test_injection */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_injection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./test_seam */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_seam.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./end_test_seam */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_test_seam.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./delete_memory */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/delete_memory.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./provide */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/provide.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./endexec */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/endexec.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sort_dataset */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort_dataset.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enhancement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/enhancement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./end_enhancement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/end_enhancement.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/infotypes.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/infotypes.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Infotypes = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Infotypes {\r\n    getMatcher() {\r\n        const occurs = combi_1.seq(\"OCCURS\", expressions_1.Constant);\r\n        const name = combi_1.seq(\"NAME\", expressions_1.Field);\r\n        const ret = combi_1.seq(\"INFOTYPES\", expressions_1.Constant, combi_1.optPrio(occurs), combi_1.optPrio(name));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Infotypes = Infotypes;\r\n//# sourceMappingURL=infotypes.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/infotypes.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/initialization.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/initialization.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Initialization = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Initialization {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"INITIALIZATION\");\r\n    }\r\n}\r\nexports.Initialization = Initialization;\r\n//# sourceMappingURL=initialization.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/initialization.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_database.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_database.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertDatabase = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass InsertDatabase {\r\n    getMatcher() {\r\n        const client = combi_1.str(\"CLIENT SPECIFIED\");\r\n        const sub = combi_1.seq(combi_1.tok(tokens_1.WParenLeftW), expressions_1.Select, combi_1.tok(tokens_1.WParenRightW));\r\n        const f = combi_1.seq(combi_1.opt(client), combi_1.opt(expressions_1.DatabaseConnection), \"FROM\", combi_1.opt(\"TABLE\"), combi_1.alt(expressions_1.SQLSource, sub), combi_1.opt(\"ACCEPTING DUPLICATE KEYS\"));\r\n        const from = combi_1.seq(expressions_1.DatabaseTable, combi_1.opt(combi_1.alt(f, client, expressions_1.DatabaseConnection)));\r\n        const into = combi_1.seq(\"INTO\", expressions_1.DatabaseTable, combi_1.opt(\"CLIENT SPECIFIED\"), combi_1.opt(expressions_1.DatabaseConnection), \"VALUES\", expressions_1.SQLSource);\r\n        return combi_1.seq(\"INSERT\", combi_1.alt(from, into));\r\n    }\r\n}\r\nexports.InsertDatabase = InsertDatabase;\r\n//# sourceMappingURL=insert_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_field_group.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_field_group.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertFieldGroup = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InsertFieldGroup {\r\n    getMatcher() {\r\n        const into = combi_1.seq(\"INTO\", expressions_1.Target);\r\n        const src = combi_1.alt(combi_1.ver(version_1.Version.v740sp02, combi_1.plus(expressions_1.Source)), combi_1.plus(expressions_1.SimpleSource1));\r\n        const ret = combi_1.seq(\"INSERT\", src, into);\r\n        return ret;\r\n    }\r\n}\r\nexports.InsertFieldGroup = InsertFieldGroup;\r\n//# sourceMappingURL=insert_field_group.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_field_group.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_internal.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_internal.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertInternal = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InsertInternal {\r\n    getMatcher() {\r\n        const target = combi_1.alt(expressions_1.Source, expressions_1.Dynamic);\r\n        const assigning = combi_1.seq(\"ASSIGNING\", expressions_1.FSTarget);\r\n        const ref = combi_1.seq(\"REFERENCE INTO\", expressions_1.Target);\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const initial = combi_1.str(\"INITIAL LINE\");\r\n        const into = combi_1.seq(\"INTO\", combi_1.opt(\"TABLE\"), expressions_1.Target);\r\n        const to = combi_1.seq(\"TO\", expressions_1.Source);\r\n        const from = combi_1.seq(\"FROM\", expressions_1.Source, combi_1.opt(to));\r\n        const foo = combi_1.per(into, ref, index, assigning);\r\n        const lines = combi_1.seq(\"LINES OF\", target, combi_1.opt(from));\r\n        const src = combi_1.alt(combi_1.ver(version_1.Version.v740sp02, expressions_1.Source), expressions_1.SimpleSource1);\r\n        const tab = combi_1.seq(\"TABLE\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"INSERT\", combi_1.altPrio(tab, combi_1.seq(combi_1.altPrio(initial, lines, src), foo)));\r\n        return ret;\r\n    }\r\n}\r\nexports.InsertInternal = InsertInternal;\r\n//# sourceMappingURL=insert_internal.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_report.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_report.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertReport = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass InsertReport {\r\n    getMatcher() {\r\n        const options = combi_1.per(combi_1.seq(\"STATE\", expressions_1.Source), combi_1.seq(\"EXTENSION TYPE\", expressions_1.Source), combi_1.seq(\"DIRECTORY ENTRY\", expressions_1.Source), combi_1.seq(\"UNICODE ENABLING\", expressions_1.Source), combi_1.seq(\"PROGRAM TYPE\", expressions_1.Source), combi_1.seq(\"VERSION\", expressions_1.Source), combi_1.seq(\"FIXED-POINT ARITHMETIC\", expressions_1.Source), \"KEEPING DIRECTORY ENTRY\");\r\n        const ret = combi_1.seq(\"INSERT REPORT\", expressions_1.Source, \"FROM\", expressions_1.Source, combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.InsertReport = InsertReport;\r\n//# sourceMappingURL=insert_report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_textpool.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_textpool.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertTextpool = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass InsertTextpool {\r\n    getMatcher() {\r\n        const state = combi_1.seq(\"STATE\", expressions_1.Source);\r\n        const language = combi_1.seq(\"LANGUAGE\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"INSERT TEXTPOOL\", expressions_1.Source, \"FROM\", expressions_1.Source, combi_1.opt(language), combi_1.opt(state));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.InsertTextpool = InsertTextpool;\r\n//# sourceMappingURL=insert_textpool.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/insert_textpool.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Interface = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Interface {\r\n    getMatcher() {\r\n        return combi_1.seq(\"INTERFACE\", expressions_1.InterfaceName, combi_1.opt(expressions_1.ClassGlobal));\r\n    }\r\n}\r\nexports.Interface = Interface;\r\n//# sourceMappingURL=interface.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_def.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_def.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InterfaceDef = void 0;\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InterfaceDef {\r\n    getMatcher() {\r\n        const val = combi_1.seq(expressions_1.AttributeName, \"=\", expressions_1.Source);\r\n        const dataValues = combi_1.seq(\"DATA VALUES\", combi_1.plus(val));\r\n        const options = combi_1.alt(expressions_1.AbstractMethods, expressions_1.FinalMethods, \"ALL METHODS ABSTRACT\", \"ALL METHODS FINAL\", combi_1.ver(version_1.Version.v740sp02, \"PARTIALLY IMPLEMENTED\"));\r\n        return combi_1.seq(\"INTERFACES\", expressions_1.InterfaceName, combi_1.opt(options), combi_1.opt(dataValues));\r\n    }\r\n}\r\nexports.InterfaceDef = InterfaceDef;\r\n//# sourceMappingURL=interface_def.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_def.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_deferred.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_deferred.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InterfaceDeferred = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InterfaceDeferred {\r\n    getMatcher() {\r\n        return combi_1.seq(\"INTERFACE\", expressions_1.InterfaceName, \"DEFERRED\", combi_1.opt(\"PUBLIC\"));\r\n    }\r\n}\r\nexports.InterfaceDeferred = InterfaceDeferred;\r\n//# sourceMappingURL=interface_deferred.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_deferred.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_load.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_load.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InterfaceLoad = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InterfaceLoad {\r\n    getMatcher() {\r\n        return combi_1.seq(\"INTERFACE\", expressions_1.InterfaceName, \"LOAD\");\r\n    }\r\n}\r\nexports.InterfaceLoad = InterfaceLoad;\r\n//# sourceMappingURL=interface_load.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/interface_load.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/leave.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/leave.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Leave = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Leave {\r\n    getMatcher() {\r\n        const retu = combi_1.seq(expressions_1.AndReturn, \"TO SCREEN\", expressions_1.Source);\r\n        const transaction = combi_1.seq(\"TO TRANSACTION\", expressions_1.Source, combi_1.opt(\"AND SKIP FIRST SCREEN\"));\r\n        const ret = combi_1.seq(\"LEAVE\", combi_1.opt(combi_1.alt(\"TO CURRENT TRANSACTION\", combi_1.seq(combi_1.opt(\"TO\"), \"LIST-PROCESSING\", combi_1.opt(retu)), \"LIST-PROCESSING\", \"SCREEN\", transaction, \"PROGRAM\", combi_1.seq(\"TO SCREEN\", expressions_1.Source))));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Leave = Leave;\r\n//# sourceMappingURL=leave.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/leave.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_of_program.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_of_program.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LoadOfProgram = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass LoadOfProgram {\r\n    getMatcher() {\r\n        const ret = combi_1.str(\"LOAD-OF-PROGRAM\");\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.LoadOfProgram = LoadOfProgram;\r\n//# sourceMappingURL=load_of_program.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_of_program.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_report.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_report.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LoadReport = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass LoadReport {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"LOAD REPORT\", expressions_1.Source, \"PART\", expressions_1.Source, \"INTO\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.LoadReport = LoadReport;\r\n//# sourceMappingURL=load_report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/load_report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/local.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/local.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Local = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Local {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"LOCAL\", expressions_1.FieldSub, combi_1.opt(expressions_1.TableBody));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Local = Local;\r\n//# sourceMappingURL=local.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/local.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/log_point.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/log_point.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LogPoint = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass LogPoint {\r\n    getMatcher() {\r\n        const subkey = combi_1.seq(\"SUBKEY\", expressions_1.Source);\r\n        const fields = combi_1.seq(\"FIELDS\", combi_1.plus(expressions_1.Source));\r\n        const ret = combi_1.seq(\"LOG-POINT ID\", expressions_1.NamespaceSimpleName, combi_1.opt(subkey), combi_1.opt(fields));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.LogPoint = LogPoint;\r\n//# sourceMappingURL=log_point.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/log_point.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/loop.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/loop.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Loop = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst simple_source2_1 = __webpack_require__(/*! ../expressions/simple_source2 */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/simple_source2.js\");\r\nclass Loop {\r\n    getMatcher() {\r\n        const where = combi_1.seq(\"WHERE\", combi_1.alt(expressions_1.ComponentCond, expressions_1.Dynamic));\r\n        const groupSize = combi_1.seq(expressions_1.ComponentName, \"=\", \"GROUP SIZE\");\r\n        const components = combi_1.seq(combi_1.tok(tokens_1.WParenLeftW), combi_1.plus(combi_1.alt(expressions_1.ComponentCompare, groupSize)), combi_1.tok(tokens_1.WParenRightW));\r\n        const into = combi_1.seq(combi_1.opt(\"REFERENCE\"), \"INTO\", expressions_1.Target);\r\n        const assigning = combi_1.seq(\"ASSIGNING\", expressions_1.FSTarget);\r\n        const group = combi_1.ver(version_1.Version.v740sp08, combi_1.seq(\"GROUP BY\", combi_1.alt(expressions_1.Source, components), combi_1.optPrio(\"ASCENDING\"), combi_1.optPrio(\"WITHOUT MEMBERS\"), combi_1.optPrio(combi_1.alt(into, assigning))));\r\n        const target = combi_1.alt(combi_1.seq(combi_1.alt(into, assigning), combi_1.optPrio(\"CASTING\")), \"TRANSPORTING NO FIELDS\");\r\n        const from = combi_1.seq(\"FROM\", expressions_1.Source);\r\n        const to = combi_1.seq(\"TO\", expressions_1.Source);\r\n        const usingKey = combi_1.seq(\"USING KEY\", combi_1.altPrio(expressions_1.SimpleName, expressions_1.Dynamic));\r\n        const options = combi_1.per(target, from, to, where, usingKey, group);\r\n        const at = combi_1.seq(\"AT\", combi_1.opt(combi_1.ver(version_1.Version.v740sp08, \"GROUP\")), combi_1.alt(simple_source2_1.SimpleSource2, combi_1.ver(version_1.Version.v740sp02, expressions_1.Source)), combi_1.opt(options));\r\n        return combi_1.seq(\"LOOP\", combi_1.opt(at));\r\n    }\r\n}\r\nexports.Loop = Loop;\r\n//# sourceMappingURL=loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/message.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/message.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Message = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Message {\r\n    getMatcher() {\r\n        const s = combi_1.alt(combi_1.ver(version_1.Version.v740sp02, expressions_1.Source), expressions_1.SimpleSource3);\r\n        const like = combi_1.seq(\"DISPLAY LIKE\", expressions_1.Source);\r\n        const into = combi_1.seq(\"INTO\", expressions_1.Target);\r\n        const raising = combi_1.seq(\"RAISING\", expressions_1.ExceptionName);\r\n        const options = combi_1.per(like, into, raising);\r\n        const type = combi_1.seq(\"TYPE\", expressions_1.Source);\r\n        const sou = combi_1.altPrio(options, expressions_1.Source);\r\n        const sourc = combi_1.alt(sou, combi_1.seq(s, sou), combi_1.seq(s, s, sou), combi_1.seq(s, s, s, options));\r\n        const mwith = combi_1.seq(\"WITH\", s, combi_1.opt(sourc));\r\n        const foo = combi_1.seq(expressions_1.MessageSource, combi_1.opt(options), combi_1.opt(mwith));\r\n        const text = combi_1.seq(s, type, combi_1.optPrio(like), combi_1.optPrio(raising));\r\n        const ret = combi_1.seq(\"MESSAGE\", combi_1.altPrio(foo, text));\r\n        return ret;\r\n    }\r\n}\r\nexports.Message = Message;\r\n//# sourceMappingURL=message.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/message.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_def.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_def.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDef = void 0;\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodDef {\r\n    getMatcher() {\r\n        const exceptions = combi_1.seq(\"EXCEPTIONS\", combi_1.plusPrio(expressions_1.NamespaceSimpleName));\r\n        const def = combi_1.ver(version_1.Version.v740sp08, combi_1.seq(\"DEFAULT\", combi_1.altPrio(\"FAIL\", \"IGNORE\")));\r\n        const parameters = combi_1.seq(combi_1.optPrio(combi_1.altPrio(\"FINAL\", def, expressions_1.Abstract)), combi_1.optPrio(expressions_1.MethodDefImporting), combi_1.optPrio(expressions_1.MethodDefExporting), combi_1.optPrio(expressions_1.MethodDefChanging), combi_1.optPrio(expressions_1.MethodDefReturning), combi_1.optPrio(combi_1.altPrio(expressions_1.MethodDefRaising, exceptions)));\r\n        const testing = combi_1.seq(combi_1.optPrio(expressions_1.Abstract), \"FOR TESTING\", combi_1.optPrio(combi_1.altPrio(expressions_1.MethodDefRaising, exceptions)));\r\n        // todo, this is only from version something\r\n        const tableFunction = combi_1.seq(\"FOR TABLE FUNCTION\", combi_1.regex(/^\\w+?$/));\r\n        // todo, this is only from version something\r\n        const ddl = \"FOR DDL OBJECT OPTIONS CDS SESSION CLIENT REQUIRED\";\r\n        // todo, this is only from version something\r\n        const amdp = \"AMDP OPTIONS CDS SESSION CLIENT current\";\r\n        const ret = combi_1.seq(combi_1.altPrio(\"CLASS-METHODS\", \"METHODS\"), expressions_1.MethodName, combi_1.alt(combi_1.seq(combi_1.optPrio(expressions_1.Abstract), expressions_1.EventHandler), parameters, testing, tableFunction, ddl, amdp, \"NOT AT END OF MODE\", combi_1.optPrio(expressions_1.Redefinition)));\r\n        return ret;\r\n    }\r\n}\r\nexports.MethodDef = MethodDef;\r\n//# sourceMappingURL=method_def.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_def.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_implementation.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_implementation.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodImplementation = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodImplementation {\r\n    getMatcher() {\r\n        const name = combi_1.regex(/[\\w~]+/);\r\n        const kernel = combi_1.seq(\"KERNEL MODULE\", combi_1.plus(name), combi_1.optPrio(combi_1.altPrio(\"FAIL\", \"IGNORE\")));\r\n        const using = combi_1.seq(\"USING\", combi_1.plus(expressions_1.SimpleFieldChain));\r\n        const database = combi_1.seq(\"DATABASE\", combi_1.alt(\"PROCEDURE\", \"FUNCTION\", \"GRAPH WORKSPACE\"), \"FOR HDB\", expressions_1.Language, combi_1.opt(\"OPTIONS READ-ONLY\"), combi_1.opt(using));\r\n        const by = combi_1.seq(\"BY\", combi_1.alt(kernel, database));\r\n        return combi_1.seq(\"METHOD\", expressions_1.MethodName, combi_1.optPrio(by));\r\n    }\r\n}\r\nexports.MethodImplementation = MethodImplementation;\r\n//# sourceMappingURL=method_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_database.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_database.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModifyDatabase = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ModifyDatabase {\r\n    getMatcher() {\r\n        const from = combi_1.seq(\"FROM\", combi_1.opt(\"TABLE\"), expressions_1.SQLSource);\r\n        const client = combi_1.str(\"CLIENT SPECIFIED\");\r\n        const options = combi_1.per(expressions_1.DatabaseConnection, from, client);\r\n        return combi_1.seq(\"MODIFY\", expressions_1.DatabaseTable, options);\r\n    }\r\n}\r\nexports.ModifyDatabase = ModifyDatabase;\r\n//# sourceMappingURL=modify_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_entities.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_entities.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModifyEntities = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ModifyEntities {\r\n    getMatcher() {\r\n        const s = combi_1.seq(\"MODIFY ENTITIES OF\", expressions_1.SimpleName, \"ENTITY\", expressions_1.SimpleName, \"UPDATE SET FIELDS WITH\", expressions_1.Source, \"FAILED\", expressions_1.Target, \"REPORTED\", expressions_1.Target);\r\n        return combi_1.ver(version_1.Version.v754, s);\r\n    }\r\n}\r\nexports.ModifyEntities = ModifyEntities;\r\n//# sourceMappingURL=modify_entities.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_entities.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_internal.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_internal.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModifyInternal = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ModifyInternal {\r\n    getMatcher() {\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const from = combi_1.seq(\"FROM\", expressions_1.Source);\r\n        const transporting = combi_1.seq(\"TRANSPORTING\", combi_1.plus(combi_1.alt(expressions_1.FieldSub, expressions_1.Dynamic)));\r\n        const where = combi_1.seq(\"WHERE\", expressions_1.ComponentCond);\r\n        const assigning = combi_1.seq(\"ASSIGNING\", expressions_1.FSTarget);\r\n        const using = combi_1.seq(\"USING KEY\", expressions_1.SimpleName);\r\n        const additions = combi_1.per(where, assigning, using);\r\n        const target = combi_1.alt(expressions_1.Target, expressions_1.Dynamic);\r\n        const options = combi_1.alt(combi_1.per(index, transporting), combi_1.seq(from, combi_1.opt(combi_1.per(index, transporting))), combi_1.seq(combi_1.per(index, transporting), from, combi_1.opt(combi_1.per(index, transporting))));\r\n        const long = combi_1.seq(\"MODIFY\", combi_1.opt(\"TABLE\"), target, combi_1.opt(options), combi_1.opt(additions));\r\n        const simple = combi_1.seq(\"MODIFY TABLE\", target, from, combi_1.opt(using));\r\n        return combi_1.alt(long, simple);\r\n    }\r\n}\r\nexports.ModifyInternal = ModifyInternal;\r\n//# sourceMappingURL=modify_internal.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_line.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_line.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModifyLine = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ModifyLine {\r\n    getMatcher() {\r\n        const form = combi_1.seq(combi_1.alt(\"INVERSE\", \"INPUT\"), \"=\", expressions_1.Source);\r\n        const from = combi_1.seq(\"FROM\", expressions_1.Source);\r\n        const value = combi_1.seq(\"FIELD VALUE\", combi_1.plus(combi_1.seq(expressions_1.Source, combi_1.optPrio(from))));\r\n        const format = combi_1.seq(\"FIELD FORMAT\", expressions_1.Source, combi_1.opt(form));\r\n        const lineValue = combi_1.seq(\"LINE VALUE FROM\", expressions_1.Source);\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const page = combi_1.seq(\"OF PAGE\", expressions_1.Source);\r\n        const ocp = combi_1.str(\"OF CURRENT PAGE\");\r\n        const lineFormat = combi_1.seq(\"LINE FORMAT\", combi_1.alt(\"INPUT OFF\", \"INVERSE\", \"RESET\", \"INTENSIFIED\"));\r\n        const onOff = combi_1.alt(\"ON\", \"OFF\");\r\n        const intensified = combi_1.seq(\"INTENSIFIED\", onOff);\r\n        const options = combi_1.per(index, value, format, page, lineFormat, lineValue, ocp, intensified, expressions_1.Color);\r\n        const ret = combi_1.seq(\"MODIFY\", combi_1.alt(\"CURRENT LINE\", combi_1.seq(\"LINE\", expressions_1.Source)), combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ModifyLine = ModifyLine;\r\n//# sourceMappingURL=modify_line.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/modify_line.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/module.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/module.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Module = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Module {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"MODULE\", expressions_1.FormName, combi_1.opt(combi_1.alt(\"INPUT\", \"OUTPUT\")));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Module = Module;\r\n//# sourceMappingURL=module.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/module.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Move = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass Move {\r\n    getMatcher() {\r\n        const mov = combi_1.verNot(version_1.Version.Cloud, \"MOVE\");\r\n        const move = combi_1.seq(mov, combi_1.altPrio(combi_1.seq(\"EXACT\", expressions_1.Source, \"TO\", expressions_1.Target), combi_1.seq(expressions_1.Source, combi_1.altPrio(\"?TO\", \"TO\"), expressions_1.Target)));\r\n        const calcAssign = combi_1.ver(version_1.Version.v754, combi_1.alt(combi_1.seq(combi_1.tok(tokens_1.WPlus), \"=\"), combi_1.seq(combi_1.tok(tokens_1.WDash), \"=\"), \"/=\", \"*=\", \"&&=\"));\r\n        const equals = combi_1.altPrio(combi_1.altPrio(\"=\", \"?=\"), calcAssign);\r\n        // todo, move \"?=\" to CAST?\r\n        const eq = combi_1.seq(combi_1.plus(combi_1.seq(expressions_1.Target, equals)), expressions_1.Source);\r\n        return combi_1.altPrio(move, eq);\r\n    }\r\n}\r\nexports.Move = Move;\r\n//# sourceMappingURL=move.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move_corresponding.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move_corresponding.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MoveCorresponding = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass MoveCorresponding {\r\n    getMatcher() {\r\n        const keeping = combi_1.ver(version_1.Version.v740sp05, \"KEEPING TARGET LINES\");\r\n        const expanding = combi_1.ver(version_1.Version.v740sp05, \"EXPANDING NESTED TABLES\");\r\n        const move = combi_1.seq(\"MOVE-CORRESPONDING\", combi_1.optPrio(\"EXACT\"), expressions_1.Source, \"TO\", expressions_1.Target, combi_1.optPrio(expanding), combi_1.optPrio(keeping));\r\n        return move;\r\n    }\r\n}\r\nexports.MoveCorresponding = MoveCorresponding;\r\n//# sourceMappingURL=move_corresponding.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/move_corresponding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/multiply.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/multiply.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Multiply = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Multiply {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"MULTIPLY\", expressions_1.Target, \"BY\", expressions_1.Source);\r\n        return ret;\r\n    }\r\n}\r\nexports.Multiply = Multiply;\r\n//# sourceMappingURL=multiply.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/multiply.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_line.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_line.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NewLine = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass NewLine {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"NEW-LINE\", combi_1.opt(combi_1.alt(\"SCROLLING\", \"NO-SCROLLING\")));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.NewLine = NewLine;\r\n//# sourceMappingURL=new_line.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_line.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_page.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_page.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NewPage = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass NewPage {\r\n    getMatcher() {\r\n        const line = combi_1.seq(\"LINE-SIZE\", expressions_1.Source);\r\n        const print = combi_1.seq(\"PRINT\", combi_1.alt(\"OFF\", \"ON\"));\r\n        const parameters = combi_1.seq(\"PARAMETERS\", expressions_1.Source);\r\n        const destination = combi_1.seq(\"DESTINATION\", expressions_1.Source);\r\n        const archive = combi_1.seq(\"ARCHIVE PARAMETERS\", expressions_1.Source);\r\n        const lineCount = combi_1.seq(\"LINE-COUNT\", expressions_1.Source);\r\n        const coverText = combi_1.seq(\"COVER TEXT\", expressions_1.Source);\r\n        const coverPage = combi_1.seq(\"SAP COVER PAGE\", expressions_1.Source);\r\n        const immediately = combi_1.seq(\"IMMEDIATELY\", expressions_1.Source);\r\n        const keep = combi_1.seq(\"KEEP IN SPOOL\", expressions_1.Source);\r\n        const layout = combi_1.seq(\"LAYOUT\", expressions_1.Source);\r\n        const listAuth = combi_1.seq(\"LIST AUTHORITY\", expressions_1.Source);\r\n        const dataset = combi_1.seq(\"LIST DATASET\", expressions_1.Source);\r\n        const name = combi_1.seq(\"LIST NAME\", expressions_1.Source);\r\n        const newList = combi_1.seq(\"NEW LIST IDENTIFICATION\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"NEW-PAGE\", combi_1.opt(combi_1.per(print, combi_1.alt(\"NO-TITLE\", \"WITH-TITLE\"), combi_1.alt(\"NO-HEADING\", \"WITH-HEADING\"), \"NO DIALOG\", parameters, listAuth, immediately, dataset, coverPage, newList, keep, name, layout, destination, coverText, archive, \"NEW-SECTION\", lineCount, line)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.NewPage = NewPage;\r\n//# sourceMappingURL=new_page.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/new_page.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/nodes.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/nodes.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Nodes = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Nodes {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"NODES\", expressions_1.Field);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Nodes = Nodes;\r\n//# sourceMappingURL=nodes.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/nodes.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/on_change.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/on_change.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OnChange = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass OnChange {\r\n    getMatcher() {\r\n        const or = combi_1.seq(\"OR\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"ON CHANGE OF\", expressions_1.Target, combi_1.star(or));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.OnChange = OnChange;\r\n//# sourceMappingURL=on_change.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/on_change.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_cursor.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_cursor.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OpenCursor = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass OpenCursor {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"OPEN CURSOR\", combi_1.optPrio(\"WITH HOLD\"), expressions_1.SQLTarget, \"FOR\", expressions_1.Select, combi_1.optPrio(expressions_1.SQLHints));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.OpenCursor = OpenCursor;\r\n//# sourceMappingURL=open_cursor.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_cursor.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_dataset.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_dataset.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OpenDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass OpenDataset {\r\n    getMatcher() {\r\n        const mode = combi_1.seq(\"IN\", combi_1.opt(\"LEGACY\"), combi_1.altPrio(\"BINARY MODE\", \"TEXT MODE\"));\r\n        const code = combi_1.seq(\"CODE PAGE\", expressions_1.Source);\r\n        const direction = combi_1.seq(\"FOR\", combi_1.altPrio(\"OUTPUT\", \"INPUT\", \"UPDATE\", \"APPENDING\"));\r\n        const encoding = combi_1.seq(\"ENCODING\", combi_1.altPrio(\"DEFAULT\", \"UTF-8\", \"NON-UNICODE\"));\r\n        const pos = combi_1.seq(\"AT POSITION\", expressions_1.Source);\r\n        const message = combi_1.seq(\"MESSAGE\", expressions_1.Target);\r\n        const ignoring = combi_1.str(\"IGNORING CONVERSION ERRORS\");\r\n        const replacement = combi_1.seq(\"REPLACEMENT CHARACTER\", expressions_1.Source);\r\n        const bom = combi_1.str(\"SKIPPING BYTE-ORDER MARK\");\r\n        const wbom = combi_1.str(\"WITH BYTE-ORDER MARK\");\r\n        const type = combi_1.seq(\"TYPE\", expressions_1.Source);\r\n        const filter = combi_1.seq(\"FILTER\", expressions_1.Source);\r\n        const linetype = combi_1.altPrio(\"SMART\", \"NATIVE\", \"UNIX\");\r\n        const feed = combi_1.seq(\"WITH\", linetype, \"LINEFEED\");\r\n        const windows = combi_1.str(\"WITH WINDOWS LINEFEED\");\r\n        const ret = combi_1.seq(\"OPEN DATASET\", expressions_1.Source, combi_1.per(direction, type, mode, wbom, replacement, filter, encoding, pos, message, ignoring, bom, code, feed, windows));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.OpenDataset = OpenDataset;\r\n//# sourceMappingURL=open_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/open_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/overlay.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/overlay.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Overlay = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Overlay {\r\n    getMatcher() {\r\n        const only = combi_1.seq(\"ONLY\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"OVERLAY\", expressions_1.Target, \"WITH\", expressions_1.Source, combi_1.opt(only));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Overlay = Overlay;\r\n//# sourceMappingURL=overlay.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/overlay.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/pack.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/pack.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Pack = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Pack {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"PACK\", expressions_1.Source, \"TO\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Pack = Pack;\r\n//# sourceMappingURL=pack.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/pack.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/parameter.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/parameter.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Parameter = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Parameter {\r\n    getMatcher() {\r\n        const para = combi_1.altPrio(\"PARAMETER\", \"PARAMETERS\");\r\n        const def = combi_1.seq(\"DEFAULT\", combi_1.altPrio(expressions_1.Constant, expressions_1.FieldChain));\r\n        const radio = combi_1.seq(\"RADIOBUTTON GROUP\", expressions_1.RadioGroupName);\r\n        const type = combi_1.seq(combi_1.altPrio(\"TYPE\", \"LIKE\"), combi_1.altPrio(expressions_1.TypeName, expressions_1.Dynamic));\r\n        const memory = combi_1.seq(\"MEMORY ID\", expressions_1.SimpleSource1);\r\n        const listbox = combi_1.str(\"AS LISTBOX\");\r\n        const cmd = combi_1.seq(\"USER-COMMAND\", combi_1.regex(/^\\w+$/));\r\n        const modif = combi_1.seq(\"MODIF ID\", expressions_1.Modif);\r\n        const visible = combi_1.seq(\"VISIBLE LENGTH\", expressions_1.Constant);\r\n        const length = combi_1.seq(\"LENGTH\", expressions_1.Constant);\r\n        const match = combi_1.seq(\"MATCHCODE OBJECT\", expressions_1.Field);\r\n        const decimals = combi_1.seq(\"DECIMALS\", expressions_1.Source);\r\n        const perm = combi_1.per(type, def, \"OBLIGATORY\", match, cmd, length, decimals, radio, memory, modif, listbox, visible, \"VALUE CHECK\", \"NO-DISPLAY\", \"AS CHECKBOX\", \"LOWER CASE\");\r\n        const ret = combi_1.seq(para, expressions_1.FieldSub, combi_1.opt(expressions_1.FieldLength), combi_1.opt(perm));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Parameter = Parameter;\r\n//# sourceMappingURL=parameter.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/parameter.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/perform.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/perform.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Perform = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Perform {\r\n    getMatcher() {\r\n        const level = combi_1.seq(\"LEVEL\", Expressions.Source);\r\n        const commit = combi_1.alt(combi_1.seq(\"ON COMMIT\", combi_1.opt(level)), \"ON ROLLBACK\");\r\n        const short = combi_1.verNot(version_1.Version.Cloud, combi_1.seq(Expressions.FormName, combi_1.tok(tokens_1.ParenLeft), Expressions.IncludeName, combi_1.tok(tokens_1.ParenRightW)));\r\n        const program = combi_1.seq(\"IN PROGRAM\", combi_1.opt(combi_1.alt(Expressions.Dynamic, Expressions.IncludeName)));\r\n        const found = combi_1.str(\"IF FOUND\");\r\n        const full = combi_1.seq(combi_1.alt(Expressions.FormName, Expressions.Dynamic), combi_1.opt(combi_1.verNot(version_1.Version.Cloud, program)));\r\n        const ret = combi_1.seq(\"PERFORM\", combi_1.alt(short, full), combi_1.opt(found), combi_1.opt(expressions_1.PerformTables), combi_1.opt(expressions_1.PerformUsing), combi_1.opt(expressions_1.PerformChanging), combi_1.opt(found), combi_1.opt(commit));\r\n        return ret;\r\n    }\r\n}\r\nexports.Perform = Perform;\r\n//# sourceMappingURL=perform.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/perform.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/position.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/position.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Position = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Position {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"POSITION\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Position = Position;\r\n//# sourceMappingURL=position.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/position.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/print_control.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/print_control.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PrintControl = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass PrintControl {\r\n    getMatcher() {\r\n        const index = combi_1.seq(\"INDEX-LINE\", expressions_1.Source);\r\n        const func = combi_1.seq(\"FUNCTION\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"PRINT-CONTROL\", combi_1.alt(index, func));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.PrintControl = PrintControl;\r\n//# sourceMappingURL=print_control.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/print_control.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/private.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/private.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Private = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Private {\r\n    getMatcher() {\r\n        return combi_1.str(\"PRIVATE SECTION\");\r\n    }\r\n}\r\nexports.Private = Private;\r\n//# sourceMappingURL=private.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/private.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/program.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/program.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Program = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Program {\r\n    getMatcher() {\r\n        const message = combi_1.seq(\"MESSAGE-ID\", expressions_1.Source);\r\n        const size = combi_1.seq(\"LINE-SIZE\", expressions_1.Source);\r\n        const heading = combi_1.str(\"NO STANDARD PAGE HEADING\");\r\n        const line = combi_1.seq(\"LINE-COUNT\", expressions_1.Source);\r\n        const options = combi_1.per(message, size, heading, line);\r\n        const ret = combi_1.seq(\"PROGRAM\", combi_1.optPrio(expressions_1.ReportName), combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Program = Program;\r\n//# sourceMappingURL=program.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/program.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/protected.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/protected.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Protected = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Protected {\r\n    getMatcher() {\r\n        return combi_1.str(\"PROTECTED SECTION\");\r\n    }\r\n}\r\nexports.Protected = Protected;\r\n//# sourceMappingURL=protected.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/protected.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/provide.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/provide.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Provide = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Provide {\r\n    getMatcher() {\r\n        const list = combi_1.plus(combi_1.altPrio(\"*\", expressions_1.Field));\r\n        const fields = combi_1.seq(\"FIELDS\", list, \"FROM\", expressions_1.Source, \"INTO\", expressions_1.Target, \"VALID\", expressions_1.Field, \"BOUNDS\", expressions_1.Field, \"AND\", expressions_1.Field);\r\n        const fieldList = combi_1.altPrio(combi_1.seq(list, \"FROM\", expressions_1.Source), list);\r\n        const ret = combi_1.seq(\"PROVIDE\", combi_1.altPrio(combi_1.plus(fields), combi_1.plus(fieldList)), \"BETWEEN\", expressions_1.SimpleSource3, \"AND\", expressions_1.SimpleSource3);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Provide = Provide;\r\n//# sourceMappingURL=provide.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/provide.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/public.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/public.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Public = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Public {\r\n    getMatcher() {\r\n        return combi_1.str(\"PUBLIC SECTION\");\r\n    }\r\n}\r\nexports.Public = Public;\r\n//# sourceMappingURL=public.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/public.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/put.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/put.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Put = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Put {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"PUT\", expressions_1.Field);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Put = Put;\r\n//# sourceMappingURL=put.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/put.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Raise = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Raise {\r\n    getMatcher() {\r\n        const wit = combi_1.seq(\"WITH\", expressions_1.Source, combi_1.opt(expressions_1.Source), combi_1.opt(expressions_1.Source), combi_1.opt(expressions_1.Source));\r\n        const mess = combi_1.seq(\"MESSAGE\", expressions_1.MessageSource, combi_1.opt(wit));\r\n        const messid = combi_1.seq(\"MESSAGE ID\", expressions_1.Source, \"NUMBER\", expressions_1.Source, combi_1.optPrio(wit));\r\n        const exporting = combi_1.seq(\"EXPORTING\", expressions_1.ParameterListS);\r\n        const from = combi_1.seq(\"TYPE\", expressions_1.ClassName, combi_1.opt(combi_1.alt(combi_1.ver(version_1.Version.v750, combi_1.alt(mess, messid)), combi_1.ver(version_1.Version.v752, \"USING MESSAGE\"))), combi_1.optPrio(exporting));\r\n        const clas = combi_1.seq(combi_1.optPrio(\"RESUMABLE\"), \"EXCEPTION\", combi_1.altPrio(from, combi_1.ver(version_1.Version.v752, expressions_1.Source), expressions_1.SimpleSource2));\r\n        const ret = combi_1.seq(\"RAISE\", combi_1.altPrio(clas, expressions_1.Field));\r\n        return ret;\r\n    }\r\n}\r\nexports.Raise = Raise;\r\n//# sourceMappingURL=raise.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise_event.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise_event.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RaiseEvent = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass RaiseEvent {\r\n    getMatcher() {\r\n        const exporting = combi_1.seq(\"EXPORTING\", expressions_1.ParameterListS);\r\n        return combi_1.seq(\"RAISE EVENT\", expressions_1.Field, combi_1.opt(exporting));\r\n    }\r\n}\r\nexports.RaiseEvent = RaiseEvent;\r\n//# sourceMappingURL=raise_event.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/raise_event.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/ranges.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/ranges.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Ranges = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Ranges {\r\n    getMatcher() {\r\n        const occurs = combi_1.seq(\"OCCURS\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"RANGES\", expressions_1.SimpleName, \"FOR\", expressions_1.FieldSub, combi_1.opt(occurs));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Ranges = Ranges;\r\n//# sourceMappingURL=ranges.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/ranges.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_dataset.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_dataset.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ReadDataset {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"READ DATASET\", expressions_1.Source, \"INTO\", expressions_1.Target, combi_1.opt(combi_1.seq(\"MAXIMUM LENGTH\", expressions_1.Source)), combi_1.opt(combi_1.seq(\"ACTUAL LENGTH\", expressions_1.Target)), combi_1.opt(combi_1.seq(\"LENGTH\", expressions_1.Target)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ReadDataset = ReadDataset;\r\n//# sourceMappingURL=read_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_entities.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_entities.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadEntities = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass ReadEntities {\r\n    getMatcher() {\r\n        const s = combi_1.seq(\"READ ENTITIES OF\", expressions_1.SimpleName, \"IN LOCAL MODE\", \"ENTITY\", expressions_1.SimpleName, \"FIELDS\", combi_1.tok(tokens_1.WParenLeftW), expressions_1.SimpleName, combi_1.tok(tokens_1.WParenRightW), \"WITH\", expressions_1.Source, \"RESULT\", expressions_1.Target);\r\n        return combi_1.ver(version_1.Version.v754, s);\r\n    }\r\n}\r\nexports.ReadEntities = ReadEntities;\r\n//# sourceMappingURL=read_entities.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_entities.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_line.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_line.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadLine = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ReadLine {\r\n    getMatcher() {\r\n        const val = combi_1.seq(\"LINE VALUE INTO\", expressions_1.Target);\r\n        const fields = combi_1.seq(expressions_1.Target, combi_1.opt(combi_1.seq(\"INTO\", expressions_1.Target)));\r\n        const field = combi_1.seq(\"FIELD VALUE\", combi_1.plus(fields));\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const page = combi_1.seq(\"OF PAGE\", expressions_1.Source);\r\n        const current = combi_1.str(\"OF CURRENT PAGE\");\r\n        const ret = combi_1.seq(\"READ\", combi_1.alt(\"CURRENT LINE\", combi_1.seq(\"LINE\", expressions_1.Source)), combi_1.opt(combi_1.per(val, index, field, page, current)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ReadLine = ReadLine;\r\n//# sourceMappingURL=read_line.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_line.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_report.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_report.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadReport = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ReadReport {\r\n    getMatcher() {\r\n        const state = combi_1.seq(\"STATE\", expressions_1.Source);\r\n        const into = combi_1.seq(\"INTO\", expressions_1.Target);\r\n        const maximum = combi_1.seq(\"MAXIMUM WIDTH INTO\", expressions_1.Target);\r\n        const ret = combi_1.seq(\"READ REPORT\", expressions_1.Source, combi_1.per(state, into, maximum));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ReadReport = ReadReport;\r\n//# sourceMappingURL=read_report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_table.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_table.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadTable = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ReadTable {\r\n    getMatcher() {\r\n        const comparing = combi_1.seq(\"COMPARING\", combi_1.alt(combi_1.plus(expressions_1.FieldSub), expressions_1.Dynamic));\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const components = combi_1.seq(combi_1.alt(expressions_1.Field, expressions_1.Dynamic), \"COMPONENTS\", expressions_1.ComponentCompareSimple);\r\n        const key = combi_1.seq(combi_1.altPrio(\"WITH KEY\", \"WITH TABLE KEY\"), combi_1.alt(expressions_1.ComponentCompareSimple, components, combi_1.seq(combi_1.optPrio(\"=\"), expressions_1.Source)));\r\n        const using = combi_1.seq(\"USING KEY\", combi_1.alt(expressions_1.Field, expressions_1.Dynamic));\r\n        const from = combi_1.seq(\"FROM\", expressions_1.Source);\r\n        const perm = combi_1.per(combi_1.alt(index, key, from), expressions_1.ReadTableTarget, using, comparing, \"CASTING\", \"TRANSPORTING ALL FIELDS\", combi_1.seq(\"TRANSPORTING\", combi_1.altPrio(expressions_1.Dynamic, combi_1.plus(expressions_1.Field))), \"BINARY SEARCH\");\r\n        return combi_1.seq(\"READ TABLE\", combi_1.alt(combi_1.ver(version_1.Version.v740sp02, expressions_1.Source), expressions_1.SimpleSource2), combi_1.opt(perm));\r\n    }\r\n}\r\nexports.ReadTable = ReadTable;\r\n//# sourceMappingURL=read_table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_textpool.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_textpool.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadTextpool = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ReadTextpool {\r\n    getMatcher() {\r\n        const language = combi_1.seq(\"LANGUAGE\", expressions_1.Source);\r\n        const into = combi_1.seq(\"INTO\", expressions_1.Target);\r\n        const state = combi_1.seq(\"STATE\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"READ TEXTPOOL\", expressions_1.Source, combi_1.per(into, language, state));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ReadTextpool = ReadTextpool;\r\n//# sourceMappingURL=read_textpool.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/read_textpool.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/receive.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/receive.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Receive = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Receive {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"RECEIVE RESULTS FROM FUNCTION\", expressions_1.FunctionName, combi_1.opt(\"KEEPING TASK\"), expressions_1.ReceiveParameters);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Receive = Receive;\r\n//# sourceMappingURL=receive.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/receive.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Refresh = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Refresh {\r\n    getMatcher() {\r\n        const from = combi_1.seq(\"FROM TABLE\", expressions_1.DatabaseTable);\r\n        const ret = combi_1.seq(\"REFRESH\", expressions_1.Target, combi_1.optPrio(from));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Refresh = Refresh;\r\n//# sourceMappingURL=refresh.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh_control.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh_control.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RefreshControl = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass RefreshControl {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"REFRESH CONTROL\", expressions_1.Source, \"FROM SCREEN\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.RefreshControl = RefreshControl;\r\n//# sourceMappingURL=refresh_control.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/refresh_control.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reject.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reject.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Reject = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Reject {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"REJECT\", combi_1.opt(expressions_1.Source));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Reject = Reject;\r\n//# sourceMappingURL=reject.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reject.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/replace.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/replace.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Replace = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Replace {\r\n    getMatcher() {\r\n        const length = combi_1.seq(\"LENGTH\", expressions_1.Source);\r\n        const offset = combi_1.seq(\"OFFSET\", expressions_1.Source);\r\n        const section = combi_1.seq(combi_1.opt(\"IN\"), \"SECTION\", combi_1.per(offset, length), \"OF\", expressions_1.Source);\r\n        const source = combi_1.seq(combi_1.opt(\"OF\"), combi_1.opt(combi_1.alt(\"REGEX\", \"SUBSTRING\")), expressions_1.Source);\r\n        const cas = combi_1.alt(\"IGNORING CASE\", \"RESPECTING CASE\");\r\n        const repl = combi_1.seq(\"REPLACEMENT COUNT\", expressions_1.Target);\r\n        const replo = combi_1.seq(\"REPLACEMENT OFFSET\", expressions_1.Target);\r\n        const repll = combi_1.seq(\"REPLACEMENT LENGTH\", expressions_1.Target);\r\n        const repli = combi_1.seq(\"REPLACEMENT LINE\", expressions_1.Target);\r\n        const occ = combi_1.alt(\"ALL OCCURRENCES\", \"ALL OCCURENCES\", \"FIRST OCCURENCE\", \"FIRST OCCURRENCE\");\r\n        const mode = combi_1.alt(\"IN CHARACTER MODE\", \"IN BYTE MODE\");\r\n        const wit = combi_1.seq(\"WITH\", expressions_1.Source);\r\n        const into = combi_1.seq(\"INTO\", expressions_1.Target);\r\n        return combi_1.seq(\"REPLACE\", combi_1.per(section, combi_1.seq(combi_1.opt(occ), source)), combi_1.opt(combi_1.seq(\"IN\", combi_1.opt(\"TABLE\"), expressions_1.Target)), combi_1.opt(combi_1.per(wit, into, cas, mode, repl, replo, repll, repli, length)));\r\n    }\r\n}\r\nexports.Replace = Replace;\r\n//# sourceMappingURL=replace.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/replace.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/report.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/report.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Report = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass Report {\r\n    getMatcher() {\r\n        const more = combi_1.seq(combi_1.tok(tokens_1.ParenLeft), expressions_1.Integer, combi_1.tok(tokens_1.ParenRightW));\r\n        const heading = combi_1.str(\"NO STANDARD PAGE HEADING\");\r\n        const size = combi_1.seq(\"LINE-SIZE\", expressions_1.Integer);\r\n        const count = combi_1.seq(\"LINE-COUNT\", expressions_1.Integer, combi_1.opt(more));\r\n        const message = combi_1.seq(\"MESSAGE-ID\", expressions_1.MessageClass);\r\n        const database = combi_1.seq(\"USING DATABASE\", expressions_1.Field);\r\n        const ret = combi_1.seq(\"REPORT\", combi_1.opt(expressions_1.ReportName), combi_1.opt(combi_1.per(heading, size, count, database, message)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Report = Report;\r\n//# sourceMappingURL=report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reserve.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reserve.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Reserve = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Reserve {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"RESERVE\", expressions_1.Source, \"LINES\");\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Reserve = Reserve;\r\n//# sourceMappingURL=reserve.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/reserve.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/resume.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/resume.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Resume = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Resume {\r\n    getMatcher() {\r\n        return combi_1.str(\"RESUME\");\r\n    }\r\n}\r\nexports.Resume = Resume;\r\n//# sourceMappingURL=resume.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/resume.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/retry.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/retry.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Retry = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Retry {\r\n    getMatcher() {\r\n        return combi_1.ver(version_1.Version.v702, \"RETRY\");\r\n    }\r\n}\r\nexports.Retry = Retry;\r\n//# sourceMappingURL=retry.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/retry.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/return.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/return.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Return = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Return {\r\n    getMatcher() {\r\n        return combi_1.str(\"RETURN\");\r\n    }\r\n}\r\nexports.Return = Return;\r\n//# sourceMappingURL=return.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/return.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Rollback = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Rollback {\r\n    getMatcher() {\r\n        return combi_1.seq(\"ROLLBACK\", combi_1.altPrio(\"WORK\", expressions_1.DatabaseConnection));\r\n    }\r\n}\r\nexports.Rollback = Rollback;\r\n//# sourceMappingURL=rollback.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback_entities.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback_entities.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RollbackEntities = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass RollbackEntities {\r\n    getMatcher() {\r\n        const s = \"ROLLBACK ENTITIES\";\r\n        return combi_1.ver(version_1.Version.v754, s);\r\n    }\r\n}\r\nexports.RollbackEntities = RollbackEntities;\r\n//# sourceMappingURL=rollback_entities.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/rollback_entities.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scan.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scan.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Scan = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Scan {\r\n    getMatcher() {\r\n        const tokens = combi_1.seq(\"TOKENS INTO\", expressions_1.Target);\r\n        const word = combi_1.seq(\"WORD INTO\", expressions_1.Target);\r\n        const line = combi_1.seq(\"LINE INTO\", expressions_1.Target);\r\n        const statements = combi_1.seq(\"STATEMENTS INTO\", expressions_1.Target);\r\n        const levels = combi_1.seq(\"LEVELS INTO\", expressions_1.Target);\r\n        const structures = combi_1.seq(\"STRUCTURES INTO\", expressions_1.Target);\r\n        const include = combi_1.seq(\"INCLUDE INTO\", expressions_1.Target);\r\n        const offset = combi_1.seq(\"OFFSET INTO\", expressions_1.Target);\r\n        const enh = combi_1.seq(\"ENHANCEMENTS INTO\", expressions_1.Target);\r\n        const enhO = combi_1.seq(\"ENHANCEMENT OPTIONS INTO\", expressions_1.Target);\r\n        const keywords = combi_1.seq(\"KEYWORDS FROM\", expressions_1.Source);\r\n        const pragmas = combi_1.seq(\"WITH PRAGMAS\", expressions_1.Source);\r\n        const overflow = combi_1.seq(\"OVERFLOW INTO\", expressions_1.Target);\r\n        const message = combi_1.seq(\"MESSAGE INTO\", expressions_1.Target);\r\n        const includeProgram = combi_1.seq(\"INCLUDE PROGRAM FROM\", expressions_1.Source);\r\n        const frame = combi_1.seq(\"FRAME PROGRAM FROM\", expressions_1.Source);\r\n        const program = combi_1.seq(\"PROGRAM FROM\", expressions_1.Source);\r\n        const from = combi_1.seq(\"FROM\", expressions_1.Source);\r\n        const to = combi_1.seq(\"TO\", expressions_1.Source);\r\n        const replacing = combi_1.seq(\"REPLACING\", expressions_1.Source);\r\n        const id = combi_1.seq(\"ID\", expressions_1.Source, \"TABLE\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"SCAN ABAP-SOURCE\", expressions_1.Source, combi_1.per(tokens, levels, from, to, statements, structures, keywords, word, line, offset, overflow, message, includeProgram, include, frame, enhO, enh, program, replacing, \"WITH ANALYSIS\", \"WITH COMMENTS\", \"WITH TYPE-POOLS\", \"WITH INCLUDES\", \"WITHOUT TRMAC\", \"WITH DECLARATIONS\", \"WITH BLOCKS\", \"PRESERVING IDENTIFIER ESCAPING\", \"WITH LIST TOKENIZATION\", \"WITH EXPLICIT ENHANCEMENTS\", \"WITH IMPLICIT ENHANCEMENTS\", \"WITH INACTIVE ENHANCEMENTS\", pragmas, id));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Scan = Scan;\r\n//# sourceMappingURL=scan.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scan.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scroll_list.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scroll_list.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ScrollList = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ScrollList {\r\n    getMatcher() {\r\n        const index = combi_1.seq(\"INDEX\", expressions_1.Source);\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Source);\r\n        const column = combi_1.seq(\"TO COLUMN\", expressions_1.Source);\r\n        const to = combi_1.seq(\"TO\", combi_1.alt(\"FIRST PAGE\", \"LAST PAGE\", combi_1.seq(\"PAGE\", expressions_1.Source)));\r\n        const ret = combi_1.seq(\"SCROLL LIST\", combi_1.per(index, combi_1.alt(to, \"BACKWARD\", \"FORWARD\"), column, line));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.ScrollList = ScrollList;\r\n//# sourceMappingURL=scroll_list.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/scroll_list.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/search.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/search.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Search = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Search {\r\n    getMatcher() {\r\n        const starting = combi_1.seq(\"STARTING AT\", expressions_1.Source);\r\n        const ending = combi_1.seq(\"ENDING AT\", expressions_1.Source);\r\n        const mark = combi_1.str(\"AND MARK\");\r\n        const mode = combi_1.alt(\"IN BYTE MODE\", \"IN CHARACTER MODE\");\r\n        const ret = combi_1.seq(\"SEARCH\", expressions_1.Source, \"FOR\", expressions_1.Source, combi_1.opt(combi_1.per(mode, starting, ending, mark)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Search = Search;\r\n//# sourceMappingURL=search.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/search.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Select = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Select {\r\n    getMatcher() {\r\n        const union = combi_1.ver(version_1.Version.v750, combi_1.seq(\"UNION\", combi_1.optPrio(combi_1.altPrio(\"DISTINCT\", \"ALL\")), expressions_1.Select));\r\n        return combi_1.seq(expressions_1.Select, combi_1.starPrio(union), combi_1.optPrio(expressions_1.SQLHints));\r\n    }\r\n}\r\nexports.Select = Select;\r\n//# sourceMappingURL=select.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select_loop.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select_loop.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectLoop = void 0;\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SelectLoop {\r\n    getMatcher() {\r\n        return new expressions_1.SelectLoop();\r\n    }\r\n}\r\nexports.SelectLoop = SelectLoop;\r\n//# sourceMappingURL=select_loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/select_loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectionscreen.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectionscreen.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectionScreen = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SelectionScreen {\r\n    getMatcher() {\r\n        const beginBlock = combi_1.seq(\"BEGIN OF BLOCK\", expressions_1.BlockName, combi_1.optPrio(\"WITH FRAME\"), combi_1.optPrio(combi_1.seq(\"TITLE\", combi_1.alt(expressions_1.InlineField, expressions_1.TextElement))), combi_1.optPrio(\"NO INTERVALS\"));\r\n        const endBlock = combi_1.seq(\"END OF BLOCK\", expressions_1.BlockName);\r\n        const nesting = combi_1.seq(\"NESTING LEVEL\", expressions_1.Source);\r\n        const scrOptions = combi_1.per(combi_1.seq(\"AS\", combi_1.alt(\"WINDOW\", \"SUBSCREEN\")), combi_1.seq(\"TITLE\", combi_1.alt(expressions_1.InlineField, expressions_1.TextElement)), \"NO INTERVALS\", nesting);\r\n        const beginScreen = combi_1.seq(\"BEGIN OF SCREEN\", expressions_1.Integer, combi_1.opt(scrOptions));\r\n        const endScreen = combi_1.seq(\"END OF SCREEN\", expressions_1.Integer);\r\n        const beginLine = combi_1.str(\"BEGIN OF LINE\");\r\n        const endLine = combi_1.str(\"END OF LINE\");\r\n        const modif = combi_1.seq(\"MODIF ID\", expressions_1.Modif);\r\n        const visible = combi_1.seq(\"VISIBLE LENGTH\", combi_1.regex(/^\\d+$/));\r\n        const commentOpt = combi_1.per(combi_1.seq(\"FOR FIELD\", expressions_1.Field), modif, visible);\r\n        const position = combi_1.seq(combi_1.opt(combi_1.regex(/^\\/?[\\d\\w]+$/)), combi_1.altPrio(combi_1.tok(tokens_1.ParenLeft), combi_1.tok(tokens_1.WParenLeft)), expressions_1.Integer, combi_1.altPrio(combi_1.tok(tokens_1.ParenRightW), combi_1.tok(tokens_1.ParenRight)));\r\n        const comment = combi_1.seq(\"COMMENT\", position, combi_1.opt(combi_1.alt(expressions_1.InlineField, expressions_1.TextElement)), combi_1.opt(commentOpt));\r\n        const command = combi_1.seq(\"USER-COMMAND\", combi_1.alt(expressions_1.Field, expressions_1.Constant));\r\n        const push = combi_1.seq(\"PUSHBUTTON\", position, combi_1.alt(expressions_1.InlineField, expressions_1.TextElement), command, combi_1.opt(modif), combi_1.opt(visible));\r\n        const prog = combi_1.seq(\"PROGRAM\", expressions_1.Field);\r\n        const def = combi_1.seq(\"DEFAULT\", combi_1.opt(prog), \"SCREEN\", expressions_1.Integer);\r\n        const tab = combi_1.seq(\"TAB\", combi_1.tok(tokens_1.WParenLeft), expressions_1.Integer, combi_1.tok(tokens_1.ParenRightW), combi_1.alt(expressions_1.InlineField, expressions_1.TextElement), command, combi_1.opt(def), combi_1.opt(modif));\r\n        const func = combi_1.seq(\"FUNCTION KEY\", expressions_1.Integer);\r\n        const skip = combi_1.seq(\"SKIP\", combi_1.opt(expressions_1.Integer));\r\n        const posSymbols = combi_1.altPrio(\"POS_LOW\", \"POS_HIGH\");\r\n        // number between 1 and 83\r\n        const posIntegers = combi_1.regex(/^(0?[1-9]|[1234567][0-9]|8[0-3])$/);\r\n        const pos = combi_1.seq(\"POSITION\", combi_1.altPrio(posIntegers, posSymbols));\r\n        const incl = combi_1.seq(\"INCLUDE BLOCKS\", expressions_1.BlockName);\r\n        const tabbed = combi_1.seq(\"BEGIN OF TABBED BLOCK\", expressions_1.InlineField, \"FOR\", expressions_1.Integer, \"LINES\", combi_1.optPrio(\"NO INTERVALS\"));\r\n        const uline = combi_1.seq(\"ULINE\", combi_1.opt(position));\r\n        const param = combi_1.seq(\"INCLUDE PARAMETERS\", expressions_1.Field);\r\n        const iso = combi_1.seq(\"INCLUDE SELECT-OPTIONS\", expressions_1.Field);\r\n        const ret = combi_1.seq(\"SELECTION-SCREEN\", combi_1.altPrio(comment, func, skip, pos, incl, iso, push, tab, uline, beginBlock, tabbed, endBlock, beginLine, endLine, param, beginScreen, endScreen));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SelectionScreen = SelectionScreen;\r\n//# sourceMappingURL=selectionscreen.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectionscreen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectoption.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectoption.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectOption = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SelectOption {\r\n    getMatcher() {\r\n        const sourc = combi_1.alt(expressions_1.Constant, expressions_1.FieldChain);\r\n        const to = combi_1.seq(\"TO\", sourc);\r\n        const def = combi_1.seq(\"DEFAULT\", sourc, combi_1.opt(to));\r\n        const option = combi_1.seq(\"OPTION\", expressions_1.Field);\r\n        const sign = combi_1.seq(\"SIGN\", expressions_1.Field);\r\n        const memory = combi_1.seq(\"MEMORY ID\", expressions_1.SimpleSource1);\r\n        const match = combi_1.seq(\"MATCHCODE OBJECT\", expressions_1.Field);\r\n        const modif = combi_1.seq(\"MODIF ID\", expressions_1.Modif);\r\n        const visible = combi_1.seq(\"VISIBLE LENGTH\", expressions_1.Source);\r\n        const options = combi_1.per(def, option, sign, memory, match, visible, modif, \"NO DATABASE SELECTION\", \"LOWER CASE\", \"NO-EXTENSION\", \"NO INTERVALS\", \"NO-DISPLAY\", \"OBLIGATORY\");\r\n        const ret = combi_1.seq(\"SELECT-OPTIONS\", expressions_1.FieldSub, \"FOR\", combi_1.alt(expressions_1.FieldChain, expressions_1.Dynamic), combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SelectOption = SelectOption;\r\n//# sourceMappingURL=selectoption.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/selectoption.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_bit.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_bit.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetBit = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SetBit {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET BIT\", expressions_1.Source, \"OF\", expressions_1.Target, combi_1.opt(combi_1.seq(\"TO\", expressions_1.Source)));\r\n        return ret;\r\n    }\r\n}\r\nexports.SetBit = SetBit;\r\n//# sourceMappingURL=set_bit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_bit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_blank.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_blank.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetBlank = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetBlank {\r\n    getMatcher() {\r\n        const onOff = combi_1.alt(\"ON\", \"OFF\");\r\n        const ret = combi_1.seq(\"SET BLANK LINES\", onOff);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetBlank = SetBlank;\r\n//# sourceMappingURL=set_blank.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_blank.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_country.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_country.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetCountry = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetCountry {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET COUNTRY\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetCountry = SetCountry;\r\n//# sourceMappingURL=set_country.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_country.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_cursor.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_cursor.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetCursor = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetCursor {\r\n    getMatcher() {\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Source);\r\n        const offset = combi_1.seq(\"OFFSET\", expressions_1.Source);\r\n        const field = combi_1.seq(\"FIELD\", expressions_1.Source);\r\n        const pos = combi_1.seq(expressions_1.Source, expressions_1.Source);\r\n        const ret = combi_1.seq(\"SET CURSOR\", combi_1.altPrio(combi_1.per(field, offset, line), pos));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetCursor = SetCursor;\r\n//# sourceMappingURL=set_cursor.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_cursor.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_dataset.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_dataset.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetDataset {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET DATASET\", expressions_1.Source, \"POSITION\", combi_1.alt(expressions_1.Source, \"END OF FILE\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetDataset = SetDataset;\r\n//# sourceMappingURL=set_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_extended_check.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_extended_check.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetExtendedCheck = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetExtendedCheck {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET EXTENDED CHECK\", combi_1.alt(\"OFF\", \"ON\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetExtendedCheck = SetExtendedCheck;\r\n//# sourceMappingURL=set_extended_check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_extended_check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_handler.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_handler.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetHandler = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SetHandler {\r\n    getMatcher() {\r\n        const activation = combi_1.seq(\"ACTIVATION\", expressions_1.Source);\r\n        const fo = combi_1.seq(\"FOR\", combi_1.altPrio(\"ALL INSTANCES\", expressions_1.Source));\r\n        const ret = combi_1.seq(\"SET HANDLER\", combi_1.plus(expressions_1.MethodSource), combi_1.optPrio(fo), combi_1.optPrio(activation));\r\n        return ret;\r\n    }\r\n}\r\nexports.SetHandler = SetHandler;\r\n//# sourceMappingURL=set_handler.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_handler.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_language.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_language.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetLanguage = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetLanguage {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET LANGUAGE\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetLanguage = SetLanguage;\r\n//# sourceMappingURL=set_language.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_language.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_left.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_left.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetLeft = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass SetLeft {\r\n    getMatcher() {\r\n        const column = combi_1.seq(\"COLUMN\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, combi_1.seq(\"SET LEFT SCROLL-BOUNDARY\", combi_1.opt(column)));\r\n    }\r\n}\r\nexports.SetLeft = SetLeft;\r\n//# sourceMappingURL=set_left.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_left.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_locale.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_locale.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetLocale = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetLocale {\r\n    getMatcher() {\r\n        const country = combi_1.seq(\"COUNTRY\", expressions_1.Source);\r\n        const modifier = combi_1.seq(\"MODIFIER\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"SET LOCALE LANGUAGE\", expressions_1.Source, combi_1.opt(country), combi_1.opt(modifier));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetLocale = SetLocale;\r\n//# sourceMappingURL=set_locale.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_locale.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_margin.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_margin.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetMargin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetMargin {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET MARGIN\", expressions_1.Source, combi_1.opt(expressions_1.Source));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetMargin = SetMargin;\r\n//# sourceMappingURL=set_margin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_margin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_parameter.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_parameter.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetParameter = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetParameter {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET PARAMETER ID\", expressions_1.Source, \"FIELD\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetParameter = SetParameter;\r\n//# sourceMappingURL=set_parameter.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_parameter.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_pf_status.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_pf_status.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetPFStatus = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetPFStatus {\r\n    getMatcher() {\r\n        const program = combi_1.seq(\"OF PROGRAM\", expressions_1.Source);\r\n        const options = combi_1.per(program, \"IMMEDIATELY\", combi_1.seq(\"EXCLUDING\", expressions_1.Source));\r\n        const ret = combi_1.seq(\"SET PF-STATUS\", expressions_1.Source, combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetPFStatus = SetPFStatus;\r\n//# sourceMappingURL=set_pf_status.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_pf_status.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_property.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_property.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetProperty = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetProperty {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET PROPERTY OF\", expressions_1.Source, combi_1.alt(expressions_1.Constant, expressions_1.Field), \"=\", expressions_1.Source, combi_1.optPrio(\"NO FLUSH\"), combi_1.opt(expressions_1.OLEExporting));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetProperty = SetProperty;\r\n//# sourceMappingURL=set_property.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_property.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_run_time.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_run_time.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetRunTime = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetRunTime {\r\n    getMatcher() {\r\n        const clock = combi_1.seq(\"CLOCK RESOLUTION\", combi_1.alt(\"LOW\", \"HIGH\"));\r\n        const analyzer = combi_1.seq(\"ANALYZER\", combi_1.alt(\"ON\", \"OFF\"));\r\n        const ret = combi_1.seq(\"SET RUN TIME\", combi_1.alt(clock, analyzer));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetRunTime = SetRunTime;\r\n//# sourceMappingURL=set_run_time.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_run_time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_screen.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_screen.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetScreen = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetScreen {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET SCREEN\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetScreen = SetScreen;\r\n//# sourceMappingURL=set_screen.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_screen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_titlebar.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_titlebar.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetTitlebar = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetTitlebar {\r\n    getMatcher() {\r\n        const wit = combi_1.seq(\"WITH\", combi_1.plus(expressions_1.Source));\r\n        const program = combi_1.seq(\"OF PROGRAM\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"SET TITLEBAR\", expressions_1.Source, combi_1.opt(program), combi_1.opt(wit));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetTitlebar = SetTitlebar;\r\n//# sourceMappingURL=set_titlebar.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_titlebar.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_update_task.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_update_task.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetUpdateTask = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetUpdateTask {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"SET UPDATE TASK LOCAL\");\r\n    }\r\n}\r\nexports.SetUpdateTask = SetUpdateTask;\r\n//# sourceMappingURL=set_update_task.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_update_task.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_user_command.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_user_command.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetUserCommand = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SetUserCommand {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SET USER-COMMAND\", expressions_1.Source);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SetUserCommand = SetUserCommand;\r\n//# sourceMappingURL=set_user_command.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/set_user_command.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/shift.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/shift.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Shift = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Shift {\r\n    getMatcher() {\r\n        const deleting = combi_1.seq(\"DELETING\", combi_1.altPrio(\"LEADING\", \"TRAILING\"), expressions_1.Source);\r\n        const up = combi_1.seq(\"UP TO\", expressions_1.Source);\r\n        const mode = combi_1.seq(\"IN\", combi_1.altPrio(\"CHARACTER\", \"BYTE\"), \"MODE\");\r\n        const dir = combi_1.altPrio(\"LEFT\", \"RIGHT\");\r\n        const by = combi_1.seq(\"BY\", expressions_1.Source, combi_1.optPrio(\"PLACES\"));\r\n        const options = combi_1.per(deleting, up, mode, dir, by, \"CIRCULAR\");\r\n        return combi_1.seq(\"SHIFT\", expressions_1.Target, combi_1.opt(options));\r\n    }\r\n}\r\nexports.Shift = Shift;\r\n//# sourceMappingURL=shift.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/shift.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/skip.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/skip.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Skip = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Skip {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SKIP\", combi_1.opt(\"TO LINE\"), combi_1.opt(expressions_1.Source));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Skip = Skip;\r\n//# sourceMappingURL=skip.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/skip.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Sort = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Sort {\r\n    getMatcher() {\r\n        const order = combi_1.altPrio(\"ASCENDING\", \"DESCENDING\");\r\n        const sel = combi_1.alt(expressions_1.ComponentChain, expressions_1.Dynamic, expressions_1.SourceFieldSymbol);\r\n        const text = \"AS TEXT\";\r\n        const fields = combi_1.plus(combi_1.seq(sel, combi_1.optPrio(text), combi_1.optPrio(order), combi_1.optPrio(text)));\r\n        const by = combi_1.seq(\"BY\", fields);\r\n        const normal = combi_1.seq(expressions_1.Target, combi_1.opt(combi_1.per(order, by, \"STABLE\", text)));\r\n        const target = combi_1.alt(normal, text);\r\n        return combi_1.seq(\"SORT\", target);\r\n    }\r\n}\r\nexports.Sort = Sort;\r\n//# sourceMappingURL=sort.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort_dataset.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort_dataset.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SortDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SortDataset {\r\n    getMatcher() {\r\n        const order = combi_1.alt(\"ASCENDING\", \"DESCENDING\");\r\n        const sel = combi_1.alt(expressions_1.FieldSub, expressions_1.SourceFieldSymbol, expressions_1.Dynamic);\r\n        const fields = combi_1.plus(combi_1.seq(sel, combi_1.optPrio(order)));\r\n        const by = combi_1.seq(\"BY\", fields);\r\n        const ret = combi_1.seq(\"SORT\", combi_1.opt(by));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SortDataset = SortDataset;\r\n//# sourceMappingURL=sort_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sort_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/split.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/split.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Split = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Split {\r\n    getMatcher() {\r\n        const mode = combi_1.seq(\"IN\", combi_1.alt(\"CHARACTER\", \"BYTE\"), \"MODE\");\r\n        const into = combi_1.altPrio(combi_1.seq(\"TABLE\", expressions_1.Target, combi_1.opt(mode)), combi_1.seq(combi_1.plus(expressions_1.Target), combi_1.opt(mode)));\r\n        const ret = combi_1.seq(\"SPLIT\", expressions_1.Source, \"AT\", expressions_1.Source, \"INTO\", into);\r\n        return ret;\r\n    }\r\n}\r\nexports.Split = Split;\r\n//# sourceMappingURL=split.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/split.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/start_of_selection.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/start_of_selection.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StartOfSelection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass StartOfSelection {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"START-OF-SELECTION\");\r\n    }\r\n}\r\nexports.StartOfSelection = StartOfSelection;\r\n//# sourceMappingURL=start_of_selection.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/start_of_selection.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Static = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Expressions = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Static {\r\n    getMatcher() {\r\n        const p = combi_1.opt(combi_1.per(Expressions.Type, Expressions.Value, Expressions.Length, Expressions.Decimals));\r\n        const type = combi_1.seq(combi_1.opt(Expressions.ConstantFieldLength), p);\r\n        const ret = combi_1.seq(combi_1.alt(\"STATIC\", \"STATICS\"), Expressions.DefinitionName, combi_1.alt(type, Expressions.TypeTable));\r\n        return ret;\r\n    }\r\n}\r\nexports.Static = Static;\r\n//# sourceMappingURL=static.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_begin.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_begin.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StaticBegin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass StaticBegin {\r\n    getMatcher() {\r\n        const occurs = combi_1.seq(\"OCCURS\", expressions_1.Integer);\r\n        const ret = combi_1.seq(combi_1.alt(\"STATIC\", \"STATICS\"), \"BEGIN OF\", expressions_1.DefinitionName, combi_1.opt(occurs));\r\n        return ret;\r\n    }\r\n}\r\nexports.StaticBegin = StaticBegin;\r\n//# sourceMappingURL=static_begin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_begin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_end.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_end.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StaticEnd = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass StaticEnd {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(combi_1.alt(\"STATIC\", \"STATICS\"), \"END OF\", expressions_1.DefinitionName);\r\n        return ret;\r\n    }\r\n}\r\nexports.StaticEnd = StaticEnd;\r\n//# sourceMappingURL=static_end.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/static_end.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/stop.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/stop.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Stop = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Stop {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"STOP\");\r\n    }\r\n}\r\nexports.Stop = Stop;\r\n//# sourceMappingURL=stop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/stop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/submit.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/submit.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Submit = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Submit {\r\n    getMatcher() {\r\n        const sign = combi_1.seq(\"SIGN\", expressions_1.Source);\r\n        const eq = combi_1.alt(\"=\", \"EQ\", \"IN\", \"NE\", \"CP\", \"GE\", \"LE\", \"INCL\");\r\n        const compare = combi_1.seq(eq, expressions_1.Source);\r\n        const between = combi_1.seq(\"BETWEEN\", expressions_1.Source, \"AND\", expressions_1.Source);\r\n        const selectionTable = combi_1.seq(\"WITH SELECTION-TABLE\", expressions_1.Source);\r\n        const awith = combi_1.seq(\"WITH\", expressions_1.FieldSub, combi_1.alt(compare, between), combi_1.optPrio(sign));\r\n        const prog = combi_1.alt(expressions_1.NamespaceSimpleName, expressions_1.Dynamic);\r\n        const job = combi_1.seq(\"VIA JOB\", expressions_1.Source, \"NUMBER\", expressions_1.Source);\r\n        const exporting = combi_1.str(\"EXPORTING LIST TO MEMORY\");\r\n        const spool = combi_1.seq(\"SPOOL PARAMETERS\", expressions_1.Source);\r\n        const archive = combi_1.seq(\"ARCHIVE PARAMETERS\", expressions_1.Source);\r\n        const lineSize = combi_1.seq(\"LINE-SIZE\", expressions_1.Source);\r\n        const lineCount = combi_1.seq(\"LINE-COUNT\", expressions_1.Source);\r\n        const user = combi_1.seq(\"USER\", expressions_1.Source);\r\n        const sset = combi_1.seq(\"USING SELECTION-SET\", expressions_1.Source);\r\n        const ssetp = combi_1.seq(\"USING SELECTION-SETS OF PROGRAM\", expressions_1.Source);\r\n        const uss = combi_1.seq(\"USING SELECTION-SCREEN\", expressions_1.Source);\r\n        const free = combi_1.seq(\"WITH FREE SELECTIONS\", expressions_1.Source);\r\n        const newList = combi_1.seq(\"NEW LIST IDENTIFICATION\", expressions_1.Source);\r\n        const layout = combi_1.seq(\"LAYOUT\", expressions_1.Source);\r\n        const cover = combi_1.seq(\"SAP COVER PAGE\", expressions_1.Source);\r\n        const keep = combi_1.seq(\"KEEP IN SPOOL\", expressions_1.Source);\r\n        const imm = combi_1.seq(\"IMMEDIATELY\", expressions_1.Source);\r\n        const dest = combi_1.seq(\"DESTINATION\", expressions_1.Source);\r\n        const language = combi_1.seq(\"LANGUAGE\", expressions_1.Source);\r\n        const perm = combi_1.per(combi_1.plus(awith), selectionTable, spool, lineSize, lineCount, archive, user, sset, ssetp, keep, cover, imm, layout, dest, language, free, newList, uss, \"TO SAP-SPOOL\", \"WITHOUT SPOOL DYNPRO\", \"VIA SELECTION-SCREEN\", exporting, expressions_1.AndReturn, job);\r\n        const ret = combi_1.seq(\"SUBMIT\", prog, combi_1.opt(perm));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Submit = Submit;\r\n//# sourceMappingURL=submit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/submit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Subtract = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Subtract {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SUBTRACT\", expressions_1.Source, \"FROM\", expressions_1.Target);\r\n        return ret;\r\n    }\r\n}\r\nexports.Subtract = Subtract;\r\n//# sourceMappingURL=subtract.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract_corresponding.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract_corresponding.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SubtractCorresponding = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SubtractCorresponding {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"SUBTRACT-CORRESPONDING\", expressions_1.Source, \"FROM\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SubtractCorresponding = SubtractCorresponding;\r\n//# sourceMappingURL=subtract_corresponding.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/subtract_corresponding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sum.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sum.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Sum = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Sum {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"SUM\");\r\n    }\r\n}\r\nexports.Sum = Sum;\r\n//# sourceMappingURL=sum.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/sum.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/summary.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/summary.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Summary = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Summary {\r\n    getMatcher() {\r\n        return combi_1.verNot(version_1.Version.Cloud, \"SUMMARY\");\r\n    }\r\n}\r\nexports.Summary = Summary;\r\n//# sourceMappingURL=summary.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/summary.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/supply.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/supply.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Supply = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Supply {\r\n    getMatcher() {\r\n        const field = combi_1.seq(expressions_1.Field, \"=\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"SUPPLY\", combi_1.plus(field), \"TO CONTEXT\", expressions_1.Field);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Supply = Supply;\r\n//# sourceMappingURL=supply.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/supply.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/suppress_dialog.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/suppress_dialog.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SuppressDialog = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SuppressDialog {\r\n    getMatcher() {\r\n        const ret = combi_1.str(\"SUPPRESS DIALOG\");\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SuppressDialog = SuppressDialog;\r\n//# sourceMappingURL=suppress_dialog.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/suppress_dialog.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/syntax_check.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/syntax_check.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SyntaxCheck = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass SyntaxCheck {\r\n    getMatcher() {\r\n        const program = combi_1.seq(\"PROGRAM\", expressions_1.Source);\r\n        const offset = combi_1.seq(\"OFFSET\", expressions_1.Target);\r\n        const frame = combi_1.seq(\"FRAME ENTRY\", expressions_1.Target);\r\n        const include = combi_1.seq(\"INCLUDE\", expressions_1.Target);\r\n        const trace = combi_1.seq(\"TRACE-TABLE\", expressions_1.Target);\r\n        const line = combi_1.seq(\"LINE\", expressions_1.Target);\r\n        const word = combi_1.seq(\"WORD\", expressions_1.Target);\r\n        const messageId = combi_1.seq(\"MESSAGE-ID\", expressions_1.Target);\r\n        const message = combi_1.seq(\"MESSAGE\", expressions_1.Target);\r\n        const id = combi_1.seq(\"ID\", expressions_1.Source, \"TABLE\", expressions_1.Target);\r\n        const replacing = combi_1.seq(\"REPLACING\", expressions_1.Target);\r\n        const directory = combi_1.seq(\"DIRECTORY ENTRY\", expressions_1.Source);\r\n        const dump = combi_1.seq(\"SHORTDUMP-ID\", expressions_1.Source);\r\n        const filter = combi_1.seq(\"FILTER\", expressions_1.Source);\r\n        const syntax = combi_1.seq(combi_1.optPrio(\"PROGRAM\"), expressions_1.Source, combi_1.per(message, line, word, offset, program, replacing, directory, frame, include, messageId, trace, dump, filter, combi_1.plus(id)));\r\n        const dynpro = combi_1.seq(\"DYNPRO\", expressions_1.Source, expressions_1.Source, expressions_1.Source, expressions_1.Source, combi_1.per(message, line, word, offset, messageId, trace));\r\n        const ret = combi_1.seq(\"SYNTAX-CHECK FOR\", combi_1.alt(syntax, dynpro));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SyntaxCheck = SyntaxCheck;\r\n//# sourceMappingURL=syntax_check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/syntax_check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/system_call.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/system_call.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SystemCall = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/target.js\");\r\nclass SystemCall {\r\n    getMatcher() {\r\n        const anyy = combi_1.regex(/^.+$/);\r\n        const objmgr = combi_1.seq(\"OBJMGR CLONE\", source_1.Source, \"TO\", target_1.Target);\r\n        const did = combi_1.seq(anyy, \"DID\", source_1.Source, \"PARAMETERS\", source_1.Source, source_1.Source, source_1.Source);\r\n        const ret = combi_1.seq(\"SYSTEM-CALL\", combi_1.altPrio(objmgr, did, combi_1.plus(anyy)));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.SystemCall = SystemCall;\r\n//# sourceMappingURL=system_call.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/system_call.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/tables.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/tables.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Tables = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Tables {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"TABLES\", expressions_1.Field);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Tables = Tables;\r\n//# sourceMappingURL=tables.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/tables.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_injection.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_injection.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TestInjection = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TestInjection {\r\n    getMatcher() {\r\n        return combi_1.seq(\"TEST-INJECTION\", expressions_1.Field);\r\n    }\r\n}\r\nexports.TestInjection = TestInjection;\r\n//# sourceMappingURL=test_injection.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_injection.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_seam.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_seam.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TestSeam = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TestSeam {\r\n    getMatcher() {\r\n        return combi_1.seq(\"TEST-SEAM\", expressions_1.Field);\r\n    }\r\n}\r\nexports.TestSeam = TestSeam;\r\n//# sourceMappingURL=test_seam.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/test_seam.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/top_of_page.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/top_of_page.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TopOfPage = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass TopOfPage {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"TOP-OF-PAGE\", combi_1.opt(\"DURING LINE-SELECTION\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.TopOfPage = TopOfPage;\r\n//# sourceMappingURL=top_of_page.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/top_of_page.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/transfer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/transfer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Transfer = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Transfer {\r\n    getMatcher() {\r\n        const length = combi_1.seq(\"LENGTH\", expressions_1.Source);\r\n        const ret = combi_1.seq(\"TRANSFER\", expressions_1.Source, \"TO\", expressions_1.Source, combi_1.opt(length), combi_1.opt(\"NO END OF LINE\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Transfer = Transfer;\r\n//# sourceMappingURL=transfer.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/transfer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/translate.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/translate.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Translate = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Translate {\r\n    getMatcher() {\r\n        const cas = combi_1.seq(\"TO\", combi_1.alt(\"UPPER\", \"LOWER\"), \"CASE\");\r\n        const using = combi_1.seq(\"USING\", expressions_1.Source);\r\n        return combi_1.seq(\"TRANSLATE\", expressions_1.Target, combi_1.alt(cas, using));\r\n    }\r\n}\r\nexports.Translate = Translate;\r\n//# sourceMappingURL=translate.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/translate.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/truncate_dataset.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/truncate_dataset.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TruncateDataset = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TruncateDataset {\r\n    getMatcher() {\r\n        return combi_1.seq(\"TRUNCATE DATASET\", expressions_1.Source, \"AT CURRENT POSITION\");\r\n    }\r\n}\r\nexports.TruncateDataset = TruncateDataset;\r\n//# sourceMappingURL=truncate_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/truncate_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/try.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/try.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Try = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass Try {\r\n    getMatcher() {\r\n        return combi_1.str(\"TRY\");\r\n    }\r\n}\r\nexports.Try = Try;\r\n//# sourceMappingURL=try.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/try.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Type = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Expressions = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Type {\r\n    getMatcher() {\r\n        const simple = combi_1.per(Expressions.Type, Expressions.Decimals, Expressions.Length);\r\n        const def = combi_1.seq(Expressions.NamespaceSimpleName, combi_1.opt(Expressions.ConstantFieldLength), combi_1.opt(combi_1.alt(simple, Expressions.TypeTable)));\r\n        // todo, BOXED is only allowed with structures inside structures?\r\n        const boxed = combi_1.ver(version_1.Version.v702, \"BOXED\");\r\n        const ret = combi_1.seq(\"TYPES\", def, combi_1.opt(boxed));\r\n        return ret;\r\n    }\r\n}\r\nexports.Type = Type;\r\n//# sourceMappingURL=type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_begin.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_begin.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeBegin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TypeBegin {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"TYPES\", \"BEGIN OF\", expressions_1.NamespaceSimpleName);\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeBegin = TypeBegin;\r\n//# sourceMappingURL=type_begin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_begin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_end.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_end.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeEnd = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass TypeEnd {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"TYPES\", \"END OF\", expressions_1.NamespaceSimpleName);\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeEnd = TypeEnd;\r\n//# sourceMappingURL=type_end.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_end.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeEnum = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass TypeEnum {\r\n    getMatcher() {\r\n        // it is also possible to define without Value, this is covered by normal type\r\n        const ret = combi_1.ver(version_1.Version.v751, combi_1.seq(\"TYPES\", expressions_1.NamespaceSimpleName, expressions_1.Value));\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeEnum = TypeEnum;\r\n//# sourceMappingURL=type_enum.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_begin.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_begin.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeEnumBegin = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass TypeEnumBegin {\r\n    getMatcher() {\r\n        const structure = combi_1.seq(\"STRUCTURE\", expressions_1.NamespaceSimpleName);\r\n        const base = combi_1.seq(\"BASE TYPE\", expressions_1.NamespaceSimpleName);\r\n        const em = combi_1.seq(\"ENUM\", expressions_1.NamespaceSimpleName, combi_1.opt(structure), combi_1.opt(base));\r\n        const ret = combi_1.ver(version_1.Version.v751, combi_1.seq(\"TYPES\", \"BEGIN OF\", em));\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeEnumBegin = TypeEnumBegin;\r\n//# sourceMappingURL=type_enum_begin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_begin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_end.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_end.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeEnumEnd = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass TypeEnumEnd {\r\n    getMatcher() {\r\n        const structure = combi_1.seq(\"STRUCTURE\", expressions_1.NamespaceSimpleName);\r\n        const ret = combi_1.ver(version_1.Version.v751, combi_1.seq(\"TYPES\", \"END OF\", \"ENUM\", expressions_1.NamespaceSimpleName, combi_1.opt(structure)));\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeEnumEnd = TypeEnumEnd;\r\n//# sourceMappingURL=type_enum_end.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_enum_end.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pool.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pool.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypePool = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\n// type pool definition\r\nclass TypePool {\r\n    getMatcher() {\r\n        const fieldName = combi_1.regex(/^\\w+$/);\r\n        const ret = combi_1.seq(\"TYPE-POOL\", fieldName);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.TypePool = TypePool;\r\n//# sourceMappingURL=type_pool.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pool.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pools.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pools.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypePools = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\n// type pool usage\r\nclass TypePools {\r\n    getMatcher() {\r\n        const fieldName = combi_1.regex(/^\\w+$/);\r\n        const ret = combi_1.seq(\"TYPE-POOLS\", fieldName);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.TypePools = TypePools;\r\n//# sourceMappingURL=type_pools.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/type_pools.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/uline.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/uline.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Uline = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Uline {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"ULINE\", combi_1.optPrio(expressions_1.WriteOffsetLength), combi_1.optPrio(\"NO-GAP\"));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Uline = Uline;\r\n//# sourceMappingURL=uline.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/uline.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unassign.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unassign.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Unassign = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Unassign {\r\n    getMatcher() {\r\n        return combi_1.seq(\"UNASSIGN\", expressions_1.TargetFieldSymbol);\r\n    }\r\n}\r\nexports.Unassign = Unassign;\r\n//# sourceMappingURL=unassign.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unassign.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unpack.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unpack.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Unpack = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Unpack {\r\n    getMatcher() {\r\n        const ret = combi_1.seq(\"UNPACK\", expressions_1.Source, \"TO\", expressions_1.Target);\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Unpack = Unpack;\r\n//# sourceMappingURL=unpack.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/unpack.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/update_database.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/update_database.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UpdateDatabase = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass UpdateDatabase {\r\n    getMatcher() {\r\n        const param = combi_1.seq(expressions_1.SQLFieldName, \"=\", expressions_1.SQLSource);\r\n        const parameters = combi_1.seq(param, combi_1.star(combi_1.seq(combi_1.opt(\",\"), param)));\r\n        const set = combi_1.seq(\"SET\", combi_1.alt(parameters, expressions_1.Dynamic), combi_1.opt(combi_1.seq(\"WHERE\", expressions_1.SQLCond)));\r\n        const fromTable = combi_1.seq(\"FROM\", combi_1.opt(\"TABLE\"), expressions_1.SQLSource);\r\n        const ret = combi_1.seq(\"UPDATE\", expressions_1.DatabaseTable, combi_1.opt(expressions_1.SQLClient), combi_1.opt(expressions_1.DatabaseConnection), combi_1.opt(combi_1.alt(fromTable, set)));\r\n        return ret;\r\n    }\r\n}\r\nexports.UpdateDatabase = UpdateDatabase;\r\n//# sourceMappingURL=update_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/update_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/wait.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/wait.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Wait = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Wait {\r\n    getMatcher() {\r\n        const up = combi_1.seq(\"UP TO\", expressions_1.Source, \"SECONDS\");\r\n        const channels = \"MESSAGING CHANNELS\";\r\n        const push = combi_1.ver(version_1.Version.v750, \"PUSH CHANNELS\");\r\n        const tasks = \"ASYNCHRONOUS TASKS\";\r\n        const type = combi_1.seq(\"FOR\", combi_1.per(channels, push, tasks));\r\n        const until = combi_1.seq(combi_1.opt(type), \"UNTIL\", expressions_1.Cond, combi_1.opt(up));\r\n        const ret = combi_1.seq(\"WAIT\", combi_1.alt(until, up));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Wait = Wait;\r\n//# sourceMappingURL=wait.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/wait.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.When = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass When {\r\n    getMatcher() {\r\n        const sourc = combi_1.seq(expressions_1.Source, combi_1.starPrio(expressions_1.Or));\r\n        return combi_1.seq(\"WHEN\", sourc);\r\n    }\r\n}\r\nexports.When = When;\r\n//# sourceMappingURL=when.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_others.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_others.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WhenOthers = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nclass WhenOthers {\r\n    getMatcher() {\r\n        return combi_1.str(\"WHEN OTHERS\");\r\n    }\r\n}\r\nexports.WhenOthers = WhenOthers;\r\n//# sourceMappingURL=when_others.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_others.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_type.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_type.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WhenType = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass WhenType {\r\n    getMatcher() {\r\n        const into = combi_1.seq(\"INTO\", expressions_1.InlineData);\r\n        const type = combi_1.seq(expressions_1.ClassName, combi_1.optPrio(into));\r\n        return combi_1.ver(version_1.Version.v750, combi_1.seq(\"WHEN TYPE\", type));\r\n    }\r\n}\r\nexports.WhenType = WhenType;\r\n//# sourceMappingURL=when_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/when_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/while.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/while.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.While = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass While {\r\n    getMatcher() {\r\n        const vary = combi_1.seq(\"VARY\", expressions_1.Target, \"FROM\", expressions_1.Source, \"NEXT\", expressions_1.Source);\r\n        return combi_1.seq(\"WHILE\", expressions_1.Cond, combi_1.opt(vary));\r\n    }\r\n}\r\nexports.While = While;\r\n//# sourceMappingURL=while.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/while.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/window.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/window.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Window = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Window {\r\n    getMatcher() {\r\n        const ending = combi_1.seq(\"ENDING AT\", expressions_1.Source, expressions_1.Source);\r\n        const ret = combi_1.seq(\"WINDOW STARTING AT\", expressions_1.Source, expressions_1.Source, combi_1.opt(ending));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Window = Window;\r\n//# sourceMappingURL=window.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/window.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.With = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass With {\r\n    getMatcher() {\r\n        const as = combi_1.seq(expressions_1.WithName, \"AS\", combi_1.tok(tokens_1.WParenLeftW), expressions_1.SelectLoop, combi_1.tok(tokens_1.WParenRightW));\r\n        return combi_1.ver(version_1.Version.v751, combi_1.seq(\"WITH\", combi_1.plus(as), expressions_1.Select));\r\n    }\r\n}\r\nexports.With = With;\r\n//# sourceMappingURL=with.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with_loop.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with_loop.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WithLoop = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass WithLoop {\r\n    getMatcher() {\r\n        const as = combi_1.seq(expressions_1.WithName, \"AS\", combi_1.tok(tokens_1.WParenLeftW), expressions_1.SelectLoop, combi_1.tok(tokens_1.WParenRightW));\r\n        return combi_1.ver(version_1.Version.v751, combi_1.seq(\"WITH\", combi_1.plus(as), expressions_1.SelectLoop));\r\n    }\r\n}\r\nexports.WithLoop = WithLoop;\r\n//# sourceMappingURL=with_loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/with_loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/2_statements/statements/write.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/2_statements/statements/write.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Write = void 0;\r\nconst combi_1 = __webpack_require__(/*! ../combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Write {\r\n    getMatcher() {\r\n        const mask = combi_1.seq(\"USING\", combi_1.altPrio(\"NO EDIT MASK\", combi_1.seq(\"EDIT MASK\", expressions_1.Source)));\r\n        const onOff = combi_1.alt(combi_1.altPrio(\"ON\", \"OFF\"), combi_1.seq(\"=\", expressions_1.FieldSub));\r\n        const dateFormat = combi_1.altPrio(\"DD/MM/YY\", \"MM/DD/YY\", \"DD/MM/YYYY\", \"MM/DD/YYYY\", \"DDMMYY\", \"MMDDYY\", \"YYMMDD\");\r\n        const as = combi_1.seq(\"AS\", combi_1.altPrio(\"LINE\", \"ICON\", \"CHECKBOX\", \"SYMBOL\"));\r\n        const to = combi_1.seq(\"TO\", expressions_1.Target);\r\n        const options = combi_1.per(mask, to, combi_1.seq(\"EXPONENT\", expressions_1.Source), \"NO-GROUPING\", \"NO-ZERO\", \"CENTERED\", combi_1.seq(\"INPUT\", combi_1.opt(onOff)), \"NO-GAP\", \"LEFT-JUSTIFIED\", as, combi_1.seq(\"FRAMES\", onOff), combi_1.seq(\"HOTSPOT\", combi_1.opt(onOff)), \"RIGHT-JUSTIFIED\", combi_1.seq(\"TIME ZONE\", expressions_1.Source), combi_1.seq(\"UNDER\", expressions_1.Source), combi_1.seq(\"STYLE\", expressions_1.Source), combi_1.seq(\"ROUND\", expressions_1.Source), combi_1.seq(\"QUICKINFO\", expressions_1.Source), \"ENVIRONMENT TIME FORMAT\", dateFormat, combi_1.seq(\"UNIT\", expressions_1.Source), combi_1.seq(\"INTENSIFIED\", combi_1.opt(onOff)), combi_1.seq(\"INDEX\", expressions_1.Source), combi_1.seq(\"DECIMALS\", expressions_1.Source), combi_1.seq(\"INVERSE\", combi_1.opt(onOff)), expressions_1.Color, combi_1.seq(\"CURRENCY\", expressions_1.Source), \"NO-SIGN\");\r\n        const ret = combi_1.seq(\"WRITE\", combi_1.opt(expressions_1.WriteOffsetLength), combi_1.altPrio(expressions_1.Source, expressions_1.Dynamic, \"/\"), combi_1.opt(options));\r\n        return combi_1.verNot(version_1.Version.Cloud, ret);\r\n    }\r\n}\r\nexports.Write = Write;\r\n//# sourceMappingURL=write.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/2_statements/statements/write.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structure_parser.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structure_parser.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StructureParser = void 0;\r\nconst _statement_1 = __webpack_require__(/*! ../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst Structures = __webpack_require__(/*! ./structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst severity_1 = __webpack_require__(/*! ../../severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\nclass StructureParser {\r\n    static run(input) {\r\n        const structure = this.findStructureForFile(input.file.getFilename());\r\n        const filtered = [];\r\n        for (const s of input.statements) {\r\n            const get = s.get();\r\n            if (get instanceof _statement_1.Comment || get instanceof _statement_1.Empty || get instanceof _statement_1.Unknown) {\r\n                continue;\r\n            }\r\n            filtered.push(s);\r\n        }\r\n        return this.runFile(structure, input.file, filtered);\r\n    }\r\n    //////////////////\r\n    static findStructureForFile(filename) {\r\n        // todo, not sure this is the right place for this logic\r\n        if (filename.endsWith(\".clas.abap\")) {\r\n            return new Structures.ClassGlobal();\r\n        }\r\n        else if (filename.endsWith(\".intf.abap\")) {\r\n            return new Structures.InterfaceGlobal();\r\n        }\r\n        else {\r\n            // todo, add a special structure for TYPE-POOLS\r\n            return new Structures.Any();\r\n        }\r\n    }\r\n    static runFile(structure, file, statements) {\r\n        const parent = new nodes_1.StructureNode(structure);\r\n        if (this.singletons[structure.constructor.name] === undefined) {\r\n            this.singletons[structure.constructor.name] = structure.getMatcher();\r\n        }\r\n        const result = this.singletons[structure.constructor.name].run(statements, parent);\r\n        if (result.error) {\r\n            const issue = issue_1.Issue.atPosition(file, new position_1.Position(1, 1), result.errorDescription, \"structure\", severity_1.Severity.Error);\r\n            return { issues: [issue], node: undefined };\r\n        }\r\n        if (result.unmatched.length > 0) {\r\n            const statement = result.unmatched[0];\r\n            const descr = \"Unexpected \" + statement.get().constructor.name.toUpperCase();\r\n            const issue = issue_1.Issue.atPosition(file, statement.getStart(), descr, \"structure\", severity_1.Severity.Error);\r\n            return { issues: [issue], node: undefined };\r\n        }\r\n        return { issues: [], node: parent };\r\n    }\r\n}\r\nexports.StructureParser = StructureParser;\r\nStructureParser.singletons = {};\r\n//# sourceMappingURL=structure_parser.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structure_parser.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sub = exports.sta = exports.star = exports.opt = exports.beginEnd = exports.alt = exports.seq = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass Sequence {\r\n    constructor(list) {\r\n        if (list.length < 2) {\r\n            throw new Error(\"Sequence, length error\");\r\n        }\r\n        this.list = list;\r\n    }\r\n    toRailroad() {\r\n        const children = this.list.map((e) => { return e.toRailroad(); });\r\n        return \"Railroad.Sequence(\" + children.join() + \")\";\r\n    }\r\n    getUsing() {\r\n        return this.list.reduce((a, c) => { return a.concat(c.getUsing()); }, []);\r\n    }\r\n    first() {\r\n        return this.list[0].first();\r\n    }\r\n    run(statements, parent) {\r\n        let inn = statements;\r\n        const out = [];\r\n        for (const i of this.list) {\r\n            const match = i.run(inn, parent);\r\n            if (match.error) {\r\n                return {\r\n                    matched: [],\r\n                    unmatched: statements,\r\n                    error: true,\r\n                    errorDescription: match.errorDescription,\r\n                    errorMatched: out.length,\r\n                };\r\n            }\r\n            out.push(...match.matched);\r\n            inn = match.unmatched;\r\n        }\r\n        return {\r\n            matched: out,\r\n            unmatched: inn,\r\n            error: false,\r\n            errorDescription: \"\",\r\n            errorMatched: 0,\r\n        };\r\n    }\r\n}\r\n// Note that the Alternative does not nessesarily return the first in the alternative\r\n// as a map is used for better performance\r\nclass Alternative {\r\n    constructor(list) {\r\n        if (list.length < 2) {\r\n            throw new Error(\"Alternative, length error\");\r\n        }\r\n        this.list = list;\r\n    }\r\n    setupMap() {\r\n        // dont call from constructor, it will cause infinite loop\r\n        if (this.map === undefined) {\r\n            this.map = {};\r\n            for (const i of this.list) {\r\n                for (const first of i.first()) {\r\n                    if (this.map[first]) {\r\n                        this.map[first].push(i);\r\n                    }\r\n                    else {\r\n                        this.map[first] = [i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n    toRailroad() {\r\n        const children = this.list.map((e) => { return e.toRailroad(); });\r\n        return \"Railroad.Choice(0, \" + children.join() + \")\";\r\n    }\r\n    getUsing() {\r\n        return this.list.reduce((a, c) => { return a.concat(c.getUsing()); }, []);\r\n    }\r\n    run(statements, parent) {\r\n        this.setupMap();\r\n        let count = 0;\r\n        let countError = \"\";\r\n        const token = statements[0].getFirstToken().getStr().toUpperCase();\r\n        for (const i of this.map[token] || []) {\r\n            const match = i.run(statements, parent);\r\n            if (match.error === false) {\r\n                return match;\r\n            }\r\n            if (match.errorMatched > count) {\r\n                countError = match.errorDescription;\r\n                count = match.errorMatched;\r\n            }\r\n        }\r\n        for (const i of this.map[\"\"] || []) {\r\n            const match = i.run(statements, parent);\r\n            if (match.error === false) {\r\n                return match;\r\n            }\r\n            if (match.errorMatched > count) {\r\n                countError = match.errorDescription;\r\n                count = match.errorMatched;\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return {\r\n                matched: [],\r\n                unmatched: statements,\r\n                error: true,\r\n                errorDescription: \"Unexpected code structure\",\r\n                errorMatched: count,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                matched: [],\r\n                unmatched: statements,\r\n                error: true,\r\n                errorDescription: countError,\r\n                errorMatched: count,\r\n            };\r\n        }\r\n    }\r\n}\r\nclass Optional {\r\n    constructor(obj) {\r\n        this.obj = obj;\r\n    }\r\n    toRailroad() {\r\n        return \"Railroad.Optional(\" + this.obj.toRailroad() + \")\";\r\n    }\r\n    getUsing() {\r\n        return this.obj.getUsing();\r\n    }\r\n    run(statements, parent) {\r\n        const ret = this.obj.run(statements, parent);\r\n        ret.error = false;\r\n        return ret;\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass Star {\r\n    constructor(obj) {\r\n        this.obj = obj;\r\n    }\r\n    toRailroad() {\r\n        return \"Railroad.ZeroOrMore(\" + this.obj.toRailroad() + \")\";\r\n    }\r\n    getUsing() {\r\n        return this.obj.getUsing();\r\n    }\r\n    run(statements, parent) {\r\n        let inn = statements;\r\n        const out = [];\r\n        while (true) {\r\n            if (inn.length === 0) {\r\n                return {\r\n                    matched: out,\r\n                    unmatched: inn,\r\n                    error: false,\r\n                    errorDescription: \"\",\r\n                    errorMatched: 0,\r\n                };\r\n            }\r\n            const match = this.obj.run(inn, parent);\r\n            if (match.error === true) {\r\n                if (match.errorMatched > 0) {\r\n                    return {\r\n                        matched: out,\r\n                        unmatched: inn,\r\n                        error: true,\r\n                        errorDescription: match.errorDescription,\r\n                        errorMatched: match.errorMatched,\r\n                    };\r\n                }\r\n                else {\r\n                    return {\r\n                        matched: out,\r\n                        unmatched: inn,\r\n                        error: false,\r\n                        errorDescription: \"\",\r\n                        errorMatched: 0,\r\n                    };\r\n                }\r\n            }\r\n            out.push(...match.matched);\r\n            inn = match.unmatched;\r\n        }\r\n    }\r\n    first() {\r\n        return [\"\"];\r\n    }\r\n}\r\nclass SubStructure {\r\n    constructor(s) {\r\n        this.s = s;\r\n    }\r\n    toRailroad() {\r\n        return \"Railroad.NonTerminal('\" + this.s.constructor.name + \"', {href: '#/structure/\" + this.s.constructor.name + \"'})\";\r\n    }\r\n    getUsing() {\r\n        return [\"structure/\" + this.s.constructor.name];\r\n    }\r\n    first() {\r\n        this.setupMatcher();\r\n        return this.matcher.first();\r\n    }\r\n    setupMatcher() {\r\n        if (this.matcher === undefined) {\r\n            // SubStructures are singletons, so the getMatcher can be saved, its expensive to create\r\n            // dont move this to the constructor, as it might trigger infinite recursion\r\n            this.matcher = this.s.getMatcher();\r\n        }\r\n    }\r\n    run(statements, parent) {\r\n        const nparent = new nodes_1.StructureNode(this.s);\r\n        this.setupMatcher();\r\n        const ret = this.matcher.run(statements, nparent);\r\n        if (ret.matched.length === 0) {\r\n            ret.error = true;\r\n        }\r\n        else {\r\n            parent.addChild(nparent);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nclass SubStatement {\r\n    constructor(obj) {\r\n        this.obj = obj;\r\n    }\r\n    first() {\r\n        const o = new this.obj();\r\n        if (o instanceof _statement_1.MacroCall || o instanceof _statement_1.NativeSQL) {\r\n            return [\"\"];\r\n        }\r\n        return o.getMatcher().first();\r\n    }\r\n    toRailroad() {\r\n        return \"Railroad.Terminal('\" + this.className() + \"', {href: '#/statement/\" + this.className() + \"'})\";\r\n    }\r\n    getUsing() {\r\n        return [\"statement/\" + this.className()];\r\n    }\r\n    className() {\r\n        return this.obj.name;\r\n    }\r\n    run(statements, parent) {\r\n        if (statements.length === 0) {\r\n            return {\r\n                matched: [],\r\n                unmatched: [],\r\n                error: true,\r\n                errorDescription: \"Expected \" + this.className().toUpperCase(),\r\n                errorMatched: 0,\r\n            };\r\n        }\r\n        else if (statements[0].get() instanceof this.obj) {\r\n            parent.addChild(statements[0]);\r\n            return {\r\n                matched: [statements[0]],\r\n                unmatched: statements.splice(1),\r\n                error: false,\r\n                errorDescription: \"\",\r\n                errorMatched: 0,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                matched: [],\r\n                unmatched: statements,\r\n                error: true,\r\n                errorDescription: \"Expected \" + this.className().toUpperCase(),\r\n                errorMatched: 0,\r\n            };\r\n        }\r\n    }\r\n}\r\nfunction seq(first, ...rest) {\r\n    return new Sequence([first].concat(rest));\r\n}\r\nexports.seq = seq;\r\nfunction alt(first, ...rest) {\r\n    return new Alternative([first].concat(rest));\r\n}\r\nexports.alt = alt;\r\nfunction beginEnd(begin, body, end) {\r\n    return new Sequence([begin, body, end]);\r\n}\r\nexports.beginEnd = beginEnd;\r\nfunction opt(o) {\r\n    return new Optional(o);\r\n}\r\nexports.opt = opt;\r\nfunction star(s) {\r\n    return new Star(s);\r\n}\r\nexports.star = star;\r\nfunction sta(s) {\r\n    return new SubStatement(s);\r\n}\r\nexports.sta = sta;\r\nconst singletons = {};\r\nfunction sub(s) {\r\n    if (singletons[s.name] === undefined) {\r\n        singletons[s.name] = new SubStructure(new s());\r\n    }\r\n    return singletons[s.name];\r\n}\r\nexports.sub = sub;\r\n//# sourceMappingURL=_combi.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/any.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/any.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Any = void 0;\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst Structures = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nclass Any {\r\n    getMatcher() {\r\n        return _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.ClassLocalFriends), _combi_1.sta(Statements.ClassDeferred), _combi_1.sta(Statements.Report), _combi_1.sta(Statements.Program), _combi_1.sta(Statements.Parameter), _combi_1.sta(Statements.CheckSelectOptions), _combi_1.sta(Statements.Get), _combi_1.sta(Statements.Initialization), _combi_1.sta(Statements.InterfaceDeferred), _combi_1.sta(Statements.SelectionScreen), _combi_1.sta(Statements.SelectOption), _combi_1.sta(Statements.AtSelectionScreen), _combi_1.sta(Statements.AtLineSelection), _combi_1.sta(Statements.AtUserCommand), _combi_1.sta(Statements.StartOfSelection), _combi_1.sta(Statements.EndOfSelection), _combi_1.sta(Statements.LoadOfProgram), _combi_1.sta(Statements.TopOfPage), _combi_1.sta(Statements.EndOfPage), _combi_1.sta(Statements.Controls), _combi_1.sta(Statements.TypePools), _combi_1.sta(Statements.TypePool), _combi_1.sta(Statements.FunctionPool), _combi_1.sub(Structures.Normal), _combi_1.sub(Structures.Form), _combi_1.sub(Structures.Module), _combi_1.sub(Structures.FunctionModule), _combi_1.sub(Structures.Interface), _combi_1.sub(Structures.ClassDefinition), _combi_1.sub(Structures.ClassImplementation)));\r\n    }\r\n}\r\nexports.Any = Any;\r\n//# sourceMappingURL=any.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/any.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/at.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/at.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.At = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass At {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.At), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndAt));\r\n    }\r\n}\r\nexports.At = At;\r\n//# sourceMappingURL=at.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/at.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Body = void 0;\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst normal_1 = __webpack_require__(/*! ./normal */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/normal.js\");\r\nclass Body {\r\n    getMatcher() {\r\n        // todo, this should be a \"plus\" instead, however its not implemented yet\r\n        return _combi_1.star(_combi_1.sub(normal_1.Normal));\r\n    }\r\n}\r\nexports.Body = Body;\r\n//# sourceMappingURL=body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Case = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst when_1 = __webpack_require__(/*! ./when */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass Case {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Case), _combi_1.star(_combi_1.alt(_combi_1.sub(when_1.When), _combi_1.sta(_statement_1.MacroCall), _combi_1.sta(Statements.Include))), _combi_1.sta(Statements.EndCase));\r\n    }\r\n}\r\nexports.Case = Case;\r\n//# sourceMappingURL=case.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case_type.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case_type.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CaseType = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst when_type_1 = __webpack_require__(/*! ./when_type */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when_type.js\");\r\nclass CaseType {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.CaseType), _combi_1.star(_combi_1.sub(when_type_1.WhenType)), _combi_1.sta(Statements.EndCase));\r\n    }\r\n}\r\nexports.CaseType = CaseType;\r\n//# sourceMappingURL=case_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Catch = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Catch {\r\n    getMatcher() {\r\n        const cat = _combi_1.seq(_combi_1.sta(Statements.Catch), _combi_1.opt(_combi_1.sub(body_1.Body)));\r\n        return cat;\r\n    }\r\n}\r\nexports.Catch = Catch;\r\n//# sourceMappingURL=catch.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch_system_exceptions.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch_system_exceptions.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CatchSystemExceptions = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass CatchSystemExceptions {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.CatchSystemExceptions), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndCatch));\r\n    }\r\n}\r\nexports.CatchSystemExceptions = CatchSystemExceptions;\r\n//# sourceMappingURL=catch_system_exceptions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch_system_exceptions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_data.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_data.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassData = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass ClassData {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.ClassDataBegin), _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.ClassData), _combi_1.sub(ClassData))), _combi_1.sta(Statements.ClassDataEnd));\r\n    }\r\n}\r\nexports.ClassData = ClassData;\r\n//# sourceMappingURL=class_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_definition.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_definition.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDefinition = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst private_section_1 = __webpack_require__(/*! ./private_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/private_section.js\");\r\nconst protected_section_1 = __webpack_require__(/*! ./protected_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/protected_section.js\");\r\nconst public_section_1 = __webpack_require__(/*! ./public_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/public_section.js\");\r\nconst statements_1 = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nclass ClassDefinition {\r\n    getMatcher() {\r\n        const body = _combi_1.seq(_combi_1.opt(_combi_1.sta(statements_1.SetExtendedCheck)), _combi_1.star(_combi_1.sta(statements_1.TypePools)), _combi_1.opt(_combi_1.sub(public_section_1.PublicSection)), _combi_1.opt(_combi_1.sub(protected_section_1.ProtectedSection)), _combi_1.opt(_combi_1.sub(private_section_1.PrivateSection)), _combi_1.opt(_combi_1.sta(statements_1.SetExtendedCheck)));\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.ClassDefinition), body, _combi_1.sta(Statements.EndClass));\r\n    }\r\n}\r\nexports.ClassDefinition = ClassDefinition;\r\n//# sourceMappingURL=class_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_global.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_global.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassGlobal = void 0;\r\nconst Structures = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass ClassGlobal {\r\n    getMatcher() {\r\n        return _combi_1.seq(_combi_1.star(_combi_1.sta(Statements.TypePools)), _combi_1.sub(Structures.ClassDefinition), _combi_1.sub(Structures.ClassImplementation));\r\n    }\r\n}\r\nexports.ClassGlobal = ClassGlobal;\r\n//# sourceMappingURL=class_global.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_global.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_implementation.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_implementation.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassImplementation = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass ClassImplementation {\r\n    getMatcher() {\r\n        // the DEFINE statement is allowed between local method implementations, but not global?\r\n        const body = _combi_1.star(_combi_1.alt(_combi_1.sub(Structures.Define), _combi_1.sta(Statements.Include), _combi_1.sub(Structures.Method)));\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.ClassImplementation), body, _combi_1.sta(Statements.EndClass));\r\n    }\r\n}\r\nexports.ClassImplementation = ClassImplementation;\r\n//# sourceMappingURL=class_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/constants.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/constants.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Constants = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass Constants {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.ConstantBegin), _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.Constant), _combi_1.sub(Constants))), _combi_1.sta(Statements.ConstantEnd));\r\n    }\r\n}\r\nexports.Constants = Constants;\r\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/constants.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/data.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/data.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Data = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst enhancement_1 = __webpack_require__(/*! ./enhancement */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement.js\");\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/constants.js\");\r\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/types.js\");\r\nconst define_1 = __webpack_require__(/*! ./define */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/define.js\");\r\nclass Data {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.DataBegin), _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.Data), _combi_1.sub(Data), _combi_1.sta(Statements.Include), _combi_1.sta(Statements.Ranges), _combi_1.sta(Statements.Constant), _combi_1.sub(constants_1.Constants), _combi_1.sta(Statements.Type), _combi_1.sub(types_1.Types), _combi_1.sub(enhancement_1.Enhancement), _combi_1.sub(define_1.Define), _combi_1.sta(Statements.IncludeType), _combi_1.sta(Statements.TypePools), _combi_1.sta(Statements.EnhancementPoint))), _combi_1.sta(Statements.DataEnd));\r\n    }\r\n}\r\nexports.Data = Data;\r\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/define.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/define.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Define = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass Define {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Define), _combi_1.star(_combi_1.sta(_statement_1.MacroContent)), _combi_1.sta(Statements.EndOfDefinition));\r\n    }\r\n}\r\nexports.Define = Define;\r\n//# sourceMappingURL=define.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/define.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/do.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/do.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Do = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Do {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Do), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndDo));\r\n    }\r\n}\r\nexports.Do = Do;\r\n//# sourceMappingURL=do.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/do.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/else.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/else.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Else = void 0;\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Else {\r\n    getMatcher() {\r\n        const body = _combi_1.opt(_combi_1.sub(body_1.Body));\r\n        const elseif = _combi_1.seq(_combi_1.sta(Statements.Else), body);\r\n        return elseif;\r\n    }\r\n}\r\nexports.Else = Else;\r\n//# sourceMappingURL=else.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/else.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/elseif.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/elseif.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ElseIf = void 0;\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass ElseIf {\r\n    getMatcher() {\r\n        const body = _combi_1.opt(_combi_1.sub(body_1.Body));\r\n        const elseif = _combi_1.seq(_combi_1.sta(Statements.ElseIf), body);\r\n        return elseif;\r\n    }\r\n}\r\nexports.ElseIf = ElseIf;\r\n//# sourceMappingURL=elseif.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/elseif.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Enhancement = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Enhancement {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Enhancement), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndEnhancement));\r\n    }\r\n}\r\nexports.Enhancement = Enhancement;\r\n//# sourceMappingURL=enhancement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement_section.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement_section.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EnhancementSection = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass EnhancementSection {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.EnhancementSection), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndEnhancementSection));\r\n    }\r\n}\r\nexports.EnhancementSection = EnhancementSection;\r\n//# sourceMappingURL=enhancement_section.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement_section.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/exec_sql.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/exec_sql.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExecSQL = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass ExecSQL {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.ExecSQL), _combi_1.star(_combi_1.sta(_statement_1.NativeSQL)), _combi_1.sta(Statements.EndExec));\r\n    }\r\n}\r\nexports.ExecSQL = ExecSQL;\r\n//# sourceMappingURL=exec_sql.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/exec_sql.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/form.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/form.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Form = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Form {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Form), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndForm));\r\n    }\r\n}\r\nexports.Form = Form;\r\n//# sourceMappingURL=form.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/form.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/function_module.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/function_module.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionModule = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass FunctionModule {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.FunctionModule), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndFunction));\r\n    }\r\n}\r\nexports.FunctionModule = FunctionModule;\r\n//# sourceMappingURL=function_module.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/function_module.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/if.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/if.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.If = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nconst elseif_1 = __webpack_require__(/*! ./elseif */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/elseif.js\");\r\nconst else_1 = __webpack_require__(/*! ./else */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/else.js\");\r\nclass If {\r\n    getMatcher() {\r\n        const contents = _combi_1.seq(_combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.star(_combi_1.sub(elseif_1.ElseIf)), _combi_1.opt(_combi_1.sub(else_1.Else)));\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.If), contents, _combi_1.sta(Statements.EndIf));\r\n    }\r\n}\r\nexports.If = If;\r\n//# sourceMappingURL=if.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/if.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./any */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/any.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./at */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/at.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./case_type */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./case */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/case.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./catch_system_exceptions */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch_system_exceptions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./catch */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_data */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_data.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_definition */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_global */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_global.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_implementation */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./section_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/constants.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/data.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./define */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/define.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./do */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/do.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./else */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/else.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./elseif */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/elseif.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enhancement_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement_section.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enhancement */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/enhancement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./exec_sql */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/exec_sql.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/form.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_module */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/function_module.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./if */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/if.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface_global */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface_global.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./loop */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/loop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/method.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./module */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/module.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./normal */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/normal.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./on_change */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/on_change.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./private_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/private_section.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./protected_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/protected_section.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./provide */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/provide.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./public_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/public_section.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./select */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/select.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./statics */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/statics.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./test_injection */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_injection.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./test_seam */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_seam.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./try */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/try.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_enum */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/type_enum.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/types.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./when_type */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./when */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./with */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/with.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./while */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/while.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Interface = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst section_section_1 = __webpack_require__(/*! ./section_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js\");\r\nclass Interface {\r\n    getMatcher() {\r\n        const intf = _combi_1.beginEnd(_combi_1.sta(Statements.Interface), _combi_1.star(_combi_1.sub(section_section_1.SectionContents)), _combi_1.sta(Statements.EndInterface));\r\n        return intf;\r\n    }\r\n}\r\nexports.Interface = Interface;\r\n//# sourceMappingURL=interface.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface_global.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface_global.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InterfaceGlobal = void 0;\r\nconst Structures = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass InterfaceGlobal {\r\n    getMatcher() {\r\n        return _combi_1.seq(_combi_1.star(_combi_1.sta(Statements.TypePools)), _combi_1.star(_combi_1.sta(Statements.InterfaceLoad)), _combi_1.sub(Structures.Interface));\r\n    }\r\n}\r\nexports.InterfaceGlobal = InterfaceGlobal;\r\n//# sourceMappingURL=interface_global.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/interface_global.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/loop.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/loop.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Loop = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nclass Loop {\r\n    getMatcher() {\r\n        const body = _combi_1.alt(_combi_1.sub(_1.Body), _combi_1.sub(_1.OnChange));\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Loop), _combi_1.star(body), _combi_1.sta(Statements.EndLoop));\r\n    }\r\n}\r\nexports.Loop = Loop;\r\n//# sourceMappingURL=loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/method.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/method.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Method = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Method {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.MethodImplementation), _combi_1.opt(_combi_1.alt(_combi_1.sub(body_1.Body), _combi_1.star(_combi_1.sta(_statement_1.NativeSQL)))), _combi_1.sta(Statements.EndMethod));\r\n    }\r\n}\r\nexports.Method = Method;\r\n//# sourceMappingURL=method.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/method.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/module.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/module.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Module = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Module {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Module), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndModule));\r\n    }\r\n}\r\nexports.Module = Module;\r\n//# sourceMappingURL=module.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/module.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/normal.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/normal.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Normal = void 0;\r\nconst Structures = __webpack_require__(/*! . */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass Normal {\r\n    getMatcher() {\r\n        // note that the sequence of alternatives here influences performance\r\n        return _combi_1.alt(_combi_1.sta(Statements.Move), _combi_1.sta(Statements.Call), _combi_1.sta(Statements.Data), _combi_1.sub(Structures.If), _combi_1.sta(Statements.Clear), _combi_1.sta(Statements.FieldSymbol), _combi_1.sta(Statements.CreateObject), _combi_1.sta(Statements.CallFunction), _combi_1.sta(_statement_1.MacroCall), _combi_1.sub(Structures.Loop), _combi_1.sta(Statements.Append), _combi_1.sub(Structures.Try), _combi_1.sta(Statements.ReadTable), _combi_1.sta(Statements.Assert), _combi_1.sta(Statements.Return), _combi_1.sta(Statements.Select), _combi_1.sta(Statements.Assign), _combi_1.sta(Statements.InsertInternal), _combi_1.sta(Statements.DeleteInternal), _combi_1.sta(Statements.Concatenate), _combi_1.sub(Structures.Case), _combi_1.sub(Structures.CaseType), _combi_1.sub(Structures.Enhancement), _combi_1.sub(Structures.EnhancementSection), _combi_1.sta(Statements.AddCorresponding), _combi_1.sta(Statements.Add), _combi_1.sta(Statements.AssignLocalCopy), _combi_1.sta(Statements.AuthorityCheck), _combi_1.sta(Statements.Back), _combi_1.sta(Statements.Break), _combi_1.sta(Statements.BreakId), _combi_1.sta(Statements.CallDatabase), _combi_1.sta(Statements.CallDialog), _combi_1.sta(Statements.CallKernel), _combi_1.sta(Statements.CallOLE), _combi_1.sta(Statements.CallScreen), _combi_1.sta(Statements.CallSelectionScreen), _combi_1.sta(Statements.CallTransaction), _combi_1.sta(Statements.CallTransformation), _combi_1.sta(Statements.Check), _combi_1.sta(Statements.ClassDefinitionLoad), _combi_1.sta(Statements.CloseCursor), _combi_1.sta(Statements.CloseDataset), _combi_1.sta(Statements.Collect), _combi_1.sta(Statements.Commit), _combi_1.sta(Statements.Communication), _combi_1.sta(Statements.Compute), _combi_1.sta(Statements.CallBadi), _combi_1.sta(Statements.Condense), _combi_1.sta(Statements.Constant), _combi_1.sta(Statements.Contexts), _combi_1.sta(Statements.Continue), _combi_1.sta(Statements.ConvertText), _combi_1.sta(Statements.Convert), _combi_1.sta(Statements.CreateData), _combi_1.sta(Statements.CreateOLE), _combi_1.sta(Statements.DeleteCluster), _combi_1.sta(Statements.DeleteDatabase), _combi_1.sta(Statements.DeleteDataset), _combi_1.sta(Statements.DeleteDynpro), _combi_1.sta(Statements.DeleteMemory), _combi_1.sta(Statements.DeleteReport), _combi_1.sta(Statements.DeleteTextpool), _combi_1.sta(Statements.Demand), _combi_1.sta(Statements.Describe), _combi_1.sta(Statements.Detail), _combi_1.sta(Statements.Divide), _combi_1.sta(Statements.EditorCall), _combi_1.sta(Statements.EnhancementPoint), _combi_1.sta(Statements.Exit), _combi_1.sta(Statements.ExportDynpro), _combi_1.sta(Statements.Export), _combi_1.sta(Statements.Extract), _combi_1.sta(Statements.FetchNextCursor), _combi_1.sta(Statements.FieldGroup), _combi_1.sta(Statements.Fields), _combi_1.sta(Statements.Find), _combi_1.sta(Statements.Format), _combi_1.sta(Statements.FreeMemory), _combi_1.sta(Statements.FreeObject), _combi_1.sta(Statements.Free), _combi_1.sta(Statements.GenerateDynpro), _combi_1.sta(Statements.GenerateReport), _combi_1.sta(Statements.GenerateSubroutine), _combi_1.sta(Statements.GetBadi), _combi_1.sta(Statements.GetBit), _combi_1.sta(Statements.GetCursor), _combi_1.sta(Statements.GetDataset), _combi_1.sta(Statements.GetLocale), _combi_1.sta(Statements.GetParameter), _combi_1.sta(Statements.GetPFStatus), _combi_1.sta(Statements.GetProperty), _combi_1.sta(Statements.GetReference), _combi_1.sta(Statements.GetRunTime), _combi_1.sta(Statements.GetTime), _combi_1.sta(Statements.Hide), _combi_1.sta(Statements.Nodes), _combi_1.sta(Statements.ImportDynpro), _combi_1.sta(Statements.ImportNametab), _combi_1.sta(Statements.MoveCorresponding), _combi_1.sta(Statements.Import), _combi_1.sta(Statements.Infotypes), _combi_1.sta(Statements.Include), // include does not have to be at top level\r\n        _combi_1.sta(Statements.InsertDatabase), _combi_1.sta(Statements.InsertReport), _combi_1.sta(Statements.InsertTextpool), _combi_1.sta(Statements.InsertFieldGroup), _combi_1.sta(Statements.InterfaceLoad), _combi_1.sta(Statements.Leave), _combi_1.sta(Statements.LoadReport), _combi_1.sta(Statements.Local), _combi_1.sta(Statements.LogPoint), _combi_1.sta(Statements.Message), _combi_1.sta(Statements.ModifyLine), _combi_1.sta(Statements.ModifyDatabase), _combi_1.sta(Statements.ModifyInternal), _combi_1.sta(Statements.Multiply), _combi_1.sta(Statements.NewLine), _combi_1.sta(Statements.NewPage), _combi_1.sta(Statements.OpenCursor), _combi_1.sta(Statements.OpenDataset), _combi_1.sta(Statements.Overlay), _combi_1.sta(Statements.Pack), _combi_1.sta(Statements.Perform), _combi_1.sta(Statements.Position), _combi_1.sta(Statements.Put), _combi_1.sta(Statements.PrintControl), _combi_1.sta(Statements.RaiseEvent), _combi_1.sta(Statements.Raise), _combi_1.sta(Statements.Ranges), _combi_1.sta(Statements.ReadDataset), _combi_1.sta(Statements.ReadLine), _combi_1.sta(Statements.ReadReport), _combi_1.sta(Statements.ReadTextpool), _combi_1.sta(Statements.Receive), _combi_1.sta(Statements.RefreshControl), _combi_1.sta(Statements.Refresh), _combi_1.sta(Statements.Reject), _combi_1.sta(Statements.Replace), _combi_1.sta(Statements.Reserve), _combi_1.sta(Statements.Resume), _combi_1.sta(Statements.Retry), _combi_1.sta(Statements.Rollback), _combi_1.sta(Statements.Scan), _combi_1.sta(Statements.ScrollList), _combi_1.sta(Statements.Search), _combi_1.sta(Statements.SetBit), _combi_1.sta(Statements.SetBlank), _combi_1.sta(Statements.SetCountry), _combi_1.sta(Statements.SetCursor), _combi_1.sta(Statements.SetDataset), _combi_1.sta(Statements.SetExtendedCheck), _combi_1.sta(Statements.SetHandler), _combi_1.sta(Statements.SetLanguage), _combi_1.sta(Statements.SetLeft), _combi_1.sta(Statements.SetLocale), _combi_1.sta(Statements.SetMargin), _combi_1.sta(Statements.SetParameter), _combi_1.sta(Statements.SetPFStatus), _combi_1.sta(Statements.SetProperty), _combi_1.sta(Statements.SetRunTime), _combi_1.sta(Statements.SetScreen), _combi_1.sta(Statements.SetTitlebar), _combi_1.sta(Statements.SetUserCommand), _combi_1.sta(Statements.SetUpdateTask), _combi_1.sta(Statements.Shift), _combi_1.sta(Statements.Skip), _combi_1.sta(Statements.SortDataset), _combi_1.sta(Statements.Sort), _combi_1.sta(Statements.Static), _combi_1.sta(Statements.Split), _combi_1.sta(Statements.Stop), _combi_1.sta(Statements.Submit), _combi_1.sta(Statements.Summary), _combi_1.sta(Statements.SubtractCorresponding), _combi_1.sta(Statements.Subtract), _combi_1.sta(Statements.SuppressDialog), _combi_1.sta(Statements.Supply), _combi_1.sta(Statements.Sum), _combi_1.sta(Statements.SyntaxCheck), _combi_1.sta(Statements.SystemCall), _combi_1.sta(Statements.Tables), _combi_1.sta(Statements.Transfer), _combi_1.sta(Statements.Translate), _combi_1.sta(Statements.Type), _combi_1.sta(Statements.TypePools), _combi_1.sta(Statements.Uline), _combi_1.sta(Statements.Unassign), _combi_1.sta(Statements.Unpack), _combi_1.sta(Statements.UpdateDatabase), _combi_1.sta(Statements.Wait), _combi_1.sta(Statements.Window), _combi_1.sta(Statements.Write), _combi_1.sta(Statements.CommitEntities), _combi_1.sta(Statements.ModifyEntities), _combi_1.sta(Statements.ReadEntities), _combi_1.sta(Statements.RollbackEntities), _combi_1.sub(Structures.Define), _combi_1.sub(Structures.TestInjection), _combi_1.sub(Structures.TestSeam), _combi_1.sub(Structures.Provide), _combi_1.sub(Structures.CatchSystemExceptions), _combi_1.sub(Structures.At), _combi_1.sub(Structures.Constants), _combi_1.sub(Structures.Types), _combi_1.sub(Structures.Statics), _combi_1.sub(Structures.Select), _combi_1.sub(Structures.Data), _combi_1.sub(Structures.TypeEnum), _combi_1.sub(Structures.While), _combi_1.sub(Structures.With), _combi_1.sub(Structures.Do), _combi_1.sub(Structures.ExecSQL));\r\n    }\r\n}\r\nexports.Normal = Normal;\r\n//# sourceMappingURL=normal.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/normal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/on_change.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/on_change.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OnChange = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass OnChange {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.OnChange), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndOn));\r\n    }\r\n}\r\nexports.OnChange = OnChange;\r\n//# sourceMappingURL=on_change.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/on_change.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/private_section.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/private_section.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PrivateSection = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst section_section_1 = __webpack_require__(/*! ./section_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js\");\r\nclass PrivateSection {\r\n    getMatcher() {\r\n        return _combi_1.seq(_combi_1.sta(Statements.Private), _combi_1.opt(_combi_1.sub(section_section_1.SectionContents)));\r\n    }\r\n}\r\nexports.PrivateSection = PrivateSection;\r\n//# sourceMappingURL=private_section.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/private_section.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/protected_section.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/protected_section.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ProtectedSection = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst section_section_1 = __webpack_require__(/*! ./section_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js\");\r\nclass ProtectedSection {\r\n    getMatcher() {\r\n        return _combi_1.seq(_combi_1.sta(Statements.Protected), _combi_1.opt(_combi_1.sub(section_section_1.SectionContents)));\r\n    }\r\n}\r\nexports.ProtectedSection = ProtectedSection;\r\n//# sourceMappingURL=protected_section.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/protected_section.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/provide.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/provide.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Provide = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Provide {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Provide), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndProvide));\r\n    }\r\n}\r\nexports.Provide = Provide;\r\n//# sourceMappingURL=provide.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/provide.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/public_section.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/public_section.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PublicSection = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst section_section_1 = __webpack_require__(/*! ./section_section */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js\");\r\nclass PublicSection {\r\n    getMatcher() {\r\n        return _combi_1.seq(_combi_1.sta(Statements.Public), _combi_1.opt(_combi_1.sub(section_section_1.SectionContents)));\r\n    }\r\n}\r\nexports.PublicSection = PublicSection;\r\n//# sourceMappingURL=public_section.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/public_section.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SectionContents = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/types.js\");\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/constants.js\");\r\nconst type_enum_1 = __webpack_require__(/*! ./type_enum */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/type_enum.js\");\r\nconst class_data_1 = __webpack_require__(/*! ./class_data */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/class_data.js\");\r\nconst data_1 = __webpack_require__(/*! ./data */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/data.js\");\r\nclass SectionContents {\r\n    getMatcher() {\r\n        return _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.MethodDef), _combi_1.sta(Statements.InterfaceDef), _combi_1.sta(Statements.Data), _combi_1.sta(Statements.ClassData), _combi_1.sta(Statements.Events), _combi_1.sta(Statements.Constant), _combi_1.sta(Statements.Aliases), _combi_1.sta(Statements.TypePools), _combi_1.sta(Statements.InterfaceLoad), _combi_1.sta(Statements.ClassDefinitionLoad), _combi_1.sub(types_1.Types), _combi_1.sub(constants_1.Constants), _combi_1.sub(type_enum_1.TypeEnum), _combi_1.sub(data_1.Data), _combi_1.sub(class_data_1.ClassData), _combi_1.sta(Statements.Type)));\r\n    }\r\n}\r\nexports.SectionContents = SectionContents;\r\n//# sourceMappingURL=section_section.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/section_section.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/select.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/select.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Select = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Select {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.SelectLoop), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndSelect));\r\n    }\r\n}\r\nexports.Select = Select;\r\n//# sourceMappingURL=select.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/select.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/statics.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/statics.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Statics = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass Statics {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.StaticBegin), _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.Static), _combi_1.sta(Statements.IncludeType))), _combi_1.sta(Statements.StaticEnd));\r\n    }\r\n}\r\nexports.Statics = Statics;\r\n//# sourceMappingURL=statics.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/statics.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_injection.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_injection.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TestInjection = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass TestInjection {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.TestInjection), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndTestInjection));\r\n    }\r\n}\r\nexports.TestInjection = TestInjection;\r\n//# sourceMappingURL=test_injection.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_injection.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_seam.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_seam.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TestSeam = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass TestSeam {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.TestSeam), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndTestSeam));\r\n    }\r\n}\r\nexports.TestSeam = TestSeam;\r\n//# sourceMappingURL=test_seam.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/test_seam.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/try.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/try.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Try = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst catch_1 = __webpack_require__(/*! ./catch */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/catch.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass Try {\r\n    getMatcher() {\r\n        const cleanup = _combi_1.seq(_combi_1.sta(Statements.Cleanup), _combi_1.opt(_combi_1.sub(body_1.Body)));\r\n        const block = _combi_1.seq(_combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.star(_combi_1.sub(catch_1.Catch)), _combi_1.opt(cleanup));\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.Try), block, _combi_1.sta(Statements.EndTry));\r\n    }\r\n}\r\nexports.Try = Try;\r\n//# sourceMappingURL=try.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/try.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/type_enum.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/type_enum.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeEnum = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nclass TypeEnum {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.TypeEnumBegin), _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.TypeEnum), _combi_1.sta(Statements.Type))), _combi_1.sta(Statements.TypeEnumEnd));\r\n    }\r\n}\r\nexports.TypeEnum = TypeEnum;\r\n//# sourceMappingURL=type_enum.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/type_enum.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/types.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/types.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Types = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../../2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass Types {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.TypeBegin), _combi_1.star(_combi_1.alt(_combi_1.sta(Statements.Type), _combi_1.sub(Types), _combi_1.sta(_statement_1.MacroCall), _combi_1.sta(Statements.IncludeType))), _combi_1.sta(Statements.TypeEnd));\r\n    }\r\n}\r\nexports.Types = Types;\r\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/types.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.When = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass When {\r\n    getMatcher() {\r\n        const when = _combi_1.seq(_combi_1.alt(_combi_1.sta(Statements.When), _combi_1.sta(Statements.WhenOthers)), _combi_1.opt(_combi_1.sub(body_1.Body)));\r\n        return when;\r\n    }\r\n}\r\nexports.When = When;\r\n//# sourceMappingURL=when.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when_type.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when_type.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WhenType = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass WhenType {\r\n    getMatcher() {\r\n        const when = _combi_1.seq(_combi_1.alt(_combi_1.sta(Statements.WhenType), _combi_1.sta(Statements.WhenOthers)), _combi_1.opt(_combi_1.sub(body_1.Body)));\r\n        return when;\r\n    }\r\n}\r\nexports.WhenType = WhenType;\r\n//# sourceMappingURL=when_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/when_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/while.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/while.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.While = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass While {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.While), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndWhile));\r\n    }\r\n}\r\nexports.While = While;\r\n//# sourceMappingURL=while.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/while.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/3_structures/structures/with.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/3_structures/structures/with.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.With = void 0;\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _combi_1 = __webpack_require__(/*! ./_combi */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/_combi.js\");\r\nconst body_1 = __webpack_require__(/*! ./body */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/body.js\");\r\nclass With {\r\n    getMatcher() {\r\n        return _combi_1.beginEnd(_combi_1.sta(Statements.WithLoop), _combi_1.opt(_combi_1.sub(body_1.Body)), _combi_1.sta(Statements.EndWith));\r\n    }\r\n}\r\nexports.With = With;\r\n//# sourceMappingURL=with.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/3_structures/structures/with.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParameterDirection = exports.AttributeLevel = void 0;\r\n// Only helper functions to get data from single file, no type information\r\nvar AttributeLevel;\r\n(function (AttributeLevel) {\r\n    AttributeLevel[\"Instance\"] = \"instance\";\r\n    AttributeLevel[\"Static\"] = \"static\";\r\n    AttributeLevel[\"Constant\"] = \"constant\";\r\n})(AttributeLevel = exports.AttributeLevel || (exports.AttributeLevel = {}));\r\nvar MethodParameterDirection;\r\n(function (MethodParameterDirection) {\r\n    MethodParameterDirection[\"Importing\"] = \"importing\";\r\n    MethodParameterDirection[\"Exporting\"] = \"exporting\";\r\n    MethodParameterDirection[\"Changing\"] = \"changing\";\r\n    MethodParameterDirection[\"Returning\"] = \"returning\";\r\n})(MethodParameterDirection = exports.MethodParameterDirection || (exports.MethodParameterDirection = {}));\r\n//# sourceMappingURL=_abap_file_information.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Identifier = void 0;\r\nclass Identifier {\r\n    constructor(token, filename) {\r\n        this.token = token;\r\n        this.filename = filename;\r\n    }\r\n    getName() {\r\n        let name = this.token.getStr();\r\n        // todo, should this be handled in the parser instead?\r\n        if (name.substr(0, 1) === \"!\") {\r\n            name = name.substr(1);\r\n        }\r\n        return name;\r\n    }\r\n    equals(id) {\r\n        // note how the boolean condition is evalulated lazily\r\n        return id.getStart().equals(this.getStart())\r\n            && id.getFilename() === this.getFilename();\r\n    }\r\n    getToken() {\r\n        return this.token;\r\n    }\r\n    getFilename() {\r\n        return this.filename;\r\n    }\r\n    getStart() {\r\n        return this.token.getStart();\r\n    }\r\n    getEnd() {\r\n        return this.token.getEnd();\r\n    }\r\n}\r\nexports.Identifier = Identifier;\r\n//# sourceMappingURL=_identifier.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/4_file_information/abap_file_information.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/4_file_information/abap_file_information.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAPFileInformation = void 0;\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _abap_file_information_1 = __webpack_require__(/*! ./_abap_file_information */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ./_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst Tokens = __webpack_require__(/*! ../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst visibility_1 = __webpack_require__(/*! ./visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nclass ABAPFileInformation {\r\n    constructor(structure, filename) {\r\n        this.forms = [];\r\n        this.implementations = [];\r\n        this.interfaces = [];\r\n        this.classes = [];\r\n        this.filename = filename;\r\n        this.parse(structure);\r\n    }\r\n    listClassImplementations() {\r\n        return this.implementations;\r\n    }\r\n    listInterfaceDefinitions() {\r\n        return this.interfaces;\r\n    }\r\n    getInterfaceDefinitionByName(name) {\r\n        const upper = name.toUpperCase();\r\n        for (const i of this.listInterfaceDefinitions()) {\r\n            if (i.identifier.getName().toUpperCase() === upper) {\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    listClassDefinitions() {\r\n        return this.classes;\r\n    }\r\n    getClassDefinitionByName(name) {\r\n        const upper = name.toUpperCase();\r\n        for (const d of this.listClassDefinitions()) {\r\n            if (d.identifier.getName().toUpperCase() === upper) {\r\n                return d;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getClassImplementationByName(name) {\r\n        const upper = name.toUpperCase();\r\n        for (const impl of this.listClassImplementations()) {\r\n            if (impl.identifier.getName().toUpperCase() === upper) {\r\n                return impl;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    listFormDefinitions() {\r\n        return this.forms;\r\n    }\r\n    ///////////////////////\r\n    parse(structure) {\r\n        var _a;\r\n        if (structure === undefined) {\r\n            return;\r\n        }\r\n        this.parseClasses(structure);\r\n        this.parseInterfaces(structure);\r\n        for (const found of structure.findAllStructures(Structures.ClassImplementation)) {\r\n            const methods = [];\r\n            for (const method of found.findAllStructures(Structures.Method)) {\r\n                const methodName = (_a = method.findFirstExpression(Expressions.MethodName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n                if (methodName) {\r\n                    methods.push(new _identifier_1.Identifier(methodName, this.filename));\r\n                }\r\n            }\r\n            const name = found.findFirstStatement(Statements.ClassImplementation).findFirstExpression(Expressions.ClassName).getFirstToken();\r\n            this.implementations.push({\r\n                name: name.getStr(),\r\n                identifier: new _identifier_1.Identifier(name, this.filename),\r\n                methods\r\n            });\r\n        }\r\n        for (const statement of structure.findAllStructures(Structures.Form)) {\r\n            // FORMs can contain a dash in the name\r\n            const pos = statement.findFirstExpression(Expressions.FormName).getFirstToken().getStart();\r\n            const name = statement.findFirstExpression(Expressions.FormName).concatTokens();\r\n            const nameToken = new Tokens.Identifier(pos, name);\r\n            this.forms.push({\r\n                name: nameToken.getStr(),\r\n                identifier: new _identifier_1.Identifier(nameToken, this.filename),\r\n            });\r\n        }\r\n    }\r\n    parseInterfaces(structure) {\r\n        for (const found of structure.findDirectStructures(Structures.Interface)) {\r\n            const i = found.findFirstStatement(Statements.Interface);\r\n            if (i === undefined) {\r\n                throw new Error(\"Interface expected, parseInterfaces\");\r\n            }\r\n            const interfaceName = i.findDirectExpression(Expressions.InterfaceName).getFirstToken();\r\n            const methods = this.parseMethodDefinition(found, visibility_1.Visibility.Public);\r\n            const attributes = this.parseAttributes(found, visibility_1.Visibility.Public);\r\n            const aliases = this.parseAliases(found, visibility_1.Visibility.Public);\r\n            const g = i.findDirectExpression(Expressions.ClassGlobal);\r\n            this.interfaces.push({\r\n                name: interfaceName.getStr(),\r\n                identifier: new _identifier_1.Identifier(interfaceName, this.filename),\r\n                isLocal: g === undefined,\r\n                isGlobal: g !== undefined,\r\n                interfaces: this.getImplementing(found),\r\n                aliases,\r\n                methods,\r\n                attributes,\r\n            });\r\n        }\r\n    }\r\n    parseClasses(structure) {\r\n        var _a;\r\n        for (const found of structure.findAllStructures(Structures.ClassDefinition)) {\r\n            const className = found.findFirstStatement(Statements.ClassDefinition).findFirstExpression(Expressions.ClassName).getFirstToken();\r\n            const methods = this.parseMethodDefinition(found.findFirstStructure(Structures.PublicSection), visibility_1.Visibility.Public);\r\n            methods.push(...this.parseMethodDefinition(found.findFirstStructure(Structures.ProtectedSection), visibility_1.Visibility.Protected));\r\n            methods.push(...this.parseMethodDefinition(found.findFirstStructure(Structures.PrivateSection), visibility_1.Visibility.Private));\r\n            const attributes = this.parseAttributes(found.findFirstStructure(Structures.PublicSection), visibility_1.Visibility.Public);\r\n            attributes.push(...this.parseAttributes(found.findFirstStructure(Structures.ProtectedSection), visibility_1.Visibility.Protected));\r\n            attributes.push(...this.parseAttributes(found.findFirstStructure(Structures.PrivateSection), visibility_1.Visibility.Private));\r\n            const aliases = this.parseAliases(found.findFirstStructure(Structures.PublicSection), visibility_1.Visibility.Public);\r\n            aliases.push(...this.parseAliases(found.findFirstStructure(Structures.ProtectedSection), visibility_1.Visibility.Protected));\r\n            aliases.push(...this.parseAliases(found.findFirstStructure(Structures.PrivateSection), visibility_1.Visibility.Private));\r\n            const superClassName = (_a = found.findFirstExpression(Expressions.SuperClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr();\r\n            const containsGlobal = found.findFirstExpression(Expressions.ClassGlobal);\r\n            const concat = found.findFirstStatement(Statements.ClassDefinition).concatTokens().toUpperCase();\r\n            this.classes.push({\r\n                name: className.getStr(),\r\n                identifier: new _identifier_1.Identifier(className, this.filename),\r\n                isLocal: containsGlobal === undefined,\r\n                isGlobal: containsGlobal !== undefined,\r\n                methods,\r\n                superClassName,\r\n                interfaces: this.getImplementing(found),\r\n                isForTesting: concat.includes(\" FOR TESTING\"),\r\n                isAbstract: concat.includes(\" ABSTRACT\"),\r\n                isFinal: found.findFirstExpression(Expressions.ClassFinal) !== undefined,\r\n                aliases,\r\n                attributes,\r\n            });\r\n        }\r\n    }\r\n    ///////////////////\r\n    getImplementing(input) {\r\n        const ret = [];\r\n        for (const node of input.findAllStatements(Statements.InterfaceDef)) {\r\n            const abstract = node.findDirectExpression(Expressions.AbstractMethods);\r\n            const abstractMethods = [];\r\n            if (abstract) {\r\n                for (const m of abstract.findDirectExpressions(Expressions.MethodName)) {\r\n                    abstractMethods.push(m.concatTokens().toUpperCase());\r\n                }\r\n            }\r\n            const final = node.findDirectExpression(Expressions.FinalMethods);\r\n            const finalMethods = [];\r\n            if (final) {\r\n                for (const m of final.findDirectExpressions(Expressions.MethodName)) {\r\n                    finalMethods.push(m.concatTokens().toUpperCase());\r\n                }\r\n            }\r\n            const concat = node.concatTokens().toUpperCase();\r\n            const allAbstract = concat.includes(\" ALL METHODS ABSTRACT\");\r\n            const partial = concat.includes(\" PARTIALLY IMPLEMENTED\");\r\n            const name = node.findFirstExpression(Expressions.InterfaceName).getFirstToken().getStr().toUpperCase();\r\n            ret.push({\r\n                name,\r\n                partial,\r\n                allAbstract,\r\n                abstractMethods,\r\n                finalMethods,\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    parseAliases(node, visibility) {\r\n        if (node === undefined) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        for (const a of node.findAllStatements(Statements.Aliases)) {\r\n            const name = a.findFirstExpression(Expressions.SimpleName).getFirstToken();\r\n            const comp = a.findFirstExpression(Expressions.Field).getFirstToken();\r\n            ret.push({\r\n                name: name.getStr(),\r\n                identifier: new _identifier_1.Identifier(name, this.filename),\r\n                visibility,\r\n                component: comp.getStr(),\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    parseAttributes(node, visibility) {\r\n        if (node === undefined) {\r\n            return [];\r\n        }\r\n        const contents = node.findFirstStructure(Structures.SectionContents);\r\n        if (contents === undefined) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        for (const d of contents.findDirectStatements(Statements.Data)) {\r\n            const name = d.findFirstExpression(Expressions.DefinitionName).getFirstToken();\r\n            ret.push({\r\n                name: name.getStr(),\r\n                identifier: new _identifier_1.Identifier(name, this.filename),\r\n                level: _abap_file_information_1.AttributeLevel.Instance,\r\n                readOnly: d.concatTokens().toUpperCase().includes(\" READ-ONLY\"),\r\n                visibility,\r\n            });\r\n        }\r\n        for (const d of contents.findDirectStatements(Statements.ClassData)) {\r\n            const name = d.findFirstExpression(Expressions.DefinitionName).getFirstToken();\r\n            ret.push({\r\n                name: name.getStr(),\r\n                identifier: new _identifier_1.Identifier(name, this.filename),\r\n                level: _abap_file_information_1.AttributeLevel.Static,\r\n                readOnly: d.concatTokens().toUpperCase().includes(\" READ-ONLY\"),\r\n                visibility,\r\n            });\r\n        }\r\n        for (const d of contents.findDirectStatements(Statements.Constant)) {\r\n            const name = d.findFirstExpression(Expressions.DefinitionName).getFirstToken();\r\n            ret.push({\r\n                name: name.getStr(),\r\n                identifier: new _identifier_1.Identifier(name, this.filename),\r\n                level: _abap_file_information_1.AttributeLevel.Constant,\r\n                readOnly: true,\r\n                visibility,\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    parseMethodDefinition(node, visibility) {\r\n        var _a;\r\n        if (node === undefined) {\r\n            return [];\r\n        }\r\n        const methods = [];\r\n        for (const def of node.findAllStatements(Statements.MethodDef)) {\r\n            const methodName = (_a = def.findDirectExpression(Expressions.MethodName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n            if (methodName === undefined) {\r\n                continue;\r\n            }\r\n            const parameters = this.parseMethodParameters(def);\r\n            methods.push({\r\n                name: methodName.getStr(),\r\n                identifier: new _identifier_1.Identifier(methodName, this.filename),\r\n                isRedefinition: def.findDirectExpression(Expressions.Redefinition) !== undefined,\r\n                isForTesting: def.concatTokens().toUpperCase().includes(\" FOR TESTING\"),\r\n                isAbstract: def.findDirectExpression(Expressions.Abstract) !== undefined,\r\n                isEventHandler: def.findDirectExpression(Expressions.EventHandler) !== undefined,\r\n                visibility,\r\n                parameters,\r\n                exceptions: [], // todo\r\n            });\r\n        }\r\n        return methods;\r\n    }\r\n    // todo, refactor this method, it is too long\r\n    parseMethodParameters(node) {\r\n        var _a, _b, _c, _d;\r\n        const ret = [];\r\n        const importing = node.findFirstExpression(Expressions.MethodDefImporting);\r\n        if (importing) {\r\n            for (const param of importing.findAllExpressions(Expressions.MethodParam)) {\r\n                const name = (_a = param.findDirectExpression(Expressions.MethodParamName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n                if (name) {\r\n                    ret.push({\r\n                        name: name.getStr().replace(\"!\", \"\"),\r\n                        identifier: new _identifier_1.Identifier(name, this.filename),\r\n                        direction: _abap_file_information_1.MethodParameterDirection.Importing,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        const exporting = node.findFirstExpression(Expressions.MethodDefExporting);\r\n        if (exporting) {\r\n            for (const param of exporting.findAllExpressions(Expressions.MethodParam)) {\r\n                const name = (_b = param.findDirectExpression(Expressions.MethodParamName)) === null || _b === void 0 ? void 0 : _b.getFirstToken();\r\n                if (name) {\r\n                    ret.push({\r\n                        name: name.getStr().replace(\"!\", \"\"),\r\n                        identifier: new _identifier_1.Identifier(name, this.filename),\r\n                        direction: _abap_file_information_1.MethodParameterDirection.Exporting,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        const changing = node.findFirstExpression(Expressions.MethodDefChanging);\r\n        if (changing) {\r\n            for (const param of changing.findAllExpressions(Expressions.MethodParam)) {\r\n                const name = (_c = param.findDirectExpression(Expressions.MethodParamName)) === null || _c === void 0 ? void 0 : _c.getFirstToken();\r\n                if (name) {\r\n                    ret.push({\r\n                        name: name.getStr().replace(\"!\", \"\"),\r\n                        identifier: new _identifier_1.Identifier(name, this.filename),\r\n                        direction: _abap_file_information_1.MethodParameterDirection.Changing,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        const returning = node.findFirstExpression(Expressions.MethodDefReturning);\r\n        if (returning) {\r\n            const name = (_d = returning.findDirectExpression(Expressions.MethodParamName)) === null || _d === void 0 ? void 0 : _d.getFirstToken();\r\n            if (name) {\r\n                ret.push({\r\n                    name: name.getStr().replace(\"!\", \"\"),\r\n                    identifier: new _identifier_1.Identifier(name, this.filename),\r\n                    direction: _abap_file_information_1.MethodParameterDirection.Returning,\r\n                });\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.ABAPFileInformation = ABAPFileInformation;\r\n//# sourceMappingURL=abap_file_information.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/4_file_information/abap_file_information.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Visibility = void 0;\r\nvar Visibility;\r\n(function (Visibility) {\r\n    Visibility[Visibility[\"Private\"] = 1] = \"Private\";\r\n    Visibility[Visibility[\"Protected\"] = 2] = \"Protected\";\r\n    Visibility[Visibility[\"Public\"] = 3] = \"Public\";\r\n})(Visibility = exports.Visibility || (exports.Visibility = {}));\r\n//# sourceMappingURL=visibility.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BuiltIn = void 0;\r\n/* eslint-disable max-len */\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst version_1 = __webpack_require__(/*! ../../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass BuiltInMethod extends _identifier_1.Identifier {\r\n    constructor(token, filename, method, row) {\r\n        super(token, filename);\r\n        this.method = method;\r\n        this.row = row;\r\n    }\r\n    getAll() {\r\n        throw new Error(\"BuiltInMethod->getAll, Method not implemented.\");\r\n    }\r\n    getImporting() {\r\n        const ret = [];\r\n        for (const i in this.method.mandatory) {\r\n            const id = new tokens_1.Identifier(new position_1.Position(this.row, 1), i);\r\n            ret.push(new _typed_identifier_1.TypedIdentifier(id, BuiltIn.filename, this.method.mandatory[i]));\r\n        }\r\n        for (const i in this.method.optional) {\r\n            const id = new tokens_1.Identifier(new position_1.Position(this.row, 1), i);\r\n            ret.push(new _typed_identifier_1.TypedIdentifier(id, BuiltIn.filename, this.method.optional[i]));\r\n        }\r\n        return ret;\r\n    }\r\n    getDefaultImporting() {\r\n        if (this.method.mandatory === undefined) {\r\n            return undefined;\r\n        }\r\n        const keys = Object.keys(this.method.mandatory);\r\n        if (keys.length === 1) {\r\n            return keys[0];\r\n        }\r\n        return undefined;\r\n    }\r\n    getExporting() {\r\n        return [];\r\n    }\r\n    getRaising() {\r\n        return [];\r\n    }\r\n    getChanging() {\r\n        return [];\r\n    }\r\n    getReturning() {\r\n        const id = new tokens_1.Identifier(new position_1.Position(this.row, 1), \"ret\");\r\n        return new _typed_identifier_1.TypedIdentifier(id, BuiltIn.filename, this.method.return);\r\n    }\r\n    getExceptions() {\r\n        return [];\r\n    }\r\n    getVisibility() {\r\n        return visibility_1.Visibility.Public;\r\n    }\r\n    isRedefinition() {\r\n        return false;\r\n    }\r\n    isAbstract() {\r\n        return false;\r\n    }\r\n    isStatic() {\r\n        return false;\r\n    }\r\n    isEventHandler() {\r\n        return false;\r\n    }\r\n    getParameters() {\r\n        return this;\r\n    }\r\n    getParameterDefault(_parameter) {\r\n        return undefined;\r\n    }\r\n}\r\nclass BuiltIn {\r\n    constructor() {\r\n        this.row = 1;\r\n    }\r\n    buildDefinition(method, row) {\r\n        const token = new tokens_1.Identifier(new position_1.Position(row, 1), method.name);\r\n        return new BuiltInMethod(token, BuiltIn.filename, method, row);\r\n    }\r\n    searchBuiltin(name) {\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        const ret = [];\r\n        ret.push({ name: \"ABS\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"ACOS\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"ASIN\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"ATAN\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"BIT-SET\", mandatory: { \"val\": new basic_1.IntegerType() }, return: new basic_1.XStringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"BOOLC\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"BOOLX\", mandatory: { \"bool\": new basic_1.StringType() }, optional: { \"bit\": new basic_1.IntegerType() }, return: new basic_1.XStringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CEIL\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"CHAR_OFF\", mandatory: { \"val\": new basic_1.StringType(), \"add\": new basic_1.IntegerType() }, optional: { \"off\": new basic_1.IntegerType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CHARLEN\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"CMAX\", mandatory: { \"val1\": new basic_1.StringType(), \"val2\": new basic_1.StringType() }, optional: { \"val3\": new basic_1.StringType(), \"val4\": new basic_1.StringType(), \"val5\": new basic_1.StringType(), \"val6\": new basic_1.StringType(), \"val7\": new basic_1.StringType(), \"val9\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CMIN\", mandatory: { \"val1\": new basic_1.StringType(), \"val2\": new basic_1.StringType() }, optional: { \"val3\": new basic_1.StringType(), \"val4\": new basic_1.StringType(), \"val5\": new basic_1.StringType(), \"val6\": new basic_1.StringType(), \"val7\": new basic_1.StringType(), \"val9\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CONCAT_LINES_OF\", mandatory: { \"table\": new basic_1.TableType(new basic_1.AnyType(), { withHeader: false }) }, optional: { \"sep\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CONDENSE\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"del\": new basic_1.StringType(), \"from\": new basic_1.StringType(), \"to\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CONTAINS\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"start\": new basic_1.StringType(), \"end\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.CharacterType(1), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CONTAINS_ANY_NOT_OF\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"start\": new basic_1.StringType(), \"end\": new basic_1.StringType(), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.CharacterType(1), version: version_1.Version.v702 });\r\n        ret.push({ name: \"CONTAINS_ANY_OF\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"start\": new basic_1.StringType(), \"end\": new basic_1.StringType(), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.CharacterType(1), version: version_1.Version.v702 });\r\n        ret.push({ name: \"COS\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"COSH\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"COUNT\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"COUNT_ANY_NOT_OF\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"COUNT_ANY_OF\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"DBMAXLEN\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"DISTANCE\", mandatory: { \"val1\": new basic_1.StringType(), \"val2\": new basic_1.StringType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"ESCAPE\", mandatory: { \"val\": new basic_1.StringType(), \"format\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"EXP\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"FIND\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"FIND_ANY_NOT_OF\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"FIND_ANY_OF\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"FIND_END\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"FLOOR\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"FRAC\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"FROM_MIXED\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"case\": new basic_1.CharacterType(1), \"sep\": new basic_1.IntegerType(), \"min\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"INSERT\", mandatory: { \"val\": new basic_1.StringType(), \"sub\": new basic_1.StringType() }, optional: { \"off\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"IPOW\", mandatory: { \"base\": new basic_1.FloatType(), \"exp\": new basic_1.FloatType() }, return: new basic_1.IntegerType(), version: version_1.Version.v740sp02 });\r\n        ret.push({ name: \"LINE_EXISTS\", mandatory: { \"val\": new basic_1.TableType(new basic_1.AnyType(), { withHeader: false }) }, return: new basic_1.CharacterType(1), version: version_1.Version.v740sp02 });\r\n        ret.push({ name: \"LINE_INDEX\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.IntegerType(), version: version_1.Version.v740sp02 });\r\n        ret.push({ name: \"LINES\", mandatory: { \"val\": new basic_1.TableType(new basic_1.AnyType(), { withHeader: false }) }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"LOG\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"LOG10\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"MATCH\", mandatory: { \"val\": new basic_1.StringType(), \"regex\": new basic_1.StringType() }, optional: { \"case\": new basic_1.CharacterType(1), \"occ\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"MATCHES\", mandatory: { \"val\": new basic_1.StringType(), \"regex\": new basic_1.IntegerType() }, optional: { \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType() }, return: new basic_1.CharacterType(1), version: version_1.Version.v702 });\r\n        ret.push({ name: \"NMAX\", mandatory: { \"val1\": new basic_1.StringType(), \"val2\": new basic_1.StringType() }, optional: { \"val3\": new basic_1.StringType(), \"val4\": new basic_1.StringType(), \"val5\": new basic_1.StringType(), \"val6\": new basic_1.StringType(), \"val7\": new basic_1.StringType(), \"val8\": new basic_1.StringType(), \"val9\": new basic_1.StringType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"NMIN\", mandatory: { \"val1\": new basic_1.StringType(), \"val2\": new basic_1.StringType() }, optional: { \"val3\": new basic_1.StringType(), \"val4\": new basic_1.StringType(), \"val5\": new basic_1.StringType(), \"val6\": new basic_1.StringType(), \"val7\": new basic_1.StringType(), \"val8\": new basic_1.StringType(), \"val9\": new basic_1.StringType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"NUMOFCHAR\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"REPEAT\", mandatory: { \"val\": new basic_1.StringType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"REPLACE\", mandatory: { \"val\": new basic_1.StringType(), \"with\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"RESCALE\", mandatory: { \"val\": new basic_1.FloatType() }, optional: { \"dec\": new basic_1.IntegerType(), \"prec\": new basic_1.IntegerType(), \"mode\": new basic_1.IntegerType() }, return: new basic_1.FloatType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"REVERSE\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"ROUND\", mandatory: { \"val\": new basic_1.FloatType() }, optional: { \"dec\": new basic_1.IntegerType(), \"prec\": new basic_1.IntegerType(), \"mode\": new basic_1.IntegerType() }, return: new basic_1.IntegerType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SEGMENT\", mandatory: { \"val\": new basic_1.StringType(), \"index\": new basic_1.IntegerType() }, optional: { \"sep\": new basic_1.StringType(), \"space\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SHIFT_LEFT\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"places\": new basic_1.IntegerType(), \"circular\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SHIFT_RIGHT\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"places\": new basic_1.IntegerType(), \"circular\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SIGN\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"SIN\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"SINH\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"SQRT\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"STRLEN\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"SUBSTRING\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"off\": new basic_1.IntegerType(), \"len\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SUBSTRING_AFTER\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SUBSTRING_BEFORE\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SUBSTRING_FROM\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"SUBSTRING_TO\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"sub\": new basic_1.StringType(), \"regex\": new basic_1.StringType(), \"case\": new basic_1.CharacterType(1), \"len\": new basic_1.IntegerType(), \"occ\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"TAN\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"TANH\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.FloatType() });\r\n        ret.push({ name: \"TO_LOWER\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"TO_MIXED\", mandatory: { \"val\": new basic_1.StringType() }, optional: { \"case\": new basic_1.CharacterType(1), \"sep\": new basic_1.IntegerType(), \"min\": new basic_1.IntegerType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"TO_UPPER\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"TRANSLATE\", mandatory: { \"val\": new basic_1.StringType(), \"from\": new basic_1.StringType(), \"to\": new basic_1.StringType() }, return: new basic_1.StringType(), version: version_1.Version.v702 });\r\n        ret.push({ name: \"TRUNC\", mandatory: { \"val\": new basic_1.FloatType() }, return: new basic_1.IntegerType() });\r\n        ret.push({ name: \"UTCLONG_ADD\", mandatory: { \"val\": new basic_1.UTCLongType() }, optional: { \"days\": new basic_1.IntegerType(), \"hour\": new basic_1.IntegerType(), \"minutes\": new basic_1.IntegerType(), \"seconds\": new basic_1.FloatType() }, return: new basic_1.UTCLongType(), version: version_1.Version.v754 });\r\n        ret.push({ name: \"UTCLONG_CURRENT\", return: new basic_1.UTCLongType(), version: version_1.Version.v754 });\r\n        ret.push({ name: \"UTCLONG_DIFF\", mandatory: { \"high\": new basic_1.UTCLongType(), \"low\": new basic_1.UTCLongType() }, return: new basic_1.FloatType(), version: version_1.Version.v754 });\r\n        ret.push({ name: \"XSDBOOL\", mandatory: { \"val\": new basic_1.StringType() }, return: new basic_1.CharacterType(1), version: version_1.Version.v740sp08 });\r\n        ret.push({ name: \"XSTRLEN\", mandatory: { \"val\": new basic_1.XStringType() }, return: new basic_1.IntegerType() });\r\n        // todo, optimize, use hash map\r\n        const index = ret.findIndex(a => a.name === name.toUpperCase());\r\n        if (index < 0) {\r\n            return undefined;\r\n        }\r\n        return this.buildDefinition(ret[index], index);\r\n    }\r\n    getTypes() {\r\n        const ret = this.buildSY();\r\n        const id = new tokens_1.Identifier(new position_1.Position(1, 1), \"abap_bool\");\r\n        ret.push(new _typed_identifier_1.TypedIdentifier(id, BuiltIn.filename, new basic_1.CharacterType(1)));\r\n        return ret;\r\n    }\r\n    get(extras) {\r\n        const ret = this.buildSY();\r\n        ret.push(this.buildVariable(\"screen\")); // todo, add structure, or alternatively make native Statements\r\n        ret.push(this.buildConstant(\"%_BACKSPACE\"));\r\n        ret.push(this.buildConstant(\"%_CHARSIZE\"));\r\n        ret.push(this.buildConstant(\"%_CR_LF\"));\r\n        ret.push(this.buildConstant(\"%_ENDIAN\"));\r\n        ret.push(this.buildConstant(\"%_FORMFEED\"));\r\n        ret.push(this.buildConstant(\"%_HORIZONTAL_TAB\"));\r\n        ret.push(this.buildConstant(\"%_MAXCHAR\"));\r\n        ret.push(this.buildConstant(\"%_MINCHAR\"));\r\n        ret.push(this.buildConstant(\"%_NEWLINE\"));\r\n        ret.push(this.buildConstant(\"%_VERTICAL_TAB\"));\r\n        ret.push(this.buildConstant(\"abap_false\", new basic_1.CharacterType(1), \"' '\"));\r\n        ret.push(this.buildConstant(\"abap_true\", new basic_1.CharacterType(1), \"'X'\"));\r\n        ret.push(this.buildConstant(\"abap_undefined\", new basic_1.CharacterType(1), \"'-'\"));\r\n        ret.push(this.buildConstant(\"abap_off\", new basic_1.CharacterType(1), \"' '\"));\r\n        ret.push(this.buildConstant(\"abap_on\", new basic_1.CharacterType(1), \"'X'\"));\r\n        ret.push(this.buildConstant(\"col_background\", new basic_1.IntegerType(), \"0\"));\r\n        ret.push(this.buildConstant(\"col_heading\", new basic_1.IntegerType(), \"1\"));\r\n        ret.push(this.buildConstant(\"col_key\", new basic_1.IntegerType(), \"4\"));\r\n        ret.push(this.buildConstant(\"col_negative\", new basic_1.IntegerType(), \"6\"));\r\n        ret.push(this.buildConstant(\"col_normal\", new basic_1.IntegerType(), \"2\"));\r\n        ret.push(this.buildConstant(\"col_positive\", new basic_1.IntegerType(), \"5\"));\r\n        ret.push(this.buildConstant(\"col_total\", new basic_1.IntegerType(), \"3\"));\r\n        ret.push(this.buildConstant(\"space\", new basic_1.CharacterType(1), \"' '\"));\r\n        for (const e of extras) {\r\n            const id = new tokens_1.Identifier(new position_1.Position(this.row++, 1), e);\r\n            ret.push(new _typed_identifier_1.TypedIdentifier(id, BuiltIn.filename, new basic_1.VoidType(e), [\"read_only\" /* ReadOnly */, \"built-in\" /* BuiltIn */], \"'?'\"));\r\n        }\r\n        return ret;\r\n    }\r\n    /////////////////////////////\r\n    buildSY() {\r\n        const components = [];\r\n        components.push({ name: \"abcde\", type: new basic_1.CharacterType(26) });\r\n        components.push({ name: \"batch\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"binpt\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"calld\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"callr\", type: new basic_1.CharacterType(8) });\r\n        components.push({ name: \"colno\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"cpage\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"cprog\", type: new basic_1.CharacterType(40) });\r\n        components.push({ name: \"cucol\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"curow\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"datar\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"datlo\", type: new basic_1.DateType() });\r\n        components.push({ name: \"datum\", type: new basic_1.DateType() });\r\n        components.push({ name: \"dayst\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"dbcnt\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"dbnam\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"dbsys\", type: new basic_1.CharacterType(10) });\r\n        components.push({ name: \"dyngr\", type: new basic_1.CharacterType(4) });\r\n        components.push({ name: \"dynnr\", type: new basic_1.CharacterType(4) });\r\n        components.push({ name: \"fdayw\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"fdpos\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"fleng\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"folen\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"host\", type: new basic_1.CharacterType(32) });\r\n        components.push({ name: \"index\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"langu\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"ldbpg\", type: new basic_1.CharacterType(40) });\r\n        components.push({ name: \"lilli\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"linct\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"linno\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"linsz\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"lisel\", type: new basic_1.CharacterType(255) });\r\n        components.push({ name: \"listi\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"loopc\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"lsind\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"macol\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"mandt\", type: new basic_1.CharacterType(3) });\r\n        components.push({ name: \"marow\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"modno\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"msgid\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"msgli\", type: new basic_1.CharacterType(60) });\r\n        components.push({ name: \"msgno\", type: new basic_1.NumericType(3) });\r\n        components.push({ name: \"msgty\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"msgv1\", type: new basic_1.CharacterType(50) });\r\n        components.push({ name: \"msgv2\", type: new basic_1.CharacterType(50) });\r\n        components.push({ name: \"msgv3\", type: new basic_1.CharacterType(50) });\r\n        components.push({ name: \"msgv4\", type: new basic_1.CharacterType(50) });\r\n        components.push({ name: \"opsys\", type: new basic_1.CharacterType(10) });\r\n        components.push({ name: \"pagno\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"pfkey\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"repid\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"saprl\", type: new basic_1.CharacterType(4) });\r\n        components.push({ name: \"scols\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"slset\", type: new basic_1.CharacterType(14) });\r\n        components.push({ name: \"spono\", type: new basic_1.CharacterType(10) });\r\n        components.push({ name: \"srows\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"staco\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"staro\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"stepl\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"subrc\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"sysid\", type: new basic_1.CharacterType(3) });\r\n        components.push({ name: \"tabix\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"tcode\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tfill\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"timlo\", type: new basic_1.TimeType() });\r\n        components.push({ name: \"title\", type: new basic_1.CharacterType(70) });\r\n        components.push({ name: \"tleng\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"tvar0\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar1\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar2\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar3\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar4\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar5\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar6\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar7\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar8\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tvar9\", type: new basic_1.CharacterType(20) });\r\n        components.push({ name: \"tzone\", type: new basic_1.IntegerType() });\r\n        components.push({ name: \"ucomm\", type: new basic_1.CharacterType(70) });\r\n        components.push({ name: \"uline\", type: new basic_1.CharacterType(255) });\r\n        components.push({ name: \"uname\", type: new basic_1.CharacterType(12) });\r\n        components.push({ name: \"uzeit\", type: new basic_1.TimeType() });\r\n        components.push({ name: \"vline\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"wtitl\", type: new basic_1.CharacterType(1) });\r\n        components.push({ name: \"zonlo\", type: new basic_1.CharacterType(6) });\r\n        const type = new basic_1.StructureType(components);\r\n        const id1 = new tokens_1.Identifier(new position_1.Position(this.row++, 1), \"sy\");\r\n        const sy = new _typed_identifier_1.TypedIdentifier(id1, BuiltIn.filename, type, [\"read_only\" /* ReadOnly */, \"built-in\" /* BuiltIn */]);\r\n        const id2 = new tokens_1.Identifier(new position_1.Position(this.row++, 1), \"syst\");\r\n        const syst = new _typed_identifier_1.TypedIdentifier(id2, BuiltIn.filename, type, [\"read_only\" /* ReadOnly */, \"built-in\" /* BuiltIn */]);\r\n        return [sy, syst];\r\n    }\r\n    buildConstant(name, type, value) {\r\n        const id = new tokens_1.Identifier(new position_1.Position(this.row++, 1), name);\r\n        if (type === undefined) {\r\n            type = new basic_1.VoidType(name);\r\n        }\r\n        if (value === undefined) {\r\n            value = \"'?'\";\r\n        }\r\n        return new _typed_identifier_1.TypedIdentifier(id, BuiltIn.filename, type, [\"read_only\" /* ReadOnly */, \"built-in\" /* BuiltIn */], value);\r\n    }\r\n    buildVariable(name) {\r\n        const id = new tokens_1.Identifier(new position_1.Position(this.row++, 1), name);\r\n        return new _typed_identifier_1.TypedIdentifier(id, BuiltIn.filename, new basic_1.VoidType(name), [\"built-in\" /* BuiltIn */]);\r\n    }\r\n}\r\nexports.BuiltIn = BuiltIn;\r\nBuiltIn.filename = \"_builtin.prog.abap\";\r\n//# sourceMappingURL=_builtin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/_current_scope.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/_current_scope.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CurrentScope = void 0;\r\nconst _builtin_1 = __webpack_require__(/*! ./_builtin */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst position_1 = __webpack_require__(/*! ../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst spaghetti_scope_1 = __webpack_require__(/*! ./spaghetti_scope */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/spaghetti_scope.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ./_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst _reference_1 = __webpack_require__(/*! ./_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst syntax_1 = __webpack_require__(/*! ./syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nclass CurrentScope {\r\n    constructor(reg) {\r\n        this.current = undefined;\r\n        this.reg = reg;\r\n    }\r\n    static buildDefault(reg, obj) {\r\n        const s = new CurrentScope(reg);\r\n        s.push(_scope_type_1.ScopeType.BuiltIn, _scope_type_1.ScopeType.BuiltIn, new position_1.Position(1, 1), _builtin_1.BuiltIn.filename);\r\n        this.addBuiltIn(s, reg.getConfig().getSyntaxSetttings().globalConstants);\r\n        let name = _scope_type_1.ScopeType.Global;\r\n        if (obj) {\r\n            name = name + \"_\" + obj.getName();\r\n        }\r\n        s.push(_scope_type_1.ScopeType.Global, name, new position_1.Position(1, 1), name);\r\n        return s;\r\n    }\r\n    static addBuiltIn(s, extras) {\r\n        const b = new _builtin_1.BuiltIn();\r\n        const builtin = b.get(extras);\r\n        s.addList(builtin);\r\n        for (const t of b.getTypes()) {\r\n            s.addType(t);\r\n        }\r\n    }\r\n    ///////////////////////////\r\n    addType(type) {\r\n        if (type === undefined) {\r\n            return;\r\n        }\r\n        this.addTypeNamed(type.getName(), type);\r\n    }\r\n    addTypeNamed(name, type) {\r\n        if (type === undefined) {\r\n            return;\r\n        }\r\n        if (this.current === undefined) {\r\n            return;\r\n        }\r\n        const upper = name.toUpperCase();\r\n        if (this.current.getData().types[upper] !== undefined) {\r\n            throw new Error(`Type name \"${name}\" already defined`);\r\n        }\r\n        this.current.getData().types[upper] = type;\r\n    }\r\n    addClassDefinition(c) {\r\n        var _a;\r\n        (_a = this.current) === null || _a === void 0 ? void 0 : _a.getData().cdefs.push(c);\r\n    }\r\n    addFormDefinitions(f) {\r\n        if (this.current === undefined) {\r\n            return;\r\n        }\r\n        this.current.getData().forms.push(...f);\r\n    }\r\n    addInterfaceDefinition(i) {\r\n        var _a;\r\n        (_a = this.current) === null || _a === void 0 ? void 0 : _a.getData().idefs.push(i);\r\n    }\r\n    addNamedIdentifier(name, identifier) {\r\n        if (this.current === undefined) {\r\n            return;\r\n        }\r\n        const upper = name.toUpperCase();\r\n        if (this.current.getData().vars[upper] !== undefined) {\r\n            throw new Error(`Variable name \"${name}\" already defined`);\r\n        }\r\n        this.current.getData().vars[upper] = identifier;\r\n    }\r\n    addIdentifier(identifier) {\r\n        if (identifier === undefined) {\r\n            return;\r\n        }\r\n        this.addNamedIdentifier(identifier.getName(), identifier);\r\n    }\r\n    addDeferred(token) {\r\n        var _a;\r\n        if (token === undefined) {\r\n            return;\r\n        }\r\n        (_a = this.current) === null || _a === void 0 ? void 0 : _a.getData().deferred.push(token);\r\n    }\r\n    addListPrefix(identifiers, prefix) {\r\n        for (const id of identifiers) {\r\n            this.addNamedIdentifier(prefix + id.getName(), id);\r\n        }\r\n    }\r\n    addList(identifiers) {\r\n        for (const id of identifiers) {\r\n            this.addIdentifier(id);\r\n        }\r\n    }\r\n    addReference(usage, referencing, type, filename, extra) {\r\n        var _a;\r\n        if (usage === undefined || type === undefined) {\r\n            return;\r\n        }\r\n        const position = new _identifier_1.Identifier(usage, filename);\r\n        (_a = this.current) === null || _a === void 0 ? void 0 : _a.getData().references.push({ position, resolved: referencing, referenceType: type, extra });\r\n    }\r\n    ///////////////////////////\r\n    findObjectDefinition(name) {\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        const clas = this.findClassDefinition(name);\r\n        if (clas) {\r\n            return clas;\r\n        }\r\n        const intf = this.findInterfaceDefinition(name);\r\n        if (intf) {\r\n            return intf;\r\n        }\r\n        return undefined;\r\n    }\r\n    isBadiDef(name) {\r\n        const upper = name.toUpperCase();\r\n        for (const enhs of this.reg.getObjectsByType(\"ENHS\")) {\r\n            for (const def of enhs.listBadiDefinitions()) {\r\n                if (def.name.toUpperCase() === upper) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    // todo, found + type can be removed from method output?\r\n    existsObject(name) {\r\n        var _a, _b, _c;\r\n        if (name === undefined) {\r\n            return { found: false };\r\n        }\r\n        const def = (_a = this.current) === null || _a === void 0 ? void 0 : _a.findDeferred(name);\r\n        if (def !== undefined) {\r\n            return { found: true, id: def };\r\n        }\r\n        const findLocalClass = (_b = this.current) === null || _b === void 0 ? void 0 : _b.findClassDefinition(name);\r\n        if (findLocalClass) {\r\n            return { found: true, id: findLocalClass, type: _reference_1.ReferenceType.ObjectOrientedReference, ooType: \"CLAS\" };\r\n        }\r\n        const globalClas = this.reg.getObject(\"CLAS\", name);\r\n        if (globalClas) {\r\n            return { found: true, id: globalClas.getIdentifier(), type: _reference_1.ReferenceType.ObjectOrientedReference, ooType: \"CLAS\" };\r\n        }\r\n        const findLocalInterface = (_c = this.current) === null || _c === void 0 ? void 0 : _c.findInterfaceDefinition(name);\r\n        if (findLocalInterface) {\r\n            return { found: true, id: findLocalInterface, type: _reference_1.ReferenceType.ObjectOrientedReference, ooType: \"INTF\" };\r\n        }\r\n        const globalIntf = this.reg.getObject(\"INTF\", name);\r\n        if (globalIntf) {\r\n            return { found: true, id: globalIntf.getIdentifier(), type: _reference_1.ReferenceType.ObjectOrientedReference, ooType: \"INTF\" };\r\n        }\r\n        return { found: false };\r\n    }\r\n    ///////////////////////////\r\n    /** Lookup class in local and global scope */\r\n    findClassDefinition(name) {\r\n        var _a;\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        const clocal = (_a = this.current) === null || _a === void 0 ? void 0 : _a.findClassDefinition(name);\r\n        if (clocal) {\r\n            return clocal;\r\n        }\r\n        const cglobal = this.reg.getObject(\"CLAS\", name);\r\n        if (cglobal) {\r\n            return cglobal.getDefinition();\r\n        }\r\n        return undefined;\r\n    }\r\n    findTypePoolConstant(name) {\r\n        if (name === undefined || name.includes(\"_\") === undefined) {\r\n            return undefined;\r\n        }\r\n        const typePoolName = name.split(\"_\")[0];\r\n        const typePool = this.reg.getObject(\"TYPE\", typePoolName);\r\n        if (typePool === undefined) {\r\n            return undefined;\r\n        }\r\n        const spag = new syntax_1.SyntaxLogic(this.reg, typePool).run().spaghetti.getFirstChild();\r\n        const found = spag === null || spag === void 0 ? void 0 : spag.findVariable(name);\r\n        return found;\r\n    }\r\n    findTypePoolType(name) {\r\n        var _a;\r\n        if (name.includes(\"_\") === undefined) {\r\n            return undefined;\r\n        }\r\n        const typePoolName = name.split(\"_\")[0];\r\n        const typePool = this.reg.getObject(\"TYPE\", typePoolName);\r\n        if (typePool === undefined) {\r\n            return undefined;\r\n        }\r\n        const spag = new syntax_1.SyntaxLogic(this.reg, typePool).run().spaghetti.getFirstChild();\r\n        const found = (_a = spag === null || spag === void 0 ? void 0 : spag.findType(name)) === null || _a === void 0 ? void 0 : _a.getType();\r\n        return found;\r\n    }\r\n    /** Lookup interface in local and global scope */\r\n    findInterfaceDefinition(name) {\r\n        var _a;\r\n        const ilocal = (_a = this.current) === null || _a === void 0 ? void 0 : _a.findInterfaceDefinition(name);\r\n        if (ilocal) {\r\n            return ilocal;\r\n        }\r\n        const iglobal = this.reg.getObject(\"INTF\", name);\r\n        if (iglobal) {\r\n            return iglobal.getDefinition();\r\n        }\r\n        return undefined;\r\n    }\r\n    findFormDefinition(name) {\r\n        var _a;\r\n        return (_a = this.current) === null || _a === void 0 ? void 0 : _a.findFormDefinition(name);\r\n    }\r\n    findType(name) {\r\n        var _a;\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        return (_a = this.current) === null || _a === void 0 ? void 0 : _a.findType(name);\r\n    }\r\n    findVariable(name) {\r\n        var _a;\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        const found = (_a = this.current) === null || _a === void 0 ? void 0 : _a.findVariable(name);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        return this.findTypePoolConstant(name);\r\n    }\r\n    ///////////////////////////\r\n    getDDIC() {\r\n        return new ddic_1.DDIC(this.reg);\r\n    }\r\n    getName() {\r\n        if (this.current === undefined) {\r\n            throw new Error(\"error, getName\");\r\n        }\r\n        return this.current.getIdentifier().sname;\r\n    }\r\n    getType() {\r\n        if (this.current === undefined) {\r\n            throw new Error(\"error, getType\");\r\n        }\r\n        return this.current.getIdentifier().stype;\r\n    }\r\n    push(stype, sname, start, filename) {\r\n        const identifier = { stype, sname, start, filename, end: undefined };\r\n        if (this.current === undefined) {\r\n            // the top node\r\n            this.current = new spaghetti_scope_1.SpaghettiScopeNode(identifier, undefined);\r\n        }\r\n        else {\r\n            const parent = this.current;\r\n            this.current = new spaghetti_scope_1.SpaghettiScopeNode(identifier, parent);\r\n            parent.addChild(this.current);\r\n        }\r\n    }\r\n    isOO() {\r\n        let curr = this.current;\r\n        while (curr !== undefined) {\r\n            const stype = curr.getIdentifier().stype;\r\n            if (stype === _scope_type_1.ScopeType.ClassDefinition\r\n                || stype === _scope_type_1.ScopeType.ClassImplementation\r\n                || stype === _scope_type_1.ScopeType.Interface) {\r\n                return true;\r\n            }\r\n            curr = curr.getParent();\r\n        }\r\n        return false;\r\n    }\r\n    setAllowHeaderUse(name) {\r\n        // workaround for SELECT FOR ALL ENTRIES\r\n        this.allowHeaderUse = name;\r\n    }\r\n    isAllowHeaderUse(name) {\r\n        var _a;\r\n        return name.toUpperCase() === ((_a = this.allowHeaderUse) === null || _a === void 0 ? void 0 : _a.toUpperCase());\r\n    }\r\n    pop(end) {\r\n        this.allowHeaderUse = undefined;\r\n        if (this.current === undefined) {\r\n            throw new Error(\"something wrong, top scope popped\");\r\n        }\r\n        this.current.setEnd(end);\r\n        const current = this.current;\r\n        this.current = this.current.getParent();\r\n        return new spaghetti_scope_1.SpaghettiScope(current);\r\n    }\r\n}\r\nexports.CurrentScope = CurrentScope;\r\n//# sourceMappingURL=_current_scope.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/_current_scope.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ObjectOriented = void 0;\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\n// todo, think some of the public methods can be made private\r\nclass ObjectOriented {\r\n    constructor(scope) {\r\n        this.scope = scope;\r\n    }\r\n    // returns list of interfaces implemented\r\n    fromInterfaces(classDefinition, skip) {\r\n        const ignore = [];\r\n        for (const i of classDefinition.getImplementing()) {\r\n            ignore.push(...this.fromInterfaceByName(i.name, ignore.concat(skip || [])));\r\n        }\r\n        return ignore;\r\n    }\r\n    fromInterfaceByName(name, ignore) {\r\n        const idef = this.scope.findInterfaceDefinition(name);\r\n        if (idef === undefined || ignore.includes(name.toUpperCase())) {\r\n            return [];\r\n        }\r\n        const ret = [name.toUpperCase()];\r\n        for (const t of idef.getTypeDefinitions().getAll()) {\r\n            const n = name + \"~\" + t.type.getName();\r\n            this.scope.addTypeNamed(n, t.type);\r\n        }\r\n        this.scope.addListPrefix(idef.getAttributes().getConstants(), name + \"~\");\r\n        this.scope.addListPrefix(idef.getAttributes().getStatic(), name + \"~\");\r\n        this.scope.addListPrefix(idef.getAttributes().getInstance(), name + \"~\");\r\n        for (const i of idef.getImplementing()) {\r\n            if (ignore.includes(i.name.toUpperCase())) {\r\n                continue;\r\n            }\r\n            ret.push(...this.fromInterfaceByName(i.name, ignore));\r\n            ignore.push(i.name.toUpperCase());\r\n            ret.push(i.name.toUpperCase());\r\n        }\r\n        return ret;\r\n    }\r\n    addAliasedAttributes(classDefinition) {\r\n        for (const alias of classDefinition.getAliases().getAll()) {\r\n            const comp = alias.getComponent();\r\n            const idef = this.scope.findInterfaceDefinition(comp.split(\"~\")[0]);\r\n            if (idef) {\r\n                const found = idef.getAttributes().findByName(comp.split(\"~\")[1]);\r\n                if (found) {\r\n                    this.scope.addNamedIdentifier(alias.getName(), found);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findMethodInInterface(interfaceName, methodName) {\r\n        const idef = this.scope.findInterfaceDefinition(interfaceName);\r\n        if (idef) {\r\n            const methods = idef.getMethodDefinitions().getAll();\r\n            for (const method of methods) {\r\n                if (method.getName().toUpperCase() === methodName.toUpperCase()) {\r\n                    return { method, def: idef };\r\n                }\r\n            }\r\n            return this.findMethodViaAlias(methodName, idef);\r\n        }\r\n        return undefined;\r\n    }\r\n    findMethodViaAlias(methodName, def) {\r\n        for (const a of def.getAliases().getAll()) {\r\n            if (a.getName().toUpperCase() === methodName.toUpperCase()) {\r\n                const comp = a.getComponent();\r\n                const res = this.findMethodInInterface(comp.split(\"~\")[0], comp.split(\"~\")[1]);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findClassName(node) {\r\n        if (!(node.get() instanceof Statements.ClassImplementation\r\n            || node.get() instanceof Statements.ClassDefinition)) {\r\n            throw new Error(\"findClassName, unexpected node type\");\r\n        }\r\n        const className = node.findFirstExpression(Expressions.ClassName);\r\n        if (className === undefined) {\r\n            throw new Error(\"findClassName, unexpected node type\");\r\n        }\r\n        return className.getFirstToken().getStr();\r\n    }\r\n    findInterfaces(cd) {\r\n        var _a;\r\n        const ret = [...cd.getImplementing()];\r\n        for (const r of ret) {\r\n            const nested = (_a = this.scope.findInterfaceDefinition(r.name)) === null || _a === void 0 ? void 0 : _a.getImplementing();\r\n            if (nested) {\r\n                ret.push(...nested);\r\n            }\r\n        }\r\n        const sup = cd.getSuperClass();\r\n        if (sup) {\r\n            try {\r\n                ret.push(...this.findInterfaces(this.findSuperDefinition(sup)));\r\n            }\r\n            catch (_b) {\r\n                // ignore errors, they will show up as variable not found anyhow\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    searchEvent(def, name) {\r\n        var _a;\r\n        if (def === undefined || name === undefined) {\r\n            return undefined;\r\n        }\r\n        const found = def.getEvents().find(e => e.getName().toUpperCase() === (name === null || name === void 0 ? void 0 : name.toUpperCase()));\r\n        if (found) {\r\n            return found;\r\n        }\r\n        for (const a of ((_a = def.getAliases()) === null || _a === void 0 ? void 0 : _a.getAll()) || []) {\r\n            if (a.getName().toUpperCase() === name.toUpperCase()) {\r\n                const comp = a.getComponent();\r\n                const res = this.searchEvent(this.scope.findObjectDefinition(comp.split(\"~\")[0]), comp.split(\"~\")[1]);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        const sup = def.getSuperClass();\r\n        if (sup) {\r\n            return this.searchEvent(this.findSuperDefinition(sup), name);\r\n        }\r\n        return undefined;\r\n    }\r\n    // search in via super class, interfaces and aliases\r\n    searchAttributeName(def, name) {\r\n        var _a;\r\n        if (def === undefined || name === undefined) {\r\n            return undefined;\r\n        }\r\n        const upper = name.toUpperCase();\r\n        for (const a of def.getAttributes().getAll()) {\r\n            if (a.getName().toUpperCase() === upper) {\r\n                return a;\r\n            }\r\n        }\r\n        for (const a of ((_a = def.getAliases()) === null || _a === void 0 ? void 0 : _a.getAll()) || []) {\r\n            if (a.getName().toUpperCase() === upper) {\r\n                const comp = a.getComponent();\r\n                const res = this.searchAttributeName(this.scope.findObjectDefinition(comp.split(\"~\")[0]), comp.split(\"~\")[1]);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        if (name.includes(\"~\")) {\r\n            const interfaceName = upper.split(\"~\")[0];\r\n            if (def.getImplementing().some((a) => a.name.toUpperCase() === interfaceName)) {\r\n                return this.searchAttributeName(this.scope.findInterfaceDefinition(interfaceName), name.split(\"~\")[1]);\r\n            }\r\n        }\r\n        const sup = def.getSuperClass();\r\n        if (sup) {\r\n            return this.searchAttributeName(this.findSuperDefinition(sup), name);\r\n        }\r\n        return undefined;\r\n    }\r\n    // search in via super class, interfaces and aliases\r\n    searchTypeName(def, name) {\r\n        if (def === undefined || name === undefined) {\r\n            return undefined;\r\n        }\r\n        const search = def.getTypeDefinitions().getByName(name);\r\n        if (search) {\r\n            return search;\r\n        }\r\n        if (name.includes(\"~\")) {\r\n            const interfaceName = name.split(\"~\")[0];\r\n            if (def.getImplementing().some((a) => a.name.toUpperCase() === interfaceName.toUpperCase())) {\r\n                return this.searchTypeName(this.scope.findInterfaceDefinition(interfaceName), name.split(\"~\")[1]);\r\n            }\r\n        }\r\n        const sup = def.getSuperClass();\r\n        if (sup) {\r\n            return this.searchTypeName(this.findSuperDefinition(sup), name);\r\n        }\r\n        return undefined;\r\n    }\r\n    // search in via super class, interfaces and aliases\r\n    searchConstantName(def, name) {\r\n        if (def === undefined || name === undefined) {\r\n            return undefined;\r\n        }\r\n        for (const a of def.getAttributes().getConstants()) {\r\n            if (a.getName().toUpperCase() === name.toUpperCase()) {\r\n                return a;\r\n            }\r\n        }\r\n        for (const a of def.getAliases().getAll()) {\r\n            if (a.getName().toUpperCase() === name.toUpperCase()) {\r\n                const comp = a.getComponent();\r\n                const res = this.searchConstantName(this.scope.findObjectDefinition(comp.split(\"~\")[0]), comp.split(\"~\")[1]);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        const sup = def.getSuperClass();\r\n        if (sup) {\r\n            return this.searchConstantName(this.findSuperDefinition(sup), name);\r\n        }\r\n        return undefined;\r\n    }\r\n    // search in via super class, interfaces and aliases\r\n    searchMethodName(def, name) {\r\n        if (def === undefined || name === undefined) {\r\n            return { method: undefined, def: undefined };\r\n        }\r\n        const methodDefinition = this.findMethod(def, name);\r\n        if (methodDefinition) {\r\n            return { method: methodDefinition, def };\r\n        }\r\n        let interfaceName = undefined;\r\n        if (name.includes(\"~\")) {\r\n            interfaceName = name.split(\"~\")[0];\r\n        }\r\n        // todo, this is not completely correct? hmm, why? visibility?\r\n        if (methodDefinition === undefined && interfaceName) {\r\n            name = name.split(\"~\")[1];\r\n            const found = this.findMethodInInterface(interfaceName, name);\r\n            if (found) {\r\n                return found;\r\n            }\r\n        }\r\n        else if (methodDefinition === undefined) {\r\n            const found = this.findMethodViaAlias(name, def);\r\n            if (found) {\r\n                return found;\r\n            }\r\n        }\r\n        const sup = def.getSuperClass();\r\n        if (methodDefinition === undefined && sup) {\r\n            return this.searchMethodName(this.findSuperDefinition(sup), name);\r\n        }\r\n        return { method: undefined, def: undefined };\r\n    }\r\n    findMethod(def, methodName) {\r\n        for (const method of def.getMethodDefinitions().getAll()) {\r\n            if (method.getName().toUpperCase() === methodName.toUpperCase()) {\r\n                if (method.isRedefinition()) {\r\n                    return this.findMethodInSuper(def, methodName);\r\n                }\r\n                else {\r\n                    return method;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findMethodInSuper(child, methodName) {\r\n        let sup = child.getSuperClass();\r\n        while (sup !== undefined) {\r\n            const cdef = this.findSuperDefinition(sup);\r\n            const found = this.findMethod(cdef, methodName);\r\n            if (found) {\r\n                return found;\r\n            }\r\n            sup = cdef.getSuperClass();\r\n        }\r\n        return undefined;\r\n    }\r\n    findSuperDefinition(name) {\r\n        const csup = this.scope.findClassDefinition(name);\r\n        if (csup === undefined) {\r\n            throw new Error(\"Super class \\\"\" + name + \"\\\" not found or contains errors\");\r\n        }\r\n        return csup;\r\n    }\r\n    // returns list of interfaces implemented\r\n    fromSuperClass(child) {\r\n        let sup = child.getSuperClass();\r\n        const ignore = [];\r\n        while (sup !== undefined) {\r\n            const cdef = this.findSuperDefinition(sup);\r\n            for (const a of cdef.getAttributes().getAll()) {\r\n                if (a.getVisibility() !== visibility_1.Visibility.Private) {\r\n                    this.scope.addIdentifier(a);\r\n                    // todo, handle scope and instance vs static\r\n                }\r\n            }\r\n            for (const c of cdef.getAttributes().getConstants()) {\r\n                if (c.getVisibility() !== visibility_1.Visibility.Private) {\r\n                    this.scope.addIdentifier(c);\r\n                }\r\n            }\r\n            for (const t of cdef.getTypeDefinitions().getAll()) {\r\n                if (t.visibility !== visibility_1.Visibility.Private) {\r\n                    this.scope.addType(t.type);\r\n                }\r\n            }\r\n            ignore.push(...this.fromInterfaces(cdef, ignore));\r\n            sup = cdef.getSuperClass();\r\n        }\r\n        return ignore;\r\n    }\r\n}\r\nexports.ObjectOriented = ObjectOriented;\r\n//# sourceMappingURL=_object_oriented.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/_procedural.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/_procedural.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Procedural = void 0;\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nconst _current_scope_1 = __webpack_require__(/*! ./_current_scope */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_current_scope.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ./_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst objects_1 = __webpack_require__(/*! ../../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass Procedural {\r\n    constructor(reg, scope) {\r\n        this.scope = scope;\r\n        this.reg = reg;\r\n    }\r\n    addAllFormDefinitions(file, obj) {\r\n        const structure = file.getStructure();\r\n        if (structure) {\r\n            const dummy = _current_scope_1.CurrentScope.buildDefault(this.reg);\r\n            for (const found of structure.findAllStructures(Structures.Form)) {\r\n                this.scope.addFormDefinitions([new types_1.FormDefinition(found, file.getFilename(), dummy)]);\r\n            }\r\n        }\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return;\r\n        }\r\n        const includes = stru.findAllStatements(Statements.Include);\r\n        for (const node of includes) {\r\n            const found = this.findInclude(node, obj);\r\n            if (found) {\r\n                this.addAllFormDefinitions(found, obj);\r\n            }\r\n        }\r\n    }\r\n    findInclude(node, obj) {\r\n        // assumption: no cyclic includes, includes not found are reported by rule \"check_include\"\r\n        // todo: how to make sure code is not duplicated here and in rule \"check_include\" / include graph?\r\n        const expr = node.findFirstExpression(Expressions.IncludeName);\r\n        if (expr === undefined) {\r\n            return undefined;\r\n        }\r\n        const name = expr.getFirstToken().getStr();\r\n        // look in the current function group\r\n        if (obj instanceof objects_1.FunctionGroup) {\r\n            const incl = obj.getInclude(name);\r\n            if (incl !== undefined) {\r\n                return incl;\r\n            }\r\n        }\r\n        const prog = this.reg.getObject(\"PROG\", name);\r\n        if (prog !== undefined) {\r\n            return prog.getABAPFiles()[0];\r\n        }\r\n        // todo, this is slow, try determining the FUGR name from the include name\r\n        for (const fugr of this.reg.getObjectsByType(\"FUGR\")) {\r\n            if (fugr instanceof objects_1.FunctionGroup) {\r\n                const found = fugr.getInclude(name);\r\n                if (found) {\r\n                    return found;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findFunctionScope(obj, node, filename) {\r\n        if (!(obj instanceof objects_1.FunctionGroup)) {\r\n            throw new Error(\"findFunctionScope, expected function group input\");\r\n        }\r\n        const nameToken = node.findFirstExpression(Expressions.Field).getFirstToken();\r\n        const name = nameToken.getStr();\r\n        this.scope.push(_scope_type_1.ScopeType.FunctionModule, name, node.getFirstToken().getStart(), filename);\r\n        const definition = obj.getModule(name);\r\n        if (definition === undefined) {\r\n            throw new Error(\"Function module definition \\\"\" + name + \"\\\" not found\");\r\n        }\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const param of definition.getParameters()) {\r\n            let found = new basic_1.CharacterType(1);\r\n            if (param.type) {\r\n                found = ddic.lookup(param.type);\r\n            }\r\n            if (param.direction === types_1.FunctionModuleParameterDirection.tables) {\r\n                found = new basic_1.TableType(found, { withHeader: true });\r\n            }\r\n            const type = new _typed_identifier_1.TypedIdentifier(nameToken, filename, found);\r\n            this.scope.addNamedIdentifier(param.name, type);\r\n        }\r\n    }\r\n}\r\nexports.Procedural = Procedural;\r\n//# sourceMappingURL=_procedural.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/_procedural.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReferenceType = void 0;\r\nvar ReferenceType;\r\n(function (ReferenceType) {\r\n    /** for classes and interface references */\r\n    ReferenceType[\"ObjectOrientedReference\"] = \"ObjectOrientedReference\";\r\n    ReferenceType[\"ObjectOrientedVoidReference\"] = \"ObjectOrientedVoidReference\";\r\n    ReferenceType[\"TableReference\"] = \"TableReference\";\r\n    ReferenceType[\"TableVoidReference\"] = \"TableVoidReference\";\r\n    ReferenceType[\"MethodReference\"] = \"MethodReference\";\r\n    ReferenceType[\"BuiltinMethodReference\"] = \"BuiltinMethodReference\";\r\n    ReferenceType[\"MethodImplementationReference\"] = \"MethodImplementationReference\";\r\n    ReferenceType[\"TypeReference\"] = \"TypeReference\";\r\n    ReferenceType[\"BuiltinTypeReference\"] = \"BuiltinTypeReference\";\r\n    ReferenceType[\"VoidType\"] = \"VoidType\";\r\n    ReferenceType[\"InferredType\"] = \"InferredType\";\r\n    ReferenceType[\"FormReference\"] = \"FormReference\";\r\n    //  FormVoidReference = \"FormReference\",\r\n    ReferenceType[\"DataReadReference\"] = \"DataReadReference\";\r\n    ReferenceType[\"DataWriteReference\"] = \"DataWriteReference\";\r\n})(ReferenceType = exports.ReferenceType || (exports.ReferenceType = {}));\r\n//# sourceMappingURL=_reference.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ScopeType = void 0;\r\nvar ScopeType;\r\n(function (ScopeType) {\r\n    ScopeType[\"BuiltIn\"] = \"_builtin\";\r\n    ScopeType[\"Dummy\"] = \"_dummy\";\r\n    ScopeType[\"Global\"] = \"_global\";\r\n    ScopeType[\"Program\"] = \"_program\";\r\n    ScopeType[\"FunctionGroup\"] = \"_function_group\";\r\n    ScopeType[\"ClassDefinition\"] = \"class_definition\";\r\n    ScopeType[\"Interface\"] = \"interface\";\r\n    ScopeType[\"ClassImplementation\"] = \"class_implementation\";\r\n    ScopeType[\"Form\"] = \"form\";\r\n    ScopeType[\"FunctionModule\"] = \"function\";\r\n    ScopeType[\"Method\"] = \"method\";\r\n    ScopeType[\"For\"] = \"for\";\r\n    ScopeType[\"OpenSQL\"] = \"open_sql\";\r\n})(ScopeType = exports.ScopeType || (exports.ScopeType = {}));\r\n//# sourceMappingURL=_scope_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/_type_utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/_type_utils.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeUtils = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass TypeUtils {\r\n    // public static isHexLike, todo\r\n    static isCharLike(type) {\r\n        if (type === undefined) {\r\n            return false;\r\n        }\r\n        else if (type instanceof basic_1.StructureType) {\r\n            for (const c of type.getComponents()) {\r\n                if (this.isCharLike(c.type) === false) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        else if (type instanceof basic_1.StringType\r\n            || type instanceof basic_1.VoidType\r\n            || type instanceof basic_1.AnyType\r\n            || type instanceof basic_1.UnknownType\r\n            || type instanceof basic_1.NumericType\r\n            || type instanceof basic_1.CharacterType) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    static isAssignable(source, target) {\r\n        /*\r\n            console.dir(source);\r\n            console.dir(target);\r\n        */\r\n        if (target instanceof basic_1.TableType) {\r\n            if (target.isWithHeader()) {\r\n                return this.isAssignable(source, target.getRowType());\r\n            }\r\n            if (source instanceof basic_1.TableType\r\n                || source instanceof basic_1.VoidType\r\n                || source instanceof basic_1.AnyType\r\n                || source instanceof basic_1.UnknownType) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        else if (target instanceof basic_1.ObjectReferenceType || target instanceof basic_1.GenericObjectReferenceType) {\r\n            if (source instanceof basic_1.ObjectReferenceType\r\n                || source instanceof basic_1.GenericObjectReferenceType\r\n                || source instanceof basic_1.VoidType\r\n                || source instanceof basic_1.AnyType\r\n                || source instanceof basic_1.UnknownType) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        else if (target instanceof basic_1.DataReference) {\r\n            if (source instanceof basic_1.DataReference\r\n                || source instanceof basic_1.VoidType\r\n                || source instanceof basic_1.AnyType\r\n                || source instanceof basic_1.UnknownType) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        else if (target instanceof basic_1.StructureType) {\r\n            if (source instanceof basic_1.TableType && source.isWithHeader()) {\r\n                return this.isAssignable(source.getRowType(), target);\r\n            }\r\n            else if (source instanceof basic_1.StructureType\r\n                || source instanceof basic_1.VoidType\r\n                || source instanceof basic_1.AnyType\r\n                || source instanceof basic_1.UnknownType) {\r\n                return true;\r\n            }\r\n            else if (this.isCharLike(target)\r\n                && (this.isCharLike(source) || source instanceof basic_1.IntegerType)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexports.TypeUtils = TypeUtils;\r\n//# sourceMappingURL=_type_utils.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/_type_utils.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BasicTypes = void 0;\r\n/* eslint-disable default-case */\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Types = __webpack_require__(/*! ../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ./_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ./_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst class_constant_1 = __webpack_require__(/*! ../types/class_constant */ \"./node_modules/@abaplint/core/build/src/abap/types/class_constant.js\");\r\nconst identifier_1 = __webpack_require__(/*! ../1_lexer/tokens/identifier */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/identifier.js\");\r\nconst _reference_1 = __webpack_require__(/*! ./_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst basic_1 = __webpack_require__(/*! ../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./expressions/field_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nclass BasicTypes {\r\n    constructor(filename, scope) {\r\n        this.filename = filename;\r\n        this.scope = scope;\r\n    }\r\n    lookupQualifiedName(name) {\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        const found = this.scope.findType(name);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        if (name.includes(\"=>\")) {\r\n            const split = name.split(\"=>\");\r\n            const ooName = split[0];\r\n            const typeName = split[1];\r\n            const oo = this.scope.findObjectDefinition(ooName);\r\n            if (oo) {\r\n                const f = oo.getTypeDefinitions().getByName(typeName);\r\n                if (f) {\r\n                    return f;\r\n                }\r\n            }\r\n        }\r\n        // todo: DDIC types\r\n        return undefined;\r\n    }\r\n    resolveLikeName(node, headerLogic = true) {\r\n        var _a;\r\n        if (node === undefined) {\r\n            return undefined;\r\n        }\r\n        let chain = node.findFirstExpression(Expressions.FieldChain);\r\n        if (chain === undefined) {\r\n            chain = node.findFirstExpression(Expressions.TypeName);\r\n        }\r\n        if (chain === undefined) {\r\n            chain = node.findFirstExpression(Expressions.FieldSub);\r\n        }\r\n        const fullName = chain === null || chain === void 0 ? void 0 : chain.concatTokens();\r\n        const children = chain === null || chain === void 0 ? void 0 : chain.getChildren();\r\n        if (children === undefined) {\r\n            return new Types.UnknownType(\"Type error, could not resolve \\\"\" + fullName + \"\\\", resolveLikeName1\");\r\n        }\r\n        else if (chain === undefined) {\r\n            throw new Error(\"resolveLikeName, chain undefined\");\r\n        }\r\n        let type = undefined;\r\n        if (children[1] && (children[1].getFirstToken().getStr() === \"=>\" || children[1].getFirstToken().getStr() === \"->\")) {\r\n            type = new field_chain_1.FieldChain().runSyntax(chain, this.scope, this.filename, _reference_1.ReferenceType.TypeReference);\r\n        }\r\n        else {\r\n            const name = children[0].getFirstToken().getStr();\r\n            const found = this.scope.findVariable(name);\r\n            type = found === null || found === void 0 ? void 0 : found.getType();\r\n            if (found) {\r\n                this.scope.addReference(chain === null || chain === void 0 ? void 0 : chain.getFirstToken(), found, _reference_1.ReferenceType.TypeReference, this.filename);\r\n            }\r\n            if (type instanceof basic_1.TableType && ((_a = chain.getLastChild()) === null || _a === void 0 ? void 0 : _a.get()) instanceof Expressions.TableBody) {\r\n                type = new basic_1.TableType(type.getRowType(), { withHeader: false });\r\n            }\r\n            else if (type instanceof basic_1.TableType && type.isWithHeader() && headerLogic === true) {\r\n                type = type.getRowType();\r\n            }\r\n            else if (type === undefined) {\r\n                type = this.scope.getDDIC().lookupNoVoid(name);\r\n            }\r\n            // todo, this only looks up one level, reuse field_chain.ts?\r\n            if (children[1] && children[2] && children[1].getFirstToken().getStr() === \"-\") {\r\n                if (type instanceof Types.StructureType) {\r\n                    const sub = type.getComponentByName(children[2].getFirstToken().getStr());\r\n                    if (sub) {\r\n                        return sub;\r\n                    }\r\n                    return new Types.UnknownType(\"Type error, field not part of structure \" + fullName);\r\n                }\r\n                else if (type instanceof Types.VoidType) {\r\n                    return type;\r\n                }\r\n                else if (type instanceof Types.TableType\r\n                    && type.isWithHeader() === true\r\n                    && type.getRowType() instanceof Types.VoidType) {\r\n                    return type.getRowType();\r\n                }\r\n                else if (type instanceof Types.TableType\r\n                    && type.isWithHeader() === true) {\r\n                    const rowType = type.getRowType();\r\n                    if (rowType instanceof Types.StructureType) {\r\n                        const sub = rowType.getComponentByName(children[2].getFirstToken().getStr());\r\n                        if (sub) {\r\n                            return sub;\r\n                        }\r\n                    }\r\n                    return new Types.UnknownType(\"Type error, field not part of structure \" + fullName);\r\n                }\r\n                else {\r\n                    if (this.scope.isOO() === false && this.scope.getDDIC().inErrorNamespace(name) === false) {\r\n                        this.scope.addReference(children[0].getFirstToken(), undefined, _reference_1.ReferenceType.VoidType, this.filename);\r\n                        return new Types.VoidType(name);\r\n                    }\r\n                    return new Types.UnknownType(\"Type error, not a structure type \" + name);\r\n                }\r\n            }\r\n        }\r\n        if (!type) {\r\n            if (this.scope.isOO() === false && this.scope.getDDIC().inErrorNamespace(fullName) === false) {\r\n                this.scope.addReference(children[0].getFirstToken(), undefined, _reference_1.ReferenceType.VoidType, this.filename);\r\n                return new Types.VoidType(fullName);\r\n            }\r\n            return new Types.UnknownType(\"Type error, could not resolve \\\"\" + fullName + \"\\\", resolveLikeName2\");\r\n        }\r\n        return type;\r\n    }\r\n    resolveTypeName(typeName, length, decimals) {\r\n        if (typeName === undefined) {\r\n            return undefined;\r\n        }\r\n        const chain = this.resolveTypeChain(typeName);\r\n        if (chain) {\r\n            return chain;\r\n        }\r\n        const chainText = typeName.concatTokens().toUpperCase();\r\n        switch (chainText) {\r\n            case \"STRING\":\r\n                return new Types.StringType();\r\n            case \"XSTRING\":\r\n                return new Types.XStringType();\r\n            case \"D\":\r\n                return new Types.DateType();\r\n            case \"T\":\r\n                return new Types.TimeType();\r\n            case \"XSEQUENCE\":\r\n                return new Types.XSequenceType();\r\n            case \"CLIKE\":\r\n                return new Types.CLikeType();\r\n            case \"ANY\":\r\n                return new Types.AnyType();\r\n            case \"DATA\":\r\n                return new Types.AnyType();\r\n            case \"NUMERIC\":\r\n                return new Types.NumericGenericType();\r\n            case \"UTCLONG\": // todo, take version into account\r\n                return new Types.UTCLongType();\r\n            case \"DECFLOAT16\":\r\n                return new Types.DecFloat16Type();\r\n            case \"DECFLOAT34\":\r\n                return new Types.DecFloat34Type();\r\n            case \"CSEQUENCE\":\r\n                return new Types.CSequenceType();\r\n            case \"I\":\r\n            case \"INT8\": // todo, take version into account\r\n                return new Types.IntegerType();\r\n            case \"F\":\r\n                return new Types.FloatType();\r\n            case \"P\":\r\n                if (length && decimals) {\r\n                    return new Types.PackedType(length, decimals);\r\n                }\r\n                else if (length) {\r\n                    return new Types.PackedType(length, 0);\r\n                }\r\n                else {\r\n                    return new Types.PackedType(1, 0);\r\n                }\r\n            case \"C\":\r\n                if (length) {\r\n                    return new Types.CharacterType(length);\r\n                }\r\n                else {\r\n                    return new Types.CharacterType(1);\r\n                }\r\n            case \"X\":\r\n                if (length) {\r\n                    return new Types.HexType(length);\r\n                }\r\n                else {\r\n                    return new Types.HexType(1);\r\n                }\r\n            case \"N\":\r\n                if (length) {\r\n                    return new Types.NumericType(length);\r\n                }\r\n                else {\r\n                    return new Types.NumericType(1);\r\n                }\r\n        }\r\n        const typ = this.scope.findType(chainText);\r\n        if (typ) {\r\n            const token = typeName.getFirstToken();\r\n            if (chainText.includes(\"~\")) {\r\n                const name = chainText.split(\"~\")[0];\r\n                const idef = this.scope.findInterfaceDefinition(name);\r\n                if (idef) {\r\n                    this.scope.addReference(token, idef, _reference_1.ReferenceType.ObjectOrientedReference, this.filename, { ooType: \"INTF\", ooName: name });\r\n                }\r\n            }\r\n            this.scope.addReference(token, typ, _reference_1.ReferenceType.TypeReference, this.filename);\r\n            return typ.getType();\r\n        }\r\n        const type = this.scope.findTypePoolType(chainText);\r\n        if (type) {\r\n            this.scope.addReference(typeName.getFirstToken(), typ, _reference_1.ReferenceType.TypeReference, this.filename);\r\n            return type;\r\n        }\r\n        const ddic = this.scope.getDDIC().lookup(chainText);\r\n        if (ddic) {\r\n            if (ddic instanceof _typed_identifier_1.TypedIdentifier) {\r\n                this.scope.addReference(typeName.getFirstToken(), ddic, _reference_1.ReferenceType.TypeReference, this.filename);\r\n            }\r\n            else if (ddic instanceof basic_1.VoidType) {\r\n                this.scope.addReference(typeName.getFirstToken(), undefined, _reference_1.ReferenceType.VoidType, this.filename);\r\n            }\r\n            return ddic;\r\n        }\r\n        return undefined;\r\n    }\r\n    simpleType(node) {\r\n        let nameExpr = node.findFirstExpression(Expressions.NamespaceSimpleName);\r\n        if (nameExpr === undefined) {\r\n            nameExpr = node.findFirstExpression(Expressions.DefinitionName);\r\n        }\r\n        if (nameExpr === undefined) {\r\n            return undefined;\r\n        }\r\n        let name = nameExpr.getFirstToken();\r\n        if (nameExpr.countTokens() > 1) { // workaround for names with dashes\r\n            name = new identifier_1.Identifier(name.getStart(), nameExpr.concatTokens());\r\n        }\r\n        const found = this.parseType(node);\r\n        if (found) {\r\n            return new _typed_identifier_1.TypedIdentifier(name, this.filename, found);\r\n        }\r\n        return undefined;\r\n    }\r\n    parseTable(node, name) {\r\n        var _a;\r\n        const typename = node.findFirstExpression(Expressions.TypeName);\r\n        const text = (_a = node.findFirstExpression(Expressions.TypeTable)) === null || _a === void 0 ? void 0 : _a.concatTokens().toUpperCase();\r\n        if (text === undefined) {\r\n            return undefined;\r\n        }\r\n        let type = undefined;\r\n        if (text.includes(\" STANDARD TABLE \")) {\r\n            type = basic_1.TableAccessType.standard;\r\n        }\r\n        else if (text.includes(\" SORTED TABLE \")) {\r\n            type = basic_1.TableAccessType.sorted;\r\n        }\r\n        else if (text.includes(\" HASHED TABLE \")) {\r\n            type = basic_1.TableAccessType.hashed;\r\n        }\r\n        const options = {\r\n            withHeader: text.includes(\"WITH HEADER LINE\"),\r\n            type: type,\r\n        };\r\n        let found = undefined;\r\n        if (text.startsWith(\"TYPE TABLE OF REF TO \")\r\n            || text.startsWith(\"TYPE STANDARD TABLE OF REF TO \")\r\n            || text.startsWith(\"TYPE SORTED TABLE OF REF TO \")\r\n            || text.startsWith(\"TYPE HASHED TABLE OF REF TO \")) {\r\n            found = this.resolveTypeRef(typename);\r\n            if (found) {\r\n                return new Types.TableType(found, options, name);\r\n            }\r\n        }\r\n        else if (text.startsWith(\"TYPE TABLE OF \")\r\n            || text.startsWith(\"TYPE STANDARD TABLE OF \")\r\n            || text.startsWith(\"TYPE SORTED TABLE OF \")\r\n            || text.startsWith(\"TYPE HASHED TABLE OF \")) {\r\n            found = this.resolveTypeName(typename);\r\n            if (found) {\r\n                return new Types.TableType(found, options, name);\r\n            }\r\n        }\r\n        else if (text.startsWith(\"LIKE TABLE OF \")\r\n            || text.startsWith(\"LIKE STANDARD TABLE OF \")\r\n            || text.startsWith(\"LIKE SORTED TABLE OF \")\r\n            || text.startsWith(\"LIKE HASHED TABLE OF \")) {\r\n            found = this.resolveLikeName(node);\r\n            if (found) {\r\n                return new Types.TableType(found, options, name);\r\n            }\r\n        }\r\n        else if (text === \"TYPE STANDARD TABLE\"\r\n            || text === \"TYPE SORTED TABLE\"\r\n            || text === \"TYPE HASHED TABLE\"\r\n            || text === \"TYPE INDEX TABLE\"\r\n            || text === \"TYPE ANY TABLE\") {\r\n            return new Types.TableType(new Types.AnyType(), options);\r\n        }\r\n        else if (text.startsWith(\"TYPE RANGE OF \")) {\r\n            const sub = node.findFirstExpression(Expressions.TypeName);\r\n            found = this.resolveTypeName(sub);\r\n            if (found === undefined) {\r\n                return new Types.UnknownType(\"TYPE RANGE OF, could not resolve type\");\r\n            }\r\n            const structure = new Types.StructureType([\r\n                { name: \"sign\", type: new Types.CharacterType(1) },\r\n                { name: \"option\", type: new Types.CharacterType(2) },\r\n                { name: \"low\", type: found },\r\n                { name: \"high\", type: found },\r\n            ], name);\r\n            return new Types.TableType(structure, options);\r\n        }\r\n        else if (text.startsWith(\"LIKE RANGE OF \")) {\r\n            const sub = node.findFirstExpression(Expressions.FieldSub);\r\n            found = this.resolveLikeName(sub);\r\n            if (found === undefined) {\r\n                return new Types.UnknownType(\"LIKE RANGE OF, could not resolve type\");\r\n            }\r\n            const structure = new Types.StructureType([\r\n                { name: \"sign\", type: new Types.CharacterType(1) },\r\n                { name: \"option\", type: new Types.CharacterType(2) },\r\n                { name: \"low\", type: found },\r\n                { name: \"high\", type: found },\r\n            ], name);\r\n            return new Types.TableType(structure, options);\r\n        }\r\n        // fallback to old style syntax, OCCURS etc\r\n        return this.parseType(node, name);\r\n    }\r\n    parseType(node, name) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const typename = node.findFirstExpression(Expressions.TypeName);\r\n        let text = (_a = node.findFirstExpression(Expressions.Type)) === null || _a === void 0 ? void 0 : _a.concatTokens().toUpperCase();\r\n        if (text === undefined) {\r\n            text = (_b = node.findFirstExpression(Expressions.TypeParam)) === null || _b === void 0 ? void 0 : _b.concatTokens().toUpperCase();\r\n        }\r\n        if (text === undefined) {\r\n            text = (_c = node.findFirstExpression(Expressions.TypeTable)) === null || _c === void 0 ? void 0 : _c.concatTokens().toUpperCase();\r\n            if ((text === null || text === void 0 ? void 0 : text.startsWith(\"TYPE\")) === false && (text === null || text === void 0 ? void 0 : text.startsWith(\"LIKE\")) === false) {\r\n                text = \"TYPE\";\r\n            }\r\n        }\r\n        if (text === undefined) {\r\n            text = (_d = node.findFirstExpression(Expressions.FormParamType)) === null || _d === void 0 ? void 0 : _d.concatTokens().toUpperCase();\r\n        }\r\n        if (text === undefined) {\r\n            text = \"TYPE\";\r\n        }\r\n        let found = undefined;\r\n        if (text.startsWith(\"LIKE LINE OF \")) {\r\n            const name = (_e = node.findFirstExpression(Expressions.FieldChain)) === null || _e === void 0 ? void 0 : _e.concatTokens();\r\n            let e = node.findFirstExpression(Expressions.Type);\r\n            if (e === undefined) {\r\n                e = node.findFirstExpression(Expressions.FormParamType);\r\n            }\r\n            const type = this.resolveLikeName(e, false);\r\n            if (type === undefined) {\r\n                return new Types.UnknownType(\"Type error, could not resolve \\\"\" + name + \"\\\", parseType\");\r\n            }\r\n            else if (type instanceof Types.TableType) {\r\n                return type.getRowType();\r\n            }\r\n            else if (type instanceof Types.VoidType) {\r\n                return type;\r\n            }\r\n            else {\r\n                return new Types.UnknownType(\"Type error, not a table type \" + name);\r\n            }\r\n        }\r\n        else if (text.startsWith(\"LIKE REF TO \")) {\r\n            const name = (_f = node.findFirstExpression(Expressions.FieldChain)) === null || _f === void 0 ? void 0 : _f.concatTokens();\r\n            const type = this.resolveLikeName(node.findFirstExpression(Expressions.Type), false);\r\n            if (type === undefined) {\r\n                return new Types.UnknownType(\"Type error, could not resolve \\\"\" + name + \"\\\", parseType\");\r\n            }\r\n            return new Types.DataReference(type);\r\n        }\r\n        else if (text === \"TYPE STANDARD TABLE\"\r\n            || text === \"TYPE SORTED TABLE\"\r\n            || text === \"TYPE HASHED TABLE\"\r\n            || text === \"TYPE INDEX TABLE\"\r\n            || text === \"TYPE ANY TABLE\") {\r\n            return new Types.TableType(new Types.AnyType(), { withHeader: node.concatTokens().toUpperCase().includes(\"WITH HEADER LINE\") });\r\n        }\r\n        else if (text.startsWith(\"LIKE \")) {\r\n            let sub = node.findFirstExpression(Expressions.Type);\r\n            if (sub === undefined) {\r\n                sub = node.findFirstExpression(Expressions.FormParamType);\r\n            }\r\n            if (sub === undefined) {\r\n                sub = node.findFirstExpression(Expressions.TypeParam);\r\n            }\r\n            if (sub === undefined) {\r\n                sub = node.findFirstExpression(Expressions.FieldChain);\r\n            }\r\n            found = this.resolveLikeName(sub);\r\n            if (found && text.includes(\" OCCURS \")) {\r\n                found = new Types.TableType(found, { withHeader: text.includes(\"WITH HEADER LINE\") }, name);\r\n            }\r\n        }\r\n        else if (text.startsWith(\"TYPE LINE OF \")) {\r\n            const sub = node.findFirstExpression(Expressions.TypeName);\r\n            found = this.resolveTypeName(sub);\r\n            if (found instanceof _typed_identifier_1.TypedIdentifier) {\r\n                found = found.getType();\r\n            }\r\n            if (found instanceof Types.TableType) {\r\n                return found.getRowType();\r\n            }\r\n            else if (found instanceof Types.VoidType) {\r\n                return found;\r\n            }\r\n            else if (found instanceof Types.UnknownType) {\r\n                return new Types.UnknownType(\"TYPE LINE OF, unknown type, \" + found.getError());\r\n            }\r\n            else {\r\n                return new Types.UnknownType(\"TYPE LINE OF, unexpected type, \" + (found === null || found === void 0 ? void 0 : found.constructor.name));\r\n            }\r\n        }\r\n        else if (text.startsWith(\"TYPE REF TO \")) {\r\n            found = this.resolveTypeRef(typename);\r\n        }\r\n        else if (text.startsWith(\"TYPE\")) {\r\n            found = this.resolveTypeName(typename, this.findLength(node), this.findDecimals(node));\r\n            const concat = node.concatTokens().toUpperCase();\r\n            if (found && concat.includes(\" OCCURS \")) {\r\n                found = new Types.TableType(found, { withHeader: concat.includes(\"WITH HEADER LINE\") }, name);\r\n            }\r\n            else if (found && concat.includes(\"WITH HEADER LINE\")) {\r\n                if (found instanceof Types.VoidType) {\r\n                    found = new Types.TableType(found, { withHeader: true });\r\n                }\r\n                else if (!(found instanceof Types.TableType)) {\r\n                    throw new Error(\"WITH HEADER LINE can only be used with internal table\");\r\n                }\r\n                else {\r\n                    found = new Types.TableType(found.getRowType(), { withHeader: true });\r\n                }\r\n            }\r\n            if (found === undefined && typename === undefined) {\r\n                let length = 1;\r\n                const len = node.findDirectExpression(Expressions.ConstantFieldLength);\r\n                if (len) {\r\n                    const int = len.findDirectExpression(Expressions.Integer);\r\n                    if (int) {\r\n                        length = parseInt(int.concatTokens(), 10);\r\n                    }\r\n                }\r\n                found = new Types.CharacterType(length, name); // fallback\r\n                if (concat.includes(\" OCCURS \")) {\r\n                    found = new Types.TableType(found, { withHeader: concat.includes(\"WITH HEADER LINE\") }, name);\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    }\r\n    /////////////////////\r\n    // todo, rewrite this method\r\n    resolveTypeChain(expr) {\r\n        const chainText = expr.concatTokens().toUpperCase();\r\n        if (chainText.includes(\"=>\") === false && chainText.includes(\"-\") === false) {\r\n            return undefined;\r\n        }\r\n        let className;\r\n        let rest = chainText;\r\n        if (chainText.includes(\"=>\")) {\r\n            const split = chainText.split(\"=>\");\r\n            className = split[0];\r\n            rest = split[1];\r\n        }\r\n        const subs = rest.split(\"-\");\r\n        let foundType = undefined;\r\n        if (className) {\r\n            const split = chainText.split(\"=>\");\r\n            const className = split[0];\r\n            // the prefix might be itself\r\n            if ((this.scope.getType() === _scope_type_1.ScopeType.Interface\r\n                || this.scope.getType() === _scope_type_1.ScopeType.ClassDefinition)\r\n                && this.scope.getName().toUpperCase() === className.toUpperCase()) {\r\n                const foundId = this.scope.findType(subs[0]);\r\n                foundType = foundId === null || foundId === void 0 ? void 0 : foundId.getType();\r\n                if (foundType === undefined) {\r\n                    return new Types.UnknownType(\"Could not resolve type \" + chainText);\r\n                }\r\n                this.scope.addReference(expr.getTokens()[2], foundId, _reference_1.ReferenceType.TypeReference, this.filename);\r\n            }\r\n            else {\r\n                // lookup in local and global scope\r\n                const obj = this.scope.findObjectDefinition(className);\r\n                if (obj === undefined && this.scope.getDDIC().inErrorNamespace(className) === false) {\r\n                    return new Types.VoidType(className);\r\n                }\r\n                else if (obj === undefined) {\r\n                    return new Types.UnknownType(\"Could not resolve top \" + className + \", resolveTypeChain\");\r\n                }\r\n                const type = obj instanceof types_1.ClassDefinition ? \"CLAS\" : \"INTF\";\r\n                this.scope.addReference(expr.getFirstToken(), obj, _reference_1.ReferenceType.ObjectOrientedReference, this.filename, { ooType: type, ooName: className });\r\n                const byName = new _object_oriented_1.ObjectOriented(this.scope).searchTypeName(obj, subs[0]);\r\n                foundType = byName === null || byName === void 0 ? void 0 : byName.getType();\r\n                if (byName === undefined || foundType === undefined) {\r\n                    return new Types.UnknownType(subs[0] + \" not found in class or interface\");\r\n                }\r\n                this.scope.addReference(expr.getTokens()[2], byName, _reference_1.ReferenceType.TypeReference, this.filename);\r\n            }\r\n        }\r\n        else {\r\n            const found = this.scope.findType(subs[0]);\r\n            foundType = found === null || found === void 0 ? void 0 : found.getType();\r\n            if (foundType === undefined) {\r\n                const f = this.scope.getDDIC().lookupTableOrView(subs[0]);\r\n                if (f instanceof _typed_identifier_1.TypedIdentifier) {\r\n                    foundType = f.getType();\r\n                }\r\n                else {\r\n                    foundType = f;\r\n                }\r\n            }\r\n            else {\r\n                this.scope.addReference(expr.getFirstToken(), found, _reference_1.ReferenceType.TypeReference, this.filename);\r\n            }\r\n            if (foundType === undefined && this.scope.getDDIC().inErrorNamespace(subs[0]) === false) {\r\n                this.scope.addReference(expr.getFirstToken(), undefined, _reference_1.ReferenceType.VoidType, this.filename);\r\n                return new Types.VoidType(subs[0]);\r\n            }\r\n            else if (foundType instanceof Types.VoidType) {\r\n                this.scope.addReference(expr.getFirstToken(), undefined, _reference_1.ReferenceType.VoidType, this.filename);\r\n                return foundType;\r\n            }\r\n            else if (foundType === undefined) {\r\n                return new Types.UnknownType(\"Unknown type \" + subs[0]);\r\n            }\r\n        }\r\n        subs.shift();\r\n        while (subs.length > 0) {\r\n            if (foundType instanceof Types.UnknownType) {\r\n                return foundType;\r\n            }\r\n            else if (!(foundType instanceof Types.StructureType)) {\r\n                return new Types.UnknownType(\"Not a structured type\");\r\n            }\r\n            foundType = foundType.getComponentByName(subs[0]);\r\n            subs.shift();\r\n        }\r\n        return foundType;\r\n    }\r\n    resolveConstantValue(expr) {\r\n        var _a;\r\n        if (!(expr.get() instanceof Expressions.SimpleFieldChain)) {\r\n            throw new Error(\"resolveConstantValue\");\r\n        }\r\n        const first = expr.getFirstChild();\r\n        if (first.get() instanceof Expressions.Field) {\r\n            const token = first.getFirstToken();\r\n            const name = token.getStr();\r\n            const found = this.scope.findVariable(name);\r\n            const val = found === null || found === void 0 ? void 0 : found.getValue();\r\n            if (typeof val === \"string\") {\r\n                this.scope.addReference(token, found, _reference_1.ReferenceType.DataReadReference, this.filename);\r\n                return val;\r\n            }\r\n            return undefined;\r\n        }\r\n        else if (first.get() instanceof Expressions.ClassName) {\r\n            const name = first.getFirstToken().getStr();\r\n            const obj = this.scope.findObjectDefinition(name);\r\n            if (obj === undefined) {\r\n                if (this.scope.getDDIC().inErrorNamespace(name) === true) {\r\n                    throw new Error(\"resolveConstantValue, not found: \" + name);\r\n                }\r\n                else {\r\n                    return undefined;\r\n                }\r\n            }\r\n            const children = expr.getChildren();\r\n            const token = (_a = children[2]) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n            const attr = token.getStr();\r\n            const c = new _object_oriented_1.ObjectOriented(this.scope).searchConstantName(obj, attr);\r\n            if (c instanceof class_constant_1.ClassConstant) {\r\n                this.scope.addReference(token, c, _reference_1.ReferenceType.DataReadReference, this.filename);\r\n                const val = c.getValue();\r\n                if (typeof val === \"string\") {\r\n                    return val;\r\n                }\r\n                else if (typeof val === \"object\" && children[4]) {\r\n                    const name = children[4].getFirstToken().getStr();\r\n                    if (val[name] !== undefined) {\r\n                        return val[name];\r\n                    }\r\n                }\r\n                return undefined;\r\n            }\r\n            throw new Error(\"resolveConstantValue, constant not found \" + attr);\r\n        }\r\n        else {\r\n            throw new Error(\"resolveConstantValue, unexpected structure\");\r\n        }\r\n    }\r\n    resolveTypeRef(chain) {\r\n        var _a;\r\n        if (chain === undefined) {\r\n            return undefined;\r\n        }\r\n        const name = chain.getFirstToken().getStr();\r\n        if (chain.getAllTokens().length === 1) {\r\n            if (name.toUpperCase() === \"OBJECT\") {\r\n                return new Types.GenericObjectReferenceType();\r\n            }\r\n            const search = this.scope.existsObject(name);\r\n            if (search.found === true && search.id) {\r\n                this.scope.addReference(chain.getFirstToken(), search.id, _reference_1.ReferenceType.ObjectOrientedReference, this.filename, { ooType: search.ooType, ooName: name });\r\n                return new Types.ObjectReferenceType(search.id);\r\n            }\r\n        }\r\n        const found = this.resolveTypeName(chain);\r\n        if (found && !(found instanceof Types.UnknownType) && !(found instanceof Types.VoidType)) {\r\n            return new Types.DataReference(found);\r\n        }\r\n        else if (chain.concatTokens().toUpperCase() === \"DATA\") {\r\n            return new Types.DataReference(new Types.AnyType());\r\n        }\r\n        if (this.scope.isBadiDef(name) === true) {\r\n            return new Types.VoidType(name);\r\n        }\r\n        if (((_a = this.scope.getDDIC()) === null || _a === void 0 ? void 0 : _a.inErrorNamespace(name)) === false) {\r\n            //      this.scope.addReference(chain.getFirstToken(), undefined, ReferenceType.VoidType, this.filename);\r\n            return new Types.VoidType(name);\r\n        }\r\n        return new Types.UnknownType(\"REF, unable to resolve \" + name);\r\n    }\r\n    findValue(node) {\r\n        const val = node.findFirstExpression(Expressions.Value);\r\n        if (val === undefined) {\r\n            throw new Error(\"VALUE missing in expression\");\r\n        }\r\n        if (val.concatTokens().toUpperCase() === \"VALUE IS INITIAL\") {\r\n            return \"\";\r\n        }\r\n        const constant = val.findFirstExpression(Expressions.Constant);\r\n        if (constant) {\r\n            return constant.concatTokens();\r\n        }\r\n        const chain = val.findFirstExpression(Expressions.SimpleFieldChain);\r\n        if (chain) {\r\n            return this.resolveConstantValue(chain);\r\n        }\r\n        throw new Error(\"findValue, unexpected\");\r\n    }\r\n    findDecimals(node) {\r\n        var _a, _b;\r\n        const dec = (_b = (_a = node.findDirectExpression(Expressions.Decimals)) === null || _a === void 0 ? void 0 : _a.findDirectExpression(Expressions.Integer)) === null || _b === void 0 ? void 0 : _b.concatTokens();\r\n        if (dec) {\r\n            return parseInt(dec, 10);\r\n        }\r\n        return undefined;\r\n    }\r\n    findLength(node) {\r\n        const val = node.findFirstExpression(Expressions.Length);\r\n        const flen = node.findFirstExpression(Expressions.ConstantFieldLength);\r\n        if (val && flen) {\r\n            throw new Error(\"Only specify length once\");\r\n        }\r\n        if (flen) {\r\n            const cintExpr = flen.findFirstExpression(Expressions.Integer);\r\n            if (cintExpr) {\r\n                return this.parseInt(cintExpr.concatTokens());\r\n            }\r\n            const cchain = flen.findFirstExpression(Expressions.SimpleFieldChain);\r\n            if (cchain) {\r\n                const val = this.resolveConstantValue(cchain);\r\n                return this.parseInt(val);\r\n            }\r\n        }\r\n        if (val === undefined) {\r\n            return 1;\r\n        }\r\n        const intExpr = val.findFirstExpression(Expressions.Integer);\r\n        if (intExpr) {\r\n            return this.parseInt(intExpr.concatTokens());\r\n        }\r\n        const strExpr = val.findFirstExpression(Expressions.ConstantString);\r\n        if (strExpr) {\r\n            return this.parseInt(strExpr.concatTokens());\r\n        }\r\n        const chain = val.findFirstExpression(Expressions.SimpleFieldChain);\r\n        if (chain) {\r\n            const val = this.resolveConstantValue(chain);\r\n            return this.parseInt(val);\r\n        }\r\n        throw new Error(\"Unexpected, findLength\");\r\n    }\r\n    parseInt(text) {\r\n        if (text === undefined) {\r\n            return undefined;\r\n        }\r\n        if (text.startsWith(\"'\")) {\r\n            text = text.split(\"'\")[1];\r\n        }\r\n        else if (text.startsWith(\"`\")) {\r\n            text = text.split(\"`\")[1];\r\n        }\r\n        return parseInt(text, 10);\r\n    }\r\n}\r\nexports.BasicTypes = BasicTypes;\r\n//# sourceMappingURL=basic_types.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_chain.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_chain.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AttributeChain = void 0;\r\nconst void_type_1 = __webpack_require__(/*! ../../types/basic/void_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js\");\r\nconst object_reference_type_1 = __webpack_require__(/*! ../../types/basic/object_reference_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/object_reference_type.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ../_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass AttributeChain {\r\n    runSyntax(inputContext, node, scope, filename, type) {\r\n        if (inputContext instanceof void_type_1.VoidType) {\r\n            return inputContext;\r\n        }\r\n        else if (!(inputContext instanceof object_reference_type_1.ObjectReferenceType)) {\r\n            throw new Error(\"Not a object reference(AttributeChain)\");\r\n        }\r\n        const children = node.getChildren().slice();\r\n        const first = children[0];\r\n        if (!(first.get() instanceof expressions_1.AttributeName)) {\r\n            throw new Error(\"AttributeChain, unexpected first child\");\r\n        }\r\n        const def = scope.findClassDefinition(inputContext.getIdentifierName());\r\n        if (def === undefined) {\r\n            throw new Error(\"Definition for \\\"\" + inputContext.getIdentifierName() + \"\\\" not found in scope\");\r\n        }\r\n        const nameToken = first.getFirstToken();\r\n        const name = nameToken.getStr();\r\n        const helper = new _object_oriented_1.ObjectOriented(scope);\r\n        let context = helper.searchAttributeName(def, name);\r\n        if (context === undefined) {\r\n            context = helper.searchConstantName(def, name);\r\n        }\r\n        if (context === undefined) {\r\n            throw new Error(\"Attribute or constant \\\"\" + name + \"\\\" not found in \\\"\" + def.getName() + \"\\\"\");\r\n        }\r\n        scope.addReference(nameToken, context, type, filename);\r\n        // todo, loop, handle ArrowOrDash, ComponentName, TableExpression\r\n        return context.getType();\r\n    }\r\n}\r\nexports.AttributeChain = AttributeChain;\r\n//# sourceMappingURL=attribute_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_name.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_name.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AttributeName = void 0;\r\nconst void_type_1 = __webpack_require__(/*! ../../types/basic/void_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js\");\r\nconst structure_type_1 = __webpack_require__(/*! ../../types/basic/structure_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/structure_type.js\");\r\nconst object_reference_type_1 = __webpack_require__(/*! ../../types/basic/object_reference_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/object_reference_type.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ../_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst data_reference_type_1 = __webpack_require__(/*! ../../types/basic/data_reference_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/data_reference_type.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass AttributeName {\r\n    runSyntax(context, node, scope, filename, type) {\r\n        if (context instanceof void_type_1.VoidType) {\r\n            return context;\r\n        }\r\n        const helper = new _object_oriented_1.ObjectOriented(scope);\r\n        let ret = undefined;\r\n        if (context instanceof object_reference_type_1.ObjectReferenceType) {\r\n            const def = scope.findObjectDefinition(context.getIdentifierName());\r\n            if (def === undefined) {\r\n                throw new Error(\"Definition for \\\"\" + context.getIdentifierName() + \"\\\" not found in scope\");\r\n            }\r\n            const token = node.getFirstToken();\r\n            const name = token.getStr();\r\n            let found = helper.searchAttributeName(def, name);\r\n            if (found === undefined) {\r\n                found = helper.searchConstantName(def, name);\r\n            }\r\n            if (found === undefined) {\r\n                throw new Error(\"Attribute or constant \\\"\" + name + \"\\\" not found in \\\"\" + def.getName() + \"\\\"\");\r\n            }\r\n            if (type) {\r\n                scope.addReference(token, found, type, filename);\r\n            }\r\n            if (found && name.includes(\"~\")) {\r\n                const idef = scope.findInterfaceDefinition(name.split(\"~\")[0]);\r\n                if (idef) {\r\n                    scope.addReference(token, idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                }\r\n            }\r\n            ret = found.getType();\r\n        }\r\n        else if (context instanceof data_reference_type_1.DataReference) {\r\n            const sub = context.getType();\r\n            const name = node.getFirstToken().getStr();\r\n            if (name === \"*\") {\r\n                return sub;\r\n            }\r\n            if (!(sub instanceof structure_type_1.StructureType)) {\r\n                throw new Error(\"Data reference not structured\");\r\n            }\r\n            ret = sub.getComponentByName(name);\r\n            if (ret === undefined) {\r\n                throw new Error(\"Component \\\"\" + name + \"\\\" not found in data reference structure\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Not a object reference, attribute name\");\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.AttributeName = AttributeName;\r\n//# sourceMappingURL=attribute_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cast.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cast.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Cast = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass Cast {\r\n    runSyntax(node, scope, targetType, filename) {\r\n        var _a;\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        const typeName = (_a = node.findDirectExpression(Expressions.TypeNameOrInfer)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr();\r\n        if (typeName === undefined) {\r\n            throw new Error(\"Cast, child TypeNameOrInfer not found\");\r\n        }\r\n        else if (typeName === \"#\" && targetType) {\r\n            return targetType;\r\n        }\r\n        else if (typeName === \"#\") {\r\n            throw new Error(\"Cast, todo, infer type\");\r\n        }\r\n        const found = scope.findObjectDefinition(typeName);\r\n        if (found === undefined && scope.getDDIC().inErrorNamespace(typeName) === false) {\r\n            return new basic_1.VoidType(typeName);\r\n        }\r\n        else if (found === undefined) {\r\n            throw new Error(\"Type \\\"\" + typeName + \"\\\" not found in scope, Cast\");\r\n        }\r\n        return new basic_1.ObjectReferenceType(found);\r\n    }\r\n}\r\nexports.Cast = Cast;\r\n//# sourceMappingURL=cast.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cast.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/compare.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/compare.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Compare = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst method_call_chain_1 = __webpack_require__(/*! ./method_call_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_chain.js\");\r\nclass Compare {\r\n    runSyntax(node, scope, filename) {\r\n        for (const t of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(t, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.MethodCallChain)) {\r\n            new method_call_chain_1.MethodCallChain().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Compare = Compare;\r\n//# sourceMappingURL=compare.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/compare.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_chain.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_chain.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentChain = void 0;\r\nconst void_type_1 = __webpack_require__(/*! ../../types/basic/void_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js\");\r\nconst structure_type_1 = __webpack_require__(/*! ../../types/basic/structure_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/structure_type.js\");\r\nclass ComponentChain {\r\n    runSyntax(context, node) {\r\n        if (context instanceof void_type_1.VoidType) {\r\n            return context;\r\n        }\r\n        if (!(context instanceof structure_type_1.StructureType)) {\r\n            throw new Error(\"ComponentChain, not a structure\");\r\n        }\r\n        const name = node.getFirstToken().getStr();\r\n        const ret = context.getComponentByName(name);\r\n        if (ret === undefined) {\r\n            throw new Error(\"Component \\\"\" + name + \"\\\" not found in structure\");\r\n        }\r\n        // todo, add more here\r\n        return ret;\r\n    }\r\n}\r\nexports.ComponentChain = ComponentChain;\r\n//# sourceMappingURL=component_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentCompare = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass ComponentCompare {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ComponentCompare = ComponentCompare;\r\n//# sourceMappingURL=component_compare.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare_simple.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare_simple.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentCompareSimple = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass ComponentCompareSimple {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ComponentCompareSimple = ComponentCompareSimple;\r\n//# sourceMappingURL=component_compare_simple.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare_simple.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_cond.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_cond.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentCond = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst component_compare_1 = __webpack_require__(/*! ./component_compare */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare.js\");\r\nclass ComponentCond {\r\n    runSyntax(node, scope, filename) {\r\n        for (const t of node.findDirectExpressions(Expressions.ComponentCond)) {\r\n            new ComponentCond().runSyntax(t, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.ComponentCompare)) {\r\n            new component_compare_1.ComponentCompare().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ComponentCond = ComponentCond;\r\n//# sourceMappingURL=component_cond.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_cond.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_name.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_name.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ComponentName = void 0;\r\nconst Basic = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass ComponentName {\r\n    runSyntax(context, node) {\r\n        if (context instanceof Basic.VoidType) {\r\n            return context;\r\n        }\r\n        const name = node.getFirstToken().getStr();\r\n        if (context instanceof Basic.StructureType) {\r\n            const ret = context.getComponentByName(name);\r\n            if (ret === undefined) {\r\n                throw new Error(\"Component \\\"\" + name + \"\\\" not found in structure\");\r\n            }\r\n            return ret;\r\n        }\r\n        if (context instanceof Basic.TableType && context.isWithHeader() === true) {\r\n            const rowType = context.getRowType();\r\n            if (rowType instanceof Basic.VoidType) {\r\n                return context;\r\n            }\r\n            else if (name.toUpperCase() === \"TABLE_LINE\") {\r\n                return rowType;\r\n            }\r\n            else if (rowType instanceof Basic.StructureType) {\r\n                const ret = rowType.getComponentByName(name);\r\n                if (ret === undefined) {\r\n                    throw new Error(\"Component \\\"\" + name + \"\\\" not found in structure\");\r\n                }\r\n                return ret;\r\n            }\r\n        }\r\n        throw new Error(\"Not a structure, ComponentName, \\\"\" + name + \"\\\"\");\r\n    }\r\n}\r\nexports.ComponentName = ComponentName;\r\n//# sourceMappingURL=component_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Cond = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst compare_1 = __webpack_require__(/*! ./compare */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/compare.js\");\r\nclass Cond {\r\n    runSyntax(node, scope, filename) {\r\n        if (node === undefined) {\r\n            throw new Error(\"Cond, expected node input\");\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.CondSub)) {\r\n            const c = t.findDirectExpression(Expressions.Cond);\r\n            if (c) {\r\n                new Cond().runSyntax(c, scope, filename);\r\n            }\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Compare)) {\r\n            new compare_1.Compare().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Cond = Cond;\r\n//# sourceMappingURL=cond.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond_body.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond_body.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CondBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst let_1 = __webpack_require__(/*! ./let */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/let.js\");\r\nconst cond_1 = __webpack_require__(/*! ./cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nclass CondBody {\r\n    runSyntax(node, scope, filename, targetType) {\r\n        if (node === undefined) {\r\n            return targetType;\r\n        }\r\n        const l = node.findDirectExpression(Expressions.Let);\r\n        if (l) {\r\n            new let_1.Let().runSyntax(l, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Cond)) {\r\n            new cond_1.Cond().runSyntax(s, scope, filename);\r\n        }\r\n        let type = undefined;\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            if (type === undefined) {\r\n                type = new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n            else {\r\n                new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n        }\r\n        return targetType ? targetType : type;\r\n    }\r\n}\r\nexports.CondBody = CondBody;\r\n//# sourceMappingURL=cond_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/constant.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/constant.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Constant = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Constant {\r\n    runSyntax(node) {\r\n        if (node.findDirectExpression(expressions_1.Integer)) {\r\n            return new basic_1.IntegerType();\r\n        }\r\n        else {\r\n            return new basic_1.StringType();\r\n        }\r\n    }\r\n}\r\nexports.Constant = Constant;\r\n//# sourceMappingURL=constant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/constant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/conv_body.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/conv_body.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConvBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst let_1 = __webpack_require__(/*! ./let */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/let.js\");\r\nclass ConvBody {\r\n    runSyntax(node, scope, filename) {\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        const l = node.findDirectExpression(Expressions.Let);\r\n        if (l) {\r\n            new let_1.Let().runSyntax(l, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ConvBody = ConvBody;\r\n//# sourceMappingURL=conv_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/conv_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/corresponding_body.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/corresponding_body.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CorrespondingBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass CorrespondingBody {\r\n    runSyntax(node, scope, filename, targetType) {\r\n        if (node === undefined) {\r\n            return targetType;\r\n        }\r\n        let type = undefined;\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            if (type === undefined) {\r\n                type = new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n            else {\r\n                new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n        }\r\n        return targetType ? targetType : type;\r\n    }\r\n}\r\nexports.CorrespondingBody = CorrespondingBody;\r\n//# sourceMappingURL=corresponding_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/corresponding_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/data_definition.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/data_definition.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataDefinition = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst type_table_1 = __webpack_require__(/*! ./type_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/type_table.js\");\r\nclass DataDefinition {\r\n    runSyntax(node, scope, filename) {\r\n        const tt = node.findFirstExpression(Expressions.TypeTable);\r\n        if (tt) {\r\n            return new type_table_1.TypeTable().runSyntax(node, scope, filename);\r\n        }\r\n        const bfound = new basic_types_1.BasicTypes(filename, scope).simpleType(node);\r\n        if (bfound) {\r\n            return bfound;\r\n        }\r\n        const name = node.findFirstExpression(Expressions.DefinitionName);\r\n        if (name) {\r\n            return new _typed_identifier_1.TypedIdentifier(name.getFirstToken(), filename, new basic_1.UnknownType(\"DataDefinition, fallback\"));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.DataDefinition = DataDefinition;\r\n//# sourceMappingURL=data_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/data_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DatabaseTable = void 0;\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass DatabaseTable {\r\n    runSyntax(node, scope, filename) {\r\n        const token = node.getFirstToken();\r\n        const name = token.getStr();\r\n        if (name === \"(\") {\r\n            // dynamic\r\n            return;\r\n        }\r\n        const found = scope.getDDIC().lookupTableOrView2(name);\r\n        if (found === undefined && scope.getDDIC().inErrorNamespace(name) === true) {\r\n            throw new Error(\"Database table or view \\\"\" + name + \"\\\" not found\");\r\n        }\r\n        else if (found === undefined) {\r\n            scope.addReference(token, undefined, _reference_1.ReferenceType.TableVoidReference, filename);\r\n        }\r\n        else {\r\n            scope.addReference(token, found.getIdentifier(), _reference_1.ReferenceType.TableReference, filename);\r\n        }\r\n    }\r\n}\r\nexports.DatabaseTable = DatabaseTable;\r\n//# sourceMappingURL=database_table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/default.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/default.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Default = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass Default {\r\n    runSyntax(node, scope, filename) {\r\n        const chain = node.findDirectExpression(Expressions.FieldChain);\r\n        if (chain) {\r\n            new field_chain_1.FieldChain().runSyntax(chain, scope, filename, _reference_1.ReferenceType.DataReadReference);\r\n        }\r\n    }\r\n}\r\nexports.Default = Default;\r\n//# sourceMappingURL=default.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/default.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dereference.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dereference.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Dereference = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass Dereference {\r\n    runSyntax(type) {\r\n        if (type instanceof basic_1.VoidType\r\n            || type instanceof basic_1.AnyType\r\n            || type === undefined\r\n            || type instanceof basic_1.UnknownType) {\r\n            return type;\r\n        }\r\n        if (!(type instanceof basic_1.DataReference)) {\r\n            throw new Error(\"Not a data reference, cannot be dereferenced\");\r\n        }\r\n        return type.getType();\r\n    }\r\n}\r\nexports.Dereference = Dereference;\r\n//# sourceMappingURL=dereference.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dereference.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Dynamic = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass Dynamic {\r\n    runSyntax(node, scope, filename) {\r\n        const chain = node.findDirectExpression(Expressions.FieldChain);\r\n        if (chain) {\r\n            new field_chain_1.FieldChain().runSyntax(chain, scope, filename, _reference_1.ReferenceType.DataReadReference);\r\n        }\r\n    }\r\n}\r\nexports.Dynamic = Dynamic;\r\n//# sourceMappingURL=dynamic.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_assignment.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_assignment.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldAssignment = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass FieldAssignment {\r\n    runSyntax(node, scope, filename, targetType) {\r\n        var _a;\r\n        const name = (_a = node.findDirectExpression(Expressions.FieldSub)) === null || _a === void 0 ? void 0 : _a.concatTokens();\r\n        if (name === undefined) {\r\n            throw new Error(\"FieldAssignment, FieldSub node not found\");\r\n        }\r\n        const s = node.findDirectExpression(Expressions.Source);\r\n        if (s === undefined) {\r\n            throw new Error(\"FieldAssignment, Source node not found\");\r\n        }\r\n        let type = undefined;\r\n        if (targetType instanceof basic_1.StructureType) {\r\n            type = targetType.getComponentByName(name);\r\n        }\r\n        new source_1.Source().runSyntax(s, scope, filename, type);\r\n    }\r\n}\r\nexports.FieldAssignment = FieldAssignment;\r\n//# sourceMappingURL=field_assignment.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_assignment.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldChain = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst component_name_1 = __webpack_require__(/*! ./component_name */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_name.js\");\r\nconst attribute_name_1 = __webpack_require__(/*! ./attribute_name */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_name.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst field_offset_1 = __webpack_require__(/*! ./field_offset */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_offset.js\");\r\nconst field_length_1 = __webpack_require__(/*! ./field_length */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_length.js\");\r\nconst table_expression_1 = __webpack_require__(/*! ./table_expression */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/table_expression.js\");\r\nclass FieldChain {\r\n    runSyntax(node, scope, filename, refType) {\r\n        const concat = node.concatTokens();\r\n        if (concat.includes(\"-\")) {\r\n            // workaround for names with dashes\r\n            const found = scope.findVariable(concat);\r\n            if (found) {\r\n                if (refType) {\r\n                    scope.addReference(node.getFirstToken(), found, refType, filename);\r\n                }\r\n                return found.getType();\r\n            }\r\n        }\r\n        const children = node.getChildren().slice();\r\n        let contextName = children[0].concatTokens();\r\n        let context = this.findTop(children.shift(), scope, filename, refType);\r\n        while (children.length > 0) {\r\n            contextName += children[0].concatTokens();\r\n            const current = children.shift();\r\n            if (current === undefined) {\r\n                break;\r\n            }\r\n            if (current.get() instanceof tokens_1.Dash) {\r\n                if (context instanceof basic_1.UnknownType) {\r\n                    throw new Error(\"Not a structure, type unknown, FieldChain\");\r\n                }\r\n                else if (!(context instanceof basic_1.StructureType)\r\n                    && !(context instanceof basic_1.TableType && context.isWithHeader())\r\n                    && !(context instanceof basic_1.VoidType)) {\r\n                    if (context instanceof basic_1.TableType && context.isWithHeader() === false) {\r\n                        if (scope.isAllowHeaderUse(contextName.substring(0, contextName.length - 1))) {\r\n                            // FOR ALL ENTRIES workaround\r\n                            context = context.getRowType();\r\n                            if (!(context instanceof basic_1.StructureType) && !(context instanceof basic_1.VoidType)) {\r\n                                context = new basic_1.StructureType([{ name: \"TABLE_LINE\", type: context }]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Table without header, cannot access fields, \" + contextName);\r\n                        }\r\n                    }\r\n                    else {\r\n                        throw new Error(\"Not a structure, FieldChain\");\r\n                    }\r\n                }\r\n            }\r\n            else if (current.get() instanceof tokens_1.InstanceArrow) {\r\n                if (!(context instanceof basic_1.ObjectReferenceType)\r\n                    && !(context instanceof basic_1.DataReference)\r\n                    && !(context instanceof basic_1.VoidType)) {\r\n                    throw new Error(\"Not a object reference, field chain\");\r\n                }\r\n            }\r\n            else if (current.get() instanceof Expressions.ComponentName) {\r\n                context = new component_name_1.ComponentName().runSyntax(context, current);\r\n            }\r\n            else if (current instanceof nodes_1.ExpressionNode\r\n                && current.get() instanceof Expressions.TableExpression) {\r\n                if (!(context instanceof basic_1.TableType) && !(context instanceof basic_1.VoidType)) {\r\n                    throw new Error(\"Table expression, expected table\");\r\n                }\r\n                new table_expression_1.TableExpression().runSyntax(current, scope, filename);\r\n                if (!(context instanceof basic_1.VoidType)) {\r\n                    context = context.getRowType();\r\n                }\r\n            }\r\n            else if (current.get() instanceof Expressions.AttributeName) {\r\n                context = new attribute_name_1.AttributeName().runSyntax(context, current, scope, filename, refType);\r\n            }\r\n            else if (current.get() instanceof Expressions.FieldOffset && current instanceof nodes_1.ExpressionNode) {\r\n                new field_offset_1.FieldOffset().runSyntax(current, scope, filename);\r\n            }\r\n            else if (current.get() instanceof Expressions.FieldLength && current instanceof nodes_1.ExpressionNode) {\r\n                new field_length_1.FieldLength().runSyntax(current, scope, filename);\r\n            }\r\n        }\r\n        return context;\r\n    }\r\n    ////////////////\r\n    findTop(node, scope, filename, type) {\r\n        if (node === undefined) {\r\n            return undefined;\r\n        }\r\n        if (node.get() instanceof Expressions.SourceField\r\n            || node.get() instanceof Expressions.SourceFieldSymbol) {\r\n            const token = node.getFirstToken();\r\n            const name = token.getStr();\r\n            const found = scope.findVariable(name);\r\n            if (found === undefined) {\r\n                throw new Error(name + \" not found, findTop\");\r\n            }\r\n            if (type) {\r\n                scope.addReference(token, found, type, filename);\r\n            }\r\n            if (name.includes(\"~\")) {\r\n                const idef = scope.findInterfaceDefinition(name.split(\"~\")[0]);\r\n                if (idef) {\r\n                    scope.addReference(token, idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                }\r\n            }\r\n            return found.getType();\r\n        }\r\n        if (node.get() instanceof Expressions.ClassName) {\r\n            const classTok = node.getFirstToken();\r\n            const classNam = classTok.getStr();\r\n            if (classNam.toUpperCase() === \"OBJECT\") {\r\n                return new basic_1.GenericObjectReferenceType();\r\n            }\r\n            const found = scope.existsObject(classNam);\r\n            if (found.found === true && found.id) {\r\n                scope.addReference(classTok, found.id, found.type, filename);\r\n                return new basic_1.ObjectReferenceType(found.id);\r\n            }\r\n            else if (scope.getDDIC().inErrorNamespace(classNam) === false) {\r\n                return new basic_1.VoidType(classNam);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown class \" + classNam);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.FieldChain = FieldChain;\r\n//# sourceMappingURL=field_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_length.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_length.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldLength = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass FieldLength {\r\n    runSyntax(node, scope, filename) {\r\n        const field = node.findDirectExpression(Expressions.SourceField);\r\n        if (field) {\r\n            const token = field.getFirstToken();\r\n            const found = scope.findVariable(token.getStr());\r\n            if (found === undefined) {\r\n                throw new Error(\"\\\"\" + field.getFirstToken().getStr() + \"\\\" not found, FieldLength\");\r\n            }\r\n            scope.addReference(token, found, _reference_1.ReferenceType.DataReadReference, filename);\r\n        }\r\n        const symbol = node.findDirectExpression(Expressions.SourceFieldSymbol);\r\n        if (symbol) {\r\n            const token = symbol.getFirstToken();\r\n            const found = scope.findVariable(token.getStr());\r\n            if (found === undefined) {\r\n                throw new Error(\"\\\"\" + symbol.getFirstToken().getStr() + \"\\\" not found, FieldLength\");\r\n            }\r\n            scope.addReference(token, found, _reference_1.ReferenceType.DataReadReference, filename);\r\n        }\r\n    }\r\n}\r\nexports.FieldLength = FieldLength;\r\n//# sourceMappingURL=field_length.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_offset.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_offset.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldOffset = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass FieldOffset {\r\n    runSyntax(node, scope, filename) {\r\n        const field = node.findDirectExpression(Expressions.SourceField);\r\n        if (field) {\r\n            const token = field.getFirstToken();\r\n            const found = scope.findVariable(token.getStr());\r\n            if (found === undefined) {\r\n                throw new Error(\"\\\"\" + field.getFirstToken().getStr() + \"\\\" not found, FieldOffset\");\r\n            }\r\n            scope.addReference(token, found, _reference_1.ReferenceType.DataReadReference, filename);\r\n        }\r\n        const symbol = node.findDirectExpression(Expressions.SourceFieldSymbol);\r\n        if (symbol) {\r\n            const token = symbol.getFirstToken();\r\n            const found = scope.findVariable(token.getStr());\r\n            if (found === undefined) {\r\n                throw new Error(\"\\\"\" + symbol.getFirstToken().getStr() + \"\\\" not found, FieldOffset\");\r\n            }\r\n            scope.addReference(token, found, _reference_1.ReferenceType.DataReadReference, filename);\r\n        }\r\n    }\r\n}\r\nexports.FieldOffset = FieldOffset;\r\n//# sourceMappingURL=field_offset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_offset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/filter_body.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/filter_body.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FilterBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass FilterBody {\r\n    runSyntax(node, scope, filename, targetType) {\r\n        if (node === undefined) {\r\n            return targetType;\r\n        }\r\n        let type = undefined;\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            if (type === undefined) {\r\n                type = new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n            else {\r\n                new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n        }\r\n        return targetType ? targetType : type;\r\n    }\r\n}\r\nexports.FilterBody = FilterBody;\r\n//# sourceMappingURL=filter_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/filter_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/for.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/for.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.For = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_field_definition_1 = __webpack_require__(/*! ./inline_field_definition */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_field_definition.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst inline_loop_definition_1 = __webpack_require__(/*! ./inline_loop_definition */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_loop_definition.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass For {\r\n    runSyntax(node, scope, filename) {\r\n        const inlineLoop = node.findDirectExpressions(Expressions.InlineLoopDefinition);\r\n        const inlineField = node.findAllExpressions(Expressions.InlineFieldDefinition);\r\n        const addScope = inlineLoop.length > 0 || inlineField.length > 0;\r\n        if (addScope) {\r\n            scope.push(_scope_type_1.ScopeType.For, \"FOR\", node.getFirstToken().getStart(), filename);\r\n        }\r\n        for (const s of inlineLoop) {\r\n            new inline_loop_definition_1.InlineLoopDefinition().runSyntax(s, scope, filename);\r\n        }\r\n        for (const f of inlineField) {\r\n            new inline_field_definition_1.InlineFieldDefinition().runSyntax(f, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        /*\r\n        if (addScope) {\r\n          scope.pop(node.getLastToken().getEnd());\r\n        }\r\n        */\r\n    }\r\n}\r\nexports.For = For;\r\n//# sourceMappingURL=for.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/for.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/form_param.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/form_param.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormParam = void 0;\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nclass FormParam {\r\n    runSyntax(node, scope, filename) {\r\n        var _a, _b, _c;\r\n        const nameToken = (_a = node.findFirstExpression(expressions_1.FormParamName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        if (node.findDirectTokenByText(\"STRUCTURE\") && nameToken) {\r\n            // STRUCTURES typing\r\n            const typeName = (_b = node.findDirectExpression(expressions_1.NamespaceSimpleName)) === null || _b === void 0 ? void 0 : _b.getFirstToken().getStr();\r\n            let type = undefined;\r\n            if (typeName) {\r\n                type = (_c = scope.findType(typeName)) === null || _c === void 0 ? void 0 : _c.getType();\r\n                if (type === undefined) {\r\n                    type = scope.getDDIC().lookupTableOrView(typeName);\r\n                }\r\n            }\r\n            else {\r\n                type = new basic_1.UnknownType(\"todo, FORM STRUCTURES typing\");\r\n            }\r\n            return new _typed_identifier_1.TypedIdentifier(nameToken, filename, type, [\"form_parameter\" /* FormParameter */]);\r\n        }\r\n        if (node.getChildren().length === 1 && nameToken) {\r\n            // untyped FORM parameter\r\n            return new _typed_identifier_1.TypedIdentifier(nameToken, filename, new basic_1.AnyType(), [\"form_parameter\" /* FormParameter */]);\r\n        }\r\n        const bfound = new basic_types_1.BasicTypes(filename, scope).parseType(node);\r\n        if (nameToken && bfound) {\r\n            return new _typed_identifier_1.TypedIdentifier(nameToken, filename, bfound, [\"form_parameter\" /* FormParameter */]);\r\n        }\r\n        if (nameToken) {\r\n            return new _typed_identifier_1.TypedIdentifier(nameToken, filename, new basic_1.UnknownType(\"FormParam, todo\"), [\"form_parameter\" /* FormParameter */]);\r\n        }\r\n        throw new Error(\"FormParam, unexpected node\");\r\n    }\r\n}\r\nexports.FormParam = FormParam;\r\n//# sourceMappingURL=form_param.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/form_param.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FSTarget = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_fs_1 = __webpack_require__(/*! ./inline_fs */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_fs.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass FSTarget {\r\n    runSyntax(node, scope, filename, type) {\r\n        const inlinefs = node === null || node === void 0 ? void 0 : node.findDirectExpression(Expressions.InlineFS);\r\n        if (inlinefs) {\r\n            new inline_fs_1.InlineFS().runSyntax(inlinefs, scope, filename, type);\r\n        }\r\n        const target = node === null || node === void 0 ? void 0 : node.findDirectExpression(Expressions.TargetFieldSymbol);\r\n        if (target) {\r\n            const token = target.getFirstToken();\r\n            const found = scope.findVariable(token.getStr());\r\n            if (found === undefined) {\r\n                throw new Error(`\"${token.getStr()}\" not found, FSTarget`);\r\n            }\r\n            scope.addReference(token, found, _reference_1.ReferenceType.DataWriteReference, filename);\r\n        }\r\n    }\r\n}\r\nexports.FSTarget = FSTarget;\r\n//# sourceMappingURL=fstarget.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineData = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass InlineData {\r\n    runSyntax(node, scope, filename, type) {\r\n        var _a;\r\n        const token = (_a = node.findFirstExpression(Expressions.TargetField)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        if (token && type) {\r\n            const identifier = new _typed_identifier_1.TypedIdentifier(token, filename, type, [\"inline\" /* InlineDefinition */]);\r\n            scope.addIdentifier(identifier);\r\n            scope.addReference(token, identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n        }\r\n        else if (token) {\r\n            const message = \"InlineData, could not determine type for \\\"\" + token.getStr() + \"\\\"\";\r\n            const identifier = new _typed_identifier_1.TypedIdentifier(token, filename, new basic_1.UnknownType(message), [\"inline\" /* InlineDefinition */]);\r\n            scope.addIdentifier(identifier);\r\n            scope.addReference(token, identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n        }\r\n    }\r\n}\r\nexports.InlineData = InlineData;\r\n//# sourceMappingURL=inline_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_field_definition.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_field_definition.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineFieldDefinition = void 0;\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass InlineFieldDefinition {\r\n    runSyntax(node, scope, filename) {\r\n        let type = undefined;\r\n        const field = node.findDirectExpression(Expressions.Field);\r\n        if (field === undefined) {\r\n            return;\r\n        }\r\n        const source = node.findDirectExpression(Expressions.Source);\r\n        if (source) {\r\n            type = new source_1.Source().runSyntax(source, scope, filename);\r\n        }\r\n        const typeName = node.findDirectExpression(Expressions.TypeName);\r\n        if (typeName) {\r\n            type = new basic_types_1.BasicTypes(filename, scope).parseType(typeName);\r\n        }\r\n        if (type === undefined) {\r\n            type = new unknown_type_1.UnknownType(\"InlineFieldDefinition, fallback\");\r\n        }\r\n        const identifier = new _typed_identifier_1.TypedIdentifier(field.getFirstToken(), filename, type, [\"inline\" /* InlineDefinition */]);\r\n        scope.addReference(field.getFirstToken(), identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n        scope.addIdentifier(identifier);\r\n    }\r\n}\r\nexports.InlineFieldDefinition = InlineFieldDefinition;\r\n//# sourceMappingURL=inline_field_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_field_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_fs.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_fs.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineFS = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass InlineFS {\r\n    runSyntax(node, scope, filename, type) {\r\n        var _a;\r\n        const token = (_a = node.findFirstExpression(Expressions.TargetFieldSymbol)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        if (token && type) {\r\n            const identifier = new _typed_identifier_1.TypedIdentifier(token, filename, type, [\"inline\" /* InlineDefinition */]);\r\n            scope.addIdentifier(identifier);\r\n            scope.addReference(token, identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n        }\r\n        else if (token) {\r\n            const message = \"InlineFS, could not determine type for \\\"\" + token.getStr() + \"\\\"\";\r\n            const identifier = new _typed_identifier_1.TypedIdentifier(token, filename, new basic_1.UnknownType(message), [\"inline\" /* InlineDefinition */]);\r\n            scope.addIdentifier(identifier);\r\n            scope.addReference(token, identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n        }\r\n    }\r\n}\r\nexports.InlineFS = InlineFS;\r\n//# sourceMappingURL=inline_fs.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_fs.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_loop_definition.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_loop_definition.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineLoopDefinition = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass InlineLoopDefinition {\r\n    runSyntax(node, scope, filename) {\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        let target = node.findDirectExpression(Expressions.TargetField);\r\n        if (target === undefined) {\r\n            target = node.findDirectExpression(Expressions.TargetFieldSymbol);\r\n        }\r\n        const source = node.findDirectExpression(Expressions.Source);\r\n        if (source && target) {\r\n            const sourceType = new source_1.Source().runSyntax(source, scope, filename);\r\n            let rowType = undefined;\r\n            if (sourceType instanceof basic_1.TableType) {\r\n                rowType = sourceType.getRowType();\r\n            }\r\n            else if (sourceType instanceof basic_1.VoidType) {\r\n                rowType = sourceType;\r\n            }\r\n            else if (sourceType instanceof basic_1.UnknownType) {\r\n                throw new Error(\"Unknown type, \" + sourceType.getError());\r\n            }\r\n            if (rowType === undefined) {\r\n                throw new Error(\"InlineLoopDefinition, not a table type\");\r\n            }\r\n            const identifier = new _typed_identifier_1.TypedIdentifier(target.getFirstToken(), filename, rowType, [\"inline\" /* InlineDefinition */]);\r\n            scope.addReference(target.getFirstToken(), identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n            scope.addIdentifier(identifier);\r\n        }\r\n        const index = node.findExpressionAfterToken(\"INTO\");\r\n        if (index && index.get() instanceof Expressions.TargetField) {\r\n            const identifier = new _typed_identifier_1.TypedIdentifier(index.getFirstToken(), filename, new basic_1.IntegerType(), [\"inline\" /* InlineDefinition */]);\r\n            scope.addReference(index.getFirstToken(), identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n            scope.addIdentifier(identifier);\r\n        }\r\n    }\r\n}\r\nexports.InlineLoopDefinition = InlineLoopDefinition;\r\n//# sourceMappingURL=inline_loop_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_loop_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/let.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/let.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Let = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_field_definition_1 = __webpack_require__(/*! ./inline_field_definition */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_field_definition.js\");\r\nclass Let {\r\n    runSyntax(node, scope, filename) {\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        for (const f of node.findDirectExpressions(Expressions.InlineFieldDefinition)) {\r\n            new inline_field_definition_1.InlineFieldDefinition().runSyntax(f, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Let = Let;\r\n//# sourceMappingURL=let.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/let.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/message_source.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/message_source.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessageSource = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass MessageSource {\r\n    runSyntax(node, scope, filename) {\r\n        for (const f of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(f, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.MessageSource = MessageSource;\r\n//# sourceMappingURL=message_source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/message_source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_body.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_body.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodCallBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_parameters_1 = __webpack_require__(/*! ./method_parameters */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_parameters.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass MethodCallBody {\r\n    runSyntax(node, scope, filename, method) {\r\n        const parameters = node.findDirectExpression(Expressions.MethodParameters);\r\n        if (parameters) {\r\n            new method_parameters_1.MethodParameters().runSyntax(parameters, scope, method, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.MethodCallBody = MethodCallBody;\r\n//# sourceMappingURL=method_call_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_chain.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_chain.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodCallChain = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ../_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst new_object_1 = __webpack_require__(/*! ./new_object */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/new_object.js\");\r\nconst cast_1 = __webpack_require__(/*! ./cast */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cast.js\");\r\nconst _builtin_1 = __webpack_require__(/*! ../_builtin */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js\");\r\nconst method_call_param_1 = __webpack_require__(/*! ./method_call_param */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_param.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst component_name_1 = __webpack_require__(/*! ./component_name */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_name.js\");\r\nconst attribute_name_1 = __webpack_require__(/*! ./attribute_name */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_name.js\");\r\nconst class_definition_1 = __webpack_require__(/*! ../../types/class_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/class_definition.js\");\r\nclass MethodCallChain {\r\n    runSyntax(node, scope, filename, targetType) {\r\n        var _a, _b;\r\n        const helper = new _object_oriented_1.ObjectOriented(scope);\r\n        const children = node.getChildren().slice();\r\n        const first = children.shift();\r\n        if (first === undefined) {\r\n            throw new Error(\"MethodCallChain, first child expected\");\r\n        }\r\n        let context = this.findTop(first, scope, targetType, filename);\r\n        if (first.get() instanceof Expressions.MethodCall) {\r\n            children.unshift(first);\r\n        }\r\n        while (children.length > 0) {\r\n            const current = children.shift();\r\n            if (current === undefined) {\r\n                break;\r\n            }\r\n            if (current instanceof nodes_1.ExpressionNode && current.get() instanceof Expressions.MethodCall) {\r\n                // for built-in methods set className to undefined\r\n                const className = context instanceof basic_1.ObjectReferenceType ? context.getIdentifierName() : undefined;\r\n                const methodToken = (_a = current.findDirectExpression(Expressions.MethodName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n                const methodName = methodToken === null || methodToken === void 0 ? void 0 : methodToken.getStr();\r\n                const def = scope.findObjectDefinition(className);\r\n                // eslint-disable-next-line prefer-const\r\n                let { method, def: foundDef } = helper.searchMethodName(def, methodName);\r\n                if (method === undefined && current === first) {\r\n                    method = new _builtin_1.BuiltIn().searchBuiltin(methodName === null || methodName === void 0 ? void 0 : methodName.toUpperCase());\r\n                    if (method) {\r\n                        scope.addReference(methodToken, method, _reference_1.ReferenceType.BuiltinMethodReference, filename);\r\n                    }\r\n                }\r\n                else {\r\n                    const extra = {\r\n                        ooName: foundDef === null || foundDef === void 0 ? void 0 : foundDef.getName(),\r\n                        ooType: foundDef instanceof class_definition_1.ClassDefinition ? \"CLAS\" : \"INTF\"\r\n                    };\r\n                    scope.addReference(methodToken, method, _reference_1.ReferenceType.MethodReference, filename, extra);\r\n                }\r\n                if (methodName === null || methodName === void 0 ? void 0 : methodName.includes(\"~\")) {\r\n                    const name = methodName.split(\"~\")[0];\r\n                    const idef = scope.findInterfaceDefinition(name);\r\n                    if (idef) {\r\n                        scope.addReference(methodToken, idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                    }\r\n                }\r\n                if (method === undefined && (methodName === null || methodName === void 0 ? void 0 : methodName.toUpperCase()) === \"CONSTRUCTOR\") {\r\n                    context = undefined; // todo, this is a workaround, constructors always exists\r\n                }\r\n                else if (method === undefined && !(context instanceof basic_1.VoidType)) {\r\n                    throw new Error(\"Method \\\"\" + methodName + \"\\\" not found, methodCallChain\");\r\n                }\r\n                else if (method) {\r\n                    const ret = (_b = method.getParameters().getReturning()) === null || _b === void 0 ? void 0 : _b.getType();\r\n                    context = ret;\r\n                }\r\n                const param = current.findDirectExpression(Expressions.MethodCallParam);\r\n                if (param && method) {\r\n                    new method_call_param_1.MethodCallParam().runSyntax(param, scope, method, filename);\r\n                }\r\n                else if (param && context instanceof basic_1.VoidType) {\r\n                    new method_call_param_1.MethodCallParam().runSyntax(param, scope, context, filename);\r\n                }\r\n            }\r\n            else if (current instanceof nodes_1.ExpressionNode && current.get() instanceof Expressions.ComponentName) {\r\n                context = new component_name_1.ComponentName().runSyntax(context, current);\r\n            }\r\n            else if (current instanceof nodes_1.ExpressionNode && current.get() instanceof Expressions.AttributeName) {\r\n                context = new attribute_name_1.AttributeName().runSyntax(context, current, scope, filename);\r\n            }\r\n        }\r\n        return context;\r\n    }\r\n    //////////////////////////////////////\r\n    findTop(first, scope, targetType, filename) {\r\n        var _a;\r\n        if (first.get() instanceof Expressions.ClassName) {\r\n            const token = first.getFirstToken();\r\n            const className = token.getStr();\r\n            const classDefinition = scope.findObjectDefinition(className);\r\n            if (classDefinition === undefined && scope.getDDIC().inErrorNamespace(className) === false) {\r\n                const extra = { ooName: className, ooType: \"Void\" };\r\n                scope.addReference(token, undefined, _reference_1.ReferenceType.ObjectOrientedVoidReference, filename, extra);\r\n                return new basic_1.VoidType(className);\r\n            }\r\n            else if (classDefinition === undefined) {\r\n                throw new Error(\"Class \" + className + \" not found\");\r\n            }\r\n            scope.addReference(first.getFirstToken(), classDefinition, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n            return new basic_1.ObjectReferenceType(classDefinition);\r\n        }\r\n        else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.FieldChain) {\r\n            return new field_chain_1.FieldChain().runSyntax(first, scope, filename, _reference_1.ReferenceType.DataReadReference);\r\n        }\r\n        else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.NewObject) {\r\n            return new new_object_1.NewObject().runSyntax(first, scope, targetType, filename);\r\n        }\r\n        else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.Cast) {\r\n            return new cast_1.Cast().runSyntax(first, scope, targetType, filename);\r\n        }\r\n        else {\r\n            const meType = (_a = scope.findVariable(\"me\")) === null || _a === void 0 ? void 0 : _a.getType();\r\n            if (meType) {\r\n                return meType;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.MethodCallChain = MethodCallChain;\r\n//# sourceMappingURL=method_call_chain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_chain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_param.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_param.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodCallParam = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_parameters_1 = __webpack_require__(/*! ./method_parameters */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_parameters.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass MethodCallParam {\r\n    runSyntax(node, scope, method, filename) {\r\n        if (!(node.get() instanceof Expressions.MethodCallParam)) {\r\n            throw new Error(\"MethodCallParam, unexpected input\");\r\n        }\r\n        const children = node.getChildren();\r\n        if (children.length < 2 || children.length > 3) {\r\n            throw new Error(\"MethodCallParam, unexpected child length\");\r\n        }\r\n        const child = children[1];\r\n        if (child.get() instanceof tokens_1.WParenRight || child.get() instanceof tokens_1.WParenRightW) {\r\n            return;\r\n        }\r\n        else if (child instanceof nodes_1.ExpressionNode && child.get() instanceof Expressions.Source) {\r\n            // todo, validate that the method has only one default importing, and types are compatible\r\n            if (!(method instanceof basic_1.VoidType) && method.getParameters().getImporting().length === 0) {\r\n                throw new Error(\"Method \\\"\" + method.getName() + \"\\\" has no importing parameters\");\r\n            }\r\n            let targetType = undefined;\r\n            if (!(method instanceof basic_1.VoidType)) {\r\n                const name = method.getParameters().getDefaultImporting();\r\n                for (const i of method.getParameters().getImporting()) {\r\n                    if (i.getName().toUpperCase() === name) {\r\n                        targetType = i.getType();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                targetType = method;\r\n            }\r\n            const type = new source_1.Source().runSyntax(child, scope, filename, targetType);\r\n            if (type === undefined) {\r\n                throw new Error(\"No source type determined, method source\");\r\n            }\r\n        }\r\n        else if (child instanceof nodes_1.ExpressionNode && child.get() instanceof Expressions.ParameterListS) {\r\n            new method_parameters_1.MethodParameters().checkExporting(child, scope, method, filename);\r\n        }\r\n        else if (child.get() instanceof Expressions.MethodParameters) {\r\n            new method_parameters_1.MethodParameters().runSyntax(child, scope, method, filename);\r\n        }\r\n        else {\r\n            //      console.dir(child);\r\n            throw new Error(\"MethodCallParam, unexpected child\");\r\n        }\r\n    }\r\n}\r\nexports.MethodCallParam = MethodCallParam;\r\n//# sourceMappingURL=method_call_param.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_param.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_def_returning.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_def_returning.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefReturning = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nclass MethodDefReturning {\r\n    runSyntax(node, scope, filename, meta) {\r\n        const name = node.findDirectExpression(Expressions.MethodParamName);\r\n        if (name === undefined) {\r\n            throw new Error(\"method_parameter.ts, todo, handle pass by value and reference\");\r\n        }\r\n        const type = node.findDirectExpression(Expressions.TypeParam);\r\n        if (type === undefined) {\r\n            throw new Error(\"method_parameter.ts, unexpected structure\");\r\n        }\r\n        const found = new basic_types_1.BasicTypes(filename, scope).parseType(type);\r\n        //    console.dir(found);\r\n        if (found) {\r\n            return new _typed_identifier_1.TypedIdentifier(name.getFirstToken(), filename, found, meta);\r\n        }\r\n        else {\r\n            return new _typed_identifier_1.TypedIdentifier(name.getFirstToken(), filename, new basic_1.UnknownType(\"method param, todo\"), meta);\r\n        }\r\n    }\r\n}\r\nexports.MethodDefReturning = MethodDefReturning;\r\n//# sourceMappingURL=method_def_returning.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_def_returning.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_param.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_param.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParam = void 0;\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst default_1 = __webpack_require__(/*! ./default */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/default.js\");\r\nclass MethodParam {\r\n    runSyntax(node, scope, filename, meta) {\r\n        const name = node.findDirectExpression(Expressions.MethodParamName);\r\n        if (name === undefined) {\r\n            throw new Error(\"MethodParam, todo, handle pass by value and reference\");\r\n        }\r\n        const type = node.findDirectExpression(Expressions.TypeParam);\r\n        if (type === undefined) {\r\n            throw new Error(\"MethodParam, unexpected structure\");\r\n        }\r\n        const def = type.findDirectExpression(Expressions.Default);\r\n        if (def) {\r\n            new default_1.Default().runSyntax(def, scope, filename);\r\n        }\r\n        const found = new basic_types_1.BasicTypes(filename, scope).parseType(type);\r\n        if (found) {\r\n            return new _typed_identifier_1.TypedIdentifier(name.getFirstToken(), filename, found, meta);\r\n        }\r\n        else {\r\n            return new _typed_identifier_1.TypedIdentifier(name.getFirstToken(), filename, new basic_1.UnknownType(\"method param, todo\"), meta);\r\n        }\r\n    }\r\n}\r\nexports.MethodParam = MethodParam;\r\n//# sourceMappingURL=method_param.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_param.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_parameters.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_parameters.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParameters = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ./inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst target_1 = __webpack_require__(/*! ./target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass MethodParameters {\r\n    runSyntax(node, scope, method, filename) {\r\n        var _a;\r\n        if (!(node.get() instanceof Expressions.MethodParameters)) {\r\n            throw new Error(\"MethodParameters, unexpected input\");\r\n        }\r\n        const children = node.getChildren().slice();\r\n        while (children.length > 0) {\r\n            const name = (_a = children.shift()) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr().toUpperCase();\r\n            switch (name) {\r\n                case \"EXPORTING\":\r\n                    this.checkExporting(children.shift(), scope, method, filename);\r\n                    break;\r\n                case \"IMPORTING\":\r\n                    this.checkImporting(children.shift(), scope, method, filename);\r\n                    break;\r\n                case \"CHANGING\":\r\n                    this.checkChanging(children.shift(), scope, method, filename);\r\n                    break;\r\n                case \"RECEIVING\":\r\n                    this.checkReceiving(children.shift(), scope, method, filename);\r\n                    break;\r\n                case \"EXCEPTIONS\":\r\n                    children.shift(); // todo, old style exceptions\r\n                    break;\r\n                default:\r\n                    throw new Error(\"MethodParameters, unexpected token, \" + name);\r\n            }\r\n        }\r\n    }\r\n    ///////////////////////\r\n    checkReceiving(node, scope, method, filename) {\r\n        var _a;\r\n        const type = method instanceof basic_1.VoidType ? method : (_a = method.getParameters().getReturning()) === null || _a === void 0 ? void 0 : _a.getType();\r\n        if (type === undefined) {\r\n            throw new Error(\"Method does not have a returning parameter\");\r\n        }\r\n        else if (!(node instanceof nodes_1.ExpressionNode)) {\r\n            throw new Error(\"checkReceiving, not an expression node\");\r\n        }\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        const inline = target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, type);\r\n        }\r\n        else if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n    }\r\n    checkImporting(node, scope, method, filename) {\r\n        for (const item of this.parameterListT(node, scope, filename)) {\r\n            let parameterType = undefined;\r\n            if (method instanceof basic_1.VoidType) {\r\n                parameterType = method;\r\n            }\r\n            else {\r\n                const parameter = method.getParameters().getExporting().find(p => p.getName().toUpperCase() === item.name);\r\n                if (parameter === undefined) {\r\n                    throw new Error(\"Method exporting parameter \\\"\" + item.name + \"\\\" does not exist\");\r\n                }\r\n                parameterType = parameter.getType();\r\n            }\r\n            const inline = item.target.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, parameterType);\r\n            }\r\n            else if (item.targetType === undefined) {\r\n                throw new Error(\"Could not determine target type\");\r\n            }\r\n            else if (item.targetType) {\r\n                // todo, check that targetType and parameterType are compatible\r\n            }\r\n        }\r\n    }\r\n    checkChanging(node, scope, method, filename) {\r\n        for (const item of this.parameterListT(node, scope, filename)) {\r\n            let parameterType = undefined;\r\n            if (method instanceof basic_1.VoidType) {\r\n                parameterType = method;\r\n            }\r\n            else {\r\n                const parameter = method.getParameters().getChanging().find(p => p.getName().toUpperCase() === item.name);\r\n                if (parameter === undefined) {\r\n                    throw new Error(\"Method changing parameter \\\"\" + item.name + \"\\\" does not exist\");\r\n                }\r\n                parameterType = parameter.getType();\r\n            }\r\n            if (item.targetType) {\r\n                // todo, check that targetType and parameterType are compatible\r\n                if (false) {}\r\n            }\r\n        }\r\n    }\r\n    checkExporting(node, scope, method, filename) {\r\n        for (const item of this.parameterListS(node, scope, filename, method)) {\r\n            let parameterType = undefined;\r\n            if (method instanceof basic_1.VoidType) {\r\n                parameterType = method;\r\n            }\r\n            else {\r\n                const parameter = method.getParameters().getImporting().find(p => p.getName().toUpperCase() === item.name);\r\n                if (parameter === undefined) {\r\n                    throw new Error(\"Method importing parameter \\\"\" + item.name + \"\\\" does not exist\");\r\n                }\r\n                parameterType = parameter.getType();\r\n            }\r\n            // todo, check that targetType and parameterType are compatible\r\n            if (false) {}\r\n        }\r\n    }\r\n    parameterListS(node, scope, filename, method) {\r\n        var _a;\r\n        if (node === undefined) {\r\n            return [];\r\n        }\r\n        else if (!(node.get() instanceof Expressions.ParameterListS)) {\r\n            throw new Error(\"parameterListS, unexpected node\");\r\n        }\r\n        const ret = [];\r\n        for (const c of node.getChildren()) {\r\n            if (!(c.get() instanceof Expressions.ParameterS) || !(c instanceof nodes_1.ExpressionNode)) {\r\n                throw new Error(\"parameterListS, unexpected node, child\");\r\n            }\r\n            const name = (_a = c.findDirectExpression(Expressions.ParameterName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr().toUpperCase();\r\n            if (name === undefined) {\r\n                throw new Error(\"parameterListS, no name determined\");\r\n            }\r\n            const source = c.findDirectExpression(Expressions.Source);\r\n            if (source === undefined) {\r\n                throw new Error(\"parameterListS, no source found\");\r\n            }\r\n            let targetType = undefined;\r\n            if (!(method instanceof basic_1.VoidType)) {\r\n                for (const i of method.getParameters().getImporting()) {\r\n                    if (i.getName().toUpperCase() === name) {\r\n                        targetType = i.getType();\r\n                    }\r\n                }\r\n            }\r\n            let sourceType = new source_1.Source().runSyntax(source, scope, filename, targetType);\r\n            if (sourceType === undefined) {\r\n                if (method instanceof basic_1.VoidType) {\r\n                    sourceType = method;\r\n                }\r\n                else {\r\n                    throw new Error(\"No source type determined for parameter \" + name + \" input\");\r\n                }\r\n            }\r\n            ret.push({ name, source, sourceType });\r\n        }\r\n        return ret;\r\n    }\r\n    parameterListT(node, scope, filename) {\r\n        var _a;\r\n        if (node === undefined) {\r\n            return [];\r\n        }\r\n        else if (!(node.get() instanceof Expressions.ParameterListT)) {\r\n            throw new Error(\"parameterListT, unexpected node\");\r\n        }\r\n        const ret = [];\r\n        for (const c of node.getChildren()) {\r\n            if (!(c.get() instanceof Expressions.ParameterT) || !(c instanceof nodes_1.ExpressionNode)) {\r\n                throw new Error(\"parameterListT, unexpected node, child\");\r\n            }\r\n            const name = (_a = c.findDirectExpression(Expressions.ParameterName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr().toUpperCase();\r\n            if (name === undefined) {\r\n                throw new Error(\"parameterListT, no name determined\");\r\n            }\r\n            const target = c.findDirectExpression(Expressions.Target);\r\n            if (target === undefined) {\r\n                throw new Error(\"parameterListT, no target found\");\r\n            }\r\n            const targetType = new target_1.Target().runSyntax(target, scope, filename);\r\n            ret.push({ name, target, targetType });\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.MethodParameters = MethodParameters;\r\n//# sourceMappingURL=method_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_source.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_source.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodSource = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nconst method_call_chain_1 = __webpack_require__(/*! ./method_call_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_chain.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst types_1 = __webpack_require__(/*! ../../types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass MethodSource {\r\n    runSyntax(node, scope, filename) {\r\n        const context = new method_call_chain_1.MethodCallChain().runSyntax(node, scope, filename);\r\n        const last = node.getLastChild();\r\n        const first = node.getFirstChild();\r\n        if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.Dynamic) {\r\n            new dynamic_1.Dynamic().runSyntax(first, scope, filename);\r\n        }\r\n        else if (last instanceof nodes_1.ExpressionNode && last.get() instanceof Expressions.MethodName) {\r\n            if (context instanceof basic_1.ObjectReferenceType) {\r\n                const id = context.getIdentifier();\r\n                if (id instanceof types_1.ClassDefinition) {\r\n                    const method = id.getMethodDefinitions().getByName(last.concatTokens());\r\n                    const extra = {\r\n                        ooName: id.getName(),\r\n                        ooType: \"CLAS\"\r\n                    };\r\n                    scope.addReference(last.getFirstToken(), method, _reference_1.ReferenceType.MethodReference, filename, extra);\r\n                }\r\n            }\r\n            else if (context instanceof basic_1.VoidType) {\r\n                return;\r\n            }\r\n            else {\r\n                throw new Error(\"MethodSource, not a object reference, \" + node.concatTokens());\r\n            }\r\n        }\r\n        else if (last instanceof nodes_1.ExpressionNode && last.get() instanceof Expressions.Dynamic) {\r\n            new dynamic_1.Dynamic().runSyntax(last, scope, filename);\r\n        }\r\n        else {\r\n            throw new Error(\"MethodSource, unexpected node\");\r\n        }\r\n        /*\r\n        const chain = node.findDirectExpression(Expressions.FieldChain);\r\n        if (chain) {\r\n          new FieldChain().runSyntax(chain, scope, filename, ReferenceType.DataReadReference);\r\n        }\r\n    \r\n        for (const d of node.findAllExpressions(Expressions.Dynamic)) {\r\n          new Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        */\r\n    }\r\n}\r\nexports.MethodSource = MethodSource;\r\n//# sourceMappingURL=method_source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/new_object.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/new_object.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NewObject = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ../_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst method_parameters_1 = __webpack_require__(/*! ./method_parameters */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_parameters.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nclass NewObject {\r\n    runSyntax(node, scope, targetType, filename) {\r\n        let ret = undefined;\r\n        const typeExpr = node.findDirectExpression(Expressions.TypeNameOrInfer);\r\n        const typeToken = typeExpr === null || typeExpr === void 0 ? void 0 : typeExpr.getFirstToken();\r\n        const typeName = typeExpr === null || typeExpr === void 0 ? void 0 : typeExpr.concatTokens();\r\n        if (typeName === undefined) {\r\n            throw new Error(\"NewObject, child TypeNameOrInfer not found\");\r\n        }\r\n        else if (typeName === \"#\" && targetType && targetType instanceof basic_1.ObjectReferenceType) {\r\n            scope.addReference(typeToken, targetType.getIdentifier(), _reference_1.ReferenceType.InferredType, filename);\r\n            ret = targetType;\r\n            const clas = scope.findClassDefinition(targetType.getIdentifierName());\r\n            if ((clas === null || clas === void 0 ? void 0 : clas.isAbstract()) === true) {\r\n                throw new Error(clas.getName() + \" is abstract, cannot be instantiated\");\r\n            }\r\n        }\r\n        else if (typeName === \"#\" && targetType) {\r\n            ret = targetType;\r\n        }\r\n        else if (typeName === \"#\") {\r\n            throw new Error(\"NewObject, todo, infer type\");\r\n        }\r\n        if (ret === undefined) {\r\n            const objDefinition = scope.findObjectDefinition(typeName);\r\n            if (objDefinition) {\r\n                scope.addReference(typeToken, objDefinition, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                const objref = new basic_1.ObjectReferenceType(objDefinition);\r\n                const clas = scope.findClassDefinition(objref.getIdentifierName());\r\n                if ((clas === null || clas === void 0 ? void 0 : clas.isAbstract()) === true) {\r\n                    throw new Error(clas.getName() + \" is abstract, cannot be instantiated\");\r\n                }\r\n                ret = objref;\r\n            }\r\n        }\r\n        if (ret === undefined) {\r\n            const basic = new basic_types_1.BasicTypes(filename, scope);\r\n            const type = basic.resolveTypeName(typeExpr);\r\n            if (type instanceof basic_1.UnknownType) {\r\n                ret = type;\r\n            }\r\n            else if (type && !(type instanceof basic_1.VoidType)) {\r\n                ret = new basic_1.DataReference(type);\r\n            }\r\n            else if (type instanceof basic_1.VoidType) {\r\n                ret = type;\r\n            }\r\n            else {\r\n                throw new Error(\"Type \\\"\" + typeName + \"\\\" not found in scope, NewObject\");\r\n            }\r\n        }\r\n        if (ret instanceof basic_1.ObjectReferenceType) {\r\n            this.parameters(node, ret, scope, filename);\r\n        }\r\n        else {\r\n            for (const s of node.findAllExpressions(Expressions.Source)) {\r\n                new source_1.Source().runSyntax(s, scope, filename, ret);\r\n            }\r\n        }\r\n        if (ret instanceof basic_1.UnknownType && scope.getDDIC().inErrorNamespace(typeName) === true) {\r\n            throw new Error(\"Class or type \\\"\" + typeName + \"\\\" not found\");\r\n        }\r\n        return ret;\r\n    }\r\n    parameters(node, obj, scope, filename) {\r\n        const name = obj.getIdentifier().getName();\r\n        const def = scope.findObjectDefinition(name);\r\n        const helper = new _object_oriented_1.ObjectOriented(scope);\r\n        // eslint-disable-next-line prefer-const\r\n        let { method } = helper.searchMethodName(def, \"CONSTRUCTOR\");\r\n        const source = node.findDirectExpression(Expressions.Source);\r\n        const parameters = node.findDirectExpression(Expressions.ParameterListS);\r\n        if (source) {\r\n            // single unnamed parameter\r\n            const type = this.defaultImportingType(method);\r\n            if (type === undefined) {\r\n                throw new Error(\"NewObject, no default importing parameter found for constructor, \" + name);\r\n            }\r\n            new source_1.Source().runSyntax(source, scope, filename, type);\r\n        }\r\n        else if (parameters) {\r\n            // parameters with names\r\n            if (method === undefined) {\r\n                throw new Error(\"NewObject, no parameters for constructor found, \" + name);\r\n            }\r\n            new method_parameters_1.MethodParameters().checkExporting(parameters, scope, method, filename);\r\n        }\r\n        // else: no paramters, and the constructor always exist\r\n    }\r\n    defaultImportingType(method) {\r\n        let targetType = undefined;\r\n        if (method === undefined) {\r\n            return undefined;\r\n        }\r\n        const name = method.getParameters().getDefaultImporting();\r\n        for (const i of method.getParameters().getImporting()) {\r\n            if (i.getName().toUpperCase() === name) {\r\n                targetType = i.getType();\r\n            }\r\n        }\r\n        return targetType;\r\n    }\r\n}\r\nexports.NewObject = NewObject;\r\n//# sourceMappingURL=new_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/new_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/reduce_body.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/reduce_body.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReduceBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst for_1 = __webpack_require__(/*! ./for */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/for.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst inline_field_definition_1 = __webpack_require__(/*! ./inline_field_definition */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_field_definition.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass ReduceBody {\r\n    runSyntax(node, scope, filename) {\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        for (const i of node.findDirectExpressions(Expressions.InlineFieldDefinition)) {\r\n            new inline_field_definition_1.InlineFieldDefinition().runSyntax(i, scope, filename);\r\n        }\r\n        const forNode = node.findDirectExpression(Expressions.For);\r\n        if (forNode) {\r\n            new for_1.For().runSyntax(forNode, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        if (scope.getType() === _scope_type_1.ScopeType.For) {\r\n            scope.pop(node.getLastToken().getEnd());\r\n        }\r\n        return new unknown_type_1.UnknownType(\"todo, ReduceBody\");\r\n    }\r\n}\r\nexports.ReduceBody = ReduceBody;\r\n//# sourceMappingURL=reduce_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/reduce_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Select = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ./inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst target_1 = __webpack_require__(/*! ./target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst sql_from_1 = __webpack_require__(/*! ./sql_from */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_from.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst sql_for_all_entries_1 = __webpack_require__(/*! ./sql_for_all_entries */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_for_all_entries.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass Select {\r\n    runSyntax(node, scope, filename) {\r\n        var _a, _b;\r\n        const token = node.getFirstToken();\r\n        const from = node.findDirectExpression(Expressions.SQLFrom);\r\n        if (from) {\r\n            new sql_from_1.SQLFrom().runSyntax(from, scope, filename);\r\n        }\r\n        for (const inline of node.findAllExpressions(Expressions.InlineData)) {\r\n            // todo, for now these are voided\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.VoidType(\"SELECT_todo\"));\r\n        }\r\n        const fae = node.findDirectExpression(Expressions.SQLForAllEntries);\r\n        if (fae) {\r\n            scope.push(_scope_type_1.ScopeType.OpenSQL, \"SELECT\", token.getStart(), filename);\r\n            new sql_for_all_entries_1.SQLForAllEntries().runSyntax(fae, scope, filename);\r\n        }\r\n        for (const t of node.findAllExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        // check implicit into, the target field is implict equal to the table name\r\n        if (node.findDirectExpression(Expressions.SQLIntoTable) === undefined\r\n            && node.findDirectExpression(Expressions.SQLIntoStructure) === undefined) {\r\n            const fields = (_a = node.findFirstExpression(Expressions.SQLAggregation)) === null || _a === void 0 ? void 0 : _a.concatTokens();\r\n            const c = new RegExp(/^count\\(\\s*\\*\\s*\\)$/, \"i\");\r\n            if (fields === undefined || c.test(fields) === false) {\r\n                const name = (_b = from === null || from === void 0 ? void 0 : from.findDirectExpression(Expressions.SQLFromSource)) === null || _b === void 0 ? void 0 : _b.concatTokens();\r\n                if (name && scope.findVariable(name) === undefined) {\r\n                    throw new Error(`Target variable ${name} not found in scope`);\r\n                }\r\n            }\r\n        }\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        if (scope.getType() === _scope_type_1.ScopeType.OpenSQL) {\r\n            scope.pop(node.getLastToken().getEnd());\r\n        }\r\n    }\r\n}\r\nexports.Select = Select;\r\n//# sourceMappingURL=select.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select_loop.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select_loop.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectLoop = void 0;\r\nconst select_1 = __webpack_require__(/*! ./select */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select.js\");\r\nclass SelectLoop {\r\n    runSyntax(node, scope, filename) {\r\n        // try using the other Select, they should look very much the same\r\n        new select_1.Select().runSyntax(node, scope, filename);\r\n    }\r\n}\r\nexports.SelectLoop = SelectLoop;\r\n//# sourceMappingURL=select_loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select_loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Source = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_call_chain_1 = __webpack_require__(/*! ./method_call_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_chain.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ./field_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst constant_1 = __webpack_require__(/*! ./constant */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/constant.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst component_chain_1 = __webpack_require__(/*! ./component_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_chain.js\");\r\nconst string_template_1 = __webpack_require__(/*! ./string_template */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/string_template.js\");\r\nconst value_body_1 = __webpack_require__(/*! ./value_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/value_body.js\");\r\nconst cond_1 = __webpack_require__(/*! ./cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nconst reduce_body_1 = __webpack_require__(/*! ./reduce_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/reduce_body.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst switch_body_1 = __webpack_require__(/*! ./switch_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/switch_body.js\");\r\nconst cond_body_1 = __webpack_require__(/*! ./cond_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond_body.js\");\r\nconst conv_body_1 = __webpack_require__(/*! ./conv_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/conv_body.js\");\r\nconst filter_body_1 = __webpack_require__(/*! ./filter_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/filter_body.js\");\r\nconst corresponding_body_1 = __webpack_require__(/*! ./corresponding_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/corresponding_body.js\");\r\nconst _builtin_1 = __webpack_require__(/*! ../_builtin */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js\");\r\nconst attribute_chain_1 = __webpack_require__(/*! ./attribute_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_chain.js\");\r\nconst dereference_1 = __webpack_require__(/*! ./dereference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dereference.js\");\r\n/*\r\n* Type interference, valid scenarios:\r\n* typed = VALUE #( ... ).         right hand side must follow left hand type\r\n* DATA(bar) = VALUE type( ... ).  left gets the type of rigthand\r\n* typed = VALUE type( ... ).      types must match and be compatible???\r\n************* ERRORS *********\r\n* VALUE #( ... ).                 syntax error\r\n* DATA(bar) = VALUE #( ... ).     give error, no type can be derived\r\n*/\r\nclass Source {\r\n    runSyntax(node, scope, filename, targetType) {\r\n        if (node === undefined) {\r\n            return undefined;\r\n        }\r\n        const children = node.getChildren().slice();\r\n        let first = children.shift();\r\n        if (first instanceof nodes_1.TokenNode) {\r\n            const token = first.getFirstToken();\r\n            const tok = token.getStr().toUpperCase();\r\n            switch (tok) {\r\n                case \"(\":\r\n                case \"-\":\r\n                    break;\r\n                case \"BOOLC\":\r\n                    {\r\n                        const method = new _builtin_1.BuiltIn().searchBuiltin(tok);\r\n                        scope.addReference(token, method, _reference_1.ReferenceType.BuiltinMethodReference, filename);\r\n                        new cond_1.Cond().runSyntax(node.findDirectExpression(Expressions.Cond), scope, filename);\r\n                        return new basic_1.StringType();\r\n                    }\r\n                case \"XSDBOOL\":\r\n                    {\r\n                        const method = new _builtin_1.BuiltIn().searchBuiltin(tok);\r\n                        scope.addReference(token, method, _reference_1.ReferenceType.BuiltinMethodReference, filename);\r\n                        new cond_1.Cond().runSyntax(node.findDirectExpression(Expressions.Cond), scope, filename);\r\n                        return new basic_1.CharacterType(1);\r\n                    }\r\n                case \"REDUCE\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        const bodyType = new reduce_body_1.ReduceBody().runSyntax(node.findDirectExpression(Expressions.ReduceBody), scope, filename);\r\n                        return foundType ? foundType : bodyType;\r\n                    }\r\n                case \"SWITCH\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        new switch_body_1.SwitchBody().runSyntax(node.findDirectExpression(Expressions.SwitchBody), scope, filename);\r\n                        return foundType;\r\n                    }\r\n                case \"COND\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        return new cond_body_1.CondBody().runSyntax(node.findDirectExpression(Expressions.CondBody), scope, filename, foundType);\r\n                    }\r\n                case \"CONV\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        new conv_body_1.ConvBody().runSyntax(node.findDirectExpression(Expressions.ConvBody), scope, filename);\r\n                        return foundType;\r\n                    }\r\n                case \"REF\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        const s = new Source().runSyntax(node.findDirectExpression(Expressions.Source), scope, filename);\r\n                        if (foundType === undefined && s) {\r\n                            return new basic_1.DataReference(s);\r\n                        }\r\n                        else {\r\n                            return foundType;\r\n                        }\r\n                    }\r\n                case \"FILTER\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        return new filter_body_1.FilterBody().runSyntax(node.findDirectExpression(Expressions.FilterBody), scope, filename, foundType);\r\n                    }\r\n                case \"CORRESPONDING\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        return new corresponding_body_1.CorrespondingBody().runSyntax(node.findDirectExpression(Expressions.CorrespondingBody), scope, filename, foundType);\r\n                    }\r\n                case \"EXACT\":\r\n                    return this.determineType(node, scope, filename, targetType);\r\n                case \"VALUE\":\r\n                    {\r\n                        const foundType = this.determineType(node, scope, filename, targetType);\r\n                        return new value_body_1.ValueBody().runSyntax(node.findDirectExpression(Expressions.ValueBody), scope, filename, foundType);\r\n                    }\r\n                default:\r\n                    return new unknown_type_1.UnknownType(\"todo, Source type \" + tok);\r\n            }\r\n        }\r\n        else if (first === undefined || !(first instanceof nodes_1.ExpressionNode)) {\r\n            return undefined;\r\n        }\r\n        let context = new unknown_type_1.UnknownType(\"todo, Source type\");\r\n        while (children.length >= 0) {\r\n            if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.MethodCallChain) {\r\n                context = new method_call_chain_1.MethodCallChain().runSyntax(first, scope, filename, targetType);\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.FieldChain) {\r\n                context = new field_chain_1.FieldChain().runSyntax(first, scope, filename, _reference_1.ReferenceType.DataReadReference);\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.StringTemplate) {\r\n                context = new string_template_1.StringTemplate().runSyntax(first, scope, filename);\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.Source) {\r\n                context = new Source().runSyntax(first, scope, filename);\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.Constant) {\r\n                context = new constant_1.Constant().runSyntax(first);\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.Dereference) {\r\n                context = new dereference_1.Dereference().runSyntax(context);\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.ArrowOrDash) {\r\n                //        console.dir(\"dash\");\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.ComponentChain) {\r\n                context = new component_chain_1.ComponentChain().runSyntax(context, first);\r\n            }\r\n            else if (first instanceof nodes_1.ExpressionNode && first.get() instanceof Expressions.AttributeChain) {\r\n                context = new attribute_chain_1.AttributeChain().runSyntax(context, first, scope, filename, _reference_1.ReferenceType.DataReadReference);\r\n            }\r\n            first = children.shift();\r\n            if (first === undefined) {\r\n                break;\r\n            }\r\n        }\r\n        return context;\r\n    }\r\n    ////////////////////////////////\r\n    determineType(node, scope, filename, targetType) {\r\n        const basic = new basic_types_1.BasicTypes(filename, scope);\r\n        const typeExpression = node.findFirstExpression(Expressions.TypeNameOrInfer);\r\n        const typeToken = typeExpression === null || typeExpression === void 0 ? void 0 : typeExpression.getFirstToken();\r\n        const typeName = typeToken === null || typeToken === void 0 ? void 0 : typeToken.getStr();\r\n        if (typeExpression === undefined) {\r\n            throw new Error(\"determineType, child TypeNameOrInfer not found\");\r\n        }\r\n        else if (typeName === \"#\" && targetType) {\r\n            const found = basic.lookupQualifiedName(targetType.getQualifiedName());\r\n            if (found) {\r\n                scope.addReference(typeToken, found, _reference_1.ReferenceType.InferredType, filename);\r\n            }\r\n            return targetType;\r\n        }\r\n        if (typeName !== \"#\") {\r\n            const found = basic.parseType(typeExpression);\r\n            if (found === undefined && scope.getDDIC().inErrorNamespace(typeName) === false) {\r\n                return new basic_1.VoidType(typeName);\r\n            }\r\n            else if (found === undefined) {\r\n                throw new Error(\"Type \\\"\" + typeName + \"\\\" not found in scope, VALUE\");\r\n            }\r\n            return found;\r\n        }\r\n        return targetType;\r\n    }\r\n}\r\nexports.Source = Source;\r\n//# sourceMappingURL=source.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_for_all_entries.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_for_all_entries.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLForAllEntries = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass SQLForAllEntries {\r\n    runSyntax(node, scope, filename) {\r\n        const s = node.findFirstExpression(Expressions.Source);\r\n        if (s) {\r\n            const type = new source_1.Source().runSyntax(s, scope, filename);\r\n            if (type instanceof basic_1.VoidType) {\r\n                return;\r\n            }\r\n            if (!(type instanceof basic_1.TableType)) {\r\n                throw new Error(\"FAE parameter must be table type\");\r\n            }\r\n            const name = s.concatTokens();\r\n            scope.setAllowHeaderUse(name);\r\n        }\r\n    }\r\n}\r\nexports.SQLForAllEntries = SQLForAllEntries;\r\n//# sourceMappingURL=sql_for_all_entries.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_for_all_entries.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_from.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_from.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLFrom = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ./dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nconst database_table_1 = __webpack_require__(/*! ./database_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js\");\r\nclass SQLFrom {\r\n    runSyntax(node, scope, filename) {\r\n        const fromList = node.findAllExpressions(Expressions.SQLFromSource);\r\n        for (const from of fromList) {\r\n            for (const d of from.findAllExpressions(Expressions.Dynamic)) {\r\n                new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n            }\r\n            const dbtab = from.findFirstExpression(Expressions.DatabaseTable);\r\n            if (dbtab !== undefined) {\r\n                new database_table_1.DatabaseTable().runSyntax(dbtab, scope, filename);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.SQLFrom = SQLFrom;\r\n//# sourceMappingURL=sql_from.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/sql_from.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/string_template.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/string_template.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StringTemplate = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass StringTemplate {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        return new basic_1.StringType();\r\n    }\r\n}\r\nexports.StringTemplate = StringTemplate;\r\n//# sourceMappingURL=string_template.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/string_template.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/switch_body.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/switch_body.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SwitchBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass SwitchBody {\r\n    runSyntax(node, scope, filename) {\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SwitchBody = SwitchBody;\r\n//# sourceMappingURL=switch_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/switch_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/table_expression.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/table_expression.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TableExpression = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass TableExpression {\r\n    runSyntax(node, scope, filename) {\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.TableExpression = TableExpression;\r\n//# sourceMappingURL=table_expression.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/table_expression.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Target = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst component_name_1 = __webpack_require__(/*! ./component_name */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_name.js\");\r\nconst attribute_name_1 = __webpack_require__(/*! ./attribute_name */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/attribute_name.js\");\r\nconst field_offset_1 = __webpack_require__(/*! ./field_offset */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_offset.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst table_expression_1 = __webpack_require__(/*! ./table_expression */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/table_expression.js\");\r\nclass Target {\r\n    runSyntax(node, scope, filename) {\r\n        const concat = node.concatTokens();\r\n        if (concat.includes(\"-\")) {\r\n            // workaround for names with dashes\r\n            const found = scope.findVariable(concat);\r\n            if (found) {\r\n                scope.addReference(node.getFirstToken(), found, _reference_1.ReferenceType.DataWriteReference, filename);\r\n                return found.getType();\r\n            }\r\n        }\r\n        const children = node.getChildren().slice();\r\n        const first = children.shift();\r\n        if (first === undefined || !(first instanceof nodes_1.ExpressionNode)) {\r\n            return undefined;\r\n        }\r\n        let context = this.findTop(first, scope, filename);\r\n        if (context === undefined) {\r\n            throw new Error(`\"${first.getFirstToken().getStr()}\" not found, Target`);\r\n        }\r\n        while (children.length > 0) {\r\n            const current = children.shift();\r\n            if (current === undefined) {\r\n                break;\r\n            }\r\n            if (current.get() instanceof tokens_1.Dash) {\r\n                if (context instanceof unknown_type_1.UnknownType) {\r\n                    throw new Error(\"Not a structure, type unknown, target\");\r\n                }\r\n                else if (!(context instanceof basic_1.StructureType)\r\n                    && !(context instanceof basic_1.TableType && context.isWithHeader() && context.getRowType() instanceof basic_1.StructureType)\r\n                    && !(context instanceof basic_1.TableType && context.isWithHeader() && context.getRowType() instanceof basic_1.VoidType)\r\n                    && !(context instanceof basic_1.VoidType)) {\r\n                    throw new Error(\"Not a structure, target\");\r\n                }\r\n            }\r\n            else if (current.get() instanceof tokens_1.InstanceArrow) {\r\n                if (!(context instanceof basic_1.ObjectReferenceType)\r\n                    && !(context instanceof basic_1.DataReference)\r\n                    && !(context instanceof basic_1.VoidType)) {\r\n                    throw new Error(\"Not a object reference, target\");\r\n                }\r\n            }\r\n            else if (current.get() instanceof Expressions.ComponentName) {\r\n                context = new component_name_1.ComponentName().runSyntax(context, current);\r\n            }\r\n            else if (current.get() instanceof Expressions.TableBody) {\r\n                if (!(context instanceof basic_1.TableType)\r\n                    && !(context instanceof basic_1.VoidType)\r\n                    && !(context instanceof unknown_type_1.UnknownType)\r\n                    && !(context instanceof unknown_type_1.UnknownType)) {\r\n                    throw new Error(\"Not a internal table, \\\"[]\\\"\");\r\n                }\r\n                if (context instanceof basic_1.TableType && context.isWithHeader()) {\r\n                    context = new basic_1.TableType(context.getRowType(), Object.assign(Object.assign({}, context.getOptions()), { withHeader: false }));\r\n                }\r\n            }\r\n            else if (current instanceof nodes_1.ExpressionNode\r\n                && current.get() instanceof Expressions.TableExpression) {\r\n                if (!(context instanceof basic_1.TableType) && !(context instanceof basic_1.VoidType)) {\r\n                    throw new Error(\"Table expression, expected table\");\r\n                }\r\n                new table_expression_1.TableExpression().runSyntax(current, scope, filename);\r\n                if (!(context instanceof basic_1.VoidType)) {\r\n                    context = context.getRowType();\r\n                }\r\n            }\r\n            else if (current.get() instanceof Expressions.AttributeName) {\r\n                const type = children.length === 0 ? _reference_1.ReferenceType.DataWriteReference : _reference_1.ReferenceType.DataReadReference;\r\n                context = new attribute_name_1.AttributeName().runSyntax(context, current, scope, filename, type);\r\n            }\r\n        }\r\n        const offset = node.findDirectExpression(Expressions.FieldOffset);\r\n        if (offset) {\r\n            new field_offset_1.FieldOffset().runSyntax(offset, scope, filename);\r\n        }\r\n        return context;\r\n    }\r\n    /////////////////////////////////\r\n    findTop(node, scope, filename) {\r\n        if (node === undefined) {\r\n            return undefined;\r\n        }\r\n        const token = node.getFirstToken();\r\n        const name = token.getStr();\r\n        if (node.get() instanceof Expressions.TargetField\r\n            || node.get() instanceof Expressions.TargetFieldSymbol) {\r\n            const found = scope.findVariable(name);\r\n            if (found) {\r\n                scope.addReference(token, found, _reference_1.ReferenceType.DataWriteReference, filename);\r\n            }\r\n            if (name.includes(\"~\")) {\r\n                const idef = scope.findInterfaceDefinition(name.split(\"~\")[0]);\r\n                if (idef) {\r\n                    scope.addReference(token, idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                }\r\n            }\r\n            return found === null || found === void 0 ? void 0 : found.getType();\r\n        }\r\n        else if (node.get() instanceof Expressions.ClassName) {\r\n            const found = scope.findObjectDefinition(name);\r\n            if (found) {\r\n                scope.addReference(token, found, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                return new basic_1.ObjectReferenceType(found);\r\n            }\r\n            else if (scope.getDDIC().inErrorNamespace(name) === false) {\r\n                scope.addReference(token, undefined, _reference_1.ReferenceType.ObjectOrientedVoidReference, filename, { ooName: name, ooType: \"CLAS\" });\r\n                return new basic_1.VoidType(name);\r\n            }\r\n            else {\r\n                return new unknown_type_1.UnknownType(name + \" unknown, Target\");\r\n            }\r\n        }\r\n        return new unknown_type_1.UnknownType(\"unknown target type\");\r\n    }\r\n}\r\nexports.Target = Target;\r\n//# sourceMappingURL=target.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/type_table.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/type_table.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeTable = void 0;\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass TypeTable {\r\n    runSyntax(node, scope, filename) {\r\n        // todo, input is currently the statement, but should be the expression?\r\n        let nameExpr = node.findFirstExpression(Expressions.DefinitionName);\r\n        if (nameExpr === undefined) {\r\n            nameExpr = node.findFirstExpression(Expressions.NamespaceSimpleName);\r\n        }\r\n        if (nameExpr === undefined) {\r\n            return undefined;\r\n        }\r\n        const name = nameExpr.getFirstToken();\r\n        let qualifiedName = \"\";\r\n        if (node.getFirstToken().getStr().toUpperCase() === \"TYPES\") {\r\n            qualifiedName = name.getStr();\r\n            if (scope.getType() === _scope_type_1.ScopeType.ClassDefinition\r\n                || scope.getType() === _scope_type_1.ScopeType.Interface) {\r\n                qualifiedName = scope.getName() + \"=>\" + qualifiedName;\r\n            }\r\n        }\r\n        const type = new basic_types_1.BasicTypes(filename, scope).parseTable(node, qualifiedName);\r\n        if (type === undefined) {\r\n            return new _typed_identifier_1.TypedIdentifier(name, filename, new basic_1.UnknownType(\"TableType, fallback\"));\r\n        }\r\n        return new _typed_identifier_1.TypedIdentifier(name, filename, type);\r\n    }\r\n}\r\nexports.TypeTable = TypeTable;\r\n//# sourceMappingURL=type_table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/type_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/value_body.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/value_body.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ValueBody = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst for_1 = __webpack_require__(/*! ./for */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/for.js\");\r\nconst source_1 = __webpack_require__(/*! ./source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst let_1 = __webpack_require__(/*! ./let */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/let.js\");\r\nconst field_assignment_1 = __webpack_require__(/*! ./field_assignment */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_assignment.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass ValueBody {\r\n    runSyntax(node, scope, filename, targetType) {\r\n        if (node === undefined) {\r\n            return targetType;\r\n        }\r\n        const letNode = node.findDirectExpression(Expressions.Let);\r\n        if (letNode) {\r\n            new let_1.Let().runSyntax(letNode, scope, filename);\r\n        }\r\n        const forNode = node.findDirectExpression(Expressions.For);\r\n        if (forNode) {\r\n            new for_1.For().runSyntax(forNode, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.FieldAssignment)) {\r\n            new field_assignment_1.FieldAssignment().runSyntax(s, scope, filename, targetType);\r\n        }\r\n        let type = undefined; // todo, this is only correct if there is a single source in the body\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            type = new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        if (scope.getType() === _scope_type_1.ScopeType.For) {\r\n            scope.pop(node.getLastToken().getEnd());\r\n        }\r\n        return targetType ? targetType : type;\r\n    }\r\n}\r\nexports.ValueBody = ValueBody;\r\n//# sourceMappingURL=value_body.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/value_body.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/global_definitions/find_global_definitions.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/global_definitions/find_global_definitions.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FindGlobalDefinitions = void 0;\r\nconst interface_definition_1 = __webpack_require__(/*! ../../types/interface_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/interface_definition.js\");\r\nconst class_definition_1 = __webpack_require__(/*! ../../types/class_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/class_definition.js\");\r\nconst _current_scope_1 = __webpack_require__(/*! ../_current_scope */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_current_scope.js\");\r\nconst Structures = __webpack_require__(/*! ../../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst interface_1 = __webpack_require__(/*! ../../../objects/interface */ \"./node_modules/@abaplint/core/build/src/objects/interface.js\");\r\nconst class_1 = __webpack_require__(/*! ../../../objects/class */ \"./node_modules/@abaplint/core/build/src/objects/class.js\");\r\nconst BasicTypes = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\n// todo: rewrite all of this to use a graph based deterministic approach instead\r\n// this makes sure to cache global interface and class definitions in the corresponding object\r\nclass FindGlobalDefinitions {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    run(progress) {\r\n        const MAX_PASSES = 10;\r\n        let lastPass = Number.MAX_SAFE_INTEGER;\r\n        // the setDirty method in the objects clears the definitions\r\n        let candidates = [];\r\n        for (const o of this.reg.getObjects()) {\r\n            if ((o instanceof interface_1.Interface || o instanceof class_1.Class) && o.getDefinition() === undefined) {\r\n                candidates.push(o);\r\n            }\r\n        }\r\n        // make sure the sequence is always the same, disregarding the sequence they were added to the registry\r\n        // this will hopefully make it easier to debug\r\n        candidates.sort((a, b) => { return a.getName().localeCompare(b.getName()); });\r\n        for (let i = 1; i <= MAX_PASSES; i++) {\r\n            progress === null || progress === void 0 ? void 0 : progress.set(candidates.length, \"Global OO types, pass \" + i);\r\n            let thisPass = 0;\r\n            const next = [];\r\n            for (const o of candidates) {\r\n                progress === null || progress === void 0 ? void 0 : progress.tickSync(\"Global OO types(pass \" + i + \"), next pass: \" + next.length);\r\n                this.update(o);\r\n                const untypedCount = this.countUntyped(o);\r\n                if (untypedCount > 0) {\r\n                    next.push(o);\r\n                }\r\n                thisPass = thisPass + untypedCount;\r\n            }\r\n            candidates = next;\r\n            if (lastPass === thisPass || thisPass === 0) {\r\n                break;\r\n            }\r\n            lastPass = thisPass;\r\n        }\r\n    }\r\n    /////////////////////////////\r\n    countUntyped(obj) {\r\n        const def = obj.getDefinition();\r\n        if (def === undefined) {\r\n            return 1;\r\n        }\r\n        // todo, count constants\r\n        let count = 0;\r\n        for (const t of def.getTypeDefinitions().getAll()) {\r\n            count = count + this.count(t.type.getType());\r\n        }\r\n        for (const a of def.getAttributes().getAll()) {\r\n            count = count + this.count(a.getType());\r\n        }\r\n        for (const m of def.getMethodDefinitions().getAll()) {\r\n            for (const p of m.getParameters().getAll()) {\r\n                count = count + this.count(p.getType());\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n    count(type) {\r\n        if (type instanceof BasicTypes.UnknownType || type instanceof BasicTypes.VoidType) {\r\n            return 1;\r\n        }\r\n        else if (type instanceof BasicTypes.TableType) {\r\n            return this.count(type.getRowType());\r\n        }\r\n        else if (type instanceof BasicTypes.DataReference) {\r\n            return this.count(type.getType());\r\n        }\r\n        else if (type instanceof BasicTypes.StructureType) {\r\n            let count = 0;\r\n            for (const c of type.getComponents()) {\r\n                count = count + this.count(c.type);\r\n            }\r\n            return count;\r\n        }\r\n        return 0;\r\n    }\r\n    update(obj) {\r\n        const file = obj.getMainABAPFile();\r\n        const struc = file === null || file === void 0 ? void 0 : file.getStructure();\r\n        if (obj instanceof interface_1.Interface) {\r\n            const found = struc === null || struc === void 0 ? void 0 : struc.findFirstStructure(Structures.Interface);\r\n            if (struc && file && found) {\r\n                try {\r\n                    const def = new interface_definition_1.InterfaceDefinition(found, file.getFilename(), _current_scope_1.CurrentScope.buildDefault(this.reg));\r\n                    obj.setDefinition(def);\r\n                }\r\n                catch (_a) {\r\n                    obj.setDefinition(undefined);\r\n                }\r\n            }\r\n            else {\r\n                obj.setDefinition(undefined);\r\n            }\r\n        }\r\n        else if (obj instanceof class_1.Class) {\r\n            const found = struc === null || struc === void 0 ? void 0 : struc.findFirstStructure(Structures.ClassDefinition);\r\n            if (struc && file && found) {\r\n                try {\r\n                    const def = new class_definition_1.ClassDefinition(found, file.getFilename(), _current_scope_1.CurrentScope.buildDefault(this.reg));\r\n                    obj.setDefinition(def);\r\n                }\r\n                catch (_b) {\r\n                    obj.setDefinition(undefined);\r\n                }\r\n            }\r\n            else {\r\n                obj.setDefinition(undefined);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.FindGlobalDefinitions = FindGlobalDefinitions;\r\n//# sourceMappingURL=find_global_definitions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/global_definitions/find_global_definitions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/spaghetti_scope.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/spaghetti_scope.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SpaghettiScope = exports.SpaghettiScopeNode = void 0;\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst _reference_1 = __webpack_require__(/*! ./_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass ScopeData {\r\n    constructor() {\r\n        this.data = {\r\n            vars: {},\r\n            cdefs: [],\r\n            idefs: [],\r\n            forms: [],\r\n            types: {},\r\n            deferred: [],\r\n            references: [],\r\n        };\r\n    }\r\n    getData() {\r\n        return this.data;\r\n    }\r\n}\r\nclass SpaghettiScopeNode extends ScopeData {\r\n    constructor(identifier, parent) {\r\n        super();\r\n        this.identifier = identifier;\r\n        this.parent = parent;\r\n        this.children = [];\r\n    }\r\n    getParent() {\r\n        return this.parent;\r\n    }\r\n    addChild(node) {\r\n        this.children.push(node);\r\n    }\r\n    getChildren() {\r\n        return this.children;\r\n    }\r\n    getFirstChild() {\r\n        return this.children[0];\r\n    }\r\n    getIdentifier() {\r\n        return this.identifier;\r\n    }\r\n    calcCoverage() {\r\n        if (this.identifier.end === undefined) {\r\n            throw new Error(\"internal error, caclCoverage\");\r\n        }\r\n        return { start: this.identifier.start, end: this.identifier.end };\r\n    }\r\n    setEnd(end) {\r\n        this.identifier.end = end;\r\n    }\r\n    findDeferred(name) {\r\n        let search = this;\r\n        while (search !== undefined) {\r\n            for (const d of search.getData().deferred) {\r\n                if (d.getStr().toUpperCase() === name.toUpperCase()) {\r\n                    return new _identifier_1.Identifier(d, search.identifier.filename);\r\n                }\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return undefined;\r\n    }\r\n    findClassDefinition(name) {\r\n        let search = this;\r\n        const upper = name.toUpperCase();\r\n        while (search !== undefined) {\r\n            for (const cdef of search.getData().cdefs) {\r\n                if (cdef.getName().toUpperCase() === upper) {\r\n                    return cdef;\r\n                }\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return undefined;\r\n    }\r\n    findFormDefinition(name) {\r\n        let search = this;\r\n        const upper = name.toUpperCase();\r\n        while (search !== undefined) {\r\n            for (const form of search.getData().forms) {\r\n                if (form.getName().toUpperCase() === upper) {\r\n                    return form;\r\n                }\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return undefined;\r\n    }\r\n    // todo, can be deleted, not called from anywhere?\r\n    listFormDefinitions() {\r\n        let search = this;\r\n        const ret = [];\r\n        while (search !== undefined) {\r\n            for (const form of search.getData().forms) {\r\n                ret.push(form);\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return ret;\r\n    }\r\n    // todo, optimize\r\n    findInterfaceDefinition(name) {\r\n        let search = this;\r\n        while (search !== undefined) {\r\n            for (const idef of search.getData().idefs) {\r\n                if (idef.getName().toUpperCase() === name.toUpperCase()) {\r\n                    return idef;\r\n                }\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return undefined;\r\n    }\r\n    findType(name) {\r\n        let search = this;\r\n        const upper = name.toUpperCase();\r\n        while (search !== undefined) {\r\n            const data = search.getData();\r\n            if (data.types[upper]) {\r\n                return data.types[upper];\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return undefined;\r\n    }\r\n    findVariable(name) {\r\n        let search = this;\r\n        const upper = name.toUpperCase();\r\n        while (search !== undefined) {\r\n            const data = search.getData();\r\n            if (data.vars[upper]) {\r\n                return data.vars[upper];\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return undefined;\r\n    }\r\n    findWriteReference(pos) {\r\n        for (const r of this.getData().references) {\r\n            if (r.referenceType === _reference_1.ReferenceType.DataWriteReference\r\n                && r.position.getStart().equals(pos)) {\r\n                if (r.resolved instanceof _typed_identifier_1.TypedIdentifier) {\r\n                    return r.resolved;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findTableReference(pos) {\r\n        for (const r of this.getData().references) {\r\n            if (r.referenceType === _reference_1.ReferenceType.TableReference\r\n                && r.position.getStart().equals(pos)\r\n                && r.resolved) {\r\n                return r.resolved.getName();\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    // TODO, this method can be deleted? its only used in tests?\r\n    findScopeForVariable(name) {\r\n        let search = this;\r\n        while (search !== undefined) {\r\n            for (const local in search.getData().vars) {\r\n                if (local === name.toUpperCase()) {\r\n                    return search.getIdentifier();\r\n                }\r\n            }\r\n            search = search.getParent();\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.SpaghettiScopeNode = SpaghettiScopeNode;\r\nclass SpaghettiScope {\r\n    constructor(top) {\r\n        this.node = top;\r\n    }\r\n    // list variable definitions across all nodes\r\n    listDefinitions(filename) {\r\n        const ret = [];\r\n        for (const n of this.allNodes()) {\r\n            if (n.getIdentifier().filename === filename) {\r\n                const vars = n.getData().vars;\r\n                for (const v in vars) {\r\n                    if (vars[v].getFilename() === filename) {\r\n                        ret.push({ name: v, identifier: vars[v] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    listReadPositions(filename) {\r\n        const ret = [];\r\n        for (const n of this.allNodes()) {\r\n            if (n.getIdentifier().filename === filename) {\r\n                for (const v of n.getData().references) {\r\n                    if (v.referenceType === _reference_1.ReferenceType.DataReadReference && v.position.getFilename() === filename) {\r\n                        ret.push(v.position);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    listWritePositions(filename) {\r\n        const ret = [];\r\n        for (const n of this.allNodes()) {\r\n            if (n.getIdentifier().filename === filename) {\r\n                for (const v of n.getData().references) {\r\n                    if (v.referenceType === _reference_1.ReferenceType.DataWriteReference && v.position.getFilename() === filename) {\r\n                        ret.push(v.position);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    lookupPosition(p, filename) {\r\n        if (p === undefined || filename === undefined) {\r\n            return undefined;\r\n        }\r\n        return this.lookupPositionTraverse(p, filename, this.node);\r\n    }\r\n    getFirstChild() {\r\n        return this.node.getFirstChild();\r\n    }\r\n    getTop() {\r\n        return this.node;\r\n    }\r\n    /////////////////////////////\r\n    allNodes() {\r\n        const ret = [];\r\n        const stack = [this.node];\r\n        while (stack.length > 0) {\r\n            const current = stack.pop();\r\n            ret.push(current);\r\n            stack.push(...current.getChildren());\r\n        }\r\n        return ret;\r\n    }\r\n    lookupPositionTraverse(p, filename, node) {\r\n        const coverage = node.calcCoverage();\r\n        if (node.getIdentifier().filename === filename && p.isBetween(coverage.start, coverage.end) === false) {\r\n            return undefined;\r\n        }\r\n        // possible optimization: binary search the nodes\r\n        for (const c of node.getChildren()) {\r\n            const result = this.lookupPositionTraverse(p, filename, c);\r\n            if (result !== undefined) {\r\n                return result;\r\n            }\r\n        }\r\n        if (node.getIdentifier().filename === filename\r\n            && p.isBetween(coverage.start, coverage.end)) {\r\n            return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.SpaghettiScope = SpaghettiScope;\r\n//# sourceMappingURL=spaghetti_scope.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/spaghetti_scope.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Add = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Add {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Add = Add;\r\n//# sourceMappingURL=add.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add_corresponding.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add_corresponding.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AddCorresponding = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass AddCorresponding {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.AddCorresponding = AddCorresponding;\r\n//# sourceMappingURL=add_corresponding.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add_corresponding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/append.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/append.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Append = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst fstarget_1 = __webpack_require__(/*! ../expressions/fstarget */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js\");\r\nclass Append {\r\n    runSyntax(node, scope, filename) {\r\n        let targetType = undefined;\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        if (target) {\r\n            targetType = new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n        const fsTarget = node.findExpressionAfterToken(\"ASSIGNING\");\r\n        if (fsTarget && fsTarget.get() instanceof Expressions.FSTarget) {\r\n            if (!(targetType instanceof basic_1.TableType) && !(targetType instanceof basic_1.VoidType)) {\r\n                throw new Error(\"APPEND to non table type\");\r\n            }\r\n            const rowType = targetType instanceof basic_1.TableType ? targetType.getRowType() : targetType;\r\n            new fstarget_1.FSTarget().runSyntax(fsTarget, scope, filename, rowType);\r\n        }\r\n        let source = node.findDirectExpression(Expressions.Source);\r\n        if (source === undefined) {\r\n            source = node.findDirectExpression(Expressions.SimpleSource4);\r\n        }\r\n        if (source) {\r\n            if (targetType !== undefined\r\n                && !(targetType instanceof basic_1.TableType)\r\n                && !(targetType instanceof basic_1.VoidType)) {\r\n                throw new Error(\"Append, target not a table type\");\r\n            }\r\n            let rowType = undefined;\r\n            if (targetType instanceof basic_1.TableType) {\r\n                rowType = targetType.getRowType();\r\n            }\r\n            else if (targetType instanceof basic_1.VoidType) {\r\n                rowType = targetType;\r\n            }\r\n            new source_1.Source().runSyntax(source, scope, filename, rowType);\r\n        }\r\n        const from = node.findExpressionAfterToken(\"FROM\");\r\n        if (from && from.get() instanceof Expressions.Source) {\r\n            new source_1.Source().runSyntax(from, scope, filename);\r\n        }\r\n        const to = node.findExpressionAfterToken(\"TO\");\r\n        if (to && to.get() instanceof Expressions.Source) {\r\n            new source_1.Source().runSyntax(to, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Append = Append;\r\n//# sourceMappingURL=append.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/append.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assert.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assert.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Assert = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst cond_1 = __webpack_require__(/*! ../expressions/cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nclass Assert {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Cond)) {\r\n            new cond_1.Cond().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Assert = Assert;\r\n//# sourceMappingURL=assert.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assert.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assign.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assign.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Assign = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst fstarget_1 = __webpack_require__(/*! ../expressions/fstarget */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass Assign {\r\n    runSyntax(node, scope, filename) {\r\n        const sources = node.findDirectExpressions(Expressions.Source);\r\n        const firstSource = sources[0];\r\n        const sourceType = firstSource ? new source_1.Source().runSyntax(firstSource, scope, filename) : new basic_1.VoidType(\"DynamicAssign\");\r\n        for (const d of node.findAllExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        const target = node.findDirectExpression(Expressions.FSTarget);\r\n        if (target) {\r\n            new fstarget_1.FSTarget().runSyntax(target, scope, filename, sourceType);\r\n        }\r\n        for (const s of sources) {\r\n            if (s === firstSource) {\r\n                continue;\r\n            }\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Assign = Assign;\r\n//# sourceMappingURL=assign.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assign.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/authority_check.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/authority_check.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthorityCheck = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass AuthorityCheck {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.AuthorityCheck = AuthorityCheck;\r\n//# sourceMappingURL=authority_check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/authority_check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Call = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_call_chain_1 = __webpack_require__(/*! ../expressions/method_call_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_chain.js\");\r\nconst method_source_1 = __webpack_require__(/*! ../expressions/method_source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_source.js\");\r\nconst method_call_body_1 = __webpack_require__(/*! ../expressions/method_call_body */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_call_body.js\");\r\nconst void_type_1 = __webpack_require__(/*! ../../types/basic/void_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js\");\r\nclass Call {\r\n    runSyntax(node, scope, filename) {\r\n        const chain = node.findDirectExpression(Expressions.MethodCallChain);\r\n        if (chain) {\r\n            new method_call_chain_1.MethodCallChain().runSyntax(chain, scope, filename);\r\n            return;\r\n        }\r\n        const methodSource = node.findDirectExpression(Expressions.MethodSource);\r\n        if (methodSource === undefined) {\r\n            throw new Error(\"Call, child MethodSource not found\");\r\n        }\r\n        new method_source_1.MethodSource().runSyntax(methodSource, scope, filename);\r\n        const body = node.findDirectExpression(Expressions.MethodCallBody);\r\n        if (body) {\r\n            // todo, resove the method definition above and pass, if possible, in case of dynamic pass void\r\n            new method_call_body_1.MethodCallBody().runSyntax(body, scope, filename, new void_type_1.VoidType(\"CallTODO\"));\r\n        }\r\n    }\r\n}\r\nexports.Call = Call;\r\n//# sourceMappingURL=call.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_badi.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_badi.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallBadi = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass CallBadi {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findAllExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        for (const d of node.findAllExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.CallBadi = CallBadi;\r\n//# sourceMappingURL=call_badi.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_badi.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_function.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_function.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallFunction = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ../expressions/field_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass CallFunction {\r\n    runSyntax(node, scope, filename) {\r\n        // todo, lots of work here, similar to receive.ts\r\n        const name = node.findFirstExpression(Expressions.FunctionName);\r\n        const chain = name === null || name === void 0 ? void 0 : name.findFirstExpression(Expressions.FieldChain);\r\n        if (chain) {\r\n            new field_chain_1.FieldChain().runSyntax(chain, scope, filename, _reference_1.ReferenceType.DataReadReference);\r\n        }\r\n        // just recurse\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findAllExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.SimpleSource2)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.CallFunction = CallFunction;\r\n//# sourceMappingURL=call_function.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_function.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transaction.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transaction.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallTransaction = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass CallTransaction {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.CallTransaction = CallTransaction;\r\n//# sourceMappingURL=call_transaction.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transaction.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transformation.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transformation.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallTransformation = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass CallTransformation {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const d of node.findDirectExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            const inline = t === null || t === void 0 ? void 0 : t.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.XStringType());\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(t, scope, filename);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.CallTransformation = CallTransformation;\r\n//# sourceMappingURL=call_transformation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transformation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/case.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/case.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Case = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass Case {\r\n    runSyntax(node, scope, filename) {\r\n        // just recurse\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Case = Case;\r\n//# sourceMappingURL=case.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/case.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/catch.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/catch.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Catch = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass Catch {\r\n    runSyntax(node, scope, filename) {\r\n        var _a, _b;\r\n        for (const c of node.findDirectExpressions(Expressions.ClassName)) {\r\n            const token = c.getFirstToken();\r\n            const className = token.getStr();\r\n            const found = scope.existsObject(className);\r\n            if (found.found === true && found.id) {\r\n                scope.addReference(token, found.id, found.type, filename);\r\n            }\r\n            else if (scope.getDDIC().inErrorNamespace(className) === false) {\r\n                const extra = { ooName: className, ooType: \"Void\" };\r\n                scope.addReference(token, undefined, _reference_1.ReferenceType.ObjectOrientedVoidReference, filename, extra);\r\n            }\r\n            else {\r\n                throw new Error(\"CATCH, unknown class \" + className);\r\n            }\r\n        }\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        const firstClassName = (_a = node.findDirectExpression(Expressions.ClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr();\r\n        if (target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineData)) {\r\n            const token = (_b = target.findFirstExpression(Expressions.TargetField)) === null || _b === void 0 ? void 0 : _b.getFirstToken();\r\n            const found = scope.existsObject(firstClassName);\r\n            if (token && found.found === true && firstClassName && found.id) {\r\n                const identifier = new _typed_identifier_1.TypedIdentifier(token, filename, new basic_1.ObjectReferenceType(found.id), [\"inline\" /* InlineDefinition */]);\r\n                scope.addIdentifier(identifier);\r\n                scope.addReference(token, identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n            }\r\n            else if (token && scope.getDDIC().inErrorNamespace(firstClassName) === false) {\r\n                const identifier = new _typed_identifier_1.TypedIdentifier(token, filename, new basic_1.VoidType(firstClassName), [\"inline\" /* InlineDefinition */]);\r\n                scope.addIdentifier(identifier);\r\n                scope.addReference(token, identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n            }\r\n            else if (token) {\r\n                const message = \"Catch, could not determine type for \\\"\" + token.getStr() + \"\\\"\";\r\n                const identifier = new _typed_identifier_1.TypedIdentifier(token, filename, new unknown_type_1.UnknownType(message), [\"inline\" /* InlineDefinition */]);\r\n                scope.addIdentifier(identifier);\r\n                scope.addReference(token, identifier, _reference_1.ReferenceType.DataWriteReference, filename);\r\n            }\r\n        }\r\n        else if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Catch = Catch;\r\n//# sourceMappingURL=catch.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/catch.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/check.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/check.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Check = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst cond_1 = __webpack_require__(/*! ../expressions/cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nclass Check {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Cond)) {\r\n            new cond_1.Cond().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Check = Check;\r\n//# sourceMappingURL=check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_data.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_data.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassData = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst data_definition_1 = __webpack_require__(/*! ../expressions/data_definition */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/data_definition.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nclass ClassData {\r\n    runSyntax(node, scope, filename) {\r\n        const dd = node.findFirstExpression(Expressions.DataDefinition);\r\n        if (dd) {\r\n            const found = new data_definition_1.DataDefinition().runSyntax(dd, scope, filename);\r\n            if (found === undefined) {\r\n                return undefined;\r\n            }\r\n            const meta = found.getMeta().slice();\r\n            meta.push(\"static\" /* Static */);\r\n            return new _typed_identifier_1.TypedIdentifier(found.getToken(), filename, found.getType(), meta);\r\n        }\r\n        const fallback = node.findFirstExpression(Expressions.NamespaceSimpleName);\r\n        if (fallback) {\r\n            return new _typed_identifier_1.TypedIdentifier(fallback.getFirstToken(), filename, new unknown_type_1.UnknownType(\"class data, fallback\"));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.ClassData = ClassData;\r\n//# sourceMappingURL=class_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_deferred.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_deferred.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDeferred = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass ClassDeferred {\r\n    runSyntax(node, scope, _filename) {\r\n        var _a;\r\n        const name = (_a = node.findFirstExpression(Expressions.ClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        scope.addDeferred(name);\r\n    }\r\n}\r\nexports.ClassDeferred = ClassDeferred;\r\n//# sourceMappingURL=class_deferred.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_deferred.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_implementation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_implementation.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassImplementation = void 0;\r\nconst _object_oriented_1 = __webpack_require__(/*! ../_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst position_1 = __webpack_require__(/*! ../../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _builtin_1 = __webpack_require__(/*! ../_builtin */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass ClassImplementation {\r\n    runSyntax(node, scope, filename) {\r\n        const helper = new _object_oriented_1.ObjectOriented(scope);\r\n        const className = helper.findClassName(node);\r\n        scope.push(_scope_type_1.ScopeType.ClassImplementation, className, node.getFirstToken().getStart(), filename);\r\n        const classDefinition = scope.findClassDefinition(className);\r\n        if (classDefinition === undefined) {\r\n            throw new Error(\"Class definition for \\\"\" + className + \"\\\" not found\");\r\n        }\r\n        const classAttributes = classDefinition.getAttributes();\r\n        for (const t of classDefinition.getTypeDefinitions().getAll()) {\r\n            scope.addType(t.type);\r\n        }\r\n        const sup = scope.findClassDefinition(classDefinition.getSuperClass());\r\n        if (sup) {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(new tokens_1.Identifier(new position_1.Position(1, 1), \"super\"), _builtin_1.BuiltIn.filename, new basic_1.ObjectReferenceType(sup)));\r\n        }\r\n        scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(new tokens_1.Identifier(new position_1.Position(1, 1), \"me\"), _builtin_1.BuiltIn.filename, new basic_1.ObjectReferenceType(classDefinition)));\r\n        helper.addAliasedAttributes(classDefinition); // todo, this is not correct, take care of instance vs static\r\n        scope.addList(classAttributes.getConstants());\r\n        scope.addList(classAttributes.getInstance()); // todo, this is not correct, take care of instance vs static\r\n        scope.addList(classAttributes.getStatic()); // todo, this is not correct, take care of instance vs static\r\n        const implemented = helper.fromSuperClass(classDefinition);\r\n        helper.fromInterfaces(classDefinition, implemented);\r\n    }\r\n}\r\nexports.ClassImplementation = ClassImplementation;\r\n//# sourceMappingURL=class_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_local_friends.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_local_friends.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassLocalFriends = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass ClassLocalFriends {\r\n    runSyntax(node, scope, filename) {\r\n        const found = node.findDirectExpression(Expressions.ClassName);\r\n        if (found) {\r\n            const token = found.getFirstToken();\r\n            const name = token.getStr();\r\n            const def = scope.findClassDefinition(name);\r\n            if (def) {\r\n                scope.addReference(token, def, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ClassLocalFriends = ClassLocalFriends;\r\n//# sourceMappingURL=class_local_friends.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_local_friends.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/clear.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/clear.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Clear = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Clear {\r\n    runSyntax(node, scope, filename) {\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Clear = Clear;\r\n//# sourceMappingURL=clear.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/clear.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/close_dataset.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/close_dataset.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CloseDataset = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass CloseDataset {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.CloseDataset = CloseDataset;\r\n//# sourceMappingURL=close_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/close_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/collect.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/collect.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Collect = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst fstarget_1 = __webpack_require__(/*! ../expressions/fstarget */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Collect {\r\n    runSyntax(node, scope, filename) {\r\n        const source = node.findDirectExpression(Expressions.Source);\r\n        if (source) {\r\n            new source_1.Source().runSyntax(source, scope, filename);\r\n        }\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n        const fs = node.findDirectExpression(Expressions.FSTarget);\r\n        if (fs) {\r\n            new fstarget_1.FSTarget().runSyntax(fs, scope, filename, undefined);\r\n        }\r\n    }\r\n}\r\nexports.Collect = Collect;\r\n//# sourceMappingURL=collect.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/collect.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/concatenate.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/concatenate.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Concatenate = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nclass Concatenate {\r\n    runSyntax(node, scope, filename) {\r\n        const target = node.findFirstExpression(Expressions.Target);\r\n        const inline = target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            // todo, does this give XSTRING in BYTE MODE?\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.StringType());\r\n        }\r\n        else if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Concatenate = Concatenate;\r\n//# sourceMappingURL=concatenate.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/concatenate.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/condense.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/condense.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Condense = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Condense {\r\n    runSyntax(node, scope, filename) {\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Condense = Condense;\r\n//# sourceMappingURL=condense.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/condense.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/constant.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/constant.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Constant = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass Constant {\r\n    runSyntax(node, scope, filename) {\r\n        const basic = new basic_types_1.BasicTypes(filename, scope);\r\n        const found = basic.simpleType(node);\r\n        if (found) {\r\n            const val = basic.findValue(node);\r\n            const meta = [\"read_only\" /* ReadOnly */, \"static\" /* Static */];\r\n            return new _typed_identifier_1.TypedIdentifier(found.getToken(), filename, found.getType(), meta, val);\r\n        }\r\n        const fallback = node.findFirstExpression(Expressions.DefinitionName);\r\n        if (fallback) {\r\n            return new _typed_identifier_1.TypedIdentifier(fallback.getFirstToken(), filename, new basic_1.UnknownType(\"constant, fallback\"));\r\n        }\r\n        throw new Error(\"Statement Constant: unexpected structure\");\r\n    }\r\n}\r\nexports.Constant = Constant;\r\n//# sourceMappingURL=constant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/constant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/controls.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/controls.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Controls = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass Controls {\r\n    runSyntax(node, scope, filename) {\r\n        const name = node.findDirectExpression(Expressions.NamespaceSimpleName);\r\n        const token = name === null || name === void 0 ? void 0 : name.getFirstToken();\r\n        if (node.findDirectTokenByText(\"TABSTRIP\") && token) {\r\n            const type = new basic_1.StructureType([{ name: \"ACTIVETAB\", type: new basic_1.CharacterType(132) }]);\r\n            const id = new _typed_identifier_1.TypedIdentifier(token, filename, type);\r\n            scope.addIdentifier(id);\r\n        }\r\n        if (node.findDirectTokenByText(\"TABLEVIEW\") && token) {\r\n            const cols = new basic_1.StructureType([\r\n                { name: \"SCREEN\", type: new basic_1.CharacterType(1) },\r\n                { name: \"INDEX\", type: new basic_1.IntegerType() },\r\n                { name: \"SELECTED\", type: new basic_1.CharacterType(1) },\r\n                { name: \"VISLENGTH\", type: new basic_1.IntegerType() },\r\n                { name: \"INVISIBLE\", type: new basic_1.CharacterType(1) },\r\n            ]);\r\n            const type = new basic_1.StructureType([\r\n                { name: \"FIXED_COLS\", type: new basic_1.CharacterType(132) },\r\n                { name: \"LINES\", type: new basic_1.IntegerType() },\r\n                { name: \"TOP_LINE\", type: new basic_1.IntegerType() },\r\n                { name: \"CURRENT_LINE\", type: new basic_1.IntegerType() },\r\n                { name: \"LEFT_COL\", type: new basic_1.IntegerType() },\r\n                { name: \"LINE_SEL_MODE\", type: new basic_1.CharacterType(1) },\r\n                { name: \"COL_SEL_MODE\", type: new basic_1.CharacterType(1) },\r\n                { name: \"LINE_SELECTOR\", type: new basic_1.CharacterType(1) },\r\n                { name: \"H_GRID\", type: new basic_1.CharacterType(1) },\r\n                { name: \"V_GRID\", type: new basic_1.CharacterType(1) },\r\n                { name: \"COLS\", type: new basic_1.TableType(cols, { withHeader: false }) },\r\n                { name: \"INVISIBLE\", type: new basic_1.CharacterType(1) },\r\n            ]);\r\n            const id = new _typed_identifier_1.TypedIdentifier(token, filename, type);\r\n            scope.addIdentifier(id);\r\n        }\r\n    }\r\n}\r\nexports.Controls = Controls;\r\n//# sourceMappingURL=controls.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/controls.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/convert.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/convert.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Convert = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Convert {\r\n    runSyntax(node, scope, filename) {\r\n        // todo, the source must be of a specific type\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        const timeTarget = node.findExpressionAfterToken(\"TIME\");\r\n        if ((timeTarget === null || timeTarget === void 0 ? void 0 : timeTarget.get()) instanceof Expressions.Target) {\r\n            const inline = timeTarget === null || timeTarget === void 0 ? void 0 : timeTarget.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.TimeType());\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(timeTarget, scope, filename);\r\n            }\r\n        }\r\n        const dateTarget = node.findExpressionAfterToken(\"DATE\");\r\n        if ((dateTarget === null || dateTarget === void 0 ? void 0 : dateTarget.get()) instanceof Expressions.Target) {\r\n            const inline = dateTarget === null || dateTarget === void 0 ? void 0 : dateTarget.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.DateType());\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(dateTarget, scope, filename);\r\n            }\r\n        }\r\n        const stampTarget = node.findExpressionAfterToken(\"STAMP\");\r\n        if ((stampTarget === null || stampTarget === void 0 ? void 0 : stampTarget.get()) instanceof Expressions.Target) {\r\n            const inline = stampTarget === null || stampTarget === void 0 ? void 0 : stampTarget.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.PackedType(8, 4));\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(stampTarget, scope, filename);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Convert = Convert;\r\n//# sourceMappingURL=convert.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/convert.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_data.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_data.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CreateData = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass CreateData {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.CreateData = CreateData;\r\n//# sourceMappingURL=create_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_object.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_object.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CreateObject = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst types_1 = __webpack_require__(/*! ../../types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nclass CreateObject {\r\n    runSyntax(node, scope, filename) {\r\n        // todo, validate parameters\r\n        // CREATE OBJECT, TYPE\r\n        const type = node.findExpressionAfterToken(\"TYPE\");\r\n        if (type && type.get() instanceof Expressions.ClassName) {\r\n            const token = type.getFirstToken();\r\n            const name = token.getStr();\r\n            const found = scope.findClassDefinition(name);\r\n            if (found) {\r\n                scope.addReference(token, found, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                if (found.isAbstract() === true) {\r\n                    throw new Error(found.getName() + \" is abstract, cannot be instantiated\");\r\n                }\r\n            }\r\n            else if (scope.getDDIC().inErrorNamespace(name) === false) {\r\n                scope.addReference(token, undefined, _reference_1.ReferenceType.ObjectOrientedVoidReference, filename, { ooName: name, ooType: \"CLAS\" });\r\n            }\r\n            else {\r\n                throw new Error(\"TYPE \\\"\" + name + \"\\\" not found\");\r\n            }\r\n        }\r\n        // just recurse\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        let first = true;\r\n        for (const t of node.findAllExpressions(Expressions.Target)) {\r\n            const found = new target_1.Target().runSyntax(t, scope, filename);\r\n            if (first === true) {\r\n                first = false;\r\n                if (found instanceof basic_1.VoidType) {\r\n                    continue;\r\n                }\r\n                else if (!(found instanceof basic_1.ObjectReferenceType)\r\n                    && !(found instanceof basic_1.GenericObjectReferenceType)) {\r\n                    throw new Error(\"Target must be a object reference\");\r\n                }\r\n                else if (found instanceof basic_1.GenericObjectReferenceType && type === undefined) {\r\n                    throw new Error(\"Generic type, cannot be instantiated\");\r\n                }\r\n                else if (found instanceof basic_1.ObjectReferenceType) {\r\n                    const id = found.getIdentifier();\r\n                    if (type === undefined && id instanceof types_1.ClassDefinition && id.isAbstract() === true) {\r\n                        throw new Error(id.getName() + \" is abstract, cannot be instantiated\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.CreateObject = CreateObject;\r\n//# sourceMappingURL=create_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/data.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/data.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Data = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst data_definition_1 = __webpack_require__(/*! ../expressions/data_definition */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/data_definition.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nclass Data {\r\n    runSyntax(node, scope, filename) {\r\n        const dd = node.findFirstExpression(Expressions.DataDefinition);\r\n        if (dd) {\r\n            return new data_definition_1.DataDefinition().runSyntax(dd, scope, filename);\r\n        }\r\n        const name = node.findFirstExpression(Expressions.DefinitionName);\r\n        if (name) {\r\n            return new _typed_identifier_1.TypedIdentifier(name.getFirstToken(), filename, new unknown_type_1.UnknownType(\"data, fallback\"));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.Data = Data;\r\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_database.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_database.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteDatabase = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nconst database_table_1 = __webpack_require__(/*! ../expressions/database_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js\");\r\nclass DeleteDatabase {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const d of node.findAllExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        const dbtab = node.findFirstExpression(Expressions.DatabaseTable);\r\n        if (dbtab !== undefined) {\r\n            new database_table_1.DatabaseTable().runSyntax(dbtab, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.DeleteDatabase = DeleteDatabase;\r\n//# sourceMappingURL=delete_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_internal.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_internal.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DeleteInternal = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst component_compare_1 = __webpack_require__(/*! ../expressions/component_compare */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare.js\");\r\nconst component_cond_1 = __webpack_require__(/*! ../expressions/component_cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_cond.js\");\r\nclass DeleteInternal {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.ComponentCompare)) {\r\n            new component_compare_1.ComponentCompare().runSyntax(t, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.ComponentCond)) {\r\n            new component_cond_1.ComponentCond().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.DeleteInternal = DeleteInternal;\r\n//# sourceMappingURL=delete_internal.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/describe.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/describe.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Describe = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst field_chain_1 = __webpack_require__(/*! ../expressions/field_chain */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/field_chain.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass Describe {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findAllExpressions(Expressions.FieldChain)) {\r\n            new field_chain_1.FieldChain().runSyntax(s, scope, filename, _reference_1.ReferenceType.DataReadReference);\r\n        }\r\n        const linesTarget = node.findExpressionAfterToken(\"LINES\");\r\n        if ((linesTarget === null || linesTarget === void 0 ? void 0 : linesTarget.get()) instanceof Expressions.Target) {\r\n            const inline = linesTarget === null || linesTarget === void 0 ? void 0 : linesTarget.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.IntegerType());\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(linesTarget, scope, filename);\r\n            }\r\n        }\r\n        const typeTarget = node.findExpressionAfterToken(\"TYPE\");\r\n        if ((typeTarget === null || typeTarget === void 0 ? void 0 : typeTarget.get()) instanceof Expressions.Target) {\r\n            const inline = typeTarget === null || typeTarget === void 0 ? void 0 : typeTarget.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.CharacterType(1));\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(typeTarget, scope, filename);\r\n            }\r\n        }\r\n        const lengthTarget = node.findExpressionAfterToken(\"LENGTH\");\r\n        if ((lengthTarget === null || lengthTarget === void 0 ? void 0 : lengthTarget.get()) instanceof Expressions.Target) {\r\n            const inline = lengthTarget === null || lengthTarget === void 0 ? void 0 : lengthTarget.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.IntegerType());\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(lengthTarget, scope, filename);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Describe = Describe;\r\n//# sourceMappingURL=describe.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/describe.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/divide.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/divide.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Divide = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Divide {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Divide = Divide;\r\n//# sourceMappingURL=divide.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/divide.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/do.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/do.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Do = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass Do {\r\n    runSyntax(node, scope, filename) {\r\n        // just recurse\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Do = Do;\r\n//# sourceMappingURL=do.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/do.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/else_if.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/else_if.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ElseIf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst cond_1 = __webpack_require__(/*! ../expressions/cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nclass ElseIf {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Cond)) {\r\n            new cond_1.Cond().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ElseIf = ElseIf;\r\n//# sourceMappingURL=else_if.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/else_if.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/export.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/export.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Export = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Export {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Export = Export;\r\n//# sourceMappingURL=export.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/export.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/fieldsymbol.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/fieldsymbol.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldSymbol = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst unknown_type_1 = __webpack_require__(/*! ../../types/basic/unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\");\r\nclass FieldSymbol {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const fsname = (_a = node.findFirstExpression(Expressions.FieldSymbol)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        const bfound = new basic_types_1.BasicTypes(filename, scope).parseType(node);\r\n        if (bfound && fsname) {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(fsname, filename, bfound));\r\n            return;\r\n        }\r\n        if (fsname) {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(fsname, filename, new unknown_type_1.UnknownType(\"Fieldsymbol, fallback\")));\r\n        }\r\n    }\r\n}\r\nexports.FieldSymbol = FieldSymbol;\r\n//# sourceMappingURL=fieldsymbol.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/fieldsymbol.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/find.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/find.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Find = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Find {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        const rfound = node.findExpressionAfterToken(\"RESULTS\");\r\n        if (rfound && rfound.get() instanceof Expressions.Target) {\r\n            const type = new basic_1.StructureType([\r\n                { name: \"LINE\", type: new basic_1.IntegerType() },\r\n                { name: \"OFFSET\", type: new basic_1.IntegerType() },\r\n                { name: \"LENGTH\", type: new basic_1.IntegerType() },\r\n                { name: \"SUBMATCHES\", type: new basic_1.TableType(new basic_1.StringType(), { withHeader: false }) },\r\n            ]);\r\n            if (node.concatTokens().toUpperCase().startsWith(\"FIND FIRST\")) {\r\n                this.inline(rfound, scope, filename, type);\r\n            }\r\n            else {\r\n                this.inline(rfound, scope, filename, new basic_1.TableType(type, { withHeader: false }));\r\n            }\r\n        }\r\n        const ofound = node.findExpressionAfterToken(\"OFFSET\");\r\n        if (ofound && ofound.get() instanceof Expressions.Target) {\r\n            this.inline(ofound, scope, filename, new basic_1.IntegerType());\r\n        }\r\n        const lfound = node.findExpressionAfterToken(\"LINE\");\r\n        if (lfound && lfound.get() instanceof Expressions.Target) {\r\n            this.inline(lfound, scope, filename, new basic_1.IntegerType());\r\n        }\r\n        const cfound = node.findExpressionAfterToken(\"COUNT\");\r\n        if (cfound && cfound.get() instanceof Expressions.Target) {\r\n            this.inline(cfound, scope, filename, new basic_1.IntegerType());\r\n        }\r\n        const lnfound = node.findExpressionAfterToken(\"LENGTH\");\r\n        if (lnfound && lnfound.get() instanceof Expressions.Target) {\r\n            this.inline(lnfound, scope, filename, new basic_1.IntegerType());\r\n        }\r\n        if (node.findDirectTokenByText(\"SUBMATCHES\")) {\r\n            for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n                if (t === rfound || t === ofound || t === lfound || t === cfound || t === lnfound) {\r\n                    continue;\r\n                }\r\n                const inline = t === null || t === void 0 ? void 0 : t.findDirectExpression(Expressions.InlineData);\r\n                if (inline) {\r\n                    new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.StringType());\r\n                }\r\n                else {\r\n                    new target_1.Target().runSyntax(t, scope, filename);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /////////////////////\r\n    inline(node, scope, filename, type) {\r\n        const inline = node.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, type);\r\n        }\r\n        else {\r\n            new target_1.Target().runSyntax(node, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Find = Find;\r\n//# sourceMappingURL=find.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/find.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/form.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/form.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Form = void 0;\r\nconst form_definition_1 = __webpack_require__(/*! ../../types/form_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/form_definition.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass Form {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const name = (_a = node.findDirectExpression(expressions_1.FormName)) === null || _a === void 0 ? void 0 : _a.concatTokens();\r\n        if (name === undefined) {\r\n            throw new Error(\"Form, could not find name\");\r\n        }\r\n        scope.push(_scope_type_1.ScopeType.Form, name, node.getFirstToken().getStart(), filename);\r\n        const form = new form_definition_1.FormDefinition(node, filename, scope);\r\n        scope.addList(form.getUsingParameters());\r\n        scope.addList(form.getChangingParameters());\r\n        scope.addList(form.getTablesParameters());\r\n    }\r\n}\r\nexports.Form = Form;\r\n//# sourceMappingURL=form.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/form.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/format.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/format.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Format = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass Format {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Format = Format;\r\n//# sourceMappingURL=format.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/format.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_badi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_badi.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetBadi = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass GetBadi {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        for (const d of node.findDirectExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.GetBadi = GetBadi;\r\n//# sourceMappingURL=get_badi.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_badi.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_bit.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_bit.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetBit = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass GetBit {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.GetBit = GetBit;\r\n//# sourceMappingURL=get_bit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_bit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_locale.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_locale.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetLocale = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass GetLocale {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.GetLocale = GetLocale;\r\n//# sourceMappingURL=get_locale.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_locale.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_parameter.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_parameter.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetParameter = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass GetParameter {\r\n    runSyntax(node, scope, filename) {\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        const inline = target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.CharacterType(40));\r\n        }\r\n        else if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.GetParameter = GetParameter;\r\n//# sourceMappingURL=get_parameter.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_parameter.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_reference.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_reference.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetReference = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass GetReference {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.GetReference = GetReference;\r\n//# sourceMappingURL=get_reference.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_reference.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_run_time.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_run_time.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetRunTime = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass GetRunTime {\r\n    runSyntax(node, scope, filename) {\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        const inline = target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.IntegerType());\r\n        }\r\n        else if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.GetRunTime = GetRunTime;\r\n//# sourceMappingURL=get_run_time.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_run_time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_time.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_time.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GetTime = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass GetTime {\r\n    runSyntax(node, scope, filename) {\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        const inline = target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.PackedType(8, 0));\r\n        }\r\n        else if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.GetTime = GetTime;\r\n//# sourceMappingURL=get_time.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_time.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/if.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/if.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.If = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst cond_1 = __webpack_require__(/*! ../expressions/cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nclass If {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Cond)) {\r\n            new cond_1.Cond().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.If = If;\r\n//# sourceMappingURL=if.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/if.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Import = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Import {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Import = Import;\r\n//# sourceMappingURL=import.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import_dynpro.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import_dynpro.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ImportDynpro = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass ImportDynpro {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ImportDynpro = ImportDynpro;\r\n//# sourceMappingURL=import_dynpro.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import_dynpro.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/include_type.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/include_type.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IncludeType = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nclass IncludeType {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const components = [];\r\n        const iname = node.findFirstExpression(Expressions.TypeName);\r\n        if (iname === undefined) {\r\n            throw new Error(\"IncludeType, unexpected node structure\");\r\n        }\r\n        const name = iname.getFirstToken().getStr();\r\n        let ityp = new basic_types_1.BasicTypes(filename, scope).parseType(iname);\r\n        const as = (_a = node.findExpressionAfterToken(\"AS\")) === null || _a === void 0 ? void 0 : _a.concatTokens();\r\n        if (as && ityp instanceof basic_1.StructureType) {\r\n            ityp = new basic_1.StructureType(ityp.getComponents().concat([{ name: as, type: ityp }]));\r\n        }\r\n        if (ityp\r\n            && ityp instanceof _typed_identifier_1.TypedIdentifier\r\n            && ityp.getType() instanceof basic_1.StructureType) {\r\n            const stru = ityp.getType();\r\n            components.push(...stru.getComponents());\r\n        }\r\n        else if (ityp && ityp instanceof basic_1.StructureType) {\r\n            components.push(...ityp.getComponents());\r\n        }\r\n        else if (scope.getDDIC().inErrorNamespace(name) === false) {\r\n            return new basic_1.VoidType(name);\r\n        }\r\n        else {\r\n            throw new Error(\"IncludeType, type not found \\\"\" + iname.concatTokens() + \"\\\"\");\r\n        }\r\n        return components;\r\n    }\r\n}\r\nexports.IncludeType = IncludeType;\r\n//# sourceMappingURL=include_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/include_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_database.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_database.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertDatabase = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nconst database_table_1 = __webpack_require__(/*! ../expressions/database_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js\");\r\nclass InsertDatabase {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const d of node.findAllExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        const dbtab = node.findFirstExpression(Expressions.DatabaseTable);\r\n        if (dbtab !== undefined) {\r\n            new database_table_1.DatabaseTable().runSyntax(dbtab, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.InsertDatabase = InsertDatabase;\r\n//# sourceMappingURL=insert_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_internal.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_internal.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertInternal = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_fs_1 = __webpack_require__(/*! ../expressions/inline_fs */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_fs.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst fstarget_1 = __webpack_require__(/*! ../expressions/fstarget */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass InsertInternal {\r\n    runSyntax(node, scope, filename) {\r\n        let targetType;\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            targetType = new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n        if (targetType instanceof basic_1.TableType) {\r\n            targetType = targetType.getRowType();\r\n        }\r\n        const afterAssigning = node.findExpressionAfterToken(\"ASSIGNING\");\r\n        if ((afterAssigning === null || afterAssigning === void 0 ? void 0 : afterAssigning.get()) instanceof Expressions.FSTarget) {\r\n            let source = node.findDirectExpression(Expressions.SimpleSource2);\r\n            if (source === undefined) {\r\n                source = node.findDirectExpression(Expressions.Source);\r\n            }\r\n            const sourceType = source ? new source_1.Source().runSyntax(source, scope, filename, targetType) : targetType;\r\n            const inlinefs = afterAssigning === null || afterAssigning === void 0 ? void 0 : afterAssigning.findDirectExpression(Expressions.InlineFS);\r\n            if (inlinefs) {\r\n                new inline_fs_1.InlineFS().runSyntax(inlinefs, scope, filename, sourceType);\r\n            }\r\n            else {\r\n                new fstarget_1.FSTarget().runSyntax(afterAssigning, scope, filename, sourceType);\r\n            }\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.SimpleSource1)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.InsertInternal = InsertInternal;\r\n//# sourceMappingURL=insert_internal.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_internal.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_report.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_report.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InsertReport = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass InsertReport {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.InsertReport = InsertReport;\r\n//# sourceMappingURL=insert_report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/interface_deferred.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/interface_deferred.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InterfaceDeferred = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass InterfaceDeferred {\r\n    runSyntax(node, scope, _filename) {\r\n        var _a;\r\n        const name = (_a = node.findFirstExpression(Expressions.InterfaceName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        scope.addDeferred(name);\r\n    }\r\n}\r\nexports.InterfaceDeferred = InterfaceDeferred;\r\n//# sourceMappingURL=interface_deferred.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/interface_deferred.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/log_point.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/log_point.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LogPoint = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass LogPoint {\r\n    runSyntax(node, scope, filename) {\r\n        // just recurse\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.LogPoint = LogPoint;\r\n//# sourceMappingURL=log_point.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/log_point.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/loop.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/loop.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Loop = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst inline_fs_1 = __webpack_require__(/*! ../expressions/inline_fs */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_fs.js\");\r\nconst fstarget_1 = __webpack_require__(/*! ../expressions/fstarget */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js\");\r\nconst component_compare_1 = __webpack_require__(/*! ../expressions/component_compare */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare.js\");\r\nconst component_cond_1 = __webpack_require__(/*! ../expressions/component_cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_cond.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass Loop {\r\n    runSyntax(node, scope, filename) {\r\n        let target = node.findDirectExpression(Expressions.Target);\r\n        const targetType = target ? new target_1.Target().runSyntax(target, scope, filename) : undefined;\r\n        if (target === undefined) {\r\n            target = node.findDirectExpression(Expressions.FSTarget);\r\n        }\r\n        const sources = node.findDirectExpressions(Expressions.Source);\r\n        let firstSource = node.findDirectExpression(Expressions.SimpleSource2);\r\n        if (firstSource === undefined) {\r\n            firstSource = sources[0];\r\n        }\r\n        let sourceType = firstSource ? new source_1.Source().runSyntax(firstSource, scope, filename, targetType) : undefined;\r\n        if (sourceType === undefined) {\r\n            throw new Error(\"No source type determined\");\r\n        }\r\n        else if (sourceType instanceof basic_1.UnknownType) {\r\n            throw new Error(\"Loop, not a table type, \" + sourceType.getError());\r\n        }\r\n        else if (!(sourceType instanceof basic_1.TableType) && !(sourceType instanceof basic_1.VoidType)) {\r\n            throw new Error(\"Loop, not a table type\");\r\n        }\r\n        if (sourceType instanceof basic_1.TableType) {\r\n            sourceType = sourceType.getRowType();\r\n            if (node.concatTokens().toUpperCase().includes(\" REFERENCE INTO \")) {\r\n                sourceType = new basic_1.DataReference(sourceType);\r\n            }\r\n        }\r\n        const inline = target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, sourceType);\r\n        }\r\n        for (const s of sources) {\r\n            if (s === firstSource) {\r\n                continue;\r\n            }\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        const inlinefs = target === null || target === void 0 ? void 0 : target.findDirectExpression(Expressions.InlineFS);\r\n        if (inlinefs) {\r\n            new inline_fs_1.InlineFS().runSyntax(inlinefs, scope, filename, sourceType);\r\n        }\r\n        else {\r\n            const fstarget = node.findDirectExpression(Expressions.FSTarget);\r\n            if (fstarget) {\r\n                new fstarget_1.FSTarget().runSyntax(fstarget, scope, filename, sourceType);\r\n            }\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.ComponentCompare)) {\r\n            new component_compare_1.ComponentCompare().runSyntax(t, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.ComponentCond)) {\r\n            new component_cond_1.ComponentCond().runSyntax(t, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Loop = Loop;\r\n//# sourceMappingURL=loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/message.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/message.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Message = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst message_source_1 = __webpack_require__(/*! ../expressions/message_source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/message_source.js\");\r\nclass Message {\r\n    runSyntax(node, scope, filename) {\r\n        const found = node.findExpressionAfterToken(\"INTO\");\r\n        const inline = found === null || found === void 0 ? void 0 : found.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, new basic_1.StringType());\r\n        }\r\n        else if (found) {\r\n            new target_1.Target().runSyntax(found, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.SimpleSource3)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.MessageSource)) {\r\n            new message_source_1.MessageSource().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Message = Message;\r\n//# sourceMappingURL=message.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/message.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/method_implementation.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/method_implementation.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodImplementation = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ../_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass MethodImplementation {\r\n    runSyntax(node, scope, filename) {\r\n        const helper = new _object_oriented_1.ObjectOriented(scope);\r\n        const className = scope.getName();\r\n        const methodToken = node.findFirstExpression(Expressions.MethodName).getFirstToken();\r\n        const methodName = methodToken === null || methodToken === void 0 ? void 0 : methodToken.getStr();\r\n        scope.push(_scope_type_1.ScopeType.Method, methodName, node.getFirstToken().getStart(), filename);\r\n        const classDefinition = scope.findClassDefinition(className);\r\n        if (classDefinition === undefined) {\r\n            scope.pop(node.getLastToken().getEnd());\r\n            throw new Error(\"Class definition for \\\"\" + className + \"\\\" not found\");\r\n        }\r\n        const { method: methodDefinition } = helper.searchMethodName(classDefinition, methodName);\r\n        if (methodDefinition === undefined) {\r\n            scope.pop(node.getLastToken().getEnd());\r\n            throw new Error(\"Method definition \\\"\" + methodName + \"\\\" not found\");\r\n        }\r\n        scope.addReference(methodToken, methodDefinition, _reference_1.ReferenceType.MethodImplementationReference, filename);\r\n        scope.addList(methodDefinition.getParameters().getAll());\r\n        for (const i of helper.findInterfaces(classDefinition)) {\r\n            if (methodName.toUpperCase().startsWith(i.name.toUpperCase() + \"~\") === false) {\r\n                continue;\r\n            }\r\n            const idef = scope.findInterfaceDefinition(i.name);\r\n            if (idef === undefined) {\r\n                continue;\r\n            }\r\n            scope.addReference(methodToken, idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n        }\r\n    }\r\n}\r\nexports.MethodImplementation = MethodImplementation;\r\n//# sourceMappingURL=method_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/method_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/modify_database.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/modify_database.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModifyDatabase = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nconst database_table_1 = __webpack_require__(/*! ../expressions/database_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js\");\r\nclass ModifyDatabase {\r\n    runSyntax(node, scope, filename) {\r\n        for (const d of node.findAllExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        const dbtab = node.findFirstExpression(Expressions.DatabaseTable);\r\n        if (dbtab !== undefined) {\r\n            new database_table_1.DatabaseTable().runSyntax(dbtab, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ModifyDatabase = ModifyDatabase;\r\n//# sourceMappingURL=modify_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/modify_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Move = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst _type_utils_1 = __webpack_require__(/*! ../_type_utils */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_type_utils.js\");\r\nclass Move {\r\n    runSyntax(node, scope, filename) {\r\n        const targets = node.findDirectExpressions(Expressions.Target);\r\n        const firstTarget = targets[0];\r\n        const inline = firstTarget === null || firstTarget === void 0 ? void 0 : firstTarget.findDirectExpression(Expressions.InlineData);\r\n        let targetType = undefined;\r\n        if (inline === undefined) {\r\n            targetType = firstTarget ? new target_1.Target().runSyntax(firstTarget, scope, filename) : undefined;\r\n            for (const t of targets) {\r\n                if (t === firstTarget) {\r\n                    continue;\r\n                }\r\n                new target_1.Target().runSyntax(t, scope, filename);\r\n            }\r\n        }\r\n        const source = node.findDirectExpression(Expressions.Source);\r\n        const sourceType = source ? new source_1.Source().runSyntax(source, scope, filename, targetType) : undefined;\r\n        if (sourceType === undefined) {\r\n            throw new Error(\"No source type determined\");\r\n        }\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, sourceType);\r\n            targetType = sourceType;\r\n        }\r\n        if (_type_utils_1.TypeUtils.isAssignable(sourceType, targetType) === false) {\r\n            throw new Error(\"Incompatible types\");\r\n        }\r\n    }\r\n}\r\nexports.Move = Move;\r\n//# sourceMappingURL=move.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move_corresponding.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move_corresponding.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MoveCorresponding = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass MoveCorresponding {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.MoveCorresponding = MoveCorresponding;\r\n//# sourceMappingURL=move_corresponding.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move_corresponding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/multiply.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/multiply.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Multiply = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Multiply {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Multiply = Multiply;\r\n//# sourceMappingURL=multiply.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/multiply.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/open_dataset.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/open_dataset.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OpenDataset = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass OpenDataset {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.OpenDataset = OpenDataset;\r\n//# sourceMappingURL=open_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/open_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/pack.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/pack.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Pack = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Pack {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Pack = Pack;\r\n//# sourceMappingURL=pack.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/pack.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/parameter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/parameter.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Parameter = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nclass Parameter {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const nameToken = (_a = node.findFirstExpression(Expressions.FieldSub)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        const bfound = new basic_types_1.BasicTypes(filename, scope).parseType(node);\r\n        if (nameToken && bfound) {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(nameToken, filename, bfound));\r\n            return;\r\n        }\r\n        if (nameToken) {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(nameToken, filename, new basic_1.UnknownType(\"Parameter, fallback\")));\r\n        }\r\n    }\r\n}\r\nexports.Parameter = Parameter;\r\n//# sourceMappingURL=parameter.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/parameter.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/perform.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/perform.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Perform = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass Perform {\r\n    runSyntax(node, scope, filename) {\r\n        if (!(node.get() instanceof Statements.Perform)) {\r\n            throw new Error(\"checkPerform unexpected node type\");\r\n        }\r\n        ////////////////////////////\r\n        // check parameters are defined\r\n        for (const c of node.findDirectExpressions(Expressions.PerformChanging)) {\r\n            for (const s of c.findDirectExpressions(Expressions.Source)) {\r\n                new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.PerformTables)) {\r\n            for (const s of t.findDirectExpressions(Expressions.Source)) {\r\n                new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n        }\r\n        for (const u of node.findDirectExpressions(Expressions.PerformUsing)) {\r\n            for (const s of u.findDirectExpressions(Expressions.Source)) {\r\n                new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n        }\r\n        ////////////////////////////\r\n        // find FORM definition\r\n        if (node.findFirstExpression(Expressions.IncludeName)) {\r\n            return; // in external program, not checked, todo\r\n        }\r\n        if (node.findFirstExpression(Expressions.Dynamic)) {\r\n            return; // todo, maybe some parts can be checked\r\n        }\r\n        const expr = node.findFirstExpression(Expressions.FormName);\r\n        if (expr === undefined) {\r\n            return; // it might be a dynamic call\r\n        }\r\n        const name = expr.concatTokens();\r\n        const found = scope.findFormDefinition(name);\r\n        if (found === undefined) {\r\n            throw new Error(\"FORM definition \\\"\" + name + \"\\\" not found\");\r\n        }\r\n        scope.addReference(expr.getFirstToken(), found, _reference_1.ReferenceType.FormReference, filename);\r\n        // todo, also check parameters match\r\n    }\r\n}\r\nexports.Perform = Perform;\r\n//# sourceMappingURL=perform.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/perform.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Raise = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst message_source_1 = __webpack_require__(/*! ../expressions/message_source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/message_source.js\");\r\nclass Raise {\r\n    runSyntax(node, scope, filename) {\r\n        // todo\r\n        var _a;\r\n        const classTok = (_a = node.findDirectExpression(Expressions.ClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        const classNam = classTok === null || classTok === void 0 ? void 0 : classTok.getStr();\r\n        if (classNam) {\r\n            const found = scope.existsObject(classNam);\r\n            if (found.found === true && found.id) {\r\n                scope.addReference(classTok, found.id, found.type, filename);\r\n            }\r\n            else if (scope.getDDIC().inErrorNamespace(classNam) === false) {\r\n                const extra = { ooName: classNam, ooType: \"Void\" };\r\n                scope.addReference(classTok, undefined, _reference_1.ReferenceType.ObjectOrientedVoidReference, filename, extra);\r\n            }\r\n            else {\r\n                throw new Error(\"RAISE, unknown class \" + classNam);\r\n            }\r\n        }\r\n        let prev = \"\";\r\n        for (const c of node.getChildren()) {\r\n            if (c instanceof nodes_1.ExpressionNode\r\n                && (c.get() instanceof Expressions.SimpleSource2 || c.get() instanceof Expressions.Source)) {\r\n                const type = new source_1.Source().runSyntax(c, scope, filename);\r\n                if (prev === \"EXCEPTION\"\r\n                    && type\r\n                    && !(type instanceof basic_1.VoidType)\r\n                    && !(type instanceof basic_1.ObjectReferenceType)) {\r\n                    throw new Error(\"RAISE EXCEPTION, must be object reference, got \" + type.constructor.name);\r\n                }\r\n            }\r\n            prev = c.concatTokens().toUpperCase();\r\n        }\r\n        // todo, check parameters vs constructor\r\n        const param = node.findDirectExpression(Expressions.ParameterListS);\r\n        if (param) {\r\n            for (const s of param.findAllExpressions(Expressions.Source)) {\r\n                new source_1.Source().runSyntax(s, scope, filename);\r\n            }\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.SimpleSource2)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.MessageSource)) {\r\n            new message_source_1.MessageSource().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Raise = Raise;\r\n//# sourceMappingURL=raise.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise_event.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise_event.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RaiseEvent = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass RaiseEvent {\r\n    runSyntax(node, scope, filename) {\r\n        // todo: only possible in classes\r\n        const f = node.findDirectExpression(Expressions.Field);\r\n        if (f === null || f === void 0 ? void 0 : f.concatTokens().includes(\"~\")) {\r\n            const name = f.concatTokens().split(\"~\")[0];\r\n            const idef = scope.findInterfaceDefinition(name);\r\n            if (idef) {\r\n                scope.addReference(f.getFirstToken(), idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n            }\r\n        }\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.RaiseEvent = RaiseEvent;\r\n//# sourceMappingURL=raise_event.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise_event.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/ranges.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/ranges.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Ranges = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nclass Ranges {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const nameToken = (_a = node.findFirstExpression(Expressions.SimpleName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        const typeExpression = node.findFirstExpression(Expressions.FieldSub);\r\n        if (typeExpression === undefined) {\r\n            throw new Error(\"Ranges, unexpected node\");\r\n        }\r\n        const found = new basic_types_1.BasicTypes(filename, scope).parseType(typeExpression);\r\n        if (found && nameToken) {\r\n            const structure = new basic_1.StructureType([\r\n                { name: \"sign\", type: new basic_1.CharacterType(1) },\r\n                { name: \"option\", type: new basic_1.CharacterType(2) },\r\n                { name: \"low\", type: found },\r\n                { name: \"high\", type: found },\r\n            ]);\r\n            const type = new basic_1.TableType(structure, { withHeader: true });\r\n            const id = new _typed_identifier_1.TypedIdentifier(nameToken, filename, type);\r\n            scope.addIdentifier(id);\r\n        }\r\n    }\r\n}\r\nexports.Ranges = Ranges;\r\n//# sourceMappingURL=ranges.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/ranges.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_report.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_report.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadReport = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass ReadReport {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.ReadReport = ReadReport;\r\n//# sourceMappingURL=read_report.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_report.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_table.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_table.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReadTable = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst fstarget_1 = __webpack_require__(/*! ../expressions/fstarget */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/fstarget.js\");\r\nconst component_compare_simple_1 = __webpack_require__(/*! ../expressions/component_compare_simple */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/component_compare_simple.js\");\r\nclass ReadTable {\r\n    runSyntax(node, scope, filename) {\r\n        const sources = node.findDirectExpressions(Expressions.Source);\r\n        const components = node.findDirectExpression(Expressions.ComponentCompareSimple);\r\n        if (components !== undefined) {\r\n            new component_compare_simple_1.ComponentCompareSimple().runSyntax(components, scope, filename);\r\n        }\r\n        let firstSource = node.findDirectExpression(Expressions.SimpleSource2);\r\n        if (firstSource === undefined) {\r\n            firstSource = sources[0];\r\n        }\r\n        let sourceType = firstSource ? new source_1.Source().runSyntax(firstSource, scope, filename) : undefined;\r\n        if (sourceType === undefined) {\r\n            throw new Error(\"No source type determined, read table\");\r\n        }\r\n        else if (!(sourceType instanceof basic_1.TableType) && !(sourceType instanceof basic_1.VoidType)) {\r\n            throw new Error(\"Read table, not a table type\");\r\n        }\r\n        if (sourceType instanceof basic_1.TableType) {\r\n            sourceType = sourceType.getRowType();\r\n        }\r\n        for (const s of sources) {\r\n            if (s === firstSource) {\r\n                continue;\r\n            }\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        const target = node.findDirectExpression(Expressions.ReadTableTarget);\r\n        if (target) {\r\n            const inline = target.findFirstExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, sourceType);\r\n                return;\r\n            }\r\n            const fst = target.findDirectExpression(Expressions.FSTarget);\r\n            if (fst) {\r\n                new fstarget_1.FSTarget().runSyntax(fst, scope, filename, sourceType);\r\n                return;\r\n            }\r\n            /*\r\n                  const inlinefs = target.findFirstExpression(Expressions.InlineFS);\r\n                  if (inlinefs) {\r\n                    new InlineFS().runSyntax(inlinefs, scope, filename, sourceType);\r\n                    return;\r\n                  }\r\n            */\r\n            const t = target.findFirstExpression(Expressions.Target);\r\n            if (t) {\r\n                new target_1.Target().runSyntax(t, scope, filename);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ReadTable = ReadTable;\r\n//# sourceMappingURL=read_table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/receive.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/receive.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Receive = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass Receive {\r\n    runSyntax(node, scope, filename) {\r\n        // todo, lots of work here, similar to call_function.ts\r\n        // just recurse\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findAllExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Receive = Receive;\r\n//# sourceMappingURL=receive.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/receive.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/replace.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/replace.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Replace = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Replace {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Replace = Replace;\r\n//# sourceMappingURL=replace.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/replace.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/scan.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/scan.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Scan = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Scan {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Scan = Scan;\r\n//# sourceMappingURL=scan.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/scan.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Select = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst select_1 = __webpack_require__(/*! ../expressions/select */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select.js\");\r\nclass Select {\r\n    runSyntax(node, scope, filename) {\r\n        const s = node.findDirectExpression(Expressions.Select);\r\n        if (s) {\r\n            new select_1.Select().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Select = Select;\r\n//# sourceMappingURL=select.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select_loop.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select_loop.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectLoop = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst select_loop_1 = __webpack_require__(/*! ../expressions/select_loop */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select_loop.js\");\r\nclass SelectLoop {\r\n    runSyntax(node, scope, filename) {\r\n        const s = node.findDirectExpression(Expressions.SelectLoop);\r\n        if (s) {\r\n            new select_loop_1.SelectLoop().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SelectLoop = SelectLoop;\r\n//# sourceMappingURL=select_loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select_loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selection_screen.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selection_screen.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectionScreen = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass SelectionScreen {\r\n    runSyntax(node, scope, filename) {\r\n        const field = node.findFirstExpression(Expressions.InlineField);\r\n        if (field === undefined) {\r\n            return;\r\n        }\r\n        const name = field.getFirstToken();\r\n        const concat = node.concatTokens().toUpperCase();\r\n        if (concat.includes(\"BEGIN OF TABBED BLOCK\")) {\r\n            const type = new basic_1.StructureType([\r\n                { name: \"PROG\", type: new basic_1.CharacterType(40) },\r\n                { name: \"DYNNR\", type: new basic_1.CharacterType(4) },\r\n                { name: \"ACTIVETAB\", type: new basic_1.CharacterType(132) },\r\n            ]);\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(name, filename, type));\r\n        }\r\n        else {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(name, filename, new basic_1.CharacterType(83)));\r\n        }\r\n    }\r\n}\r\nexports.SelectionScreen = SelectionScreen;\r\n//# sourceMappingURL=selection_screen.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selection_screen.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selectoption.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selectoption.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectOption = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass SelectOption {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const nameToken = (_a = node.findFirstExpression(Expressions.FieldSub)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        for (const d of node.findDirectExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        const nameExpression = node.findFirstExpression(Expressions.FieldChain);\r\n        let found = new basic_types_1.BasicTypes(filename, scope).resolveLikeName(nameExpression);\r\n        if (found && nameToken) {\r\n            if (found instanceof basic_1.StructureType) {\r\n                let length = 0;\r\n                for (const c of found.getComponents()) {\r\n                    if (c.type instanceof basic_1.CharacterType) {\r\n                        length += c.type.getLength();\r\n                    }\r\n                }\r\n                if (length === 0) {\r\n                    found = new basic_1.VoidType(\"Selectoption, fallback\");\r\n                }\r\n                else {\r\n                    found = new basic_1.CharacterType(length);\r\n                }\r\n            }\r\n            const stru = new basic_1.StructureType([\r\n                { name: \"SIGN\", type: new basic_1.CharacterType(1) },\r\n                { name: \"OPTION\", type: new basic_1.CharacterType(2) },\r\n                { name: \"LOW\", type: found },\r\n                { name: \"HIGH\", type: found },\r\n            ]);\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(nameToken, filename, new basic_1.TableType(stru, { withHeader: true })));\r\n            return;\r\n        }\r\n        if (nameToken) {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(nameToken, filename, new basic_1.UnknownType(\"Select option, fallback\")));\r\n        }\r\n    }\r\n}\r\nexports.SelectOption = SelectOption;\r\n//# sourceMappingURL=selectoption.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selectoption.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_handler.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_handler.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetHandler = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass SetHandler {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SetHandler = SetHandler;\r\n//# sourceMappingURL=set_handler.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_handler.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_locale.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_locale.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetLocale = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass SetLocale {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SetLocale = SetLocale;\r\n//# sourceMappingURL=set_locale.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_locale.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_parameter.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_parameter.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetParameter = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass SetParameter {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SetParameter = SetParameter;\r\n//# sourceMappingURL=set_parameter.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_parameter.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_pf_status.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_pf_status.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetPFStatus = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass SetPFStatus {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SetPFStatus = SetPFStatus;\r\n//# sourceMappingURL=set_pf_status.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_pf_status.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_titlebar.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_titlebar.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SetTitlebar = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass SetTitlebar {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SetTitlebar = SetTitlebar;\r\n//# sourceMappingURL=set_titlebar.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_titlebar.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/shift.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/shift.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Shift = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Shift {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Shift = Shift;\r\n//# sourceMappingURL=shift.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/shift.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/sort.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/sort.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Sort = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass Sort {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Sort = Sort;\r\n//# sourceMappingURL=sort.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/sort.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/split.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/split.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Split = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Split {\r\n    runSyntax(node, scope, filename) {\r\n        const type = node.findTokenSequencePosition(\"INTO\", \"TABLE\") ? new basic_1.TableType(new basic_1.StringType(), { withHeader: false }) : new basic_1.StringType();\r\n        for (const target of node.findAllExpressions(Expressions.Target)) {\r\n            const inline = target.findDirectExpression(Expressions.InlineData);\r\n            if (inline) {\r\n                new inline_data_1.InlineData().runSyntax(inline, scope, filename, type);\r\n            }\r\n            else {\r\n                new target_1.Target().runSyntax(target, scope, filename);\r\n            }\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Split = Split;\r\n//# sourceMappingURL=split.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/split.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/static.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/static.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Static = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst type_table_1 = __webpack_require__(/*! ../expressions/type_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/type_table.js\");\r\nclass Static {\r\n    runSyntax(node, scope, filename) {\r\n        const tt = node.findFirstExpression(Expressions.TypeTable);\r\n        if (tt) {\r\n            const ttfound = new type_table_1.TypeTable().runSyntax(node, scope, filename);\r\n            if (ttfound) {\r\n                return ttfound;\r\n            }\r\n        }\r\n        const found = new basic_types_1.BasicTypes(filename, scope).simpleType(node);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        const fallback = node.findFirstExpression(Expressions.NamespaceSimpleName);\r\n        if (fallback) {\r\n            return new _typed_identifier_1.TypedIdentifier(fallback.getFirstToken(), filename, new basic_1.UnknownType(\"Static, fallback\"));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.Static = Static;\r\n//# sourceMappingURL=static.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/static.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/submit.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/submit.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Submit = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Submit {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Submit = Submit;\r\n//# sourceMappingURL=submit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/submit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Subtract = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Subtract {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Subtract = Subtract;\r\n//# sourceMappingURL=subtract.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract_corresponding.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract_corresponding.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SubtractCorresponding = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass SubtractCorresponding {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SubtractCorresponding = SubtractCorresponding;\r\n//# sourceMappingURL=subtract_corresponding.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract_corresponding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/syntax_check.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/syntax_check.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SyntaxCheck = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass SyntaxCheck {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SyntaxCheck = SyntaxCheck;\r\n//# sourceMappingURL=syntax_check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/syntax_check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/system_call.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/system_call.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SystemCall = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass SystemCall {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.SystemCall = SystemCall;\r\n//# sourceMappingURL=system_call.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/system_call.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/tables.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/tables.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Tables = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass Tables {\r\n    runSyntax(node, scope, filename) {\r\n        var _a, _b;\r\n        const nameToken = (_a = node.findFirstExpression(Expressions.Field)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        if (nameToken === undefined) {\r\n            return undefined;\r\n        }\r\n        let name = nameToken.getStr();\r\n        if (name.startsWith(\"*\")) {\r\n            name = name.substr(1);\r\n        }\r\n        const found = (_b = scope.getDDIC()) === null || _b === void 0 ? void 0 : _b.lookupTableOrView(name);\r\n        if (found) {\r\n            scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(nameToken, filename, found));\r\n            return;\r\n        }\r\n        scope.addIdentifier(new _typed_identifier_1.TypedIdentifier(nameToken, filename, new basic_1.UnknownType(\"Tables, fallback\")));\r\n    }\r\n}\r\nexports.Tables = Tables;\r\n//# sourceMappingURL=tables.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/tables.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/transfer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/transfer.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Transfer = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Transfer {\r\n    runSyntax(node, scope, filename) {\r\n        for (const source of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(source, scope, filename);\r\n        }\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Transfer = Transfer;\r\n//# sourceMappingURL=transfer.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/transfer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/truncate_dataset.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/truncate_dataset.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TruncateDataset = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass TruncateDataset {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.TruncateDataset = TruncateDataset;\r\n//# sourceMappingURL=truncate_dataset.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/truncate_dataset.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/type.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/type.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Type = void 0;\r\nconst basic_types_1 = __webpack_require__(/*! ../basic_types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/basic_types.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst type_table_1 = __webpack_require__(/*! ../expressions/type_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/type_table.js\");\r\nclass Type {\r\n    runSyntax(node, scope, filename) {\r\n        const tt = node.findFirstExpression(Expressions.TypeTable);\r\n        if (tt) {\r\n            return new type_table_1.TypeTable().runSyntax(node, scope, filename);\r\n        }\r\n        const found = new basic_types_1.BasicTypes(filename, scope).simpleType(node);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        const fallback = node.findFirstExpression(Expressions.NamespaceSimpleName);\r\n        if (fallback) {\r\n            return new _typed_identifier_1.TypedIdentifier(fallback.getFirstToken(), filename, new basic_1.UnknownType(\"Type, fallback\"));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.Type = Type;\r\n//# sourceMappingURL=type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/unpack.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/unpack.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Unpack = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass Unpack {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Unpack = Unpack;\r\n//# sourceMappingURL=unpack.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/unpack.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/update_database.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/update_database.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UpdateDatabase = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst identifier_1 = __webpack_require__(/*! ../../1_lexer/tokens/identifier */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/identifier.js\");\r\nconst database_table_1 = __webpack_require__(/*! ../expressions/database_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/database_table.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass UpdateDatabase {\r\n    runSyntax(node, scope, filename) {\r\n        const dbtab = node.findFirstExpression(Expressions.DatabaseTable);\r\n        if (dbtab !== undefined) {\r\n            new database_table_1.DatabaseTable().runSyntax(dbtab, scope, filename);\r\n        }\r\n        const tableName = node.findDirectExpression(Expressions.DatabaseTable);\r\n        const tokenName = tableName === null || tableName === void 0 ? void 0 : tableName.getFirstToken();\r\n        if (tableName && tokenName) {\r\n            // todo, this also finds structures, it should only find transparent tables\r\n            const found = scope.getDDIC().lookupTable(tokenName.getStr());\r\n            if (found instanceof basic_1.StructureType) {\r\n                scope.push(_scope_type_1.ScopeType.OpenSQL, \"UPDATE\", tokenName.getStart(), filename);\r\n                for (const field of found.getComponents()) {\r\n                    const fieldToken = new identifier_1.Identifier(node.getFirstToken().getStart(), field.name);\r\n                    const id = new _typed_identifier_1.TypedIdentifier(fieldToken, filename, field.type);\r\n                    scope.addIdentifier(id);\r\n                }\r\n            }\r\n        }\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const d of node.findAllExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(d, scope, filename);\r\n        }\r\n        if (scope.getType() === _scope_type_1.ScopeType.OpenSQL) {\r\n            scope.pop(node.getLastToken().getEnd());\r\n        }\r\n    }\r\n}\r\nexports.UpdateDatabase = UpdateDatabase;\r\n//# sourceMappingURL=update_database.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/update_database.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/wait.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/wait.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Wait = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst cond_1 = __webpack_require__(/*! ../expressions/cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nclass Wait {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const t of node.findDirectExpressions(Expressions.Cond)) {\r\n            new cond_1.Cond().runSyntax(t, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Wait = Wait;\r\n//# sourceMappingURL=wait.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/wait.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.When = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nclass When {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.When = When;\r\n//# sourceMappingURL=when.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when_type.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when_type.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WhenType = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst inline_data_1 = __webpack_require__(/*! ../expressions/inline_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/inline_data.js\");\r\nclass WhenType {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const nameToken = (_a = node.findFirstExpression(Expressions.ClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        if (nameToken === undefined) {\r\n            return undefined;\r\n        }\r\n        let type = undefined;\r\n        const className = nameToken.getStr();\r\n        const found = scope.findObjectDefinition(className);\r\n        if (found === undefined && scope.getDDIC().inErrorNamespace(className) === false) {\r\n            type = new basic_1.VoidType(className);\r\n        }\r\n        else if (found === undefined) {\r\n            throw new Error(\"Class \" + className + \" not found\");\r\n        }\r\n        else {\r\n            type = new basic_1.ObjectReferenceType(found);\r\n        }\r\n        const inline = node === null || node === void 0 ? void 0 : node.findDirectExpression(Expressions.InlineData);\r\n        if (inline) {\r\n            new inline_data_1.InlineData().runSyntax(inline, scope, filename, type);\r\n        }\r\n    }\r\n}\r\nexports.WhenType = WhenType;\r\n//# sourceMappingURL=when_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/while.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/while.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.While = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst cond_1 = __webpack_require__(/*! ../expressions/cond */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/cond.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nclass While {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findDirectExpressions(Expressions.Cond)) {\r\n            new cond_1.Cond().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findDirectExpressions(Expressions.Target)) {\r\n            new target_1.Target().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.While = While;\r\n//# sourceMappingURL=while.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/while.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.With = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst select_1 = __webpack_require__(/*! ../expressions/select */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select.js\");\r\nconst select_loop_1 = __webpack_require__(/*! ../expressions/select_loop */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select_loop.js\");\r\nclass With {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Select)) {\r\n            new select_1.Select().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findAllExpressions(Expressions.SelectLoop)) {\r\n            new select_loop_1.SelectLoop().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.With = With;\r\n//# sourceMappingURL=with.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with_loop.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with_loop.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WithLoop = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst select_1 = __webpack_require__(/*! ../expressions/select */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select.js\");\r\nconst select_loop_1 = __webpack_require__(/*! ../expressions/select_loop */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/select_loop.js\");\r\nclass WithLoop {\r\n    runSyntax(node, scope, filename) {\r\n        for (const s of node.findAllExpressions(Expressions.Select)) {\r\n            new select_1.Select().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findAllExpressions(Expressions.SelectLoop)) {\r\n            new select_loop_1.SelectLoop().runSyntax(s, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.WithLoop = WithLoop;\r\n//# sourceMappingURL=with_loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with_loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/write.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/write.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Write = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst source_1 = __webpack_require__(/*! ../expressions/source */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/source.js\");\r\nconst target_1 = __webpack_require__(/*! ../expressions/target */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/target.js\");\r\nconst dynamic_1 = __webpack_require__(/*! ../expressions/dynamic */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/dynamic.js\");\r\nclass Write {\r\n    runSyntax(node, scope, filename) {\r\n        // todo, more\r\n        for (const s of node.findAllExpressions(Expressions.Source)) {\r\n            new source_1.Source().runSyntax(s, scope, filename);\r\n        }\r\n        for (const s of node.findAllExpressions(Expressions.Dynamic)) {\r\n            new dynamic_1.Dynamic().runSyntax(s, scope, filename);\r\n        }\r\n        const target = node.findDirectExpression(Expressions.Target);\r\n        if (target) {\r\n            new target_1.Target().runSyntax(target, scope, filename);\r\n        }\r\n    }\r\n}\r\nexports.Write = Write;\r\n//# sourceMappingURL=write.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/write.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/class_data.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/class_data.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassData = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst Basic = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst class_data_1 = __webpack_require__(/*! ../statements/class_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_data.js\");\r\nclass ClassData {\r\n    runSyntax(node, scope, filename) {\r\n        const name = node.findFirstExpression(Expressions.NamespaceSimpleName).getFirstToken();\r\n        const components = [];\r\n        for (const c of node.getChildren()) {\r\n            const ctyp = c.get();\r\n            if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.ClassData) {\r\n                const found = new class_data_1.ClassData().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                }\r\n            }\r\n            // todo, nested structures and INCLUDES\r\n        }\r\n        return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.StructureType(components), [\"static\" /* Static */]);\r\n    }\r\n}\r\nexports.ClassData = ClassData;\r\n//# sourceMappingURL=class_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/class_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/constants.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/constants.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Constants = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst Basic = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst constant_1 = __webpack_require__(/*! ../statements/constant */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/constant.js\");\r\nclass Constants {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        const name = (_a = node.findFirstExpression(Expressions.DefinitionName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        if (name === undefined) {\r\n            throw new Error(\"Constants, structure, unexpected node\");\r\n        }\r\n        const components = [];\r\n        const values = {};\r\n        for (const c of node.getChildren()) {\r\n            const ctyp = c.get();\r\n            if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.Constant) {\r\n                const found = new constant_1.Constant().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                    values[found.getName()] = found.getValue();\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StructureNode && ctyp instanceof Structures.Constants) {\r\n                const { type: found, values: val } = new Constants().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                    values[found.getName()] = val;\r\n                }\r\n            }\r\n        }\r\n        if (components.length === 0) {\r\n            return { type: undefined, values };\r\n        }\r\n        const type = new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.StructureType(components), [\"read_only\" /* ReadOnly */, \"static\" /* Static */]);\r\n        return { type, values };\r\n    }\r\n}\r\nexports.Constants = Constants;\r\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/constants.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/data.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/data.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Data = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst Basic = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst data_1 = __webpack_require__(/*! ../statements/data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/data.js\");\r\nclass Data {\r\n    runSyntax(node, scope, filename) {\r\n        var _a, _b;\r\n        const name = node.findFirstExpression(Expressions.DefinitionName).getFirstToken();\r\n        let table = false;\r\n        const components = [];\r\n        for (const c of node.getChildren()) {\r\n            const ctyp = c.get();\r\n            if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.Data) {\r\n                const found = new data_1.Data().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StructureNode && ctyp instanceof Structures.Data) {\r\n                const found = new Data().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.DataBegin) {\r\n                if (c.findDirectTokenByText(\"OCCURS\")) {\r\n                    table = true;\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.IncludeType) {\r\n                // INCLUDES\r\n                const typeName = (_a = c.findFirstExpression(Expressions.TypeName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr();\r\n                let found = (_b = scope.findType(typeName)) === null || _b === void 0 ? void 0 : _b.getType();\r\n                if (found === undefined) {\r\n                    const f = scope.getDDIC().lookupTableOrView(typeName);\r\n                    if (f instanceof _typed_identifier_1.TypedIdentifier) {\r\n                        found = f.getType();\r\n                    }\r\n                    else {\r\n                        found = f;\r\n                    }\r\n                }\r\n                if (found instanceof Basic.VoidType) {\r\n                    if (table === true) {\r\n                        return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.TableType(found, { withHeader: true }));\r\n                    }\r\n                    else {\r\n                        return new _typed_identifier_1.TypedIdentifier(name, filename, found);\r\n                    }\r\n                }\r\n                if (found instanceof Basic.UnknownType) {\r\n                    return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.UnknownType(\"unknown type, \" + typeName));\r\n                }\r\n                if (!(found instanceof Basic.StructureType)) {\r\n                    throw new Error(\"not structured, \" + typeName);\r\n                }\r\n                for (const c of found.getComponents()) {\r\n                    components.push(c);\r\n                }\r\n            }\r\n        }\r\n        if (table === true) {\r\n            return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.TableType(new Basic.StructureType(components), { withHeader: true }));\r\n        }\r\n        else {\r\n            return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.StructureType(components));\r\n        }\r\n    }\r\n}\r\nexports.Data = Data;\r\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/statics.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/statics.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Statics = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst Basic = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst static_1 = __webpack_require__(/*! ../statements/static */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/static.js\");\r\n// todo, this is much like DATA, refactor?\r\nclass Statics {\r\n    runSyntax(node, scope, filename) {\r\n        var _a, _b;\r\n        const name = node.findFirstExpression(Expressions.DefinitionName).getFirstToken();\r\n        let table = false;\r\n        const components = [];\r\n        for (const c of node.getChildren()) {\r\n            const ctyp = c.get();\r\n            if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.Static) {\r\n                const found = new static_1.Static().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StructureNode && ctyp instanceof Structures.Statics) {\r\n                const found = new Statics().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.StaticBegin) {\r\n                if (c.findDirectTokenByText(\"OCCURS\")) {\r\n                    table = true;\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && ctyp instanceof Statements.IncludeType) {\r\n                // INCLUDES\r\n                const typeName = (_a = c.findFirstExpression(Expressions.TypeName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr();\r\n                let found = (_b = scope.findType(typeName)) === null || _b === void 0 ? void 0 : _b.getType();\r\n                if (found === undefined) {\r\n                    const f = scope.getDDIC().lookupTableOrView(typeName);\r\n                    if (f instanceof _typed_identifier_1.TypedIdentifier) {\r\n                        found = f.getType();\r\n                    }\r\n                    else {\r\n                        found = f;\r\n                    }\r\n                }\r\n                if (found instanceof Basic.VoidType) {\r\n                    if (table === true) {\r\n                        return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.TableType(found, { withHeader: true }));\r\n                    }\r\n                    else {\r\n                        return new _typed_identifier_1.TypedIdentifier(name, filename, found);\r\n                    }\r\n                }\r\n                if (found instanceof Basic.UnknownType) {\r\n                    return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.UnknownType(\"unknown type, \" + typeName));\r\n                }\r\n                if (!(found instanceof Basic.StructureType)) {\r\n                    throw new Error(\"not structured, \" + typeName);\r\n                }\r\n                for (const c of found.getComponents()) {\r\n                    components.push(c);\r\n                }\r\n            }\r\n        }\r\n        if (table === true) {\r\n            return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.TableType(new Basic.StructureType(components), { withHeader: true }));\r\n        }\r\n        else {\r\n            return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.StructureType(components));\r\n        }\r\n    }\r\n}\r\nexports.Statics = Statics;\r\n//# sourceMappingURL=statics.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/statics.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/type_enum.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/type_enum.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeEnum = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst enum_type_1 = __webpack_require__(/*! ../../types/basic/enum_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/enum_type.js\");\r\nclass TypeEnum {\r\n    runSyntax(node, scope, filename) {\r\n        var _a;\r\n        if (!(node.get() instanceof Structures.TypeEnum)) {\r\n            throw new Error(\"TypeEnum, unexpected type\");\r\n        }\r\n        const begin = node.findDirectStatement(Statements.TypeEnumBegin);\r\n        if (begin === undefined) {\r\n            throw new Error(\"TypeEnum, unexpected type, begin\");\r\n        }\r\n        const ret = [];\r\n        for (const type of node.findDirectStatements(Statements.Type)) {\r\n            const expr = type.findFirstExpression(Expressions.NamespaceSimpleName);\r\n            if (expr === undefined) {\r\n                continue;\r\n            }\r\n            const token = expr.getFirstToken();\r\n            // integer is default if BASE TYPE is not specified\r\n            ret.push(new _typed_identifier_1.TypedIdentifier(token, filename, new basic_1.IntegerType()));\r\n        }\r\n        for (const type of node.findDirectStatements(Statements.TypeEnum)) {\r\n            const expr = type.findFirstExpression(Expressions.NamespaceSimpleName);\r\n            if (expr === undefined) {\r\n                continue;\r\n            }\r\n            const token = expr.getFirstToken();\r\n            // integer is default if BASE TYPE is not specified\r\n            ret.push(new _typed_identifier_1.TypedIdentifier(token, filename, new basic_1.IntegerType()));\r\n        }\r\n        const baseType = (_a = begin.findExpressionAfterToken(\"TYPE\")) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        const baseName = baseType === null || baseType === void 0 ? void 0 : baseType.getStr();\r\n        if (baseType && baseName) {\r\n            const found = scope.findType(baseName);\r\n            if (found) {\r\n                scope.addReference(baseType, found, _reference_1.ReferenceType.TypeReference, filename);\r\n            }\r\n        }\r\n        const name = begin.findFirstExpression(Expressions.NamespaceSimpleName);\r\n        if (name) {\r\n            const id = new _typed_identifier_1.TypedIdentifier(name.getFirstToken(), filename, new enum_type_1.EnumType(), [\"enum\" /* Enum */]);\r\n            scope.addType(id);\r\n            ret.push(id);\r\n        }\r\n        const stru = begin.findExpressionAfterToken(\"STRUCTURE\");\r\n        if (stru) {\r\n            const components = [];\r\n            for (const r of ret) {\r\n                components.push({\r\n                    name: r.getName(),\r\n                    type: r.getType(),\r\n                });\r\n            }\r\n            const id = new _typed_identifier_1.TypedIdentifier(stru.getFirstToken(), filename, new basic_1.StructureType(components), [\"enum\" /* Enum */]);\r\n            scope.addType(id);\r\n            ret.push(id);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeEnum = TypeEnum;\r\n//# sourceMappingURL=type_enum.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/type_enum.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/types.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/types.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Types = void 0;\r\nconst Expressions = __webpack_require__(/*! ../../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../../types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst include_type_1 = __webpack_require__(/*! ../statements/include_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/include_type.js\");\r\nconst type_1 = __webpack_require__(/*! ../statements/type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/type.js\");\r\nconst Basic = __webpack_require__(/*! ../../types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass Types {\r\n    runSyntax(node, scope, filename) {\r\n        const name = node.findFirstExpression(Expressions.NamespaceSimpleName).getFirstToken();\r\n        const components = [];\r\n        let voidd = undefined;\r\n        for (const c of node.getChildren()) {\r\n            const ctyp = c.get();\r\n            if (c instanceof nodes_1.StatementNode) {\r\n                if (ctyp instanceof Statements.Type) {\r\n                    const found = new type_1.Type().runSyntax(c, scope, filename);\r\n                    if (found) {\r\n                        components.push({ name: found.getName(), type: found.getType() });\r\n                    }\r\n                }\r\n                else if (ctyp instanceof Statements.IncludeType) {\r\n                    const found = new include_type_1.IncludeType().runSyntax(c, scope, filename);\r\n                    if (found instanceof basic_1.VoidType) {\r\n                        voidd = found;\r\n                    }\r\n                    else {\r\n                        components.push(...found);\r\n                    }\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StructureNode && ctyp instanceof Structures.Types) {\r\n                const found = new Types().runSyntax(c, scope, filename);\r\n                if (found) {\r\n                    components.push({ name: found.getName(), type: found.getType() });\r\n                }\r\n            }\r\n        }\r\n        if (voidd) {\r\n            return new _typed_identifier_1.TypedIdentifier(name, filename, voidd);\r\n        }\r\n        else if (components.length === 0) { // todo, remove this check\r\n            return undefined;\r\n        }\r\n        let qualifiedName = name.getStr();\r\n        if (scope.getType() === _scope_type_1.ScopeType.ClassDefinition\r\n            || scope.getType() === _scope_type_1.ScopeType.Interface) {\r\n            qualifiedName = scope.getName() + \"=>\" + qualifiedName;\r\n        }\r\n        return new _typed_identifier_1.TypedIdentifier(name, filename, new Basic.StructureType(components, qualifiedName));\r\n    }\r\n}\r\nexports.Types = Types;\r\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/types.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SyntaxLogic = void 0;\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _current_scope_1 = __webpack_require__(/*! ./_current_scope */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_current_scope.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ./_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ./_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst _procedural_1 = __webpack_require__(/*! ./_procedural */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_procedural.js\");\r\nconst objects_1 = __webpack_require__(/*! ../../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst data_1 = __webpack_require__(/*! ./structures/data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/data.js\");\r\nconst type_enum_1 = __webpack_require__(/*! ./structures/type_enum */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/type_enum.js\");\r\nconst types_1 = __webpack_require__(/*! ./structures/types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/types.js\");\r\nconst statics_1 = __webpack_require__(/*! ./structures/statics */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/statics.js\");\r\nconst constants_1 = __webpack_require__(/*! ./structures/constants */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/constants.js\");\r\nconst class_definition_1 = __webpack_require__(/*! ../types/class_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/class_definition.js\");\r\nconst interface_definition_1 = __webpack_require__(/*! ../types/interface_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/interface_definition.js\");\r\nconst perform_1 = __webpack_require__(/*! ./statements/perform */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/perform.js\");\r\nconst type_1 = __webpack_require__(/*! ./statements/type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/type.js\");\r\nconst constant_1 = __webpack_require__(/*! ./statements/constant */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/constant.js\");\r\nconst static_1 = __webpack_require__(/*! ./statements/static */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/static.js\");\r\nconst data_2 = __webpack_require__(/*! ./statements/data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/data.js\");\r\nconst parameter_1 = __webpack_require__(/*! ./statements/parameter */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/parameter.js\");\r\nconst fieldsymbol_1 = __webpack_require__(/*! ./statements/fieldsymbol */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/fieldsymbol.js\");\r\nconst tables_1 = __webpack_require__(/*! ./statements/tables */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/tables.js\");\r\nconst selectoption_1 = __webpack_require__(/*! ./statements/selectoption */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selectoption.js\");\r\nconst interface_deferred_1 = __webpack_require__(/*! ./statements/interface_deferred */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/interface_deferred.js\");\r\nconst class_deferred_1 = __webpack_require__(/*! ./statements/class_deferred */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_deferred.js\");\r\nconst call_1 = __webpack_require__(/*! ./statements/call */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call.js\");\r\nconst class_implementation_1 = __webpack_require__(/*! ./statements/class_implementation */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_implementation.js\");\r\nconst method_implementation_1 = __webpack_require__(/*! ./statements/method_implementation */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/method_implementation.js\");\r\nconst move_1 = __webpack_require__(/*! ./statements/move */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move.js\");\r\nconst move_corresponding_1 = __webpack_require__(/*! ./statements/move_corresponding */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/move_corresponding.js\");\r\nconst catch_1 = __webpack_require__(/*! ./statements/catch */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/catch.js\");\r\nconst loop_1 = __webpack_require__(/*! ./statements/loop */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/loop.js\");\r\nconst read_table_1 = __webpack_require__(/*! ./statements/read_table */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_table.js\");\r\nconst select_1 = __webpack_require__(/*! ./statements/select */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select.js\");\r\nconst insert_internal_1 = __webpack_require__(/*! ./statements/insert_internal */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_internal.js\");\r\nconst split_1 = __webpack_require__(/*! ./statements/split */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/split.js\");\r\nconst assign_1 = __webpack_require__(/*! ./statements/assign */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assign.js\");\r\nconst convert_1 = __webpack_require__(/*! ./statements/convert */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/convert.js\");\r\nconst describe_1 = __webpack_require__(/*! ./statements/describe */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/describe.js\");\r\nconst find_1 = __webpack_require__(/*! ./statements/find */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/find.js\");\r\nconst message_1 = __webpack_require__(/*! ./statements/message */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/message.js\");\r\nconst get_time_1 = __webpack_require__(/*! ./statements/get_time */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_time.js\");\r\nconst get_parameter_1 = __webpack_require__(/*! ./statements/get_parameter */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_parameter.js\");\r\nconst when_type_1 = __webpack_require__(/*! ./statements/when_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when_type.js\");\r\nconst if_1 = __webpack_require__(/*! ./statements/if */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/if.js\");\r\nconst else_if_1 = __webpack_require__(/*! ./statements/else_if */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/else_if.js\");\r\nconst append_1 = __webpack_require__(/*! ./statements/append */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/append.js\");\r\nconst selection_screen_1 = __webpack_require__(/*! ./statements/selection_screen */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/selection_screen.js\");\r\nconst ranges_1 = __webpack_require__(/*! ./statements/ranges */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/ranges.js\");\r\nconst write_1 = __webpack_require__(/*! ./statements/write */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/write.js\");\r\nconst case_1 = __webpack_require__(/*! ./statements/case */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/case.js\");\r\nconst create_object_1 = __webpack_require__(/*! ./statements/create_object */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_object.js\");\r\nconst do_1 = __webpack_require__(/*! ./statements/do */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/do.js\");\r\nconst concatenate_1 = __webpack_require__(/*! ./statements/concatenate */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/concatenate.js\");\r\nconst call_function_1 = __webpack_require__(/*! ./statements/call_function */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_function.js\");\r\nconst clear_1 = __webpack_require__(/*! ./statements/clear */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/clear.js\");\r\nconst replace_1 = __webpack_require__(/*! ./statements/replace */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/replace.js\");\r\nconst get_bit_1 = __webpack_require__(/*! ./statements/get_bit */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_bit.js\");\r\nconst raise_1 = __webpack_require__(/*! ./statements/raise */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise.js\");\r\nconst delete_internal_1 = __webpack_require__(/*! ./statements/delete_internal */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_internal.js\");\r\nconst receive_1 = __webpack_require__(/*! ./statements/receive */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/receive.js\");\r\nconst when_1 = __webpack_require__(/*! ./statements/when */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/when.js\");\r\nconst create_data_1 = __webpack_require__(/*! ./statements/create_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/create_data.js\");\r\nconst call_transformation_1 = __webpack_require__(/*! ./statements/call_transformation */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transformation.js\");\r\nconst get_locale_1 = __webpack_require__(/*! ./statements/get_locale */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_locale.js\");\r\nconst set_locale_1 = __webpack_require__(/*! ./statements/set_locale */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_locale.js\");\r\nconst sort_1 = __webpack_require__(/*! ./statements/sort */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/sort.js\");\r\nconst read_report_1 = __webpack_require__(/*! ./statements/read_report */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/read_report.js\");\r\nconst authority_check_1 = __webpack_require__(/*! ./statements/authority_check */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/authority_check.js\");\r\nconst insert_report_1 = __webpack_require__(/*! ./statements/insert_report */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_report.js\");\r\nconst get_reference_1 = __webpack_require__(/*! ./statements/get_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_reference.js\");\r\nconst insert_database_1 = __webpack_require__(/*! ./statements/insert_database */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/insert_database.js\");\r\nconst delete_database_1 = __webpack_require__(/*! ./statements/delete_database */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/delete_database.js\");\r\nconst import_dynpro_1 = __webpack_require__(/*! ./statements/import_dynpro */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import_dynpro.js\");\r\nconst syntax_check_1 = __webpack_require__(/*! ./statements/syntax_check */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/syntax_check.js\");\r\nconst import_1 = __webpack_require__(/*! ./statements/import */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/import.js\");\r\nconst export_1 = __webpack_require__(/*! ./statements/export */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/export.js\");\r\nconst scan_1 = __webpack_require__(/*! ./statements/scan */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/scan.js\");\r\nconst submit_1 = __webpack_require__(/*! ./statements/submit */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/submit.js\");\r\nconst open_dataset_1 = __webpack_require__(/*! ./statements/open_dataset */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/open_dataset.js\");\r\nconst close_dataset_1 = __webpack_require__(/*! ./statements/close_dataset */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/close_dataset.js\");\r\nconst get_run_time_1 = __webpack_require__(/*! ./statements/get_run_time */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_run_time.js\");\r\nconst update_database_1 = __webpack_require__(/*! ./statements/update_database */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/update_database.js\");\r\nconst add_1 = __webpack_require__(/*! ./statements/add */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add.js\");\r\nconst subtract_1 = __webpack_require__(/*! ./statements/subtract */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract.js\");\r\nconst add_corresponding_1 = __webpack_require__(/*! ./statements/add_corresponding */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/add_corresponding.js\");\r\nconst subtract_corresponding_1 = __webpack_require__(/*! ./statements/subtract_corresponding */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/subtract_corresponding.js\");\r\nconst multiply_1 = __webpack_require__(/*! ./statements/multiply */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/multiply.js\");\r\nconst divide_1 = __webpack_require__(/*! ./statements/divide */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/divide.js\");\r\nconst condense_1 = __webpack_require__(/*! ./statements/condense */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/condense.js\");\r\nconst controls_1 = __webpack_require__(/*! ./statements/controls */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/controls.js\");\r\nconst while_1 = __webpack_require__(/*! ./statements/while */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/while.js\");\r\nconst select_loop_1 = __webpack_require__(/*! ./statements/select_loop */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/select_loop.js\");\r\nconst check_1 = __webpack_require__(/*! ./statements/check */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/check.js\");\r\nconst log_point_1 = __webpack_require__(/*! ./statements/log_point */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/log_point.js\");\r\nconst severity_1 = __webpack_require__(/*! ../../severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\nconst raise_event_1 = __webpack_require__(/*! ./statements/raise_event */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/raise_event.js\");\r\nconst form_1 = __webpack_require__(/*! ./statements/form */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/form.js\");\r\nconst assert_1 = __webpack_require__(/*! ./statements/assert */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/assert.js\");\r\nconst set_parameter_1 = __webpack_require__(/*! ./statements/set_parameter */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_parameter.js\");\r\nconst class_local_friends_1 = __webpack_require__(/*! ./statements/class_local_friends */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_local_friends.js\");\r\nconst get_badi_1 = __webpack_require__(/*! ./statements/get_badi */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/get_badi.js\");\r\nconst with_1 = __webpack_require__(/*! ./statements/with */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with.js\");\r\nconst with_loop_1 = __webpack_require__(/*! ./statements/with_loop */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/with_loop.js\");\r\nconst system_call_1 = __webpack_require__(/*! ./statements/system_call */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/system_call.js\");\r\nconst collect_1 = __webpack_require__(/*! ./statements/collect */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/collect.js\");\r\nconst transfer_1 = __webpack_require__(/*! ./statements/transfer */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/transfer.js\");\r\nconst modify_database_1 = __webpack_require__(/*! ./statements/modify_database */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/modify_database.js\");\r\nconst truncate_dataset_1 = __webpack_require__(/*! ./statements/truncate_dataset */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/truncate_dataset.js\");\r\nconst call_badi_1 = __webpack_require__(/*! ./statements/call_badi */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_badi.js\");\r\nconst pack_1 = __webpack_require__(/*! ./statements/pack */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/pack.js\");\r\nconst unpack_1 = __webpack_require__(/*! ./statements/unpack */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/unpack.js\");\r\nconst format_1 = __webpack_require__(/*! ./statements/format */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/format.js\");\r\nconst set_pf_status_1 = __webpack_require__(/*! ./statements/set_pf_status */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_pf_status.js\");\r\nconst set_titlebar_1 = __webpack_require__(/*! ./statements/set_titlebar */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_titlebar.js\");\r\nconst call_transaction_1 = __webpack_require__(/*! ./statements/call_transaction */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/call_transaction.js\");\r\nconst set_handler_1 = __webpack_require__(/*! ./statements/set_handler */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/set_handler.js\");\r\nconst wait_1 = __webpack_require__(/*! ./statements/wait */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/wait.js\");\r\nconst shift_1 = __webpack_require__(/*! ./statements/shift */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/shift.js\");\r\n// -----------------------------------\r\nconst map = {};\r\nfunction addToMap(handler) {\r\n    if (map[handler.constructor.name] !== undefined) {\r\n        throw new Error(\"syntax.ts duplicate statement syntax handler\");\r\n    }\r\n    map[handler.constructor.name] = handler;\r\n}\r\nif (Object.keys(map).length === 0) {\r\n    addToMap(new interface_deferred_1.InterfaceDeferred());\r\n    addToMap(new perform_1.Perform());\r\n    addToMap(new class_deferred_1.ClassDeferred());\r\n    addToMap(new call_1.Call());\r\n    addToMap(new set_handler_1.SetHandler());\r\n    addToMap(new class_implementation_1.ClassImplementation());\r\n    addToMap(new method_implementation_1.MethodImplementation());\r\n    addToMap(new move_1.Move());\r\n    addToMap(new get_badi_1.GetBadi());\r\n    addToMap(new call_badi_1.CallBadi());\r\n    addToMap(new replace_1.Replace());\r\n    addToMap(new truncate_dataset_1.TruncateDataset());\r\n    addToMap(new assert_1.Assert());\r\n    addToMap(new catch_1.Catch());\r\n    addToMap(new loop_1.Loop());\r\n    addToMap(new set_pf_status_1.SetPFStatus());\r\n    addToMap(new set_titlebar_1.SetTitlebar());\r\n    addToMap(new submit_1.Submit());\r\n    addToMap(new read_table_1.ReadTable());\r\n    addToMap(new syntax_check_1.SyntaxCheck());\r\n    addToMap(new import_1.Import());\r\n    addToMap(new collect_1.Collect());\r\n    addToMap(new export_1.Export());\r\n    addToMap(new scan_1.Scan());\r\n    addToMap(new transfer_1.Transfer());\r\n    addToMap(new split_1.Split());\r\n    addToMap(new call_function_1.CallFunction());\r\n    addToMap(new delete_internal_1.DeleteInternal());\r\n    addToMap(new clear_1.Clear());\r\n    addToMap(new receive_1.Receive());\r\n    addToMap(new get_bit_1.GetBit());\r\n    addToMap(new class_local_friends_1.ClassLocalFriends());\r\n    addToMap(new select_1.Select());\r\n    addToMap(new insert_internal_1.InsertInternal());\r\n    addToMap(new pack_1.Pack());\r\n    addToMap(new unpack_1.Unpack());\r\n    addToMap(new assign_1.Assign());\r\n    addToMap(new set_locale_1.SetLocale());\r\n    addToMap(new set_parameter_1.SetParameter());\r\n    addToMap(new convert_1.Convert());\r\n    addToMap(new controls_1.Controls());\r\n    addToMap(new when_1.When());\r\n    addToMap(new insert_database_1.InsertDatabase());\r\n    addToMap(new delete_database_1.DeleteDatabase());\r\n    addToMap(new update_database_1.UpdateDatabase());\r\n    addToMap(new sort_1.Sort());\r\n    addToMap(new wait_1.Wait());\r\n    addToMap(new condense_1.Condense());\r\n    addToMap(new open_dataset_1.OpenDataset());\r\n    addToMap(new close_dataset_1.CloseDataset());\r\n    addToMap(new read_report_1.ReadReport());\r\n    addToMap(new do_1.Do());\r\n    addToMap(new describe_1.Describe());\r\n    addToMap(new find_1.Find());\r\n    addToMap(new message_1.Message());\r\n    addToMap(new system_call_1.SystemCall());\r\n    addToMap(new get_time_1.GetTime());\r\n    addToMap(new get_parameter_1.GetParameter());\r\n    addToMap(new format_1.Format());\r\n    addToMap(new when_type_1.WhenType());\r\n    addToMap(new if_1.If());\r\n    addToMap(new log_point_1.LogPoint());\r\n    addToMap(new while_1.While());\r\n    addToMap(new with_1.With());\r\n    addToMap(new with_loop_1.WithLoop());\r\n    addToMap(new call_transformation_1.CallTransformation());\r\n    addToMap(new call_transaction_1.CallTransaction());\r\n    addToMap(new get_locale_1.GetLocale());\r\n    addToMap(new get_reference_1.GetReference());\r\n    addToMap(new else_if_1.ElseIf());\r\n    addToMap(new get_run_time_1.GetRunTime());\r\n    addToMap(new create_object_1.CreateObject());\r\n    addToMap(new import_dynpro_1.ImportDynpro());\r\n    addToMap(new create_data_1.CreateData());\r\n    addToMap(new case_1.Case());\r\n    addToMap(new shift_1.Shift());\r\n    addToMap(new raise_1.Raise());\r\n    addToMap(new concatenate_1.Concatenate());\r\n    addToMap(new append_1.Append());\r\n    addToMap(new select_loop_1.SelectLoop());\r\n    addToMap(new write_1.Write());\r\n    addToMap(new move_corresponding_1.MoveCorresponding());\r\n    addToMap(new authority_check_1.AuthorityCheck());\r\n    addToMap(new insert_report_1.InsertReport());\r\n    addToMap(new selection_screen_1.SelectionScreen());\r\n    addToMap(new ranges_1.Ranges());\r\n    addToMap(new add_1.Add());\r\n    addToMap(new raise_event_1.RaiseEvent());\r\n    addToMap(new subtract_1.Subtract());\r\n    addToMap(new add_corresponding_1.AddCorresponding());\r\n    addToMap(new subtract_corresponding_1.SubtractCorresponding());\r\n    addToMap(new multiply_1.Multiply());\r\n    addToMap(new divide_1.Divide());\r\n    addToMap(new check_1.Check());\r\n    addToMap(new modify_database_1.ModifyDatabase());\r\n    addToMap(new form_1.Form());\r\n    addToMap(new selectoption_1.SelectOption());\r\n    addToMap(new tables_1.Tables());\r\n    addToMap(new parameter_1.Parameter());\r\n    addToMap(new fieldsymbol_1.FieldSymbol());\r\n}\r\n// -----------------------------------\r\nclass SyntaxLogic {\r\n    constructor(reg, object) {\r\n        this.reg = reg;\r\n        this.issues = [];\r\n        this.object = object;\r\n        this.scope = _current_scope_1.CurrentScope.buildDefault(this.reg, object);\r\n        this.helpers = {\r\n            oooc: new _object_oriented_1.ObjectOriented(this.scope),\r\n            proc: new _procedural_1.Procedural(this.reg, this.scope),\r\n        };\r\n    }\r\n    run() {\r\n        if (this.object.syntaxResult !== undefined) {\r\n            return this.object.syntaxResult;\r\n        }\r\n        this.issues = [];\r\n        if (this.object instanceof objects_1.Program && this.object.isInclude()) {\r\n            // todo, show some kind of error?\r\n            return { issues: [], spaghetti: this.scope.pop(new position_1.Position(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)) };\r\n        }\r\n        this.traverseObject();\r\n        for (;;) {\r\n            const spaghetti = this.scope.pop(new position_1.Position(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)); // pop built-in scopes\r\n            if (spaghetti.getTop().getIdentifier().stype === _scope_type_1.ScopeType.BuiltIn) {\r\n                const result = { issues: this.issues, spaghetti };\r\n                this.object.syntaxResult = result;\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    /////////////////////////////\r\n    traverseObject() {\r\n        const traversal = this.object.getSequencedFiles();\r\n        if (this.object instanceof objects_1.Program\r\n            || this.object instanceof objects_1.FunctionGroup) {\r\n            for (const f of this.object.getSequencedFiles()) {\r\n                // add FORM defintions to the _global object scope\r\n                this.helpers.proc.addAllFormDefinitions(f, this.object);\r\n            }\r\n            const main = this.object.getMainABAPFile();\r\n            if (main !== undefined) {\r\n                let stype = _scope_type_1.ScopeType.Program;\r\n                if (this.object instanceof objects_1.FunctionGroup) {\r\n                    stype = _scope_type_1.ScopeType.FunctionGroup;\r\n                }\r\n                this.scope.push(stype, this.object.getName(), new position_1.Position(1, 1), main.getFilename());\r\n            }\r\n        }\r\n        for (const file of traversal) {\r\n            this.currentFile = file;\r\n            const structure = this.currentFile.getStructure();\r\n            if (structure === undefined) {\r\n                return this.scope;\r\n            }\r\n            else {\r\n                this.traverse(structure);\r\n            }\r\n        }\r\n        return this.scope;\r\n    }\r\n    newIssue(token, message) {\r\n        const issue = issue_1.Issue.atToken(this.currentFile, token, message, \"check_syntax\", severity_1.Severity.Error);\r\n        this.issues.push(issue);\r\n    }\r\n    traverse(node) {\r\n        for (const child of node.getChildren()) {\r\n            const isStructure = child instanceof nodes_1.StructureNode;\r\n            const isStatement = child instanceof nodes_1.StatementNode;\r\n            try {\r\n                if (isStructure) {\r\n                    const gotoNext = this.updateScopeStructure(child);\r\n                    if (gotoNext === true) {\r\n                        continue;\r\n                    }\r\n                }\r\n                else if (isStatement) {\r\n                    this.updateScopeStatement(child);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.newIssue(child.getFirstToken(), e.message);\r\n                break;\r\n            }\r\n            // walk into INCLUDEs\r\n            if (isStatement && child.get() instanceof Statements.Include) {\r\n                const file = this.helpers.proc.findInclude(child, this.object);\r\n                if (file !== undefined && file.getStructure() !== undefined) {\r\n                    const old = this.currentFile;\r\n                    this.currentFile = file;\r\n                    this.traverse(file.getStructure());\r\n                    this.currentFile = old;\r\n                }\r\n            }\r\n            if (isStructure || isStatement) {\r\n                this.traverse(child);\r\n            }\r\n        }\r\n    }\r\n    // if this returns true, then the traversal should continue with next child\r\n    updateScopeStructure(node) {\r\n        const filename = this.currentFile.getFilename();\r\n        const stru = node.get();\r\n        if (stru instanceof Structures.ClassDefinition) {\r\n            new class_definition_1.ClassDefinition(node, filename, this.scope);\r\n            return true;\r\n        }\r\n        else if (stru instanceof Structures.Interface) {\r\n            new interface_definition_1.InterfaceDefinition(node, filename, this.scope);\r\n            return true;\r\n        }\r\n        else if (stru instanceof Structures.Types) {\r\n            this.scope.addType(new types_1.Types().runSyntax(node, this.scope, filename));\r\n            return true;\r\n        }\r\n        else if (stru instanceof Structures.Constants) {\r\n            this.scope.addIdentifier(new constants_1.Constants().runSyntax(node, this.scope, filename).type);\r\n            return true;\r\n        }\r\n        else if (stru instanceof Structures.Data) {\r\n            this.scope.addIdentifier(new data_1.Data().runSyntax(node, this.scope, filename));\r\n            return true;\r\n        }\r\n        else if (stru instanceof Structures.Statics) {\r\n            this.scope.addIdentifier(new statics_1.Statics().runSyntax(node, this.scope, filename));\r\n            return true;\r\n        }\r\n        else if (stru instanceof Structures.TypeEnum) {\r\n            this.scope.addList(new type_enum_1.TypeEnum().runSyntax(node, this.scope, filename));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    updateScopeStatement(node) {\r\n        const filename = this.currentFile.getFilename();\r\n        const s = node.get();\r\n        // todo, refactor\r\n        if (s instanceof Statements.Type) {\r\n            this.scope.addType(new type_1.Type().runSyntax(node, this.scope, filename));\r\n            return;\r\n        }\r\n        else if (s instanceof Statements.Constant) {\r\n            this.scope.addIdentifier(new constant_1.Constant().runSyntax(node, this.scope, filename));\r\n            return;\r\n        }\r\n        else if (s instanceof Statements.Static) {\r\n            this.scope.addIdentifier(new static_1.Static().runSyntax(node, this.scope, filename));\r\n            return;\r\n        }\r\n        else if (s instanceof Statements.Data) {\r\n            this.scope.addIdentifier(new data_2.Data().runSyntax(node, this.scope, filename));\r\n            return;\r\n        }\r\n        const name = s.constructor.name;\r\n        if (map[name]) {\r\n            map[name].runSyntax(node, this.scope, filename);\r\n            return;\r\n        }\r\n        if (s instanceof Statements.FunctionModule) {\r\n            this.helpers.proc.findFunctionScope(this.object, node, filename);\r\n        }\r\n        else if (s instanceof Statements.EndForm\r\n            || s instanceof Statements.EndFunction\r\n            || s instanceof Statements.EndMethod\r\n            || s instanceof Statements.EndClass\r\n            || s instanceof Statements.EndInterface) {\r\n            this.scope.pop(node.getLastToken().getEnd());\r\n            //    } else {\r\n            //      console.dir(name + \" unhandled\");\r\n        }\r\n    }\r\n}\r\nexports.SyntaxLogic = SyntaxLogic;\r\n//# sourceMappingURL=syntax.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/abap_file.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/abap_file.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAPFile = void 0;\r\nconst tokens_1 = __webpack_require__(/*! ./1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _abstract_file_1 = __webpack_require__(/*! ../files/_abstract_file */ \"./node_modules/@abaplint/core/build/src/files/_abstract_file.js\");\r\nclass ABAPFile extends _abstract_file_1.AbstractFile {\r\n    constructor(file, tokens, statements, structure, info) {\r\n        super(file.getFilename());\r\n        this.file = file;\r\n        this.tokens = tokens;\r\n        this.statements = statements;\r\n        this.structure = structure;\r\n        this.info = info;\r\n    }\r\n    getRaw() {\r\n        return this.file.getRaw();\r\n    }\r\n    getInfo() {\r\n        return this.info;\r\n    }\r\n    getRawRows() {\r\n        return this.file.getRawRows();\r\n    }\r\n    getStructure() {\r\n        return this.structure;\r\n    }\r\n    getTokens(withPragmas = true) {\r\n        if (withPragmas === true) {\r\n            return this.tokens;\r\n        }\r\n        else {\r\n            const tokens = [];\r\n            this.tokens.forEach((t) => {\r\n                if (!(t instanceof tokens_1.Pragma)) {\r\n                    tokens.push(t);\r\n                }\r\n            });\r\n            return tokens;\r\n        }\r\n    }\r\n    getStatements() {\r\n        return this.statements;\r\n    }\r\n}\r\nexports.ABAPFile = ABAPFile;\r\n//# sourceMappingURL=abap_file.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/abap_file.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/abap_parser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/abap_parser.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAPParser = void 0;\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst lexer_1 = __webpack_require__(/*! ./1_lexer/lexer */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/lexer.js\");\r\nconst statement_parser_1 = __webpack_require__(/*! ./2_statements/statement_parser */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statement_parser.js\");\r\nconst structure_parser_1 = __webpack_require__(/*! ./3_structures/structure_parser */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structure_parser.js\");\r\nconst abap_file_information_1 = __webpack_require__(/*! ./4_file_information/abap_file_information */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/abap_file_information.js\");\r\nconst abap_file_1 = __webpack_require__(/*! ./abap_file */ \"./node_modules/@abaplint/core/build/src/abap/abap_file.js\");\r\nclass ABAPParser {\r\n    constructor(version, globalMacros) {\r\n        this.version = version ? version : version_1.defaultVersion;\r\n        this.globalMacros = globalMacros ? globalMacros : [];\r\n    }\r\n    // files is input for a single object\r\n    parse(files) {\r\n        const issues = [];\r\n        const output = [];\r\n        const start = Date.now();\r\n        // 1: lexing\r\n        const b1 = Date.now();\r\n        const lexerResult = files.map(f => lexer_1.Lexer.run(f));\r\n        const lexingRuntime = Date.now() - b1;\r\n        // 2: statements\r\n        const b2 = Date.now();\r\n        const statementResult = new statement_parser_1.StatementParser(this.version).run(lexerResult, this.globalMacros);\r\n        const statementsRuntime = Date.now() - b2;\r\n        // 3: structures\r\n        const b3 = Date.now();\r\n        for (const f of statementResult) {\r\n            const result = structure_parser_1.StructureParser.run(f);\r\n            // 4: file information\r\n            const info = new abap_file_information_1.ABAPFileInformation(result.node, f.file.getFilename());\r\n            output.push(new abap_file_1.ABAPFile(f.file, f.tokens, f.statements, result.node, info));\r\n            issues.push(...result.issues);\r\n        }\r\n        const structuresRuntime = Date.now() - b3;\r\n        const end = Date.now();\r\n        return { issues,\r\n            output,\r\n            runtime: end - start,\r\n            runtimeExtra: { lexing: lexingRuntime, statements: statementsRuntime, structure: structuresRuntime },\r\n        };\r\n    }\r\n}\r\nexports.ABAPParser = ABAPParser;\r\n//# sourceMappingURL=abap_parser.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/abap_parser.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/artifacts.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/artifacts.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Artifacts = void 0;\r\nconst Statements = __webpack_require__(/*! ./2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ./2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst combi_1 = __webpack_require__(/*! ./2_statements/combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst Structures = __webpack_require__(/*! ./3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nclass List {\r\n    constructor() {\r\n        this.words = [];\r\n    }\r\n    add(keywords, source) {\r\n        for (const w of keywords) {\r\n            const index = this.find(w);\r\n            if (index >= 0) {\r\n                this.words[index].source.push(source);\r\n            }\r\n            else {\r\n                this.words.push({ word: w, source: [source] });\r\n            }\r\n        }\r\n    }\r\n    get() {\r\n        return this.words;\r\n    }\r\n    find(keyword) {\r\n        for (let i = 0; i < this.words.length; i++) {\r\n            if (this.words[i].word === keyword) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\nfunction className(cla) {\r\n    return cla.constructor.name;\r\n}\r\nclass Artifacts {\r\n    static getStructures() {\r\n        const ret = [];\r\n        const list = Structures;\r\n        for (const key in Structures) {\r\n            if (typeof list[key] === \"function\") {\r\n                ret.push(new list[key]());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    static getExpressions() {\r\n        const ret = [];\r\n        const list = Expressions;\r\n        for (const key in Expressions) {\r\n            if (typeof list[key] === \"function\") {\r\n                ret.push(list[key]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    static getStatements() {\r\n        const ret = [];\r\n        const list = Statements;\r\n        for (const key in Statements) {\r\n            if (typeof list[key] === \"function\") {\r\n                ret.push(new list[key]());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    static getKeywords() {\r\n        const list = new List();\r\n        for (const stat of this.getStatements()) {\r\n            list.add(combi_1.Combi.listKeywords(stat.getMatcher()), \"statement_\" + className(stat));\r\n        }\r\n        for (const expr of this.getExpressions()) {\r\n            list.add(combi_1.Combi.listKeywords(new expr().getRunnable()), \"expression_\" + className(expr));\r\n        }\r\n        return list.get();\r\n    }\r\n}\r\nexports.Artifacts = Artifacts;\r\n//# sourceMappingURL=artifacts.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/artifacts.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/nodes/_abstract_node.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/nodes/_abstract_node.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AbstractNode = void 0;\r\nclass AbstractNode {\r\n    constructor() {\r\n        this.children = [];\r\n    }\r\n    addChild(n) {\r\n        this.children.push(n);\r\n    }\r\n    setChildren(children) {\r\n        this.children = children;\r\n    }\r\n    getChildren() {\r\n        return this.children;\r\n    }\r\n    getFirstChild() {\r\n        return this.children[0];\r\n    }\r\n    getLastChild() {\r\n        return this.children[this.children.length - 1];\r\n    }\r\n}\r\nexports.AbstractNode = AbstractNode;\r\n//# sourceMappingURL=_abstract_node.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/nodes/_abstract_node.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/nodes/expression_node.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/nodes/expression_node.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpressionNode = void 0;\r\nconst token_node_1 = __webpack_require__(/*! ./token_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/token_node.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _abstract_node_1 = __webpack_require__(/*! ./_abstract_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/_abstract_node.js\");\r\nclass ExpressionNode extends _abstract_node_1.AbstractNode {\r\n    constructor(expression) {\r\n        super();\r\n        this.expression = expression;\r\n    }\r\n    get() {\r\n        return this.expression;\r\n    }\r\n    countTokens() {\r\n        let ret = 0;\r\n        for (const c of this.getChildren()) {\r\n            ret = ret + c.countTokens();\r\n        }\r\n        return ret;\r\n    }\r\n    getFirstToken() {\r\n        for (const child of this.getChildren()) {\r\n            return child.getFirstToken();\r\n        }\r\n        throw new Error(\"ExpressionNode, getFirstToken, no children\");\r\n    }\r\n    concatTokens() {\r\n        let str = \"\";\r\n        let prev;\r\n        for (const token of this.getTokens()) {\r\n            if (token instanceof tokens_1.Pragma) {\r\n                continue;\r\n            }\r\n            if (str === \"\") {\r\n                str = token.getStr();\r\n            }\r\n            else if (prev && prev.getStr().length + prev.getCol() === token.getCol()\r\n                && prev.getRow() === token.getRow()) {\r\n                str = str + token.getStr();\r\n            }\r\n            else {\r\n                str = str + \" \" + token.getStr();\r\n            }\r\n            prev = token;\r\n        }\r\n        return str;\r\n    }\r\n    concatTokensWithoutStringsAndComments() {\r\n        let str = \"\";\r\n        let prev;\r\n        for (const token of this.getTokens()) {\r\n            if (token instanceof tokens_1.Comment\r\n                || token instanceof tokens_1.String\r\n                || token instanceof tokens_1.StringTemplate\r\n                || token instanceof tokens_1.StringTemplateBegin\r\n                || token instanceof tokens_1.StringTemplateMiddle\r\n                || token instanceof tokens_1.StringTemplateEnd) {\r\n                continue;\r\n            }\r\n            if (str === \"\") {\r\n                str = token.getStr();\r\n            }\r\n            else if (prev && prev.getStr().length + prev.getCol() === token.getCol()\r\n                && prev.getRow() === token.getRow()) {\r\n                str = str + token.getStr();\r\n            }\r\n            else {\r\n                str = str + \" \" + token.getStr();\r\n            }\r\n            prev = token;\r\n        }\r\n        return str;\r\n    }\r\n    getTokens() {\r\n        const tokens = [];\r\n        for (const c of this.getChildren()) {\r\n            tokens.push(...this.toTokens(c));\r\n        }\r\n        return tokens;\r\n    }\r\n    toTokens(b) {\r\n        const tokens = [];\r\n        if (b instanceof token_node_1.TokenNode) {\r\n            tokens.push(b.get());\r\n            return tokens;\r\n        }\r\n        for (const c of b.getChildren()) {\r\n            if (c instanceof token_node_1.TokenNode) {\r\n                tokens.push(c.get());\r\n            }\r\n            else {\r\n                tokens.push(...this.toTokens(c));\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n    getLastToken() {\r\n        const child = this.getLastChild();\r\n        if (child) {\r\n            return child.getLastToken();\r\n        }\r\n        throw new Error(\"ExpressionNode, getLastToken, no children\");\r\n    }\r\n    getAllTokens() {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                ret.push(child.get());\r\n            }\r\n            else {\r\n                ret.push(...child.getAllTokens());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    getDirectTokens() {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                ret.push(child.get());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findDirectExpression(type) {\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof ExpressionNode && child.get() instanceof type) {\r\n                return child;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findExpressionAfterToken(text) {\r\n        const children = this.getChildren();\r\n        for (let i = 0; i < children.length - 1; i++) {\r\n            const c = children[i];\r\n            const next = children[i + 1];\r\n            if (c instanceof token_node_1.TokenNode\r\n                && c.get().getStr().toUpperCase() === text.toUpperCase()\r\n                && next instanceof ExpressionNode) {\r\n                return next;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findDirectExpressions(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof ExpressionNode && child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findDirectTokenByText(text) {\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode && child.get().getStr().toUpperCase() === text.toUpperCase()) {\r\n                return child.get();\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findAllExpressions(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n            else {\r\n                ret.push(...child.findAllExpressions(type));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findAllExpressionsMulti(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                continue;\r\n            }\r\n            const before = ret.length;\r\n            for (const t of type) {\r\n                if (child.get() instanceof t) {\r\n                    ret.push(child);\r\n                }\r\n            }\r\n            if (before === ret.length) {\r\n                ret.push(...child.findAllExpressionsMulti(type));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findFirstExpression(type) {\r\n        if (this.get() instanceof type) {\r\n            return this;\r\n        }\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                return child;\r\n            }\r\n            else {\r\n                const res = child.findFirstExpression(type);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.ExpressionNode = ExpressionNode;\r\n//# sourceMappingURL=expression_node.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/nodes/expression_node.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/nodes/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/nodes/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./expression_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/expression_node.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./statement_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/statement_node.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./structure_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/structure_node.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./token_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/token_node.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/nodes/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/nodes/statement_node.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/nodes/statement_node.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StatementNode = void 0;\r\nconst _abstract_node_1 = __webpack_require__(/*! ./_abstract_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/_abstract_node.js\");\r\nconst token_node_1 = __webpack_require__(/*! ./token_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/token_node.js\");\r\nconst expression_node_1 = __webpack_require__(/*! ./expression_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/expression_node.js\");\r\nconst comment_1 = __webpack_require__(/*! ../1_lexer/tokens/comment */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/comment.js\");\r\nconst pragma_1 = __webpack_require__(/*! ../1_lexer/tokens/pragma */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/pragma.js\");\r\nconst string_1 = __webpack_require__(/*! ../1_lexer/tokens/string */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/string.js\");\r\nclass StatementNode extends _abstract_node_1.AbstractNode {\r\n    constructor(statement, colon, pragmas) {\r\n        super();\r\n        this.statement = statement;\r\n        this.colon = colon;\r\n        if (pragmas) {\r\n            this.pragmas = pragmas;\r\n        }\r\n        else {\r\n            this.pragmas = [];\r\n        }\r\n    }\r\n    get() {\r\n        return this.statement;\r\n    }\r\n    getColon() {\r\n        return this.colon;\r\n    }\r\n    getPragmas() {\r\n        return this.pragmas;\r\n    }\r\n    setChildren(children) {\r\n        if (children.length === 0) {\r\n            throw new Error(\"statement: zero children\");\r\n        }\r\n        this.children = children;\r\n        return this;\r\n    }\r\n    getStart() {\r\n        return this.getFirstToken().getStart();\r\n    }\r\n    getEnd() {\r\n        const last = this.getLastToken();\r\n        return last.getEnd();\r\n    }\r\n    getTokens() {\r\n        const tokens = [];\r\n        for (const c of this.getChildren()) {\r\n            tokens.push(...this.toTokens(c));\r\n        }\r\n        return tokens;\r\n    }\r\n    includesToken(search) {\r\n        for (const t of this.getTokens()) {\r\n            if (t.getStart().equals(search.getStart())) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getTokenNodes() {\r\n        const tokens = [];\r\n        for (const c of this.getChildren()) {\r\n            tokens.push(...this.toTokenNodess(c));\r\n        }\r\n        return tokens;\r\n    }\r\n    concatTokens() {\r\n        let str = \"\";\r\n        let prev;\r\n        for (const token of this.getTokens()) {\r\n            if (token instanceof pragma_1.Pragma) {\r\n                continue;\r\n            }\r\n            if (str === \"\") {\r\n                str = token.getStr();\r\n            }\r\n            else if (prev && prev.getStr().length + prev.getCol() === token.getCol()\r\n                && prev.getRow() === token.getRow()) {\r\n                str = str + token.getStr();\r\n            }\r\n            else {\r\n                str = str + \" \" + token.getStr();\r\n            }\r\n            prev = token;\r\n        }\r\n        return str;\r\n    }\r\n    concatTokensWithoutStringsAndComments() {\r\n        let str = \"\";\r\n        let prev;\r\n        for (const token of this.getTokens()) {\r\n            if (token instanceof comment_1.Comment\r\n                || token instanceof string_1.String\r\n                || token instanceof string_1.StringTemplate\r\n                || token instanceof string_1.StringTemplateBegin\r\n                || token instanceof string_1.StringTemplateMiddle\r\n                || token instanceof string_1.StringTemplateEnd) {\r\n                continue;\r\n            }\r\n            if (str === \"\") {\r\n                str = token.getStr();\r\n            }\r\n            else if (prev && prev.getStr().length + prev.getCol() === token.getCol()\r\n                && prev.getRow() === token.getRow()) {\r\n                str = str + token.getStr();\r\n            }\r\n            else {\r\n                str = str + \" \" + token.getStr();\r\n            }\r\n            prev = token;\r\n        }\r\n        return str;\r\n    }\r\n    getTerminator() {\r\n        return this.getLastToken().getStr();\r\n    }\r\n    getFirstToken() {\r\n        for (const child of this.getChildren()) {\r\n            return child.getFirstToken();\r\n        }\r\n        throw new Error(\"StatementNode, getFirstToken, no children, \" + this.get().constructor.name);\r\n    }\r\n    getLastToken() {\r\n        const child = this.getLastChild();\r\n        if (child !== undefined) {\r\n            return child.getLastToken();\r\n        }\r\n        throw new Error(\"StatementNode, getLastToken, no children\");\r\n    }\r\n    findDirectExpression(type) {\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof expression_node_1.ExpressionNode && child.get() instanceof type) {\r\n                return child;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findDirectExpressions(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof expression_node_1.ExpressionNode && child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findDirectTokenByText(text) {\r\n        const upper = text.toUpperCase();\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode && child.get().getStr().toUpperCase() === upper) {\r\n                return child.get();\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findFirstExpression(type) {\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                return child;\r\n            }\r\n            else {\r\n                const res = child.findFirstExpression(type);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findAllExpressions(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n            else {\r\n                ret.push(...child.findAllExpressions(type));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findAllExpressionsRecursive(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n            ret.push(...child.findAllExpressions(type));\r\n        }\r\n        return ret;\r\n    }\r\n    findAllExpressionsMulti(type, recursive = false) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof token_node_1.TokenNode) {\r\n                continue;\r\n            }\r\n            const before = ret.length;\r\n            for (const t of type) {\r\n                if (child.get() instanceof t) {\r\n                    ret.push(child);\r\n                }\r\n            }\r\n            if (before === ret.length || recursive === true) {\r\n                ret.push(...child.findAllExpressionsMulti(type));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * Returns the Position of the first token if the sequence is found,\r\n     * otherwise undefined. Strings and Comments are ignored in this search.\r\n     * @param first - Text of the first Token\r\n     * @param second - Text of the second Token\r\n     */\r\n    findTokenSequencePosition(first, second) {\r\n        let prev;\r\n        for (const token of this.getTokens()) {\r\n            if (token instanceof comment_1.Comment\r\n                || token instanceof string_1.String\r\n                || token instanceof string_1.StringTemplate\r\n                || token instanceof string_1.StringTemplateBegin\r\n                || token instanceof string_1.StringTemplateMiddle\r\n                || token instanceof string_1.StringTemplateEnd) {\r\n                continue;\r\n            }\r\n            if (prev && token.getStr().toUpperCase() === second && (prev === null || prev === void 0 ? void 0 : prev.getStr().toUpperCase()) === first.toUpperCase()) {\r\n                return prev.getStart();\r\n            }\r\n            else {\r\n                prev = token;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findExpressionAfterToken(text) {\r\n        const children = this.getChildren();\r\n        for (let i = 0; i < children.length - 1; i++) {\r\n            const c = children[i];\r\n            const next = children[i + 1];\r\n            if (c instanceof token_node_1.TokenNode\r\n                && c.get().getStr().toUpperCase() === text.toUpperCase()\r\n                && next instanceof expression_node_1.ExpressionNode) {\r\n                return next;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    ////////////////////////////////\r\n    toTokens(b) {\r\n        const tokens = [];\r\n        if (b instanceof token_node_1.TokenNode) {\r\n            tokens.push(b.get());\r\n            return tokens;\r\n        }\r\n        for (const c of b.getChildren()) {\r\n            if (c instanceof token_node_1.TokenNode) {\r\n                tokens.push(c.get());\r\n            }\r\n            else {\r\n                tokens.push(...this.toTokens(c));\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n    toTokenNodess(b) {\r\n        const tokens = [];\r\n        if (b instanceof token_node_1.TokenNode) {\r\n            tokens.push(b);\r\n            return tokens;\r\n        }\r\n        for (const c of b.getChildren()) {\r\n            if (c instanceof token_node_1.TokenNode) {\r\n                tokens.push(c);\r\n            }\r\n            else {\r\n                tokens.push(...this.toTokenNodess(c));\r\n            }\r\n        }\r\n        return tokens;\r\n    }\r\n}\r\nexports.StatementNode = StatementNode;\r\n//# sourceMappingURL=statement_node.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/nodes/statement_node.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/nodes/structure_node.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/nodes/structure_node.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StructureNode = void 0;\r\nconst _abstract_node_1 = __webpack_require__(/*! ./_abstract_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/_abstract_node.js\");\r\nconst statement_node_1 = __webpack_require__(/*! ./statement_node */ \"./node_modules/@abaplint/core/build/src/abap/nodes/statement_node.js\");\r\nclass StructureNode extends _abstract_node_1.AbstractNode {\r\n    constructor(structure) {\r\n        super();\r\n        this.structure = structure;\r\n    }\r\n    get() {\r\n        return this.structure;\r\n    }\r\n    // todo, remove this method, the logic should never go up in the tree\r\n    findParent(node) {\r\n        for (const child of this.getChildren()) {\r\n            if (child === node) {\r\n                return this;\r\n            }\r\n            else if (child instanceof statement_node_1.StatementNode) {\r\n                continue;\r\n            }\r\n            else {\r\n                const res = child.findParent(node);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    concatTokens() {\r\n        let concat = \"\";\r\n        for (const child of this.getChildren()) {\r\n            concat = concat + child.concatTokens();\r\n        }\r\n        return concat;\r\n    }\r\n    findDirectStatement(type) {\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof statement_node_1.StatementNode && child.get() instanceof type) {\r\n                return child;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findDirectStatements(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof statement_node_1.StatementNode && child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findDirectStructures(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof StructureNode && child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findFirstStatement(type) {\r\n        for (const child of this.getChildren()) {\r\n            if (child.get() instanceof type) {\r\n                return child;\r\n            }\r\n            else if (child instanceof statement_node_1.StatementNode) {\r\n                continue;\r\n            }\r\n            else {\r\n                const res = child.findFirstStatement(type);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findFirstExpression(type) {\r\n        for (const child of this.getChildren()) {\r\n            const res = child.findFirstExpression(type);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getFirstStatement() {\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof statement_node_1.StatementNode) {\r\n                return child;\r\n            }\r\n            return child.getFirstStatement();\r\n        }\r\n        return undefined;\r\n    }\r\n    getFirstToken() {\r\n        const child = this.getFirstChild();\r\n        if (child !== undefined) {\r\n            return child.getFirstToken();\r\n        }\r\n        throw new Error(\"StructureNode, getFirstToken, unexpected type\");\r\n    }\r\n    getLastToken() {\r\n        const child = this.getLastChild();\r\n        if (child !== undefined) {\r\n            return child.getLastToken();\r\n        }\r\n        throw new Error(\"StructureNode, getLastToken, unexpected type\");\r\n    }\r\n    findAllExpressions(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            ret.push(...child.findAllExpressions(type));\r\n        }\r\n        return ret;\r\n    }\r\n    findAllExpressionsMulti(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            ret.push(...child.findAllExpressionsMulti(type));\r\n        }\r\n        return ret;\r\n    }\r\n    findAllStatements(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof StructureNode) {\r\n                ret.push(...child.findAllStatements(type));\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findAllStatementNodes() {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof statement_node_1.StatementNode) {\r\n                ret.push(child);\r\n            }\r\n            else {\r\n                ret.push(...child.findAllStatementNodes());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findAllStructuresRecursive(type) {\r\n        const ret = [];\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof statement_node_1.StatementNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n            ret.push(...child.findAllStructuresRecursive(type));\r\n        }\r\n        return ret;\r\n    }\r\n    findAllStructures(type) {\r\n        const ret = [];\r\n        if (this.get() instanceof type) {\r\n            return [this];\r\n        }\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof statement_node_1.StatementNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                ret.push(child);\r\n            }\r\n            else {\r\n                ret.push(...child.findAllStructures(type));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findDirectStructure(type) {\r\n        if (this.get() instanceof type) {\r\n            return this;\r\n        }\r\n        for (const child of this.getChildren()) {\r\n            if (child.get() instanceof type) {\r\n                return child;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findFirstStructure(type) {\r\n        if (this.get() instanceof type) {\r\n            return this;\r\n        }\r\n        for (const child of this.getChildren()) {\r\n            if (child instanceof statement_node_1.StatementNode) {\r\n                continue;\r\n            }\r\n            else if (child.get() instanceof type) {\r\n                return child;\r\n            }\r\n            else {\r\n                const res = child.findFirstStructure(type);\r\n                if (res) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.StructureNode = StructureNode;\r\n//# sourceMappingURL=structure_node.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/nodes/structure_node.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/nodes/token_node.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/nodes/token_node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TokenNodeRegex = exports.TokenNode = void 0;\r\nclass TokenNode {\r\n    constructor(token) {\r\n        this.token = token;\r\n    }\r\n    addChild(_n) {\r\n        throw new Error(\"TokenNode, Method not implemented.\");\r\n    }\r\n    setChildren(_children) {\r\n        throw new Error(\"TokenNode, Method not implemented.\");\r\n    }\r\n    getChildren() {\r\n        return [];\r\n    }\r\n    concatTokens() {\r\n        return this.token.getStr();\r\n    }\r\n    get() {\r\n        return this.token;\r\n    }\r\n    countTokens() {\r\n        return 1;\r\n    }\r\n    getFirstToken() {\r\n        return this.token;\r\n    }\r\n    getLastToken() {\r\n        return this.token;\r\n    }\r\n}\r\nexports.TokenNode = TokenNode;\r\nclass TokenNodeRegex extends TokenNode {\r\n}\r\nexports.TokenNodeRegex = TokenNodeRegex;\r\n//# sourceMappingURL=token_node.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/nodes/token_node.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypedIdentifier = void 0;\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nclass TypedIdentifier extends _identifier_1.Identifier {\r\n    constructor(token, filename, type, meta, value) {\r\n        super(token, filename);\r\n        if (type instanceof TypedIdentifier) {\r\n            this.type = type.getType();\r\n        }\r\n        else {\r\n            this.type = type;\r\n        }\r\n        this.value = value;\r\n        this.meta = [];\r\n        if (meta) {\r\n            this.meta = meta;\r\n        }\r\n    }\r\n    static from(id, type, meta) {\r\n        return new TypedIdentifier(id.getToken(), id.getFilename(), type, meta);\r\n    }\r\n    toText() {\r\n        return \"Identifier: ```\" + this.getName() + \"```\";\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    getMeta() {\r\n        return this.meta;\r\n    }\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n}\r\nexports.TypedIdentifier = TypedIdentifier;\r\n//# sourceMappingURL=_typed_identifier.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/alias.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/alias.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Alias = void 0;\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nclass Alias extends _identifier_1.Identifier {\r\n    constructor(token, visibility, component, filename) {\r\n        super(token, filename);\r\n        this.component = component;\r\n        this.visibility = visibility;\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    getVisibility() {\r\n        return this.visibility;\r\n    }\r\n}\r\nexports.Alias = Alias;\r\n//# sourceMappingURL=alias.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/alias.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/aliases.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/aliases.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Aliases = void 0;\r\nconst alias_1 = __webpack_require__(/*! ./alias */ \"./node_modules/@abaplint/core/build/src/abap/types/alias.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass Aliases {\r\n    constructor(node, filename, scope) {\r\n        this.aliases = [];\r\n        this.filename = filename;\r\n        this.parse(node, scope, filename);\r\n    }\r\n    getAll() {\r\n        return this.aliases;\r\n    }\r\n    /////////////////////////\r\n    parse(node, scope, filename) {\r\n        const cdef = node.findFirstStructure(Structures.ClassDefinition);\r\n        if (cdef) {\r\n            this.parseSection(cdef.findFirstStructure(Structures.PublicSection), visibility_1.Visibility.Public, scope, filename);\r\n            this.parseSection(cdef.findFirstStructure(Structures.PrivateSection), visibility_1.Visibility.Private, scope, filename);\r\n            this.parseSection(cdef.findFirstStructure(Structures.ProtectedSection), visibility_1.Visibility.Protected, scope, filename);\r\n        }\r\n        const idef = node.findFirstStructure(Structures.Interface);\r\n        if (idef) {\r\n            this.parseSection(idef, visibility_1.Visibility.Public, scope, filename);\r\n        }\r\n    }\r\n    parseSection(node, visibility, scope, filename) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n        const list = node.findAllStatements(Statements.Aliases);\r\n        for (const a of list) {\r\n            const name = a.findFirstExpression(Expressions.SimpleName).getFirstToken();\r\n            const compToken = a.findFirstExpression(Expressions.Field).getFirstToken();\r\n            const compName = compToken.getStr();\r\n            this.aliases.push(new alias_1.Alias(name, visibility, compName, this.filename));\r\n            if (compName.includes(\"~\")) {\r\n                const idef = scope.findInterfaceDefinition(compName.split(\"~\")[0]);\r\n                if (idef) {\r\n                    scope.addReference(compToken, idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Aliases = Aliases;\r\n//# sourceMappingURL=aliases.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/aliases.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AbstractType = void 0;\r\nclass AbstractType {\r\n    constructor(qualifiedName) {\r\n        this.qualifiedName = qualifiedName;\r\n    }\r\n    /** fully qualified symbolic name of the type */\r\n    getQualifiedName() {\r\n        return this.qualifiedName;\r\n    }\r\n}\r\nexports.AbstractType = AbstractType;\r\n//# sourceMappingURL=_abstract_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/any_type.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/any_type.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AnyType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass AnyType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```any```\";\r\n    }\r\n    toABAP() {\r\n        return \"any\";\r\n    }\r\n    isGeneric() {\r\n        return true;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.AnyType = AnyType;\r\n//# sourceMappingURL=any_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/any_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/character_type.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/character_type.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CharacterType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass CharacterType extends _abstract_type_1.AbstractType {\r\n    constructor(length, qualifiedName) {\r\n        super(qualifiedName);\r\n        if (length <= 0) {\r\n            throw new Error(\"Bad LENGTH\");\r\n        }\r\n        this.length = length;\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    toText() {\r\n        return \"```c LENGTH \" + this.getLength() + \"```\";\r\n    }\r\n    toABAP() {\r\n        return \"c LENGTH \" + this.getLength();\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n    getIdentifier() {\r\n        return undefined;\r\n    }\r\n}\r\nexports.CharacterType = CharacterType;\r\n//# sourceMappingURL=character_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/character_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/clike_type.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/clike_type.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CLikeType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass CLikeType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```clike```\";\r\n    }\r\n    isGeneric() {\r\n        return true;\r\n    }\r\n    toABAP() {\r\n        throw new Error(\"clike, generic\");\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.CLikeType = CLikeType;\r\n//# sourceMappingURL=clike_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/clike_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/csequence_type.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/csequence_type.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CSequenceType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass CSequenceType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```csequence```\";\r\n    }\r\n    isGeneric() {\r\n        return true;\r\n    }\r\n    toABAP() {\r\n        throw new Error(\"csequence, generic\");\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.CSequenceType = CSequenceType;\r\n//# sourceMappingURL=csequence_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/csequence_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/data_reference_type.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/data_reference_type.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataReference = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass DataReference extends _abstract_type_1.AbstractType {\r\n    constructor(type, name) {\r\n        super(name);\r\n        this.type = type;\r\n    }\r\n    toText(level) {\r\n        return \"Data REF TO \" + this.type.toText(level + 1);\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    toABAP() {\r\n        return \"REF TO \" + this.type.toABAP();\r\n    }\r\n    isGeneric() {\r\n        return this.type.isGeneric();\r\n    }\r\n    containsVoid() {\r\n        return this.type.containsVoid();\r\n    }\r\n}\r\nexports.DataReference = DataReference;\r\n//# sourceMappingURL=data_reference_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/data_reference_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/date_type.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/date_type.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DateType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass DateType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```d```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"d\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.DateType = DateType;\r\n//# sourceMappingURL=date_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/date_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat16_type.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat16_type.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DecFloat16Type = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass DecFloat16Type extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```decfloat16```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"decfloat16\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.DecFloat16Type = DecFloat16Type;\r\n//# sourceMappingURL=decfloat16_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat16_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat34_type.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat34_type.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DecFloat34Type = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass DecFloat34Type extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```decfloat34```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"decfloat34\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.DecFloat34Type = DecFloat34Type;\r\n//# sourceMappingURL=decfloat34_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat34_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/enum_type.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/enum_type.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EnumType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass EnumType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"enum\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"enum\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.EnumType = EnumType;\r\n//# sourceMappingURL=enum_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/enum_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/float_type.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/float_type.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FloatType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\n// this is the ABAP \"F\" type, which is IEEE?\r\n// todo, same as FloatingPointType ?\r\nclass FloatType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```f```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"f\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.FloatType = FloatType;\r\n//# sourceMappingURL=float_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/float_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/floating_point_type.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/floating_point_type.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FloatingPointType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\n// this is the DDIC floating point type\r\nclass FloatingPointType extends _abstract_type_1.AbstractType {\r\n    constructor(length, qualifiedName) {\r\n        super(qualifiedName);\r\n        if (length <= 0) {\r\n            throw new Error(\"Bad LENGTH\");\r\n        }\r\n        this.length = length;\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    toText() {\r\n        return \"```n LENGTH \" + this.getLength() + \"```\";\r\n    }\r\n    toABAP() {\r\n        return \"n LENGTH \" + this.getLength();\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.FloatingPointType = FloatingPointType;\r\n//# sourceMappingURL=floating_point_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/floating_point_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/generic_object_reference_type.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/generic_object_reference_type.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GenericObjectReferenceType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass GenericObjectReferenceType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```REF TO object```\";\r\n    }\r\n    isGeneric() {\r\n        return true;\r\n    }\r\n    toABAP() {\r\n        return \"REF TO object\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.GenericObjectReferenceType = GenericObjectReferenceType;\r\n//# sourceMappingURL=generic_object_reference_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/generic_object_reference_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/hex_type.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/hex_type.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HexType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass HexType extends _abstract_type_1.AbstractType {\r\n    constructor(length, qualifiedName) {\r\n        super(qualifiedName);\r\n        if (length <= 0) {\r\n            throw new Error(\"Bad LENGTH\");\r\n        }\r\n        this.length = length;\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    toText() {\r\n        return \"```x LENGTH \" + this.getLength() + \"```\";\r\n    }\r\n    toABAP() {\r\n        return \"x LENGTH \" + this.getLength();\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.HexType = HexType;\r\n//# sourceMappingURL=hex_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/hex_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/index.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./any_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/any_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./character_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/character_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./clike_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/clike_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./csequence_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/csequence_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_reference_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/data_reference_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./date_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/date_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./decfloat16_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat16_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./decfloat34_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/decfloat34_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./float_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/float_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./floating_point_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/floating_point_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./generic_object_reference_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/generic_object_reference_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./hex_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/hex_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./integer_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/integer_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./numeric_generic_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_generic_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./numeric_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./object_reference_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/object_reference_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./packed_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/packed_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./string_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/string_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./structure_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/structure_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./table_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/table_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./time_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/time_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unknown_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./utc_long_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/utc_long_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./void_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./xsequence_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/xsequence_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./xstring_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/xstring_type.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/integer_type.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/integer_type.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IntegerType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass IntegerType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```i```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"i\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.IntegerType = IntegerType;\r\n//# sourceMappingURL=integer_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/integer_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_generic_type.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_generic_type.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NumericGenericType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass NumericGenericType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```NUMERIC```\";\r\n    }\r\n    isGeneric() {\r\n        return true;\r\n    }\r\n    toABAP() {\r\n        throw new Error(\"NumericGenericType, generic\");\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.NumericGenericType = NumericGenericType;\r\n//# sourceMappingURL=numeric_generic_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_generic_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_type.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_type.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NumericType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass NumericType extends _abstract_type_1.AbstractType {\r\n    constructor(length, name) {\r\n        super(name);\r\n        if (length <= 0) {\r\n            throw new Error(\"Bad LENGTH\");\r\n        }\r\n        this.length = length;\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    toText() {\r\n        return \"```n LENGTH \" + this.getLength() + \"```\";\r\n    }\r\n    toABAP() {\r\n        return \"n LENGTH \" + this.getLength();\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.NumericType = NumericType;\r\n//# sourceMappingURL=numeric_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/numeric_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/object_reference_type.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/object_reference_type.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ObjectReferenceType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\n// use GenericObjectReferenceType for REF TO OBJECT\r\nclass ObjectReferenceType extends _abstract_type_1.AbstractType {\r\n    constructor(id, name) {\r\n        super(name);\r\n        this.identifier = id;\r\n    }\r\n    getIdentifierName() {\r\n        return this.identifier.getName();\r\n    }\r\n    toText() {\r\n        return \"```REF TO \" + this.identifier.getName() + \"```\";\r\n    }\r\n    toABAP() {\r\n        return \"REF TO \" + this.identifier.getName();\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n    getIdentifier() {\r\n        return this.identifier;\r\n    }\r\n}\r\nexports.ObjectReferenceType = ObjectReferenceType;\r\n//# sourceMappingURL=object_reference_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/object_reference_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/packed_type.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/packed_type.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PackedType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass PackedType extends _abstract_type_1.AbstractType {\r\n    constructor(length, decimals, qualifiedName) {\r\n        super(qualifiedName);\r\n        if (length <= 0) {\r\n            throw new Error(\"Bad LENGTH\");\r\n        }\r\n        else if (decimals < 0) {\r\n            throw new Error(\"Bad DECIMALS\");\r\n        }\r\n        this.length = length;\r\n        this.decimals = decimals;\r\n    }\r\n    getLength() {\r\n        return this.length;\r\n    }\r\n    getDecimals() {\r\n        return this.decimals;\r\n    }\r\n    toText() {\r\n        return \"```p LENGTH \" + this.getLength() + \" DECIMALS \" + this.getDecimals() + \"```\";\r\n    }\r\n    toABAP() {\r\n        return \"p LENGTH \" + this.getLength() + \" DECIMALS \" + this.getDecimals();\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.PackedType = PackedType;\r\n//# sourceMappingURL=packed_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/packed_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/string_type.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/string_type.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StringType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass StringType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```string```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"string\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.StringType = StringType;\r\n//# sourceMappingURL=string_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/string_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/structure_type.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/structure_type.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StructureType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass StructureType extends _abstract_type_1.AbstractType {\r\n    constructor(components, name) {\r\n        super(name);\r\n        if (components.length === 0) {\r\n            throw new Error(\"Structure does not contain any components\");\r\n        }\r\n        this.indexed = {};\r\n        for (const c of components) {\r\n            const upper = c.name.toUpperCase();\r\n            if (this.indexed[upper] !== undefined) {\r\n                throw new Error(\"Structure, duplicate field name \" + upper);\r\n            }\r\n            this.indexed[upper] = c.type;\r\n        }\r\n        this.components = components;\r\n    }\r\n    getComponents() {\r\n        return this.components;\r\n    }\r\n    getComponentByName(name) {\r\n        return this.indexed[name.toUpperCase()];\r\n    }\r\n    toText(level) {\r\n        const compo = [];\r\n        for (const c of this.components) {\r\n            compo.push(c.name + \" TYPE \" + c.type.toText(level + 1));\r\n        }\r\n        const spaces = \"  \".repeat(level);\r\n        return \"Structure\\n\" + spaces + \"* \" + compo.join(\"\\n\" + spaces + \"* \");\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        const ret = this.getQualifiedName();\r\n        if (ret) {\r\n            return ret;\r\n        }\r\n        return \"StructureTypetoABAPtodo\";\r\n    }\r\n    containsVoid() {\r\n        return this.getComponents().some(c => { c.type.containsVoid(); });\r\n    }\r\n}\r\nexports.StructureType = StructureType;\r\n//# sourceMappingURL=structure_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/structure_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/table_type.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/table_type.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TableType = exports.TableAccessType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nvar TableAccessType;\r\n(function (TableAccessType) {\r\n    TableAccessType[\"standard\"] = \"STANDARD\";\r\n    TableAccessType[\"sorted\"] = \"SORTED\";\r\n    TableAccessType[\"hashed\"] = \"HASHED\";\r\n    TableAccessType[\"index\"] = \"INDEX\";\r\n    TableAccessType[\"any\"] = \"ANY\";\r\n})(TableAccessType = exports.TableAccessType || (exports.TableAccessType = {}));\r\nclass TableType extends _abstract_type_1.AbstractType {\r\n    constructor(rowType, options, qualifiedName) {\r\n        super(qualifiedName);\r\n        this.rowType = rowType;\r\n        this.options = options;\r\n    }\r\n    getOptions() {\r\n        return this.options;\r\n    }\r\n    isWithHeader() {\r\n        return this.options.withHeader;\r\n    }\r\n    getAccessType() {\r\n        return this.options.type;\r\n    }\r\n    getRowType() {\r\n        return this.rowType;\r\n    }\r\n    toABAP() {\r\n        // this is used for downport, so use default key for now\r\n        return \"STANDARD TABLE OF \" + this.rowType.toABAP() + \" WITH DEFAULT KEY\";\r\n    }\r\n    toText(level) {\r\n        const type = this.rowType;\r\n        if (this.options.withHeader === true) {\r\n            return \"Table with header of \" + type.toText(level + 1);\r\n        }\r\n        else {\r\n            return \"Table of \" + type.toText(level + 1);\r\n        }\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return this.rowType.containsVoid();\r\n    }\r\n}\r\nexports.TableType = TableType;\r\n//# sourceMappingURL=table_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/table_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/time_type.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/time_type.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TimeType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass TimeType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```t```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"t\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.TimeType = TimeType;\r\n//# sourceMappingURL=time_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/time_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnknownType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass UnknownType extends _abstract_type_1.AbstractType {\r\n    constructor(error, qualifiedName) {\r\n        super(qualifiedName);\r\n        this.error = error;\r\n    }\r\n    getError() {\r\n        return this.error;\r\n    }\r\n    toText() {\r\n        return \"Unknown type: \" + this.error;\r\n    }\r\n    toABAP() {\r\n        throw new Error(\"unknown, generic\");\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.UnknownType = UnknownType;\r\n//# sourceMappingURL=unknown_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/unknown_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/utc_long_type.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/utc_long_type.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UTCLongType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass UTCLongType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```utclong```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"utclong\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.UTCLongType = UTCLongType;\r\n//# sourceMappingURL=utc_long_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/utc_long_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VoidType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass VoidType extends _abstract_type_1.AbstractType {\r\n    constructor(voided, name) {\r\n        super(name);\r\n        this.voided = voided;\r\n    }\r\n    getVoided() {\r\n        return this.voided;\r\n    }\r\n    toABAP() {\r\n        throw new Error(\"void, generic\");\r\n    }\r\n    toText() {\r\n        return \"Void(\" + this.voided + \")\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    containsVoid() {\r\n        return true;\r\n    }\r\n}\r\nexports.VoidType = VoidType;\r\n//# sourceMappingURL=void_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/xsequence_type.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/xsequence_type.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.XSequenceType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass XSequenceType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```xsequence```\";\r\n    }\r\n    isGeneric() {\r\n        return true;\r\n    }\r\n    toABAP() {\r\n        throw new Error(\"xsequence, generic\");\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.XSequenceType = XSequenceType;\r\n//# sourceMappingURL=xsequence_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/xsequence_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/basic/xstring_type.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/basic/xstring_type.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.XStringType = void 0;\r\nconst _abstract_type_1 = __webpack_require__(/*! ./_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nclass XStringType extends _abstract_type_1.AbstractType {\r\n    toText() {\r\n        return \"```xstring```\";\r\n    }\r\n    isGeneric() {\r\n        return false;\r\n    }\r\n    toABAP() {\r\n        return \"xstring\";\r\n    }\r\n    containsVoid() {\r\n        return false;\r\n    }\r\n}\r\nexports.XStringType = XStringType;\r\n//# sourceMappingURL=xstring_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/basic/xstring_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/class_attribute.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/class_attribute.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassAttribute = void 0;\r\nconst _typed_identifier_1 = __webpack_require__(/*! ./_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nclass ClassAttribute extends _typed_identifier_1.TypedIdentifier {\r\n    constructor(id, visibility, meta) {\r\n        super(id.getToken(), id.getFilename(), id.getType(), meta);\r\n        this.visibility = visibility;\r\n    }\r\n    getVisibility() {\r\n        return this.visibility;\r\n    }\r\n}\r\nexports.ClassAttribute = ClassAttribute;\r\n//# sourceMappingURL=class_attribute.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/class_attribute.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/class_attributes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/class_attributes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Attributes = void 0;\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst class_attribute_1 = __webpack_require__(/*! ./class_attribute */ \"./node_modules/@abaplint/core/build/src/abap/types/class_attribute.js\");\r\nconst class_constant_1 = __webpack_require__(/*! ./class_constant */ \"./node_modules/@abaplint/core/build/src/abap/types/class_constant.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst class_data_1 = __webpack_require__(/*! ../5_syntax/statements/class_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/class_data.js\");\r\nconst class_data_2 = __webpack_require__(/*! ../5_syntax/structures/class_data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/class_data.js\");\r\nconst data_1 = __webpack_require__(/*! ../5_syntax/statements/data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/data.js\");\r\nconst constant_1 = __webpack_require__(/*! ../5_syntax/statements/constant */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/constant.js\");\r\nconst data_2 = __webpack_require__(/*! ../5_syntax/structures/data */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/data.js\");\r\nconst type_enum_1 = __webpack_require__(/*! ../5_syntax/structures/type_enum */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/type_enum.js\");\r\nconst constants_1 = __webpack_require__(/*! ../5_syntax/structures/constants */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/constants.js\");\r\nconst type_definitions_1 = __webpack_require__(/*! ./type_definitions */ \"./node_modules/@abaplint/core/build/src/abap/types/type_definitions.js\");\r\nconst types_1 = __webpack_require__(/*! ../5_syntax/structures/types */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/structures/types.js\");\r\nconst type_1 = __webpack_require__(/*! ../5_syntax/statements/type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/statements/type.js\");\r\nclass Attributes {\r\n    constructor(node, filename, scope) {\r\n        this.static = [];\r\n        this.instance = [];\r\n        this.constants = [];\r\n        this.filename = filename;\r\n        this.tlist = [];\r\n        this.parse(node, scope);\r\n        this.types = new type_definitions_1.TypeDefinitions(this.tlist);\r\n    }\r\n    getTypes() {\r\n        return this.types;\r\n    }\r\n    getStatic() {\r\n        return this.static;\r\n    }\r\n    getAll() {\r\n        let res = [];\r\n        res = res.concat(this.static);\r\n        res = res.concat(this.instance);\r\n        return res;\r\n    }\r\n    getStaticsByVisibility(visibility) {\r\n        const attributes = [];\r\n        for (const attr of this.static) {\r\n            if (attr.getVisibility() === visibility) {\r\n                attributes.push(attr);\r\n            }\r\n        }\r\n        return attributes;\r\n    }\r\n    getInstance() {\r\n        return this.instance;\r\n    }\r\n    getInstancesByVisibility(visibility) {\r\n        const attributes = [];\r\n        for (const attr of this.instance) {\r\n            if (attr.getVisibility() === visibility) {\r\n                attributes.push(attr);\r\n            }\r\n        }\r\n        return attributes;\r\n    }\r\n    getConstants() {\r\n        return this.constants;\r\n    }\r\n    getConstantsByVisibility(visibility) {\r\n        const attributes = [];\r\n        for (const attr of this.constants) {\r\n            if (attr.getVisibility() === visibility) {\r\n                attributes.push(attr);\r\n            }\r\n        }\r\n        return attributes;\r\n    }\r\n    // todo, optimize\r\n    findByName(name) {\r\n        const upper = name.toUpperCase();\r\n        for (const a of this.getStatic()) {\r\n            if (a.getName().toUpperCase() === upper) {\r\n                return a;\r\n            }\r\n        }\r\n        for (const a of this.getInstance()) {\r\n            if (a.getName().toUpperCase() === upper) {\r\n                return a;\r\n            }\r\n        }\r\n        for (const a of this.getConstants()) {\r\n            if (a.getName().toUpperCase() === upper) {\r\n                return a;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /////////////////////////////\r\n    parse(node, scope) {\r\n        const cdef = node.findDirectStructure(Structures.ClassDefinition);\r\n        if (cdef) {\r\n            this.parseSection(cdef.findDirectStructure(Structures.PublicSection), visibility_1.Visibility.Public, scope);\r\n            this.parseSection(cdef.findDirectStructure(Structures.ProtectedSection), visibility_1.Visibility.Protected, scope);\r\n            this.parseSection(cdef.findDirectStructure(Structures.PrivateSection), visibility_1.Visibility.Private, scope);\r\n            return;\r\n        }\r\n        const idef = node.findDirectStructure(Structures.Interface);\r\n        if (idef) {\r\n            this.parseSection(idef.findDirectStructure(Structures.SectionContents), visibility_1.Visibility.Public, scope);\r\n            return;\r\n        }\r\n        throw new Error(\"MethodDefinition, expected ClassDefinition or InterfaceDefinition\");\r\n    }\r\n    parseSection(node, visibility, scope) {\r\n        if (node === undefined) {\r\n            return;\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            const ctyp = c.get();\r\n            if (c instanceof nodes_1.StructureNode) {\r\n                if (ctyp instanceof Structures.Data) {\r\n                    const found = new data_2.Data().runSyntax(c, scope, this.filename);\r\n                    if (found !== undefined) {\r\n                        const attr = new class_attribute_1.ClassAttribute(found, visibility, found.getMeta());\r\n                        this.instance.push(attr);\r\n                        scope.addIdentifier(attr);\r\n                    }\r\n                }\r\n                else if (ctyp instanceof Structures.ClassData) {\r\n                    const found = new class_data_2.ClassData().runSyntax(c, scope, this.filename);\r\n                    if (found !== undefined) {\r\n                        const attr = new class_attribute_1.ClassAttribute(found, visibility, found.getMeta());\r\n                        this.static.push(attr);\r\n                        scope.addIdentifier(attr);\r\n                    }\r\n                }\r\n                else if (ctyp instanceof Structures.Constants) {\r\n                    const { type: found, values } = new constants_1.Constants().runSyntax(c, scope, this.filename);\r\n                    if (found !== undefined) {\r\n                        const attr = new class_constant_1.ClassConstant(found, visibility, values);\r\n                        this.constants.push(attr);\r\n                        scope.addIdentifier(attr);\r\n                    }\r\n                }\r\n                else if (ctyp instanceof Structures.TypeEnum) {\r\n                    const enums = new type_enum_1.TypeEnum().runSyntax(c, scope, this.filename);\r\n                    for (const e of enums) {\r\n                        // for now add ENUM values as constants\r\n                        this.constants.push(new class_constant_1.ClassConstant(e, visibility, \"novalueClassAttributeEnum\"));\r\n                    }\r\n                }\r\n                else if (ctyp instanceof Structures.Types) {\r\n                    const res = new types_1.Types().runSyntax(c, scope, this.filename);\r\n                    if (res) {\r\n                        scope.addType(res);\r\n                        this.tlist.push({ type: res, visibility });\r\n                    }\r\n                }\r\n                else {\r\n                    // begin recursion\r\n                    this.parseSection(c, visibility, scope);\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode) {\r\n                if (ctyp instanceof Statements.Data) {\r\n                    this.instance.push(this.parseAttribute(c, visibility, scope));\r\n                }\r\n                else if (ctyp instanceof Statements.ClassData) {\r\n                    this.static.push(this.parseAttribute(c, visibility, scope));\r\n                }\r\n                else if (ctyp instanceof Statements.Constant) {\r\n                    const found = new constant_1.Constant().runSyntax(c, scope, this.filename);\r\n                    if (found) {\r\n                        const attr = new class_constant_1.ClassConstant(found, visibility, found.getValue() || \"todo, constant value fallback\");\r\n                        this.constants.push(attr);\r\n                        scope.addIdentifier(attr);\r\n                    }\r\n                }\r\n                else if (ctyp instanceof Statements.Type) {\r\n                    const res = new type_1.Type().runSyntax(c, scope, this.filename);\r\n                    if (res) {\r\n                        scope.addType(res);\r\n                        this.tlist.push({ type: res, visibility });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    parseAttribute(node, visibility, scope) {\r\n        let found = undefined;\r\n        const s = node.get();\r\n        if (s instanceof Statements.Data) {\r\n            found = new data_1.Data().runSyntax(node, scope, this.filename);\r\n        }\r\n        else if (s instanceof Statements.ClassData) {\r\n            found = new class_data_1.ClassData().runSyntax(node, scope, this.filename);\r\n        }\r\n        else {\r\n            throw new Error(\"ClassAttribute, unexpected node, 1, \" + this.filename);\r\n        }\r\n        if (found === undefined) {\r\n            throw new Error(\"ClassAttribute, unexpected node, \" + this.filename);\r\n        }\r\n        scope.addIdentifier(found);\r\n        return new class_attribute_1.ClassAttribute(found, visibility, found.getMeta());\r\n    }\r\n}\r\nexports.Attributes = Attributes;\r\n//# sourceMappingURL=class_attributes.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/class_attributes.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/class_constant.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/class_constant.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassConstant = void 0;\r\nconst _typed_identifier_1 = __webpack_require__(/*! ./_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nclass ClassConstant extends _typed_identifier_1.TypedIdentifier {\r\n    constructor(id, visibility, value) {\r\n        super(id.getToken(), id.getFilename(), id.getType(), [\"read_only\" /* ReadOnly */, \"static\" /* Static */], value);\r\n        this.visibility = visibility;\r\n    }\r\n    getVisibility() {\r\n        return this.visibility;\r\n    }\r\n}\r\nexports.ClassConstant = ClassConstant;\r\n//# sourceMappingURL=class_constant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/class_constant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/class_definition.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/class_definition.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassDefinition = void 0;\r\nconst method_definitions_1 = __webpack_require__(/*! ./method_definitions */ \"./node_modules/@abaplint/core/build/src/abap/types/method_definitions.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst class_attributes_1 = __webpack_require__(/*! ./class_attributes */ \"./node_modules/@abaplint/core/build/src/abap/types/class_attributes.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst aliases_1 = __webpack_require__(/*! ./aliases */ \"./node_modules/@abaplint/core/build/src/abap/types/aliases.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst event_definition_1 = __webpack_require__(/*! ./event_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/event_definition.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ../5_syntax/_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass ClassDefinition extends _identifier_1.Identifier {\r\n    constructor(node, filename, scope) {\r\n        if (!(node.get() instanceof Structures.ClassDefinition)) {\r\n            throw new Error(\"ClassDefinition, unexpected node type\");\r\n        }\r\n        const def = node.findFirstStatement(Statements.ClassDefinition);\r\n        const name = def.findDirectExpression(Expressions.ClassName).getFirstToken();\r\n        super(name, filename);\r\n        scope.addClassDefinition(this);\r\n        this.node = node;\r\n        this.events = [];\r\n        this.implementing = [];\r\n        scope.push(_scope_type_1.ScopeType.ClassDefinition, name.getStr(), name.getStart(), filename);\r\n        this.superClass = this.findSuper(def, filename, scope);\r\n        this.friends = this.findFriends(def, filename, scope);\r\n        this.parse(filename, scope);\r\n        const helper = new _object_oriented_1.ObjectOriented(scope);\r\n        const implemented = helper.fromSuperClass(this);\r\n        helper.fromInterfaces(this, implemented);\r\n        this.attributes = new class_attributes_1.Attributes(this.node, this.filename, scope);\r\n        this.types = this.attributes.getTypes();\r\n        this.methodDefs = new method_definitions_1.MethodDefinitions(this.node, this.filename, scope);\r\n        const events = this.node.findAllStatements(Statements.Events);\r\n        for (const e of events) {\r\n            this.events.push(new event_definition_1.EventDefinition(e, visibility_1.Visibility.Public, this.filename, scope)); // todo, all these are not Public\r\n        }\r\n        scope.pop(node.getLastToken().getEnd());\r\n        const concat = this.node.findFirstStatement(Statements.ClassDefinition).concatTokens().toUpperCase();\r\n        this.testing = concat.includes(\" FOR TESTING\");\r\n        this.abstract = concat.includes(\" ABSTRACT\");\r\n    }\r\n    getFriends() {\r\n        return this.friends;\r\n    }\r\n    getEvents() {\r\n        return this.events;\r\n    }\r\n    getMethodDefinitions() {\r\n        return this.methodDefs;\r\n    }\r\n    getTypeDefinitions() {\r\n        return this.types;\r\n    }\r\n    getSuperClass() {\r\n        return this.superClass;\r\n    }\r\n    getAttributes() {\r\n        return this.attributes;\r\n    }\r\n    isGlobal() {\r\n        return this.node.findFirstExpression(Expressions.ClassGlobal) !== undefined;\r\n    }\r\n    isFinal() {\r\n        return this.node.findFirstExpression(Expressions.ClassFinal) !== undefined;\r\n    }\r\n    getImplementing() {\r\n        return this.implementing;\r\n    }\r\n    getAliases() {\r\n        return this.aliases;\r\n    }\r\n    isForTesting() {\r\n        return this.testing;\r\n    }\r\n    isAbstract() {\r\n        return this.abstract;\r\n    }\r\n    /*\r\n      public getEvents() {\r\n      }\r\n    */\r\n    ///////////////////\r\n    findSuper(def, filename, scope) {\r\n        var _a;\r\n        const token = (_a = def === null || def === void 0 ? void 0 : def.findDirectExpression(expressions_1.SuperClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        this.addReference(token, filename, scope);\r\n        const name = token === null || token === void 0 ? void 0 : token.getStr();\r\n        return name;\r\n    }\r\n    findFriends(def, filename, scope) {\r\n        var _a;\r\n        const result = [];\r\n        for (const n of ((_a = def === null || def === void 0 ? void 0 : def.findDirectExpression(Expressions.ClassFriends)) === null || _a === void 0 ? void 0 : _a.findDirectExpressions(Expressions.ClassName)) || []) {\r\n            const token = n.getFirstToken();\r\n            this.addReference(token, filename, scope);\r\n            const name = token.getStr();\r\n            result.push(name);\r\n        }\r\n        return result;\r\n    }\r\n    addReference(token, filename, scope) {\r\n        const name = token === null || token === void 0 ? void 0 : token.getStr();\r\n        if (name) {\r\n            const s = scope.findClassDefinition(name);\r\n            if (s) {\r\n                scope.addReference(token, s, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n            }\r\n            else if (scope.getDDIC().inErrorNamespace(name) === false) {\r\n                scope.addReference(token, undefined, _reference_1.ReferenceType.ObjectOrientedVoidReference, filename);\r\n            }\r\n        }\r\n    }\r\n    parse(filename, scope) {\r\n        var _a;\r\n        for (const node of this.node.findAllStatements(Statements.InterfaceDef)) {\r\n            const partial = node.concatTokens().toUpperCase().includes(\" PARTIALLY IMPLEMENTED\");\r\n            const token = (_a = node.findFirstExpression(Expressions.InterfaceName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n            if (token === undefined) {\r\n                throw new Error(\"ClassDefinition, unable to find interface token\");\r\n            }\r\n            const name = token.getStr().toUpperCase();\r\n            this.implementing.push({ name, partial });\r\n            const intf = scope.findInterfaceDefinition(name);\r\n            if (intf) {\r\n                scope.addReference(token, intf, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n            }\r\n        }\r\n        this.aliases = new aliases_1.Aliases(this.node, this.filename, scope);\r\n    }\r\n}\r\nexports.ClassDefinition = ClassDefinition;\r\n//# sourceMappingURL=class_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/class_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/class_implementation.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/class_implementation.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassImplementation = void 0;\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_implementation_1 = __webpack_require__(/*! ./method_implementation */ \"./node_modules/@abaplint/core/build/src/abap/types/method_implementation.js\");\r\nclass ClassImplementation extends _identifier_1.Identifier {\r\n    constructor(node, filename) {\r\n        if (!(node.get() instanceof Structures.ClassImplementation)) {\r\n            throw new Error(\"ClassImplementation, unexpected node type\");\r\n        }\r\n        const name = node.findFirstStatement(Statements.ClassImplementation).findFirstExpression(Expressions.ClassName).getFirstToken();\r\n        super(name, filename);\r\n        this.node = node;\r\n    }\r\n    getMethodImplementations() {\r\n        const ret = [];\r\n        for (const method of this.node.findAllStructures(Structures.Method)) {\r\n            ret.push(new method_implementation_1.MethodImplementation(method, this.filename));\r\n        }\r\n        return ret;\r\n    }\r\n    getMethodImplementation(name) {\r\n        for (const impl of this.getMethodImplementations()) {\r\n            if (impl.getName().toUpperCase() === name.toUpperCase()) {\r\n                return impl;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.ClassImplementation = ClassImplementation;\r\n//# sourceMappingURL=class_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/class_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/event_definition.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/event_definition.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventDefinition = void 0;\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst events_1 = __webpack_require__(/*! ../2_statements/statements/events */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/events.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_param_1 = __webpack_require__(/*! ../5_syntax/expressions/method_param */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_param.js\");\r\nclass EventDefinition extends _identifier_1.Identifier {\r\n    constructor(node, _visibility, filename, scope) {\r\n        if (!(node.get() instanceof events_1.Events)) {\r\n            throw new Error(\"MethodDefinition, expected MethodDef as part of input node\");\r\n        }\r\n        const found = node.findFirstExpression(Expressions.Field);\r\n        if (found === undefined) {\r\n            throw new Error(\"MethodDefinition, expected MethodDef as part of input node\");\r\n        }\r\n        super(found.getFirstToken(), filename);\r\n        this.parameters = [];\r\n        this.parse(node, filename, scope);\r\n    }\r\n    getParameters() {\r\n        return this.parameters;\r\n    }\r\n    ///////////////\r\n    parse(node, filename, scope) {\r\n        for (const e of node.findAllExpressions(expressions_1.MethodParam)) {\r\n            this.parameters.push(new method_param_1.MethodParam().runSyntax(e, scope, filename, []));\r\n        }\r\n    }\r\n}\r\nexports.EventDefinition = EventDefinition;\r\n//# sourceMappingURL=event_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/event_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/form_definition.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/form_definition.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormDefinition = void 0;\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Tokens = __webpack_require__(/*! ../1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ./_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst form_param_1 = __webpack_require__(/*! ../5_syntax/expressions/form_param */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/form_param.js\");\r\nconst basic_1 = __webpack_require__(/*! ./basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass FormDefinition extends _identifier_1.Identifier {\r\n    constructor(node, filename, scope) {\r\n        const st = node instanceof nodes_1.StructureNode ? node.findFirstStatement(Statements.Form) : node;\r\n        // FORMs can contain a dash in the name\r\n        const formName = st.findFirstExpression(Expressions.FormName);\r\n        const pos = formName.getFirstToken().getStart();\r\n        const name = formName.concatTokens();\r\n        const nameToken = new Tokens.Identifier(pos, name);\r\n        super(nameToken, filename);\r\n        this.node = st;\r\n        this.tableParameters = this.findTables(scope, filename);\r\n        this.usingParameters = this.findType(Expressions.FormUsing, scope);\r\n        this.changingParameters = this.findType(Expressions.FormChanging, scope);\r\n    }\r\n    getTablesParameters() {\r\n        return this.tableParameters;\r\n    }\r\n    getUsingParameters() {\r\n        return this.usingParameters;\r\n    }\r\n    getChangingParameters() {\r\n        return this.changingParameters;\r\n    }\r\n    ///////////////\r\n    findTables(scope, filename) {\r\n        const ret = [];\r\n        const tables = this.node.findFirstExpression(Expressions.FormTables);\r\n        if (tables === undefined) {\r\n            return [];\r\n        }\r\n        for (const param of tables.findAllExpressions(Expressions.FormParam)) {\r\n            if (param.getChildren().length === 1) {\r\n                // untyped TABLES parameter\r\n                ret.push(new _typed_identifier_1.TypedIdentifier(param.getFirstToken(), filename, new basic_1.VoidType(\"FORM:UNTYPED\"), [\"form_parameter\" /* FormParameter */]));\r\n            }\r\n            else {\r\n                const p = new form_param_1.FormParam().runSyntax(param, scope, this.filename);\r\n                let type = p.getType();\r\n                const isStructure = param.findDirectTokenByText(\"STRUCTURE\") !== undefined;\r\n                if (isStructure) {\r\n                    type = new basic_1.TableType(type, { withHeader: true });\r\n                }\r\n                if (type instanceof basic_1.TableType) {\r\n                    type = new basic_1.TableType(type.getRowType(), { withHeader: true });\r\n                }\r\n                else if (!(type instanceof basic_1.UnknownType) && !(type instanceof basic_1.VoidType)) {\r\n                    type = new basic_1.UnknownType(\"FORM TABLES type must be table type\");\r\n                }\r\n                ret.push(new _typed_identifier_1.TypedIdentifier(p.getToken(), filename, type, [\"form_parameter\" /* FormParameter */]));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    findType(type, scope) {\r\n        const found = this.node.findFirstExpression(type);\r\n        if (found === undefined) {\r\n            return [];\r\n        }\r\n        return this.findParams(found, scope);\r\n    }\r\n    findParams(node, scope) {\r\n        const res = [];\r\n        for (const param of node.findAllExpressions(Expressions.FormParam)) {\r\n            const p = new form_param_1.FormParam().runSyntax(param, scope, this.filename);\r\n            res.push(p);\r\n        }\r\n        return res;\r\n    }\r\n}\r\nexports.FormDefinition = FormDefinition;\r\n//# sourceMappingURL=form_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/form_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/function_module_definition.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/function_module_definition.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionModuleDefinition = exports.FunctionModuleParameterDirection = void 0;\r\nconst xml_utils_1 = __webpack_require__(/*! ../../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nvar FunctionModuleParameterDirection;\r\n(function (FunctionModuleParameterDirection) {\r\n    FunctionModuleParameterDirection[\"importing\"] = \"importing\";\r\n    FunctionModuleParameterDirection[\"exporting\"] = \"exporting\";\r\n    FunctionModuleParameterDirection[\"changing\"] = \"changing\";\r\n    FunctionModuleParameterDirection[\"tables\"] = \"tables\";\r\n})(FunctionModuleParameterDirection = exports.FunctionModuleParameterDirection || (exports.FunctionModuleParameterDirection = {}));\r\nclass FunctionModuleDefinition {\r\n    constructor(data) {\r\n        this.parse(data);\r\n    }\r\n    getParameters() {\r\n        return this.parameters;\r\n    }\r\n    getDescription() {\r\n        return this.description;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    ///////////////\r\n    parse(data) {\r\n        if (data.FUNCNAME === undefined) {\r\n            throw new Error(\"Function module name undefined\");\r\n        }\r\n        this.name = data.FUNCNAME;\r\n        this.description = data.SHORT_TEXT;\r\n        this.parameters = [];\r\n        if (data.IMPORT) {\r\n            for (const param of xml_utils_1.xmlToArray(data.IMPORT.RSIMP)) {\r\n                if (param.PARAMETER === undefined) {\r\n                    throw new Error(\"Function module name parameter undefined, importing\");\r\n                }\r\n                this.parameters.push({\r\n                    name: param.PARAMETER,\r\n                    direction: FunctionModuleParameterDirection.importing,\r\n                    type: param.TYP,\r\n                });\r\n            }\r\n        }\r\n        if (data.CHANGING) {\r\n            for (const param of xml_utils_1.xmlToArray(data.CHANGING.RSCHA)) {\r\n                if (param.PARAMETER === undefined) {\r\n                    throw new Error(\"Function module name parameter undefined, changing\");\r\n                }\r\n                this.parameters.push({\r\n                    name: param.PARAMETER,\r\n                    direction: FunctionModuleParameterDirection.changing,\r\n                    type: param.TYP,\r\n                });\r\n            }\r\n        }\r\n        if (data.EXPORT) {\r\n            for (const param of xml_utils_1.xmlToArray(data.EXPORT.RSEXP)) {\r\n                if (param.PARAMETER === undefined) {\r\n                    throw new Error(\"Function module name parameter undefined, exporting\");\r\n                }\r\n                this.parameters.push({\r\n                    name: param.PARAMETER,\r\n                    direction: FunctionModuleParameterDirection.exporting,\r\n                    type: param.TYP,\r\n                });\r\n            }\r\n        }\r\n        if (data.TABLES) {\r\n            for (const param of xml_utils_1.xmlToArray(data.TABLES.RSTBL)) {\r\n                if (param.PARAMETER === undefined) {\r\n                    throw new Error(\"Function module name parameter undefined, tables\");\r\n                }\r\n                this.parameters.push({\r\n                    name: param.PARAMETER,\r\n                    direction: FunctionModuleParameterDirection.tables,\r\n                    type: param.DBSTRUCT,\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.FunctionModuleDefinition = FunctionModuleDefinition;\r\n//# sourceMappingURL=function_module_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/function_module_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./class_attribute */ \"./node_modules/@abaplint/core/build/src/abap/types/class_attribute.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_attributes */ \"./node_modules/@abaplint/core/build/src/abap/types/class_attributes.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_constant */ \"./node_modules/@abaplint/core/build/src/abap/types/class_constant.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/class_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_implementation */ \"./node_modules/@abaplint/core/build/src/abap/types/class_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/form_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_module_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/function_module_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/interface_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/method_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_definitions */ \"./node_modules/@abaplint/core/build/src/abap/types/method_definitions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_implementation */ \"./node_modules/@abaplint/core/build/src/abap/types/method_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_parameters */ \"./node_modules/@abaplint/core/build/src/abap/types/method_parameters.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_definitions */ \"./node_modules/@abaplint/core/build/src/abap/types/type_definitions.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/interface_definition.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/interface_definition.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InterfaceDefinition = void 0;\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst class_attributes_1 = __webpack_require__(/*! ./class_attributes */ \"./node_modules/@abaplint/core/build/src/abap/types/class_attributes.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst event_definition_1 = __webpack_require__(/*! ./event_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/event_definition.js\");\r\nconst method_definitions_1 = __webpack_require__(/*! ./method_definitions */ \"./node_modules/@abaplint/core/build/src/abap/types/method_definitions.js\");\r\nconst aliases_1 = __webpack_require__(/*! ./aliases */ \"./node_modules/@abaplint/core/build/src/abap/types/aliases.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass InterfaceDefinition extends _identifier_1.Identifier {\r\n    constructor(node, filename, scope) {\r\n        if (!(node.get() instanceof Structures.Interface)) {\r\n            throw new Error(\"InterfaceDefinition, unexpected node type\");\r\n        }\r\n        const name = node.findFirstStatement(Statements.Interface).findFirstExpression(Expressions.InterfaceName).getFirstToken();\r\n        super(name, filename);\r\n        scope.addInterfaceDefinition(this);\r\n        this.node = node;\r\n        this.events = [];\r\n        this.implementing = [];\r\n        scope.push(_scope_type_1.ScopeType.Interface, name.getStr(), node.getFirstToken().getStart(), filename);\r\n        this.parse(scope);\r\n        scope.pop(node.getLastToken().getEnd());\r\n    }\r\n    getSuperClass() {\r\n        return undefined;\r\n    }\r\n    getImplementing() {\r\n        return this.implementing;\r\n    }\r\n    getAliases() {\r\n        return this.aliases;\r\n    }\r\n    getEvents() {\r\n        return this.events;\r\n    }\r\n    getAttributes() {\r\n        return this.attributes;\r\n    }\r\n    getTypeDefinitions() {\r\n        return this.typeDefinitions;\r\n    }\r\n    isLocal() {\r\n        return !this.isGlobal();\r\n    }\r\n    isGlobal() {\r\n        return this.node.findFirstExpression(Expressions.ClassGlobal) !== undefined;\r\n    }\r\n    getMethodDefinitions() {\r\n        return this.methodDefinitions;\r\n    }\r\n    /////////////////\r\n    parse(scope) {\r\n        var _a;\r\n        this.attributes = new class_attributes_1.Attributes(this.node, this.filename, scope);\r\n        this.typeDefinitions = this.attributes.getTypes();\r\n        this.methodDefinitions = new method_definitions_1.MethodDefinitions(this.node, this.filename, scope);\r\n        const events = this.node.findAllStatements(Statements.Events);\r\n        for (const e of events) {\r\n            this.events.push(new event_definition_1.EventDefinition(e, visibility_1.Visibility.Public, this.filename, scope));\r\n        }\r\n        for (const i of this.node.findAllStatements(Statements.InterfaceDef)) {\r\n            const token = (_a = i.findDirectExpression(Expressions.InterfaceName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n            const name = token === null || token === void 0 ? void 0 : token.getStr();\r\n            if (name) {\r\n                this.implementing.push({ name, partial: false });\r\n                const idef = scope.findInterfaceDefinition(name);\r\n                if (idef) {\r\n                    scope.addReference(token, idef, _reference_1.ReferenceType.ObjectOrientedReference, this.filename);\r\n                }\r\n                else if (scope.getDDIC().inErrorNamespace(name) === false) {\r\n                    scope.addReference(token, undefined, _reference_1.ReferenceType.ObjectOrientedVoidReference, this.filename);\r\n                }\r\n                else {\r\n                    throw new Error(\"Interface \" + name + \" unknown\");\r\n                }\r\n            }\r\n        }\r\n        this.aliases = new aliases_1.Aliases(this.node, this.filename, scope);\r\n    }\r\n}\r\nexports.InterfaceDefinition = InterfaceDefinition;\r\n//# sourceMappingURL=interface_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/interface_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/message.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/message.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Message = void 0;\r\nclass Message {\r\n    constructor(num, msg) {\r\n        this.num = num;\r\n        if (this.num === undefined) {\r\n            this.num = \"\";\r\n        }\r\n        this.msg = msg;\r\n        if (this.msg === undefined) {\r\n            this.msg = \"\";\r\n        }\r\n    }\r\n    getNumber() {\r\n        return this.num;\r\n    }\r\n    getMessage() {\r\n        return this.msg;\r\n    }\r\n    getPlaceholderCount() {\r\n        return (this.getMessage().match(/&/g) || []).length;\r\n    }\r\n}\r\nexports.Message = Message;\r\n//# sourceMappingURL=message.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/message.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/method_definition.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/method_definition.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefinition = void 0;\r\nconst statements_1 = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst method_parameters_1 = __webpack_require__(/*! ./method_parameters */ \"./node_modules/@abaplint/core/build/src/abap/types/method_parameters.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass MethodDefinition extends _identifier_1.Identifier {\r\n    // todo: final flag\r\n    constructor(node, visibility, filename, scope) {\r\n        var _a;\r\n        if (!(node.get() instanceof statements_1.MethodDef)) {\r\n            throw new Error(\"MethodDefinition, expected MethodDef as part of input node\");\r\n        }\r\n        const found = node.findDirectExpression(Expressions.MethodName);\r\n        if (found === undefined) {\r\n            throw new Error(\"MethodDefinition, expected MethodDef as part of input node\");\r\n        }\r\n        super(found.getFirstToken(), filename);\r\n        this.redefinition = false;\r\n        if (node.findDirectExpression(Expressions.Redefinition)) {\r\n            this.redefinition = true;\r\n            const name = found.getFirstToken().getStr();\r\n            if (name.includes(\"~\")) {\r\n                const idef = scope.findInterfaceDefinition(name.split(\"~\")[0]);\r\n                if (idef) {\r\n                    scope.addReference(found.getFirstToken(), idef, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n                }\r\n            }\r\n        }\r\n        this.eventHandler = false;\r\n        if (node.findDirectExpression(Expressions.EventHandler)) {\r\n            this.eventHandler = true;\r\n        }\r\n        this.abstract = false;\r\n        if (node.findDirectExpression(Expressions.Abstract)) {\r\n            this.abstract = true;\r\n        }\r\n        this.static = false;\r\n        // checks for \"CLASS-METHODS\"\r\n        if (node.getFirstToken().getStr().toUpperCase().startsWith(\"CLASS\")) {\r\n            this.static = true;\r\n        }\r\n        this.raising = [];\r\n        for (const r of ((_a = node.findDirectExpression(Expressions.MethodDefRaising)) === null || _a === void 0 ? void 0 : _a.findAllExpressions(Expressions.ClassName)) || []) {\r\n            const token = r.getFirstToken();\r\n            const name = token.getStr();\r\n            this.raising.push(name);\r\n            const clas = scope.findClassDefinition(name);\r\n            if (clas) {\r\n                scope.addReference(token, clas, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n            }\r\n        }\r\n        this.visibility = visibility;\r\n        this.parameters = new method_parameters_1.MethodParameters(node, this.filename, scope);\r\n    }\r\n    getVisibility() {\r\n        return this.visibility;\r\n    }\r\n    isRedefinition() {\r\n        return this.redefinition;\r\n    }\r\n    isAbstract() {\r\n        return this.abstract;\r\n    }\r\n    isStatic() {\r\n        return this.static;\r\n    }\r\n    isEventHandler() {\r\n        return this.eventHandler;\r\n    }\r\n    getParameters() {\r\n        return this.parameters;\r\n    }\r\n    getRaising() {\r\n        return this.raising;\r\n    }\r\n}\r\nexports.MethodDefinition = MethodDefinition;\r\n//# sourceMappingURL=method_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/method_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/method_definitions.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/method_definitions.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodDefinitions = void 0;\r\nconst method_definition_1 = __webpack_require__(/*! ./method_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/method_definition.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst statements_1 = __webpack_require__(/*! ../2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nclass MethodDefinitions {\r\n    constructor(node, filename, scope) {\r\n        this.all = {};\r\n        this.all = {};\r\n        this.filename = filename;\r\n        this.parse(node, scope);\r\n    }\r\n    *getAll() {\r\n        for (const a in this.all) {\r\n            yield this.all[a];\r\n        }\r\n    }\r\n    getByName(name) {\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        return this.all[name.toUpperCase()];\r\n    }\r\n    ///////////////////////\r\n    parseInterface(node, scope) {\r\n        const defs = node.findAllStatements(statements_1.MethodDef);\r\n        for (const def of defs) {\r\n            const m = new method_definition_1.MethodDefinition(def, visibility_1.Visibility.Public, this.filename, scope);\r\n            this.all[m.getName().toUpperCase()] = m;\r\n        }\r\n    }\r\n    parse(node, scope) {\r\n        const idef = node.findDirectStructure(Structures.Interface);\r\n        if (idef) {\r\n            return this.parseInterface(node, scope);\r\n        }\r\n        const cdef = node.findDirectStructure(Structures.ClassDefinition);\r\n        if (!cdef) {\r\n            throw new Error(\"MethodDefinitions, expected ClassDefinition as part of input node\");\r\n        }\r\n        const pri = cdef.findDirectStructure(Structures.PrivateSection);\r\n        for (const def of (pri === null || pri === void 0 ? void 0 : pri.findAllStatements(statements_1.MethodDef)) || []) {\r\n            const m = new method_definition_1.MethodDefinition(def, visibility_1.Visibility.Private, this.filename, scope);\r\n            this.all[m.getName().toUpperCase()] = m;\r\n        }\r\n        const pro = node.findDirectStructure(Structures.ProtectedSection);\r\n        for (const def of (pro === null || pro === void 0 ? void 0 : pro.findAllStatements(statements_1.MethodDef)) || []) {\r\n            const m = new method_definition_1.MethodDefinition(def, visibility_1.Visibility.Protected, this.filename, scope);\r\n            this.all[m.getName().toUpperCase()] = m;\r\n        }\r\n        const pub = node.findDirectStructure(Structures.PublicSection);\r\n        for (const def of (pub === null || pub === void 0 ? void 0 : pub.findAllStatements(statements_1.MethodDef)) || []) {\r\n            const m = new method_definition_1.MethodDefinition(def, visibility_1.Visibility.Public, this.filename, scope);\r\n            this.all[m.getName().toUpperCase()] = m;\r\n        }\r\n    }\r\n}\r\nexports.MethodDefinitions = MethodDefinitions;\r\n//# sourceMappingURL=method_definitions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/method_definitions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/method_implementation.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/method_implementation.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodImplementation = void 0;\r\nconst _identifier_1 = __webpack_require__(/*! ../4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst Structures = __webpack_require__(/*! ../3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nclass MethodImplementation extends _identifier_1.Identifier {\r\n    constructor(node, filename) {\r\n        if (!(node.get() instanceof Structures.Method)) {\r\n            throw new Error(\"MethodImplementation, expected Method as part of input node\");\r\n        }\r\n        const found = node.findFirstExpression(Expressions.MethodName);\r\n        if (found === undefined) {\r\n            throw new Error(\"MethodImplementation, expected MethodName as part of input node\");\r\n        }\r\n        super(found.getFirstToken(), filename);\r\n    }\r\n}\r\nexports.MethodImplementation = MethodImplementation;\r\n//# sourceMappingURL=method_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/method_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/method_parameters.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/method_parameters.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParameters = void 0;\r\nconst method_def_1 = __webpack_require__(/*! ../2_statements/statements/method_def */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/method_def.js\");\r\nconst Expressions = __webpack_require__(/*! ../2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ./_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ./basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst method_def_returning_1 = __webpack_require__(/*! ../5_syntax/expressions/method_def_returning */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_def_returning.js\");\r\nconst method_param_1 = __webpack_require__(/*! ../5_syntax/expressions/method_param */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/expressions/method_param.js\");\r\nconst _object_oriented_1 = __webpack_require__(/*! ../5_syntax/_object_oriented */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_object_oriented.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\n// todo:\r\n// this.exceptions = [];\r\n// also consider RAISING vs EXCEPTIONS\r\nclass MethodParameters {\r\n    constructor(node, filename, scope) {\r\n        if (!(node.get() instanceof method_def_1.MethodDef)) {\r\n            throw new Error(\"MethodDefinition, expected MethodDef as part of input node\");\r\n        }\r\n        this.importing = [];\r\n        this.exporting = [];\r\n        this.changing = [];\r\n        this.optional = [];\r\n        this.defaults = {};\r\n        this.returning = undefined;\r\n        this.preferred = undefined;\r\n        this.exceptions = [];\r\n        this.filename = filename;\r\n        this.parse(node, scope, filename);\r\n    }\r\n    getAll() {\r\n        const ret = [];\r\n        const returning = this.getReturning();\r\n        if (returning) {\r\n            ret.push(returning);\r\n        }\r\n        ret.push(...this.getImporting());\r\n        ret.push(...this.getExporting());\r\n        ret.push(...this.getChanging());\r\n        return ret;\r\n    }\r\n    getDefaultImporting() {\r\n        if (this.importing.length === 0) {\r\n            return undefined;\r\n        }\r\n        else if (this.importing.length === 1) {\r\n            return this.importing[0].getName().toUpperCase();\r\n        }\r\n        else if (this.preferred) {\r\n            return this.preferred;\r\n        }\r\n        let candidates = this.importing.map(i => i.getName().toUpperCase());\r\n        candidates = candidates.filter(c => this.optional.indexOf(c) < 0);\r\n        if (candidates.length === 1) {\r\n            return candidates[0];\r\n        }\r\n        return undefined;\r\n    }\r\n    getImporting() {\r\n        return this.importing;\r\n    }\r\n    getExporting() {\r\n        return this.exporting;\r\n    }\r\n    getChanging() {\r\n        return this.changing;\r\n    }\r\n    getReturning() {\r\n        return this.returning;\r\n    }\r\n    getExceptions() {\r\n        return this.exceptions;\r\n    }\r\n    getParameterDefault(parameter) {\r\n        return this.defaults[parameter.toUpperCase()];\r\n    }\r\n    ///////////////////\r\n    parse(node, scope, filename) {\r\n        var _a, _b;\r\n        const handler = node.findFirstExpression(Expressions.EventHandler);\r\n        if (handler) {\r\n            const nameToken = (_a = node.findFirstExpression(Expressions.ClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n            const ooName = nameToken === null || nameToken === void 0 ? void 0 : nameToken.getStr();\r\n            const def = scope.findObjectDefinition(ooName);\r\n            if (def) {\r\n                scope.addReference(nameToken, def, _reference_1.ReferenceType.ObjectOrientedReference, filename);\r\n            }\r\n            const doVoid = def ? false : !scope.getDDIC().inErrorNamespace(ooName);\r\n            const eventName = (_b = node.findFirstExpression(Expressions.Field)) === null || _b === void 0 ? void 0 : _b.getFirstToken().getStr();\r\n            const event = new _object_oriented_1.ObjectOriented(scope).searchEvent(def, eventName);\r\n            for (const p of handler.findAllExpressions(Expressions.MethodParamName)) {\r\n                const token = p.getFirstToken();\r\n                const search = token.getStr().toUpperCase().replace(\"!\", \"\");\r\n                if (search === \"SENDER\" && def) {\r\n                    this.importing.push(new _typed_identifier_1.TypedIdentifier(token, this.filename, new basic_1.ObjectReferenceType(def), [\"event_parameter\" /* EventParameter */]));\r\n                    continue;\r\n                }\r\n                const found = event === null || event === void 0 ? void 0 : event.getParameters().find(p => p.getName().toUpperCase() === search);\r\n                if (found) {\r\n                    this.importing.push(new _typed_identifier_1.TypedIdentifier(token, this.filename, found.getType(), [\"event_parameter\" /* EventParameter */]));\r\n                }\r\n                else if (doVoid) {\r\n                    this.importing.push(new _typed_identifier_1.TypedIdentifier(token, this.filename, new basic_1.VoidType(ooName), [\"event_parameter\" /* EventParameter */]));\r\n                }\r\n                else {\r\n                    const type = new basic_1.UnknownType(`handler parameter not found \"${search}\"`);\r\n                    this.importing.push(new _typed_identifier_1.TypedIdentifier(token, this.filename, type, [\"event_parameter\" /* EventParameter */]));\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        const importing = node.findFirstExpression(Expressions.MethodDefImporting);\r\n        if (importing) {\r\n            this.add(this.importing, importing, scope, [\"importing\" /* MethodImporting */]);\r\n            if (importing.concatTokens().toUpperCase().includes(\" PREFERRED PARAMETER\")) {\r\n                this.preferred = importing.getLastToken().getStr().toUpperCase();\r\n            }\r\n        }\r\n        const exporting = node.findFirstExpression(Expressions.MethodDefExporting);\r\n        if (exporting) {\r\n            this.add(this.exporting, exporting, scope, [\"exporting\" /* MethodExporting */]);\r\n        }\r\n        const changing = node.findFirstExpression(Expressions.MethodDefChanging);\r\n        if (changing) {\r\n            this.add(this.changing, changing, scope, [\"changing\" /* MethodChanging */]);\r\n        }\r\n        const returning = node.findFirstExpression(Expressions.MethodDefReturning);\r\n        if (returning) {\r\n            this.returning = new method_def_returning_1.MethodDefReturning().runSyntax(returning, scope, this.filename, [\"returning\" /* MethodReturning */]);\r\n        }\r\n    }\r\n    add(target, source, scope, meta) {\r\n        var _a;\r\n        for (const opt of source.findAllExpressions(Expressions.MethodParamOptional)) {\r\n            const p = opt.findDirectExpression(Expressions.MethodParam);\r\n            if (p === undefined) {\r\n                continue;\r\n            }\r\n            target.push(new method_param_1.MethodParam().runSyntax(p, scope, this.filename, meta));\r\n            if (opt.getLastToken().getStr().toUpperCase() === \"OPTIONAL\") {\r\n                const name = target[target.length - 1].getName().toUpperCase();\r\n                this.optional.push(name);\r\n            }\r\n            else if (opt.findFirstExpression(Expressions.Default)) {\r\n                const name = target[target.length - 1].getName().toUpperCase();\r\n                this.optional.push(name);\r\n                const val = (_a = opt.findFirstExpression(Expressions.Default)) === null || _a === void 0 ? void 0 : _a.getLastChild();\r\n                if (val && val instanceof nodes_1.ExpressionNode) {\r\n                    this.defaults[name] = val;\r\n                }\r\n            }\r\n        }\r\n        if (target.length > 0) {\r\n            return;\r\n        }\r\n        const params = source.findAllExpressions(Expressions.MethodParam);\r\n        for (const param of params) {\r\n            target.push(new method_param_1.MethodParam().runSyntax(param, scope, this.filename, meta));\r\n        }\r\n    }\r\n}\r\nexports.MethodParameters = MethodParameters;\r\n//# sourceMappingURL=method_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/method_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/abap/types/type_definitions.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/abap/types/type_definitions.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeDefinitions = void 0;\r\nclass TypeDefinitions {\r\n    constructor(list) {\r\n        this.map = {};\r\n        this.list = list;\r\n        for (const t of list) {\r\n            // todo, can assumptions be made regarding the case of t.getName()?\r\n            this.map[t.type.getName().toUpperCase()] = t;\r\n        }\r\n    }\r\n    getAll() {\r\n        return this.list;\r\n    }\r\n    getByName(name) {\r\n        var _a;\r\n        return (_a = this.map[name.toUpperCase()]) === null || _a === void 0 ? void 0 : _a.type;\r\n    }\r\n}\r\nexports.TypeDefinitions = TypeDefinitions;\r\n//# sourceMappingURL=type_definitions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/abap/types/type_definitions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/artifacts_objects.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/artifacts_objects.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ArtifactsObjects = void 0;\r\nconst Objects = __webpack_require__(/*! ./objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _unknown_object_1 = __webpack_require__(/*! ./objects/_unknown_object */ \"./node_modules/@abaplint/core/build/src/objects/_unknown_object.js\");\r\nclass ArtifactsObjects {\r\n    static newObject(name, type) {\r\n        if (this.objectMap === undefined) {\r\n            this.buildObjectMap();\r\n        }\r\n        if (type === undefined || this.objectMap[type] === undefined) {\r\n            return new _unknown_object_1.UnknownObject(name, type);\r\n        }\r\n        else {\r\n            return new this.objectMap[type](name);\r\n        }\r\n    }\r\n    static buildObjectMap() {\r\n        this.objectMap = [];\r\n        for (const key in Objects) {\r\n            const list = Objects;\r\n            if (typeof list[key] === \"function\") {\r\n                const obj = new list[key](\"DUMMY_NAME\");\r\n                this.objectMap[obj.getType()] = list[key];\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ArtifactsObjects = ArtifactsObjects;\r\n//# sourceMappingURL=artifacts_objects.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/artifacts_objects.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/artifacts_rules.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/artifacts_rules.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ArtifactsRules = void 0;\r\nconst Rules = __webpack_require__(/*! ./rules */ \"./node_modules/@abaplint/core/build/src/rules/index.js\");\r\nclass ArtifactsRules {\r\n    static getRules() {\r\n        const ret = [];\r\n        for (const key in Rules) {\r\n            const list = Rules;\r\n            if (typeof list[key] === \"function\") {\r\n                const rule = new list[key]();\r\n                // note that configuration is also exported from rules\r\n                if (rule.getMetadata !== undefined) {\r\n                    ret.push(rule);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.ArtifactsRules = ArtifactsRules;\r\n//# sourceMappingURL=artifacts_rules.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/artifacts_rules.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/config.js":
/*!*********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/config.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Config = void 0;\r\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst artifacts_rules_1 = __webpack_require__(/*! ./artifacts_rules */ \"./node_modules/@abaplint/core/build/src/artifacts_rules.js\");\r\nconst JSON5 = __webpack_require__(/*! json5 */ \"./node_modules/json5/dist/index.mjs\");\r\n// assumption: this class is immutable\r\nclass Config {\r\n    constructor(json) {\r\n        // huh, hack\r\n        if (JSON5.parse === undefined) {\r\n            // @ts-ignore\r\n            JSON5.parse = JSON5.default.parse;\r\n        }\r\n        this.config = JSON5.parse(json);\r\n        if (this.config.global === undefined) {\r\n            this.config.global = Config.getDefault().getGlobal();\r\n        }\r\n        if (this.config.syntax === undefined) {\r\n            this.config.syntax = Config.getDefault().getSyntaxSetttings();\r\n        }\r\n        if (this.config.syntax.globalMacros === undefined) {\r\n            this.config.syntax.globalMacros = [];\r\n        }\r\n        if (this.config.syntax.globalConstants === undefined) {\r\n            this.config.syntax.globalConstants = [];\r\n        }\r\n        if (this.config.global.skipIncludesWithoutMain === undefined) {\r\n            this.config.global.skipIncludesWithoutMain = false;\r\n        }\r\n        this.checkVersion();\r\n    }\r\n    static getDefault(ver) {\r\n        const rules = {};\r\n        const sorted = artifacts_rules_1.ArtifactsRules.getRules().sort((a, b) => {\r\n            return a.getMetadata().key.localeCompare(b.getMetadata().key);\r\n        });\r\n        for (const rule of sorted) {\r\n            rules[rule.getMetadata().key] = rule.getConfig();\r\n        }\r\n        let version = version_1.defaultVersion;\r\n        if (ver) {\r\n            version = ver;\r\n        }\r\n        const config = {\r\n            global: {\r\n                files: \"/src/**/*.*\",\r\n                exclude: [],\r\n                skipGeneratedGatewayClasses: true,\r\n                skipGeneratedPersistentClasses: true,\r\n                skipGeneratedFunctionGroups: true,\r\n                useApackDependencies: false,\r\n                skipIncludesWithoutMain: false,\r\n            },\r\n            dependencies: [{\r\n                    url: \"https://github.com/abaplint/deps\",\r\n                    folder: \"/deps\",\r\n                    files: \"/src/**/*.*\",\r\n                }],\r\n            syntax: {\r\n                version,\r\n                errorNamespace: \"^(Z|Y|LCL\\_|TY\\_|LIF\\_)\",\r\n                globalConstants: [],\r\n                globalMacros: [],\r\n            },\r\n            rules: rules,\r\n        };\r\n        return new Config(JSON.stringify(config));\r\n    }\r\n    getEnabledRules() {\r\n        const rules = [];\r\n        for (const rule of artifacts_rules_1.ArtifactsRules.getRules()) {\r\n            const ruleConfig = this.config[\"rules\"][rule.getMetadata().key];\r\n            const ruleExists = ruleConfig !== undefined;\r\n            if (ruleExists) {\r\n                if (ruleConfig === false) { // \"rule\": false\r\n                    continue;\r\n                }\r\n                else if (ruleConfig === true) { // \"rule\": true\r\n                    rules.push(rule);\r\n                }\r\n                else if (typeof ruleConfig === \"object\") { // \"rule\": { ...config }\r\n                    rule.setConfig(ruleConfig);\r\n                    rules.push(rule);\r\n                }\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    get() {\r\n        return this.config;\r\n    }\r\n    readByKey(rule, key) {\r\n        return this.config[\"rules\"][rule] ? this.config[\"rules\"][rule][key] : undefined;\r\n    }\r\n    readByRule(rule) {\r\n        return this.config[\"rules\"][rule];\r\n    }\r\n    getGlobal() {\r\n        return this.config.global;\r\n    }\r\n    getSyntaxSetttings() {\r\n        return this.config.syntax;\r\n    }\r\n    getVersion() {\r\n        if (this.config.global === undefined || this.config.syntax.version === undefined) {\r\n            return version_1.defaultVersion;\r\n        }\r\n        return this.config.syntax.version;\r\n    }\r\n    checkVersion() {\r\n        if (this.config.syntax.version === undefined) {\r\n            return; // handled in getVersion\r\n        }\r\n        let match = false;\r\n        for (const v in version_1.Version) {\r\n            if (v === this.config.syntax.version) {\r\n                match = true;\r\n                break;\r\n            }\r\n        }\r\n        if (match === false) {\r\n            this.config.syntax.version = version_1.defaultVersion;\r\n        }\r\n    }\r\n}\r\nexports.Config = Config;\r\n//# sourceMappingURL=config.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/config.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/ddic.js":
/*!*******************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/ddic.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DDIC = void 0;\r\nconst Types = __webpack_require__(/*! ./abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst basic_1 = __webpack_require__(/*! ./abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass DDIC {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    // the class might be local with a local super class with a global exception class as super\r\n    // todo: returns true for both local and global exception classes\r\n    isException(def, _obj) {\r\n        var _a;\r\n        if (def === undefined) {\r\n            return false;\r\n        }\r\n        if (def.name.toUpperCase() === \"CX_ROOT\") {\r\n            return true;\r\n        }\r\n        let superClassName = def.superClassName;\r\n        if (superClassName === undefined) {\r\n            return false;\r\n        }\r\n        let i = 0;\r\n        // max depth, make sure not to hit cyclic super class defintions\r\n        while (i++ < 10 && superClassName !== undefined) {\r\n            const found = this.reg.getObject(\"CLAS\", superClassName);\r\n            if (found === undefined) {\r\n                break;\r\n            }\r\n            const superDef = (_a = found.getMainABAPFile()) === null || _a === void 0 ? void 0 : _a.getInfo().getClassDefinitionByName(superClassName);\r\n            if (superDef === undefined) {\r\n                break;\r\n            }\r\n            if (superDef.superClassName) {\r\n                superClassName = superDef.superClassName;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        // todo, this should check for \"CX_ROOT\"\r\n        const isException = ((superClassName === null || superClassName === void 0 ? void 0 : superClassName.match(/^.?cx_.*$/i)) || (superClassName === null || superClassName === void 0 ? void 0 : superClassName.match(/^\\/.+\\/cx_.*$/i))) ? true : false;\r\n        return isException;\r\n    }\r\n    inErrorNamespace(name) {\r\n        if (name === undefined) {\r\n            return true;\r\n        }\r\n        return this.reg.inErrorNamespace(name);\r\n    }\r\n    lookupObject(name) {\r\n        var _a, _b;\r\n        const globalClas = (_a = this.reg.getObject(\"CLAS\", name)) === null || _a === void 0 ? void 0 : _a.getIdentifier();\r\n        if (globalClas) {\r\n            return new basic_1.ObjectReferenceType(globalClas);\r\n        }\r\n        const globalIntf = (_b = this.reg.getObject(\"INTF\", name)) === null || _b === void 0 ? void 0 : _b.getIdentifier();\r\n        if (globalIntf) {\r\n            return new basic_1.ObjectReferenceType(globalIntf);\r\n        }\r\n        if (this.inErrorNamespace(name) === true) {\r\n            return new basic_1.UnknownType(name);\r\n        }\r\n        else {\r\n            return new basic_1.VoidType(name);\r\n        }\r\n    }\r\n    lookupNoVoid(name) {\r\n        const foundTABL = this.reg.getObject(\"TABL\", name);\r\n        if (foundTABL) {\r\n            return foundTABL.parseType(this.reg);\r\n        }\r\n        const foundVIEW = this.reg.getObject(\"VIEW\", name);\r\n        if (foundVIEW) {\r\n            return foundVIEW.parseType(this.reg);\r\n        }\r\n        const foundTTYP = this.reg.getObject(\"TTYP\", name);\r\n        if (foundTTYP) {\r\n            return foundTTYP.parseType(this.reg);\r\n        }\r\n        const foundDDLS = this.reg.getObject(\"DDLS\", name);\r\n        if (foundDDLS) {\r\n            return foundDDLS.parseType(this.reg);\r\n        }\r\n        const foundDTEL = this.reg.getObject(\"DTEL\", name);\r\n        if (foundDTEL) {\r\n            return foundDTEL.parseType(this.reg);\r\n        }\r\n        const upper = name.toUpperCase();\r\n        for (const obj of this.reg.getObjectsByType(\"DDLS\")) {\r\n            const ddls = obj;\r\n            if (ddls.getSQLViewName() === upper) {\r\n                return ddls.parseType(this.reg);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /** lookup with voiding and unknown types */\r\n    lookup(name) {\r\n        const found = this.lookupNoVoid(name);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        if (this.reg.inErrorNamespace(name)) {\r\n            return new Types.UnknownType(name + \" not found, lookup\");\r\n        }\r\n        else {\r\n            return new Types.VoidType(name);\r\n        }\r\n    }\r\n    lookupDomain(name) {\r\n        const found = this.reg.getObject(\"DOMA\", name);\r\n        if (found) {\r\n            return found.parseType(this.reg);\r\n        }\r\n        else if (this.reg.inErrorNamespace(name)) {\r\n            return new Types.UnknownType(name + \", lookupDomain\");\r\n        }\r\n        else {\r\n            return new Types.VoidType(name);\r\n        }\r\n    }\r\n    lookupDataElement(name) {\r\n        if (name === undefined) {\r\n            return new Types.UnknownType(\"undefined, lookupDataElement\");\r\n        }\r\n        const found = this.reg.getObject(\"DTEL\", name);\r\n        if (found) {\r\n            return found.parseType(this.reg);\r\n        }\r\n        else if (this.reg.inErrorNamespace(name)) {\r\n            return new Types.UnknownType(name + \" not found, lookupDataElement\");\r\n        }\r\n        else {\r\n            return new Types.VoidType(name);\r\n        }\r\n    }\r\n    lookupTableOrView(name) {\r\n        if (name === undefined) {\r\n            return new Types.UnknownType(\"undefined, lookupTableOrView\");\r\n        }\r\n        const foundTABL = this.reg.getObject(\"TABL\", name);\r\n        if (foundTABL) {\r\n            return foundTABL.parseType(this.reg);\r\n        }\r\n        const foundDDLS = this.reg.getObject(\"DDLS\", name);\r\n        if (foundDDLS) {\r\n            return foundDDLS.parseType(this.reg);\r\n        }\r\n        const upper = name.toUpperCase();\r\n        for (const obj of this.reg.getObjectsByType(\"DDLS\")) {\r\n            const ddls = obj;\r\n            if (ddls.getSQLViewName() === upper) {\r\n                return ddls.parseType(this.reg);\r\n            }\r\n        }\r\n        return this.lookupView(name);\r\n    }\r\n    lookupTableOrView2(name) {\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        const foundTABL = this.reg.getObject(\"TABL\", name);\r\n        if (foundTABL) {\r\n            return foundTABL;\r\n        }\r\n        const foundVIEW = this.reg.getObject(\"VIEW\", name);\r\n        if (foundVIEW) {\r\n            return foundVIEW;\r\n        }\r\n        const foundDDLS = this.reg.getObject(\"DDLS\", name);\r\n        if (foundDDLS) {\r\n            return foundDDLS;\r\n        }\r\n        const upper = name.toUpperCase();\r\n        for (const obj of this.reg.getObjectsByType(\"DDLS\")) {\r\n            const ddls = obj;\r\n            if (ddls.getSQLViewName() === upper) {\r\n                return ddls;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    lookupTable(name) {\r\n        if (name === undefined) {\r\n            return new Types.UnknownType(\"undefined, lookupTable\");\r\n        }\r\n        const found = this.reg.getObject(\"TABL\", name);\r\n        if (found) {\r\n            return found.parseType(this.reg);\r\n        }\r\n        else if (this.reg.inErrorNamespace(name)) {\r\n            return new Types.UnknownType(name + \" not found, lookupTable\");\r\n        }\r\n        else {\r\n            return new Types.VoidType(name);\r\n        }\r\n    }\r\n    lookupView(name) {\r\n        if (name === undefined) {\r\n            return new Types.UnknownType(\"undefined, lookupView\");\r\n        }\r\n        const found = this.reg.getObject(\"VIEW\", name);\r\n        if (found) {\r\n            return found.parseType(this.reg);\r\n        }\r\n        else if (this.reg.inErrorNamespace(name)) {\r\n            return new Types.UnknownType(name + \" not found, lookupView\");\r\n        }\r\n        else {\r\n            return new Types.VoidType(name);\r\n        }\r\n    }\r\n    lookupTableType(name) {\r\n        if (name === undefined) {\r\n            return new Types.UnknownType(\"undefined, lookupTableType\");\r\n        }\r\n        const found = this.reg.getObject(\"TTYP\", name);\r\n        if (found) {\r\n            return found.parseType(this.reg);\r\n        }\r\n        else if (this.reg.inErrorNamespace(name)) {\r\n            return new Types.UnknownType(name + \" not found, lookupTableType\");\r\n        }\r\n        else {\r\n            return new Types.VoidType(name);\r\n        }\r\n    }\r\n    textToType(text, length, decimals, parent, qualify = true) {\r\n        // todo, support short strings, and length of different integers, NUMC vs CHAR, min/max length\r\n        const qualified = qualify ? parent : undefined;\r\n        switch (text) {\r\n            case \"DEC\": // 1 <= len <= 31\r\n            case \"D16F\": // 1 <= len <= 31\r\n            case \"D34F\": // 1 <= len <= 31\r\n            case \"DF16_DEC\": // 1 <= len <= 31\r\n            case \"DF34_DEC\": // 1 <= len <= 31\r\n            case \"CURR\": // 1 <= len <= 31\r\n            case \"QUAN\": // 1 <= len <= 31\r\n                if (length === undefined) {\r\n                    return new Types.UnknownType(text + \" unknown length, \" + parent, parent);\r\n                }\r\n                else if (decimals === undefined) {\r\n                    return new Types.PackedType(parseInt(length, 10), 0, qualified);\r\n                }\r\n                return new Types.PackedType(parseInt(length, 10), parseInt(decimals, 10), qualified);\r\n            case \"ACCP\":\r\n                return new Types.CharacterType(6, qualified); // YYYYMM\r\n            case \"LANG\":\r\n                return new Types.CharacterType(1, qualified);\r\n            case \"CLNT\":\r\n                return new Types.CharacterType(3, qualified);\r\n            case \"CUKY\":\r\n                return new Types.CharacterType(5, qualified);\r\n            case \"UNIT\": // 2 <= len <= 3\r\n                return new Types.CharacterType(3, qualified);\r\n            case \"UTCLONG\":\r\n                return new Types.CharacterType(27, qualified);\r\n            case \"NUMC\": // 1 <= len <= 255\r\n            case \"CHAR\": // 1 <= len <= 30000 (1333 for table fields)\r\n            case \"LCHR\": // 256 <= len <= 32000\r\n                if (length === undefined) {\r\n                    return new Types.UnknownType(text + \" unknown length\", parent);\r\n                }\r\n                return new Types.CharacterType(parseInt(length, 10), qualified);\r\n            case \"RAW\": // 1 <= len <= 32000\r\n            case \"LRAW\": // 256 <= len <= 32000\r\n                if (length === undefined) {\r\n                    return new Types.UnknownType(text + \" unknown length\", parent);\r\n                }\r\n                return new Types.HexType(parseInt(length, 10), qualified);\r\n            case \"TIMS\":\r\n                return new Types.TimeType(qualified); //HHMMSS\r\n            case \"DECFLOAT16\": // len = 16\r\n            case \"DECFLOAT34\": // len = 34\r\n            case \"D16R\": // len = 16\r\n            case \"D34R\": // len = 34\r\n            case \"DF16_RAW\": // len = 16\r\n            case \"DF34_RAW\": // len = 34\r\n            case \"FLTP\": // len = 16\r\n                if (length === undefined) {\r\n                    return new Types.UnknownType(text + \" unknown length\", parent);\r\n                }\r\n                return new Types.FloatingPointType(parseInt(length, 10), qualified);\r\n            case \"DATS\":\r\n                return new Types.DateType(qualified); //YYYYMMDD\r\n            case \"INT1\":\r\n            case \"INT2\":\r\n            case \"INT4\":\r\n            case \"INT8\":\r\n                return new Types.IntegerType(qualified);\r\n            case \"SSTR\": // 1 <= len <= 1333\r\n            case \"SSTRING\": // 1 <= len <= 1333\r\n            case \"STRG\": // 256 <= len\r\n            case \"STRING\": // 256 <= len\r\n                return new Types.StringType(qualified);\r\n            case \"RSTR\": // 256 <= len\r\n            case \"RAWSTRING\": // 256 <= len\r\n            case \"GEOM_EWKB\":\r\n                return new Types.XStringType(qualified);\r\n            case \"D16S\":\r\n            case \"D34S\":\r\n            case \"DF16_SCL\":\r\n            case \"DF34_SCL\":\r\n            case \"PREC\":\r\n            case \"VARC\":\r\n                return new Types.UnknownType(text + \" is an obsolete data type\", parent);\r\n            default:\r\n                return new Types.UnknownType(text + \" unknown\", parent);\r\n        }\r\n    }\r\n}\r\nexports.DDIC = DDIC;\r\n//# sourceMappingURL=ddic.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/ddic.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/edit_helper.js":
/*!**************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/edit_helper.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.applyEditList = exports.applyEditSingle = exports.EditHelper = exports.EditDraft = void 0;\r\nconst position_1 = __webpack_require__(/*! ./position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst memory_file_1 = __webpack_require__(/*! ./files/memory_file */ \"./node_modules/@abaplint/core/build/src/files/memory_file.js\");\r\nclass EditDraft {\r\n    constructor(file) {\r\n        this.start = undefined;\r\n        this.end = undefined;\r\n        this.rows = file.getRawRows();\r\n        this.file = file;\r\n    }\r\n    /** replace existing text, insert text wont work */\r\n    replace(pos, value) {\r\n        if (this.start === undefined || pos.isBefore(this.start)) {\r\n            this.start = pos;\r\n        }\r\n        const end = new position_1.Position(pos.getRow(), pos.getCol() + value.length);\r\n        if (this.end === undefined || end.isAfter(this.end)) {\r\n            this.end = end;\r\n        }\r\n        const str = this.rows[pos.getRow() - 1];\r\n        this.rows[pos.getRow() - 1] = str.substr(0, pos.getCol() - 1) + value + str.substr(pos.getCol() + value.length - 1);\r\n    }\r\n    toEdit() {\r\n        if (this.start === undefined) {\r\n            throw \"EditDraft, start undefined\";\r\n        }\r\n        else if (this.end === undefined) {\r\n            throw \"EditDraft, end undefined\";\r\n        }\r\n        let value = \"\";\r\n        for (let row = this.start.getRow(); row <= this.end.getRow(); row++) {\r\n            if (row === this.start.getRow() && row === this.end.getRow()) {\r\n                // first and last row\r\n                value = this.rows[row - 1].substring(this.start.getCol() - 1, this.end.getCol() - 1);\r\n            }\r\n            else if (row === this.start.getRow()) {\r\n                // first row\r\n                value = this.rows[row - 1].substring(this.start.getCol() - 1);\r\n            }\r\n            else if (row === this.end.getRow()) {\r\n                // last row\r\n                value += \"\\n\" + this.rows[row - 1].substring(0, this.end.getCol() - 1);\r\n            }\r\n            else {\r\n                // middle row\r\n                value += \"\\n\" + this.rows[row - 1];\r\n            }\r\n        }\r\n        return EditHelper.replaceRange(this.file, this.start, this.end, value);\r\n    }\r\n}\r\nexports.EditDraft = EditDraft;\r\nclass EditHelper {\r\n    static mergeList(fixes) {\r\n        const results = {};\r\n        for (const f of fixes) {\r\n            for (const filename in f) {\r\n                if (results[filename] === undefined) {\r\n                    results[filename] = [];\r\n                }\r\n                results[filename] = results[filename].concat(f[filename]);\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    static merge(fix1, fix2) {\r\n        const ret = {};\r\n        for (const k of Object.keys(fix1)) {\r\n            if (ret[k] === undefined) {\r\n                ret[k] = [];\r\n            }\r\n            ret[k] = ret[k].concat(fix1[k]);\r\n        }\r\n        for (const k of Object.keys(fix2)) {\r\n            if (ret[k] === undefined) {\r\n                ret[k] = [];\r\n            }\r\n            ret[k] = ret[k].concat(fix2[k]);\r\n        }\r\n        return ret;\r\n    }\r\n    static findStatement(token, file) {\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            if (s.includesToken(token)) {\r\n                return s;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static deleteStatement(file, statement) {\r\n        const scolon = statement.getColon();\r\n        if (scolon === undefined) {\r\n            return EditHelper.deleteRange(file, statement.getFirstToken().getStart(), statement.getLastToken().getEnd());\r\n        }\r\n        // find statements part of chain\r\n        let chainCount = 0;\r\n        let setPrevious = true;\r\n        /** previous statement in the chain */\r\n        let previousStatement = undefined;\r\n        for (const s of file.getStatements()) {\r\n            const colon = s.getColon();\r\n            if (colon === undefined) {\r\n                continue;\r\n            }\r\n            else if (s === statement) {\r\n                setPrevious = false;\r\n                continue;\r\n            }\r\n            else if (colon.getStart().equals(scolon.getStart())) {\r\n                chainCount = chainCount + 1;\r\n            }\r\n            if (setPrevious === true) {\r\n                previousStatement = s;\r\n            }\r\n        }\r\n        if (chainCount === 0) {\r\n            // the statement to be deleted is the only one in the chain\r\n            return EditHelper.deleteRange(file, statement.getFirstToken().getStart(), statement.getLastToken().getEnd());\r\n        }\r\n        // the start of deletion should happen for tokens after the colon\r\n        let startDelete = statement.getFirstToken().getStart();\r\n        for (const t of statement.getTokens()) {\r\n            if (t.getStart().isAfter(scolon.getEnd())) {\r\n                startDelete = t.getStart();\r\n                break;\r\n            }\r\n        }\r\n        if (statement.getLastToken().getStr() === \".\" && previousStatement) {\r\n            const edit1 = EditHelper.replaceToken(file, previousStatement.getLastToken(), \".\");\r\n            const edit2 = EditHelper.deleteRange(file, startDelete, statement.getLastToken().getEnd());\r\n            return EditHelper.merge(edit1, edit2);\r\n        }\r\n        else {\r\n            return EditHelper.deleteRange(file, startDelete, statement.getLastToken().getEnd());\r\n        }\r\n    }\r\n    static deleteToken(file, token) {\r\n        const filename = file.getFilename();\r\n        const range = { start: token.getStart(), end: token.getEnd() };\r\n        return { [filename]: [{ range, newText: \"\" }] };\r\n    }\r\n    static deleteRange(file, start, end) {\r\n        const filename = file.getFilename();\r\n        const range = { start, end };\r\n        return { [filename]: [{ range, newText: \"\" }] };\r\n    }\r\n    static insertAt(file, pos, text) {\r\n        const filename = file.getFilename();\r\n        const range = { start: pos, end: pos };\r\n        return { [filename]: [{ range, newText: text }] };\r\n    }\r\n    static replaceToken(file, token, text) {\r\n        return this.replaceRange(file, token.getStart(), token.getEnd(), text);\r\n    }\r\n    static replaceRange(file, start, end, text) {\r\n        const filename = file.getFilename();\r\n        const range = { start, end };\r\n        return { [filename]: [{ range, newText: text }] };\r\n    }\r\n}\r\nexports.EditHelper = EditHelper;\r\nfunction applyEditSingle(reg, edit) {\r\n    var _a;\r\n    for (const filename in edit) {\r\n        let rows = (_a = reg.getFileByName(filename)) === null || _a === void 0 ? void 0 : _a.getRawRows();\r\n        if (rows === undefined) {\r\n            throw new Error(\"applyEdit, file not found\");\r\n        }\r\n        for (const e of edit[filename]) {\r\n            if (e.range.start.getRow() === e.range.end.getRow()) {\r\n                const line = rows[e.range.start.getRow() - 1];\r\n                rows[e.range.start.getRow() - 1] =\r\n                    line.substr(0, e.range.start.getCol() - 1) +\r\n                        e.newText +\r\n                        line.substr(e.range.end.getCol() - 1);\r\n            }\r\n            else {\r\n                const first = rows[e.range.start.getRow() - 1];\r\n                let res = first.substr(0, e.range.start.getCol() - 1) + e.newText;\r\n                const last = rows[e.range.end.getRow() - 1];\r\n                res = res + last.substr(e.range.end.getCol() - 1);\r\n                // delete middle lines\r\n                rows.splice(e.range.start.getRow(), e.range.end.getRow() - e.range.start.getRow());\r\n                // clean up\r\n                rows[e.range.start.getRow() - 1] = res;\r\n                rows = rows.join(\"\\n\").split(\"\\n\"); // if the edit contained newlines and multiple edits\r\n            }\r\n        }\r\n        const result = new memory_file_1.MemoryFile(filename, rows.join(\"\\n\"));\r\n        reg.updateFile(result);\r\n    }\r\n}\r\nexports.applyEditSingle = applyEditSingle;\r\n/** returns list of filenames which were changed */\r\nfunction applyEditList(reg, edits) {\r\n    const ret = [];\r\n    let length = 0;\r\n    const merged = {};\r\n    for (const e of edits) {\r\n        for (const f in e) {\r\n            if (merged[f] === undefined) {\r\n                merged[f] = [];\r\n                length = length + 1;\r\n            }\r\n            merged[f] = merged[f].concat(e[f]);\r\n        }\r\n    }\r\n    for (const f in merged) {\r\n        const singleFile = {};\r\n        // sort, start with the last position first\r\n        singleFile[f] = merged[f].sort((a, b) => {\r\n            let val = b.range.start.getRow() - a.range.start.getRow();\r\n            if (val === 0) {\r\n                val = b.range.start.getCol() - a.range.start.getCol();\r\n            }\r\n            return val;\r\n        });\r\n        applyEditSingle(reg, singleFile);\r\n        ret.push(f);\r\n    }\r\n    return ret;\r\n}\r\nexports.applyEditList = applyEditList;\r\n//# sourceMappingURL=edit_helper.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/edit_helper.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/files/_abstract_file.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/files/_abstract_file.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AbstractFile = void 0;\r\nclass AbstractFile {\r\n    constructor(filename) {\r\n        this.filename = filename;\r\n    }\r\n    getFilename() {\r\n        return this.filename;\r\n    }\r\n    baseName() {\r\n        const base1 = this.getFilename().split(\"\\\\\").reverse()[0];\r\n        const base2 = base1.split(\"/\").reverse()[0];\r\n        return base2;\r\n    }\r\n    getObjectType() {\r\n        var _a;\r\n        const split = this.baseName().split(\".\");\r\n        return (_a = split[1]) === null || _a === void 0 ? void 0 : _a.toUpperCase();\r\n    }\r\n    getObjectName() {\r\n        const split = this.baseName().split(\".\");\r\n        // handle url escaped namespace\r\n        split[0] = split[0].replace(/%23/g, \"#\");\r\n        // handle additional escaping\r\n        split[0] = split[0].replace(/%3e/g, \">\");\r\n        split[0] = split[0].replace(/%3c/g, \"<\");\r\n        // handle namespace\r\n        return split[0].toUpperCase().replace(/#/g, \"/\");\r\n    }\r\n}\r\nexports.AbstractFile = AbstractFile;\r\n//# sourceMappingURL=_abstract_file.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/files/_abstract_file.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/files/memory_file.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/files/memory_file.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MemoryFile = void 0;\r\nconst _abstract_file_1 = __webpack_require__(/*! ./_abstract_file */ \"./node_modules/@abaplint/core/build/src/files/_abstract_file.js\");\r\nclass MemoryFile extends _abstract_file_1.AbstractFile {\r\n    constructor(filename, raw) {\r\n        super(filename);\r\n        this.raw = raw;\r\n    }\r\n    getRaw() {\r\n        return this.raw;\r\n    }\r\n    getRawRows() {\r\n        return this.raw.split(\"\\n\");\r\n    }\r\n}\r\nexports.MemoryFile = MemoryFile;\r\n//# sourceMappingURL=memory_file.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/files/memory_file.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Severity = exports.Visibility = exports.Info = exports.Rename = exports.PrettyPrinter = exports.Position = exports.CurrentScope = exports.ABAPFile = exports.SpaghettiScope = exports.SyntaxLogic = exports.ABAPObject = exports.Tokens = exports.applyEditList = exports.applyEditSingle = exports.SpaghettiScopeNode = exports.AbstractFile = exports.Token = exports.ScopeType = exports.BasicTypes = exports.TypedIdentifier = exports.AbstractType = exports.VirtualPosition = exports.Comment = exports.Unknown = exports.Empty = exports.Identifier = exports.Nodes = exports.Types = exports.Expressions = exports.Statements = exports.Structures = exports.Objects = exports.ArtifactsRules = exports.ArtifactsObjects = exports.Artifacts = exports.BuiltIn = exports.MethodLengthStats = exports.LanguageServer = exports.Registry = exports.ReferenceType = exports.Version = exports.Config = exports.Issue = exports.MemoryFile = void 0;\r\nconst issue_1 = __webpack_require__(/*! ./issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nObject.defineProperty(exports, \"Issue\", ({ enumerable: true, get: function () { return issue_1.Issue; } }));\r\nconst config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@abaplint/core/build/src/config.js\");\r\nObject.defineProperty(exports, \"Config\", ({ enumerable: true, get: function () { return config_1.Config; } }));\r\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nObject.defineProperty(exports, \"Version\", ({ enumerable: true, get: function () { return version_1.Version; } }));\r\nconst registry_1 = __webpack_require__(/*! ./registry */ \"./node_modules/@abaplint/core/build/src/registry.js\");\r\nObject.defineProperty(exports, \"Registry\", ({ enumerable: true, get: function () { return registry_1.Registry; } }));\r\nconst method_length_stats_1 = __webpack_require__(/*! ./utils/method_length_stats */ \"./node_modules/@abaplint/core/build/src/utils/method_length_stats.js\");\r\nObject.defineProperty(exports, \"MethodLengthStats\", ({ enumerable: true, get: function () { return method_length_stats_1.MethodLengthStats; } }));\r\nconst language_server_1 = __webpack_require__(/*! ./lsp/language_server */ \"./node_modules/@abaplint/core/build/src/lsp/language_server.js\");\r\nObject.defineProperty(exports, \"LanguageServer\", ({ enumerable: true, get: function () { return language_server_1.LanguageServer; } }));\r\nconst artifacts_1 = __webpack_require__(/*! ./abap/artifacts */ \"./node_modules/@abaplint/core/build/src/abap/artifacts.js\");\r\nObject.defineProperty(exports, \"Artifacts\", ({ enumerable: true, get: function () { return artifacts_1.Artifacts; } }));\r\nconst artifacts_objects_1 = __webpack_require__(/*! ./artifacts_objects */ \"./node_modules/@abaplint/core/build/src/artifacts_objects.js\");\r\nObject.defineProperty(exports, \"ArtifactsObjects\", ({ enumerable: true, get: function () { return artifacts_objects_1.ArtifactsObjects; } }));\r\nconst artifacts_rules_1 = __webpack_require__(/*! ./artifacts_rules */ \"./node_modules/@abaplint/core/build/src/artifacts_rules.js\");\r\nObject.defineProperty(exports, \"ArtifactsRules\", ({ enumerable: true, get: function () { return artifacts_rules_1.ArtifactsRules; } }));\r\nconst _abap_object_1 = __webpack_require__(/*! ./objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nObject.defineProperty(exports, \"ABAPObject\", ({ enumerable: true, get: function () { return _abap_object_1.ABAPObject; } }));\r\nconst syntax_1 = __webpack_require__(/*! ./abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nObject.defineProperty(exports, \"SyntaxLogic\", ({ enumerable: true, get: function () { return syntax_1.SyntaxLogic; } }));\r\nconst spaghetti_scope_1 = __webpack_require__(/*! ./abap/5_syntax/spaghetti_scope */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/spaghetti_scope.js\");\r\nObject.defineProperty(exports, \"SpaghettiScope\", ({ enumerable: true, get: function () { return spaghetti_scope_1.SpaghettiScope; } }));\r\nObject.defineProperty(exports, \"SpaghettiScopeNode\", ({ enumerable: true, get: function () { return spaghetti_scope_1.SpaghettiScopeNode; } }));\r\nconst _typed_identifier_1 = __webpack_require__(/*! ./abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nObject.defineProperty(exports, \"TypedIdentifier\", ({ enumerable: true, get: function () { return _typed_identifier_1.TypedIdentifier; } }));\r\nconst _abstract_type_1 = __webpack_require__(/*! ./abap/types/basic/_abstract_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/_abstract_type.js\");\r\nObject.defineProperty(exports, \"AbstractType\", ({ enumerable: true, get: function () { return _abstract_type_1.AbstractType; } }));\r\nconst _scope_type_1 = __webpack_require__(/*! ./abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nObject.defineProperty(exports, \"ScopeType\", ({ enumerable: true, get: function () { return _scope_type_1.ScopeType; } }));\r\nconst _current_scope_1 = __webpack_require__(/*! ./abap/5_syntax/_current_scope */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_current_scope.js\");\r\nObject.defineProperty(exports, \"CurrentScope\", ({ enumerable: true, get: function () { return _current_scope_1.CurrentScope; } }));\r\nconst Objects = __webpack_require__(/*! ./objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nexports.Objects = Objects;\r\nconst _token_1 = __webpack_require__(/*! ./abap/1_lexer/tokens/_token */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/_token.js\");\r\nObject.defineProperty(exports, \"Token\", ({ enumerable: true, get: function () { return _token_1.Token; } }));\r\nconst Statements = __webpack_require__(/*! ./abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nexports.Statements = Statements;\r\nconst Expressions = __webpack_require__(/*! ./abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nexports.Expressions = Expressions;\r\nconst Structures = __webpack_require__(/*! ./abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nexports.Structures = Structures;\r\nconst Nodes = __webpack_require__(/*! ./abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nexports.Nodes = Nodes;\r\nconst BasicTypes = __webpack_require__(/*! ./abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nexports.BasicTypes = BasicTypes;\r\nconst Types = __webpack_require__(/*! ./abap/types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nexports.Types = Types;\r\nconst Tokens = __webpack_require__(/*! ./abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nexports.Tokens = Tokens;\r\nconst position_1 = __webpack_require__(/*! ./position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nObject.defineProperty(exports, \"Position\", ({ enumerable: true, get: function () { return position_1.Position; } }));\r\nObject.defineProperty(exports, \"VirtualPosition\", ({ enumerable: true, get: function () { return position_1.VirtualPosition; } }));\r\nconst _abstract_file_1 = __webpack_require__(/*! ./files/_abstract_file */ \"./node_modules/@abaplint/core/build/src/files/_abstract_file.js\");\r\nObject.defineProperty(exports, \"AbstractFile\", ({ enumerable: true, get: function () { return _abstract_file_1.AbstractFile; } }));\r\nconst pretty_printer_1 = __webpack_require__(/*! ./pretty_printer/pretty_printer */ \"./node_modules/@abaplint/core/build/src/pretty_printer/pretty_printer.js\");\r\nObject.defineProperty(exports, \"PrettyPrinter\", ({ enumerable: true, get: function () { return pretty_printer_1.PrettyPrinter; } }));\r\nconst _statement_1 = __webpack_require__(/*! ./abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nObject.defineProperty(exports, \"Empty\", ({ enumerable: true, get: function () { return _statement_1.Empty; } }));\r\nObject.defineProperty(exports, \"Unknown\", ({ enumerable: true, get: function () { return _statement_1.Unknown; } }));\r\nObject.defineProperty(exports, \"Comment\", ({ enumerable: true, get: function () { return _statement_1.Comment; } }));\r\nconst edit_helper_1 = __webpack_require__(/*! ./edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nObject.defineProperty(exports, \"applyEditSingle\", ({ enumerable: true, get: function () { return edit_helper_1.applyEditSingle; } }));\r\nObject.defineProperty(exports, \"applyEditList\", ({ enumerable: true, get: function () { return edit_helper_1.applyEditList; } }));\r\nconst _reference_1 = __webpack_require__(/*! ./abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nObject.defineProperty(exports, \"ReferenceType\", ({ enumerable: true, get: function () { return _reference_1.ReferenceType; } }));\r\nconst _builtin_1 = __webpack_require__(/*! ./abap/5_syntax/_builtin */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js\");\r\nObject.defineProperty(exports, \"BuiltIn\", ({ enumerable: true, get: function () { return _builtin_1.BuiltIn; } }));\r\nconst abap_file_1 = __webpack_require__(/*! ./abap/abap_file */ \"./node_modules/@abaplint/core/build/src/abap/abap_file.js\");\r\nObject.defineProperty(exports, \"ABAPFile\", ({ enumerable: true, get: function () { return abap_file_1.ABAPFile; } }));\r\nconst memory_file_1 = __webpack_require__(/*! ./files/memory_file */ \"./node_modules/@abaplint/core/build/src/files/memory_file.js\");\r\nObject.defineProperty(exports, \"MemoryFile\", ({ enumerable: true, get: function () { return memory_file_1.MemoryFile; } }));\r\nconst renamer_1 = __webpack_require__(/*! ./objects/rename/renamer */ \"./node_modules/@abaplint/core/build/src/objects/rename/renamer.js\");\r\nObject.defineProperty(exports, \"Rename\", ({ enumerable: true, get: function () { return renamer_1.Renamer; } }));\r\nconst Info = __webpack_require__(/*! ./abap/4_file_information/_abap_file_information */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js\");\r\nexports.Info = Info;\r\nconst visibility_1 = __webpack_require__(/*! ./abap/4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nObject.defineProperty(exports, \"Visibility\", ({ enumerable: true, get: function () { return visibility_1.Visibility; } }));\r\nconst _identifier_1 = __webpack_require__(/*! ./abap/4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nObject.defineProperty(exports, \"Identifier\", ({ enumerable: true, get: function () { return _identifier_1.Identifier; } }));\r\nconst severity_1 = __webpack_require__(/*! ./severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\nObject.defineProperty(exports, \"Severity\", ({ enumerable: true, get: function () { return severity_1.Severity; } }));\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/issue.js":
/*!********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/issue.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Issue = void 0;\r\nconst position_1 = __webpack_require__(/*! ./position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst severity_1 = __webpack_require__(/*! ./severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\nclass Issue {\r\n    constructor(data) {\r\n        this.data = data;\r\n        if (this.data.start instanceof position_1.VirtualPosition) {\r\n            // no quick fixes inside macros\r\n            this.data.fix = undefined;\r\n        }\r\n        if (this.data.start.getCol() < 1) {\r\n            throw new Error(\"issue, start col < 1\");\r\n        }\r\n        else if (this.data.end.getCol() < 1) {\r\n            throw new Error(\"issue, end col < 1\");\r\n        }\r\n    }\r\n    //////////////////////////\r\n    static atRow(file, row, message, key, severity) {\r\n        const start = new position_1.Position(row, 1);\r\n        const end = new position_1.Position(row, file.getRawRows()[row - 1].length + 1);\r\n        severity = severity !== null && severity !== void 0 ? severity : severity_1.Severity.Error;\r\n        return new Issue({\r\n            filename: file.getFilename(),\r\n            message,\r\n            key,\r\n            start,\r\n            end,\r\n            severity,\r\n        });\r\n    }\r\n    static atStatement(file, statement, message, key, severity, fix) {\r\n        return this.atRange(file, statement.getStart(), statement.getEnd(), message, key, severity, fix);\r\n    }\r\n    static atPosition(file, start, message, key, severity, fix) {\r\n        const row = start.getRow();\r\n        const end = new position_1.Position(row, file.getRawRows()[row - 1].length + 1);\r\n        severity = severity !== null && severity !== void 0 ? severity : severity_1.Severity.Error;\r\n        return new Issue({\r\n            filename: file.getFilename(),\r\n            message,\r\n            key,\r\n            start,\r\n            end,\r\n            fix,\r\n            severity,\r\n        });\r\n    }\r\n    static atRowRange(file, row, startCol, endCol, message, key, severity) {\r\n        const start = new position_1.Position(row, startCol);\r\n        const end = new position_1.Position(row, endCol);\r\n        severity = severity !== null && severity !== void 0 ? severity : severity_1.Severity.Error;\r\n        return new Issue({\r\n            filename: file.getFilename(),\r\n            message,\r\n            key,\r\n            start,\r\n            end,\r\n            severity,\r\n        });\r\n    }\r\n    static atRange(file, start, end, message, key, severity, fix) {\r\n        severity = severity !== null && severity !== void 0 ? severity : severity_1.Severity.Error;\r\n        return new Issue({\r\n            filename: file.getFilename(),\r\n            message,\r\n            key,\r\n            start,\r\n            end,\r\n            fix,\r\n            severity,\r\n        });\r\n    }\r\n    static atToken(file, token, message, key, severity, fix) {\r\n        severity = severity !== null && severity !== void 0 ? severity : severity_1.Severity.Error;\r\n        return new Issue({\r\n            filename: file.getFilename(),\r\n            message,\r\n            key,\r\n            start: token.getStart(),\r\n            end: token.getEnd(),\r\n            severity,\r\n            fix,\r\n        });\r\n    }\r\n    static atIdentifier(identifier, message, key, severity, fix) {\r\n        severity = severity !== null && severity !== void 0 ? severity : severity_1.Severity.Error;\r\n        return new Issue({\r\n            filename: identifier.getFilename(),\r\n            message,\r\n            key,\r\n            start: identifier.getStart(),\r\n            end: identifier.getEnd(),\r\n            severity,\r\n            fix,\r\n        });\r\n    }\r\n    getMessage() {\r\n        return this.data.message;\r\n    }\r\n    getKey() {\r\n        return this.data.key;\r\n    }\r\n    getStart() {\r\n        return this.data.start;\r\n    }\r\n    getEnd() {\r\n        return this.data.end;\r\n    }\r\n    getFilename() {\r\n        return this.data.filename;\r\n    }\r\n    getFix() {\r\n        return this.data.fix;\r\n    }\r\n    getSeverity() {\r\n        return this.data.severity;\r\n    }\r\n}\r\nexports.Issue = Issue;\r\n//# sourceMappingURL=issue.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/issue.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/_edit.js":
/*!************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/_edit.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LSPEdit = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nclass LSPEdit {\r\n    static mapEdits(edits) {\r\n        const workspace = { changes: {} };\r\n        for (const edit of edits) {\r\n            for (const filename in edit) {\r\n                if (workspace.changes[filename] === undefined) {\r\n                    workspace.changes[filename] = [];\r\n                }\r\n                workspace.changes[filename] = workspace.changes[filename].concat(this.mapText(edit[filename]));\r\n            }\r\n        }\r\n        return workspace;\r\n    }\r\n    /*\r\n      public static mapEditsDocument(edit: IEdit): LServer.WorkspaceEdit {\r\n        const workspace: LServer.WorkspaceEdit = {documentChanges: []};\r\n        for (const filename in edit) {\r\n          const doc: LServer.VersionedTextDocumentIdentifier = {uri: filename, version: 1};\r\n    \r\n          const e = LServer.TextDocumentEdit.create(doc, this.mapText(edit[filename]));\r\n          workspace.documentChanges?.push(e);\r\n        }\r\n        // @ts-ignore\r\n        console.dir(workspace.documentChanges![0].edits[0]);\r\n        // @ts-ignore\r\n        console.dir(workspace.documentChanges![0].edits[1]);\r\n        return workspace;\r\n      }\r\n    */\r\n    static mapEdit(edit) {\r\n        const workspace = { changes: {} };\r\n        for (const filename in edit) {\r\n            workspace.changes[filename] = this.mapText(edit[filename]);\r\n        }\r\n        return workspace;\r\n    }\r\n    static mapText(edit) {\r\n        const result = [];\r\n        for (const e of edit) {\r\n            const range = LServer.Range.create(e.range.start.getRow() - 1, e.range.start.getCol() - 1, e.range.end.getRow() - 1, e.range.end.getCol() - 1);\r\n            result.push({ range, newText: e.newText });\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.LSPEdit = LSPEdit;\r\n//# sourceMappingURL=_edit.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/_edit.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/_lookup.js":
/*!**************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/_lookup.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LSPLookup = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst _builtin_1 = __webpack_require__(/*! ../abap/5_syntax/_builtin */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass LSPLookup {\r\n    static lookup(cursor, reg, obj) {\r\n        const inc = this.findInclude(cursor, reg);\r\n        if (inc) {\r\n            const found = this.ABAPFileResult(inc);\r\n            return { hover: \"Include\", definition: found, implementation: found };\r\n        }\r\n        const fm = this.findFunctionModule(cursor);\r\n        if (fm) {\r\n            return { hover: \"Function Module \" + fm };\r\n        }\r\n        const bottomScope = new syntax_1.SyntaxLogic(reg, obj).run().spaghetti.lookupPosition(cursor.identifier.getStart(), cursor.identifier.getFilename());\r\n        if (bottomScope === undefined) {\r\n            return undefined;\r\n        }\r\n        const clas = bottomScope.findClassDefinition(cursor.token.getStr());\r\n        if (clas && clas.getStart().equals(cursor.token.getStart())) {\r\n            const found = _lsp_utils_1.LSPUtils.identiferToLocation(clas);\r\n            return { hover: \"Class definition, \" + cursor.token.getStr(),\r\n                definition: found,\r\n                definitionId: clas,\r\n                implementation: undefined,\r\n                scope: bottomScope };\r\n        }\r\n        const intf = bottomScope.findInterfaceDefinition(cursor.token.getStr());\r\n        if (intf && intf.getStart().equals(cursor.token.getStart())) {\r\n            const found = _lsp_utils_1.LSPUtils.identiferToLocation(intf);\r\n            return { hover: \"Interface definition, \" + cursor.token.getStr(),\r\n                definition: found,\r\n                definitionId: intf,\r\n                implementation: undefined,\r\n                scope: bottomScope };\r\n        }\r\n        const type = bottomScope.findType(cursor.token.getStr());\r\n        if (type !== undefined && type.getStart().equals(cursor.token.getStart())) {\r\n            const found = _lsp_utils_1.LSPUtils.identiferToLocation(type);\r\n            const hover = \"Type definition, \" + cursor.token.getStr() + \"\\n\\n\" + this.dumpType(type);\r\n            return { hover, definition: found, definitionId: type, scope: bottomScope };\r\n        }\r\n        const method = this.findMethodDefinition(cursor, bottomScope);\r\n        if (method !== undefined && method.getStart().equals(cursor.token.getStart())) {\r\n            const found = _lsp_utils_1.LSPUtils.identiferToLocation(method);\r\n            const hover = \"Method definition \\\"\" + method.getName() + \"\\\"\";\r\n            return { hover, definition: found, definitionId: method, scope: bottomScope };\r\n        }\r\n        const variable = bottomScope.findVariable(cursor.token.getStr());\r\n        if (variable !== undefined && variable.getStart().equals(cursor.token.getStart())) {\r\n            const hover = \"Variable definition\\n\\n\" + this.dumpType(variable);\r\n            let location = undefined;\r\n            if (variable.getMeta().includes(\"built-in\" /* BuiltIn */) === false) {\r\n                location = _lsp_utils_1.LSPUtils.identiferToLocation(variable);\r\n            }\r\n            return { hover, definition: location, implementation: location, definitionId: variable, scope: bottomScope };\r\n        }\r\n        const refs = this.searchReferences(bottomScope, cursor.token);\r\n        if (refs.length > 0) {\r\n            let value = \"\";\r\n            for (const ref of refs) {\r\n                if (value !== \"\") {\r\n                    value += \"\\n_________________\\n\";\r\n                }\r\n                value += this.referenceHover(ref, bottomScope, reg);\r\n            }\r\n            let definition = undefined;\r\n            if (refs[0].resolved) {\r\n                definition = _lsp_utils_1.LSPUtils.identiferToLocation(refs[0].resolved);\r\n                if (definition.uri === _builtin_1.BuiltIn.filename) {\r\n                    definition = undefined;\r\n                }\r\n            }\r\n            return { hover: value, definition, definitionId: refs[0].resolved, scope: bottomScope };\r\n        }\r\n        return undefined;\r\n    }\r\n    ////////////////////////////////////////////\r\n    static dumpType(variable) {\r\n        let value = variable.toText() + \"\\n\\nType: \" + variable.getType().toText(0);\r\n        if (variable.getValue()) {\r\n            value = value + \"\\n\\nValue: ```\" + variable.getValue() + \"```\";\r\n        }\r\n        if (variable.getMeta().length > 0) {\r\n            value = value + \"\\n\\nMeta: \" + variable.getMeta().join(\", \");\r\n        }\r\n        if (variable.getType().containsVoid() === true) {\r\n            value = value + \"\\n\\nContains void types\";\r\n        }\r\n        if (variable.getType().getQualifiedName()) {\r\n            value = value + \"\\n\\nQualified type name: ```\" + variable.getType().getQualifiedName() + \"```\";\r\n        }\r\n        if (variable.getType().isGeneric() === true) {\r\n            value = value + \"\\n\\nIs generic type\";\r\n        }\r\n        return value;\r\n    }\r\n    static referenceHover(ref, scope, reg) {\r\n        var _a, _b, _c;\r\n        let name = \"\";\r\n        if (ref.resolved) {\r\n            name = \"```\" + ref.resolved.getName() + \"```\";\r\n        }\r\n        let ret = \"Resolved Reference: \" + ref.referenceType + \" \" + name;\r\n        if (ref.referenceType === _reference_1.ReferenceType.MethodReference && ((_a = ref.extra) === null || _a === void 0 ? void 0 : _a.ooName)) {\r\n            let cdef = scope.findClassDefinition(ref.extra.ooName);\r\n            if (cdef === undefined) {\r\n                cdef = scope.findInterfaceDefinition(ref.extra.ooName);\r\n            }\r\n            if (cdef === undefined) {\r\n                cdef = (_b = reg.getObject(\"CLAS\", ref.extra.ooName)) === null || _b === void 0 ? void 0 : _b.getDefinition();\r\n            }\r\n            if (cdef === undefined) {\r\n                cdef = (_c = reg.getObject(\"INTF\", ref.extra.ooName)) === null || _c === void 0 ? void 0 : _c.getDefinition();\r\n            }\r\n            ret += \"\\n\\n\" + this.hoverMethod(ref.position.getName(), cdef);\r\n        }\r\n        else if (ref.resolved instanceof _typed_identifier_1.TypedIdentifier) {\r\n            ret += \"\\n\\n\" + this.dumpType(ref.resolved);\r\n        }\r\n        if (ref.extra !== undefined && Object.keys(ref.extra).length > 0) {\r\n            ret += \"\\n\\nExtra: \" + JSON.stringify(ref.extra);\r\n        }\r\n        return ret;\r\n    }\r\n    static hoverMethod(method, def) {\r\n        if (def === undefined) {\r\n            return \"class not found\";\r\n        }\r\n        const mdef = def.getMethodDefinitions().getByName(method);\r\n        if (mdef === undefined) {\r\n            return \"method not found in definition\";\r\n        }\r\n        let ret = \"\";\r\n        if (mdef.getParameters().getImporting().length > 0) {\r\n            ret += \"IMPORTING\\n\";\r\n            for (const p of mdef.getParameters().getImporting()) {\r\n                ret += this.singleParameter(p);\r\n            }\r\n        }\r\n        if (mdef.getParameters().getExporting().length > 0) {\r\n            ret += \"EXPORTING\\n\";\r\n            for (const p of mdef.getParameters().getExporting()) {\r\n                ret += this.singleParameter(p);\r\n            }\r\n        }\r\n        if (mdef.getParameters().getChanging().length > 0) {\r\n            ret += \"CHANGING\\n\";\r\n            for (const p of mdef.getParameters().getChanging()) {\r\n                ret += this.singleParameter(p);\r\n            }\r\n        }\r\n        const r = mdef.getParameters().getReturning();\r\n        if (r) {\r\n            ret += \"RETURNING\\n\" + this.singleParameter(r);\r\n        }\r\n        if (mdef.getRaising().length > 0) {\r\n            ret += \"RAISING\\n\";\r\n            for (const p of mdef.getRaising()) {\r\n                ret += \"* \" + p + \"\\n\";\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    static singleParameter(p) {\r\n        let extra = p.getMeta().join(\", \");\r\n        if (extra !== \"\") {\r\n            extra = \"(Meta: \" + extra + \")\";\r\n        }\r\n        return \"* \" + p.getName() + extra + \" TYPE \" + p.getType().toText(1) + \"\\n\\n\";\r\n    }\r\n    static searchReferences(scope, token) {\r\n        const ret = [];\r\n        for (const r of scope.getData().references) {\r\n            if (r.position.getStart().equals(token.getStart())) {\r\n                ret.push(r);\r\n            }\r\n        }\r\n        const parent = scope.getParent();\r\n        if (parent) {\r\n            ret.push(...this.searchReferences(parent, token));\r\n        }\r\n        return ret;\r\n    }\r\n    static ABAPFileResult(abap) {\r\n        return {\r\n            uri: abap.getFilename(),\r\n            range: LServer.Range.create(0, 0, 0, 0),\r\n        };\r\n    }\r\n    static findMethodDefinition(found, scope) {\r\n        var _a, _b, _c, _d;\r\n        if (scope.getIdentifier().stype !== _scope_type_1.ScopeType.ClassDefinition\r\n            || !(found.snode.get() instanceof Statements.MethodDef)) {\r\n            return undefined;\r\n        }\r\n        const nameToken = (_a = found.snode.findFirstExpression(Expressions.MethodName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        if (nameToken === undefined) {\r\n            return undefined;\r\n        }\r\n        if (found.snode.findFirstExpression(Expressions.Redefinition)) {\r\n            return undefined;\r\n        }\r\n        // check the cursor is at the right token\r\n        if (nameToken.getStart().getCol() !== found.token.getStart().getCol()\r\n            || nameToken.getStart().getRow() !== found.token.getStart().getRow()) {\r\n            return undefined;\r\n        }\r\n        const def = (_d = (_c = (_b = scope.getParent()) === null || _b === void 0 ? void 0 : _b.findClassDefinition(scope.getIdentifier().sname)) === null || _c === void 0 ? void 0 : _c.getMethodDefinitions()) === null || _d === void 0 ? void 0 : _d.getByName(nameToken.getStr());\r\n        return def;\r\n    }\r\n    static findFunctionModule(found) {\r\n        if (!(found.snode.get() instanceof Statements.CallFunction)) {\r\n            return undefined;\r\n        }\r\n        const name = found.snode.findFirstExpression(Expressions.FunctionName);\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        // check the cursor is at the right token\r\n        const token = name.getFirstToken();\r\n        if (token.getStart().getCol() !== found.token.getStart().getCol()\r\n            || token.getStart().getRow() !== found.token.getStart().getRow()) {\r\n            return undefined;\r\n        }\r\n        return token.getStr();\r\n    }\r\n    static findInclude(found, reg) {\r\n        if (!(found.snode.get() instanceof Statements.Include)) {\r\n            return;\r\n        }\r\n        const name = found.snode.findFirstExpression(Expressions.IncludeName);\r\n        if (name === undefined) {\r\n            return undefined;\r\n        }\r\n        // check the cursor is at the right token\r\n        const token = name.getFirstToken();\r\n        if (token.getStart().getCol() !== found.token.getStart().getCol()\r\n            || token.getStart().getRow() !== found.token.getStart().getRow()) {\r\n            return undefined;\r\n        }\r\n        const obj = reg.getObject(\"PROG\", token.getStr());\r\n        if (obj) {\r\n            return obj.getABAPFiles()[0];\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.LSPLookup = LSPLookup;\r\n//# sourceMappingURL=_lookup.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/_lookup.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LSPUtils = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../abap/4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nfunction getABAPObjects(reg) {\r\n    const ret = [];\r\n    for (const o of reg.getObjects()) {\r\n        if (o instanceof _abap_object_1.ABAPObject) {\r\n            ret.push(o);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nclass LSPUtils {\r\n    static getABAPFile(reg, name) {\r\n        const obj = getABAPObjects(reg);\r\n        for (const o of obj) {\r\n            for (const file of o.getABAPFiles()) {\r\n                if (file.getFilename().toUpperCase() === name.toUpperCase()) {\r\n                    return file;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static tokenToRange(token) {\r\n        return LServer.Range.create(token.getStart().getRow() - 1, token.getStart().getCol() - 1, token.getEnd().getRow() - 1, token.getEnd().getCol() - 1);\r\n    }\r\n    static identiferToLocation(identifier) {\r\n        return {\r\n            uri: identifier.getFilename(),\r\n            range: LSPUtils.tokenToRange(identifier.getToken()),\r\n        };\r\n    }\r\n    static findCursor(reg, pos) {\r\n        const file = LSPUtils.getABAPFile(reg, pos.textDocument.uri);\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        const search = new position_1.Position(pos.position.line + 1, pos.position.character + 1);\r\n        for (const statement of file.getStatements()) {\r\n            const res = this.buildStack(statement, search, [statement]);\r\n            if (res !== undefined) {\r\n                return {\r\n                    token: res.token,\r\n                    identifier: new _identifier_1.Identifier(res.token, file.getFilename()),\r\n                    stack: res.stack,\r\n                    snode: statement\r\n                };\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static buildStack(node, search, parents) {\r\n        const stack = parents;\r\n        for (const c of node.getChildren()) {\r\n            if (c instanceof nodes_1.TokenNode) {\r\n                const token = c.getFirstToken();\r\n                if (token.getRow() === search.getRow()\r\n                    && token.getCol() <= search.getCol()\r\n                    && token.getCol() + token.getStr().length > search.getCol()) {\r\n                    return { token, stack };\r\n                }\r\n            }\r\n            else {\r\n                const res = this.buildStack(c, search, stack.concat([c]));\r\n                if (res !== undefined) {\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.LSPUtils = LSPUtils;\r\n//# sourceMappingURL=_lsp_utils.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/code_actions.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/code_actions.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CodeActions = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst diagnostics_1 = __webpack_require__(/*! ./diagnostics */ \"./node_modules/@abaplint/core/build/src/lsp/diagnostics.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _edit_1 = __webpack_require__(/*! ./_edit */ \"./node_modules/@abaplint/core/build/src/lsp/_edit.js\");\r\nclass CodeActions {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    find(params) {\r\n        const diag = new diagnostics_1.Diagnostics(this.reg);\r\n        const issues = diag.findIssues(params.textDocument);\r\n        const totals = {};\r\n        const shown = new Set();\r\n        const ret = [];\r\n        for (const i of issues) {\r\n            const fix = i.getFix();\r\n            if (fix === undefined) {\r\n                continue;\r\n            }\r\n            if (totals[i.getKey()] === undefined) {\r\n                totals[i.getKey()] = 1;\r\n            }\r\n            else {\r\n                totals[i.getKey()]++;\r\n            }\r\n            if (this.inRange(i, params.range) === false) {\r\n                continue;\r\n            }\r\n            ret.push({\r\n                title: \"Apply fix, \" + i.getKey(),\r\n                kind: LServer.CodeActionKind.QuickFix,\r\n                diagnostics: [diagnostics_1.Diagnostics.mapDiagnostic(i)],\r\n                isPreferred: true,\r\n                edit: _edit_1.LSPEdit.mapEdit(fix),\r\n            });\r\n            shown.add(i.getKey());\r\n        }\r\n        for (const s of shown) {\r\n            if (totals[s] > 1) {\r\n                const foo = this.fixAlls(s, issues);\r\n                ret.push(foo);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    //////////////////////\r\n    fixAlls(key, issues) {\r\n        const diagnostics = [];\r\n        const fixes = [];\r\n        for (const i of issues) {\r\n            const fix = i.getFix();\r\n            if (fix === undefined) {\r\n                continue;\r\n            }\r\n            fixes.push(fix);\r\n            diagnostics.push(diagnostics_1.Diagnostics.mapDiagnostic(i));\r\n        }\r\n        return {\r\n            title: \"Fix all, \" + key,\r\n            kind: LServer.CodeActionKind.QuickFix,\r\n            diagnostics,\r\n            isPreferred: true,\r\n            edit: _edit_1.LSPEdit.mapEdits(fixes),\r\n        };\r\n    }\r\n    inRange(i, range) {\r\n        const start = new position_1.Position(range.start.line + 1, range.start.character + 1);\r\n        const end = new position_1.Position(range.end.line + 1, range.end.character + 1);\r\n        return i.getStart().isBetween(start, end)\r\n            || i.getEnd().isBetween(start, end)\r\n            || start.isBetween(i.getStart(), i.getEnd())\r\n            || end.isBetween(i.getStart(), i.getEnd())\r\n            || end.equals(i.getEnd());\r\n    }\r\n}\r\nexports.CodeActions = CodeActions;\r\n//# sourceMappingURL=code_actions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/code_actions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/definition.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/definition.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Definition = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst _lookup_1 = __webpack_require__(/*! ./_lookup */ \"./node_modules/@abaplint/core/build/src/lsp/_lookup.js\");\r\n// go to definition\r\nclass Definition {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    find(textDocument, position) {\r\n        var _a;\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, textDocument.uri);\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        const obj = this.reg.getObject(file.getObjectType(), file.getObjectName());\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return undefined;\r\n        }\r\n        const found = _lsp_utils_1.LSPUtils.findCursor(this.reg, { textDocument, position });\r\n        if (found === undefined) {\r\n            return undefined;\r\n        }\r\n        return (_a = _lookup_1.LSPLookup.lookup(found, this.reg, obj)) === null || _a === void 0 ? void 0 : _a.definition;\r\n    }\r\n}\r\nexports.Definition = Definition;\r\n//# sourceMappingURL=definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/diagnostics.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/diagnostics.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Diagnostics = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst severity_1 = __webpack_require__(/*! ../severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\nclass Diagnostics {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    findIssues(textDocument) {\r\n        this.reg.parse();\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, textDocument.uri); // todo, this sould also run for xml files\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        const obj = this.reg.findObjectForFile(file);\r\n        if (obj === undefined) {\r\n            return [];\r\n        }\r\n        let issues = this.reg.findIssuesObject(obj);\r\n        issues = issues.filter(i => i.getFilename() === file.getFilename());\r\n        return issues;\r\n    }\r\n    static mapDiagnostic(issue) {\r\n        const diagnosic = {\r\n            severity: this.mapSeverity(issue.getSeverity()),\r\n            range: {\r\n                start: { line: issue.getStart().getRow() - 1, character: issue.getStart().getCol() - 1 },\r\n                end: { line: issue.getEnd().getRow() - 1, character: issue.getEnd().getCol() - 1 },\r\n            },\r\n            code: issue.getKey(),\r\n            message: issue.getMessage().toString(),\r\n            source: \"abaplint\",\r\n        };\r\n        return diagnosic;\r\n    }\r\n    find(textDocument) {\r\n        const issues = this.findIssues(textDocument);\r\n        const diagnostics = [];\r\n        for (const issue of issues) {\r\n            diagnostics.push(Diagnostics.mapDiagnostic(issue));\r\n        }\r\n        return diagnostics;\r\n    }\r\n    static mapSeverity(severity) {\r\n        switch (severity) {\r\n            case severity_1.Severity.Error:\r\n                return LServer.DiagnosticSeverity.Error;\r\n            case severity_1.Severity.Warning:\r\n                return LServer.DiagnosticSeverity.Warning;\r\n            case severity_1.Severity.Info:\r\n                return LServer.DiagnosticSeverity.Information;\r\n            default:\r\n                return LServer.DiagnosticSeverity.Error;\r\n        }\r\n    }\r\n}\r\nexports.Diagnostics = Diagnostics;\r\n//# sourceMappingURL=diagnostics.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/diagnostics.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/dump_scope.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/dump_scope.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DumpScope = void 0;\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass DumpScope {\r\n    static dump(spaghetti) {\r\n        let ret = \"<hr>Spaghetti Scope:<br><br>\\n\";\r\n        ret = ret + this.traverseSpaghetti(spaghetti.getTop(), 0);\r\n        return ret;\r\n    }\r\n    static traverseSpaghetti(node, indent) {\r\n        const identifier = node.getIdentifier();\r\n        const coverage = node.calcCoverage();\r\n        const sident = \"&nbsp\".repeat(indent * 2);\r\n        let ret = sident + \"<u>\" + identifier.stype + \", <tt>\" + identifier.sname + \"</tt>\";\r\n        ret += \", (\" + coverage.start.getRow() + \", \" + coverage.start.getCol() + \")\";\r\n        if (coverage.end.getRow() === Number.MAX_SAFE_INTEGER\r\n            && coverage.end.getCol() === Number.MAX_SAFE_INTEGER) {\r\n            ret += \", (max, max)\";\r\n        }\r\n        else {\r\n            ret += \", (\" + coverage.end.getRow() + \", \" + coverage.end.getCol() + \")\";\r\n        }\r\n        ret += \"</u><br>\";\r\n        if (node.getIdentifier().stype === _scope_type_1.ScopeType.BuiltIn) {\r\n            ret += sident + node.getData().types.length + \" type definitions<br>\";\r\n            ret += sident + node.getData().vars.length + \" data definitions<br>\";\r\n        }\r\n        else {\r\n            ret = ret + this.dumpNode(node, indent);\r\n        }\r\n        ret = ret + \"<br>\";\r\n        for (const c of node.getChildren()) {\r\n            ret = ret + this.traverseSpaghetti(c, indent + 1);\r\n        }\r\n        return ret;\r\n    }\r\n    static dumpNode(node, indent) {\r\n        let ret = \"\";\r\n        const sident = \"&nbsp;\".repeat(indent * 2);\r\n        const types = node.getData().types;\r\n        if (Object.keys(types).length === 0) {\r\n            ret = ret + sident + \"0 type definitions<br>\";\r\n        }\r\n        else {\r\n            ret = ret + sident + \"Types:<br>\";\r\n        }\r\n        for (const name in types) {\r\n            const identifier = types[name];\r\n            ret = ret + sident + \"<tt>\" + this.escape(name) + \"</tt>\";\r\n            const pos = identifier.getStart();\r\n            ret = ret + \"(\" + pos.getRow().toString() + \", \" + pos.getCol().toString() + \") \";\r\n            ret = ret + identifier.getType().toText(0);\r\n            ret = ret + \"<br>\";\r\n        }\r\n        const vars = node.getData().vars;\r\n        if (Object.keys(vars).length === 0) {\r\n            ret = ret + sident + \"0 data definitions<br>\";\r\n        }\r\n        else {\r\n            ret = ret + sident + \"Data:<br>\";\r\n        }\r\n        for (const name in vars) {\r\n            const identifier = vars[name];\r\n            ret = ret + sident + \"<tt>\" + this.escape(name.toLowerCase()) + \"</tt>\";\r\n            const pos = identifier.getStart();\r\n            ret = ret + \"(\" + pos.getRow().toString() + \", \" + pos.getCol().toString() + \") \";\r\n            ret = ret + identifier.getType().toText(0);\r\n            const meta = identifier.getMeta();\r\n            if (meta) {\r\n                ret = ret + \", \" + meta;\r\n            }\r\n            ret = ret + \"<br>\";\r\n        }\r\n        ret += sident + node.getData().cdefs.length + \" class definitions<br>\";\r\n        ret += sident + node.getData().idefs.length + \" interface definitions<br>\";\r\n        ret += sident + node.getData().forms.length + \" form definitions<br>\";\r\n        ret += sident + node.getData().references.length + \" references<br>\";\r\n        for (const r of node.getData().references) {\r\n            ret += sident + \"&nbsp;&nbsp;\" + r.referenceType + \", line \" + r.position.getStart().getRow() + \" \" + this.escape(r.position.getFilename()) + \" \" + this.escape(r.position.getName()) + \"<br>\";\r\n        }\r\n        return ret;\r\n    }\r\n    // todo, refactor, this method exists in multiple classes\r\n    static escape(str) {\r\n        str = str.replace(/&/g, \"&amp;\");\r\n        str = str.replace(/>/g, \"&gt;\");\r\n        str = str.replace(/</g, \"&lt;\");\r\n        str = str.replace(/\"/g, \"&quot;\");\r\n        str = str.replace(/'/g, \"&#039;\");\r\n        return str;\r\n    }\r\n}\r\nexports.DumpScope = DumpScope;\r\n//# sourceMappingURL=dump_scope.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/dump_scope.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/help.js":
/*!***********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/help.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Help = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst dump_scope_1 = __webpack_require__(/*! ./dump_scope */ \"./node_modules/@abaplint/core/build/src/lsp/dump_scope.js\");\r\nclass Help {\r\n    static find(reg, textDocument, position) {\r\n        let content = \"\";\r\n        content = `\n    <a href=\"#_tokens\" rel=\"no-refresh\">Tokens</a> |\n    <a href=\"#_statements\" rel=\"no-refresh\">Statements</a> |\n    <a href=\"#_structure\" rel=\"no-refresh\">Structure</a> |\n    <a href=\"#_files\" rel=\"no-refresh\">Files</a> |\n    <a href=\"#_info\" rel=\"no-refresh\">Info Dump</a>\n    <hr>\n    ` +\r\n            \"<tt>\" + textDocument.uri + \" (\" +\r\n            (position.line + 1) + \", \" +\r\n            (position.character + 1) + \")</tt>\";\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(reg, textDocument.uri);\r\n        if (file === undefined) {\r\n            return content + \"file not found\";\r\n        }\r\n        content = content + \"<hr>\";\r\n        content = content + this.cursorInformation(reg, textDocument, position, file);\r\n        content = content + this.fileInformation(file);\r\n        content = content + \"<hr>\";\r\n        content = content + this.dumpFiles(reg);\r\n        content = content + \"<hr>\";\r\n        content = content + this.dumpInfo(file);\r\n        return content;\r\n    }\r\n    /////////////////////////////////////////////////\r\n    static dumpInfo(file) {\r\n        const info = file.getInfo();\r\n        const dump = {\r\n            classDefinitions: info.listClassDefinitions(),\r\n            classImplementations: info.listClassImplementations(),\r\n            interfaceDefinitions: info.listInterfaceDefinitions(),\r\n            forms: info.listFormDefinitions(),\r\n        };\r\n        const text = JSON.stringify(dump, null, 2);\r\n        return `<h3 id=\"_info\">Info Dump</h3><pre>` + text + \"</pre>\";\r\n    }\r\n    static cursorInformation(reg, textDocument, position, file) {\r\n        let ret = \"\";\r\n        const found = _lsp_utils_1.LSPUtils.findCursor(reg, { textDocument, position });\r\n        if (found !== undefined) {\r\n            ret = \"Statement: \" + this.linkToStatement(found.snode.get()) + \"<br>\\n\" +\r\n                \"Token: \" + found.token.constructor.name + \"<br>\\n\" +\r\n                this.fullPath(file, found.token).value;\r\n        }\r\n        else {\r\n            ret = \"No token found at cursor position\";\r\n        }\r\n        const obj = reg.getObject(file.getObjectType(), file.getObjectName());\r\n        if (obj instanceof _abap_object_1.ABAPObject) {\r\n            const spaghetti = new syntax_1.SyntaxLogic(reg, obj).run().spaghetti;\r\n            ret = ret + dump_scope_1.DumpScope.dump(spaghetti);\r\n            if (found !== undefined) {\r\n                ret = ret + \"<hr>Spaghetti Scope by Cursor Position:<br><br>\\n\";\r\n                const lookup = spaghetti.lookupPosition(found.token.getStart(), textDocument.uri);\r\n                if (lookup) {\r\n                    const identifier = lookup.getIdentifier();\r\n                    ret = ret + \"<u>\" + identifier.stype + \", <tt>\" + identifier.sname + \"</tt>, \" + identifier.filename;\r\n                    ret = ret + \", (\" + identifier.start.getRow() + \", \" + identifier.start.getCol() + \")</u><br>\";\r\n                }\r\n                else {\r\n                    ret = ret + \"Not found\";\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    static fullPath(file, token) {\r\n        const structure = file.getStructure();\r\n        if (structure === undefined) {\r\n            return { value: \"\", keyword: false };\r\n        }\r\n        const found = this.traverse(structure, \"\", token);\r\n        if (found === undefined) {\r\n            return { value: \"\", keyword: false };\r\n        }\r\n        return { value: \"\\n\\n\" + found.value, keyword: found.keyword };\r\n    }\r\n    static traverse(node, parents, search) {\r\n        let local = parents;\r\n        if (local !== \"\") {\r\n            local = local + \" -> \";\r\n        }\r\n        if (node instanceof nodes_1.StructureNode) {\r\n            local = local + \"Structure: \" + this.linkToStructure(node.get());\r\n        }\r\n        else if (node instanceof nodes_1.StatementNode) {\r\n            local = local + \"Statement: \" + this.linkToStatement(node.get());\r\n        }\r\n        else if (node instanceof nodes_1.ExpressionNode) {\r\n            local = local + \"Expression: \" + this.linkToExpression(node.get());\r\n        }\r\n        else if (node instanceof nodes_1.TokenNode) {\r\n            local = local + \"Token: \" + node.get().constructor.name;\r\n            const token = node.get();\r\n            if (token.getStr() === search.getStr()\r\n                && token.getCol() === search.getCol()\r\n                && token.getRow() === search.getRow()) {\r\n                const keyword = !(node instanceof nodes_1.TokenNodeRegex);\r\n                return { value: local, keyword };\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"hover, traverse, unexpected node type\");\r\n        }\r\n        for (const child of node.getChildren()) {\r\n            const ret = this.traverse(child, local, search);\r\n            if (ret) {\r\n                return ret;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static fileInformation(file) {\r\n        let content = \"\";\r\n        content = content + `<hr><h3 id=\"_tokens\">Tokens</h3>\\n`;\r\n        content = content + this.tokens(file);\r\n        content = content + `<hr><h3 id=\"_statements\">Statements</h3>\\n`;\r\n        content = content + this.buildStatements(file);\r\n        content = content + `<hr><h3 id=\"_structure\">Structure</h3>\\n`;\r\n        const structure = file.getStructure();\r\n        if (structure !== undefined) {\r\n            content = content + this.buildStructure([structure]);\r\n        }\r\n        else {\r\n            content = content + \"structure undefined\";\r\n        }\r\n        return content;\r\n    }\r\n    static escape(str) {\r\n        str = str.replace(/&/g, \"&amp;\");\r\n        str = str.replace(/>/g, \"&gt;\");\r\n        str = str.replace(/</g, \"&lt;\");\r\n        str = str.replace(/\"/g, \"&quot;\");\r\n        str = str.replace(/'/g, \"&#039;\");\r\n        return str;\r\n    }\r\n    static linkToStatement(statement) {\r\n        return `<a href=\"https://syntax.abaplint.org/#/statement/${statement.constructor.name}\" target=\"_blank\">${statement.constructor.name}</a>\\n`;\r\n    }\r\n    static linkToStructure(structure) {\r\n        return `<a href=\"https://syntax.abaplint.org/#/structure/${structure.constructor.name}\" target=\"_blank\">${structure.constructor.name}</a>\\n`;\r\n    }\r\n    static linkToExpression(expression) {\r\n        return `<a href=\"https://syntax.abaplint.org/#/expression/${expression.constructor.name}\" target=\"_blank\">${expression.constructor.name}</a>\\n`;\r\n    }\r\n    static outputNodes(nodes) {\r\n        let ret = \"<ul>\";\r\n        for (const node of nodes) {\r\n            let extra = \"\";\r\n            switch (node.constructor.name) {\r\n                case \"TokenNode\":\r\n                case \"TokenNodeRegex\":\r\n                    extra = node.get().constructor.name + \", \\\"\" + node.get().getStr() + \"\\\"\";\r\n                    break;\r\n                case \"ExpressionNode\":\r\n                    extra = this.linkToExpression(node.get()) + this.outputNodes(node.getChildren());\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            ret = ret + \"<li>\" + node.constructor.name + \", \" + extra + \"</li>\";\r\n        }\r\n        return ret + \"</ul>\";\r\n    }\r\n    static tokens(file) {\r\n        let inner = \"<table><tr><td><b>String</b></td><td><b>Type</b></td><td><b>Row</b></td><td><b>Column</b></td></tr>\";\r\n        for (const token of file.getTokens()) {\r\n            inner = inner + \"<tr><td><tt>\" +\r\n                this.escape(token.getStr()) + \"</tt></td><td>\" +\r\n                token.constructor.name + \"</td><td align=\\\"right\\\">\" +\r\n                token.getRow() + \"</td><td align=\\\"right\\\">\" +\r\n                token.getCol() + \"</td></tr>\";\r\n        }\r\n        inner = inner + \"</table>\";\r\n        return inner;\r\n    }\r\n    static buildStatements(file) {\r\n        let output = \"\";\r\n        for (const statement of file.getStatements()) {\r\n            const row = statement.getStart().getRow();\r\n            // getting the class name only works if uglify does not mangle names\r\n            output = output +\r\n                row + \": \" +\r\n                this.linkToStatement(statement.get()) +\r\n                \"</div></b>\\n\" + this.outputNodes(statement.getChildren());\r\n        }\r\n        return output;\r\n    }\r\n    static buildStructure(nodes) {\r\n        let output = \"<ul>\";\r\n        for (const node of nodes) {\r\n            if (node instanceof nodes_1.StructureNode) {\r\n                output = output + \"<li>\" + this.linkToStructure(node.get()) + \", Structure \" + this.buildStructure(node.getChildren()) + \"</li>\";\r\n            }\r\n            else if (node instanceof nodes_1.StatementNode) {\r\n                output = output + \"<li>\" + this.linkToStatement(node.get()) + \", Statement</li>\";\r\n            }\r\n        }\r\n        return output + \"</ul>\";\r\n    }\r\n    static dumpFiles(reg) {\r\n        let output = `<h3 id=\"_files\">Files</h3><table>\\n`;\r\n        for (const o of reg.getObjects()) {\r\n            if (reg.isDependency(o) === true) {\r\n                continue;\r\n            }\r\n            output = output + \"<tr><td valign=\\\"top\\\">\" + o.getType() + \" \" + o.getName() + \"</td><td>\";\r\n            for (const f of o.getFiles()) {\r\n                output = output + f.getFilename() + \"<br>\";\r\n            }\r\n            output = output + \"</td></tr>\\n\";\r\n        }\r\n        return output + \"</table>\\n\";\r\n    }\r\n}\r\nexports.Help = Help;\r\n//# sourceMappingURL=help.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/help.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/highlight.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/highlight.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Highlight = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nclass Highlight {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    listDefinitionPositions(textDocument) {\r\n        const spaghetti = this.runSyntax(textDocument);\r\n        if (spaghetti === undefined) {\r\n            return [];\r\n        }\r\n        const defs = spaghetti.listDefinitions(textDocument.uri);\r\n        const ret = [];\r\n        for (const d of defs) {\r\n            ret.push(_lsp_utils_1.LSPUtils.tokenToRange(d.identifier.getToken()));\r\n        }\r\n        return ret;\r\n    }\r\n    listReadPositions(textDocument) {\r\n        const spaghetti = this.runSyntax(textDocument);\r\n        if (spaghetti === undefined) {\r\n            return [];\r\n        }\r\n        const reads = spaghetti.listReadPositions(textDocument.uri);\r\n        const ret = [];\r\n        for (const d of reads) {\r\n            ret.push(_lsp_utils_1.LSPUtils.tokenToRange(d.getToken()));\r\n        }\r\n        return ret;\r\n    }\r\n    listWritePositions(textDocument) {\r\n        const spaghetti = this.runSyntax(textDocument);\r\n        if (spaghetti === undefined) {\r\n            return [];\r\n        }\r\n        const writes = spaghetti.listWritePositions(textDocument.uri);\r\n        const ret = [];\r\n        for (const d of writes) {\r\n            ret.push(_lsp_utils_1.LSPUtils.tokenToRange(d.getToken()));\r\n        }\r\n        return ret;\r\n    }\r\n    ////////////////////////\r\n    runSyntax(textDocument) {\r\n        const obj = this.findObject(textDocument);\r\n        if (obj === undefined) {\r\n            return undefined;\r\n        }\r\n        return new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti;\r\n    }\r\n    findObject(textDocument) {\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, textDocument.uri);\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        const obj = this.reg.getObject(file.getObjectType(), file.getObjectName());\r\n        if (obj instanceof _abap_object_1.ABAPObject) {\r\n            return obj;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nexports.Highlight = Highlight;\r\n//# sourceMappingURL=highlight.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/highlight.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/hover.js":
/*!************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/hover.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Hover = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst Tokens = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _lookup_1 = __webpack_require__(/*! ./_lookup */ \"./node_modules/@abaplint/core/build/src/lsp/_lookup.js\");\r\nclass Hover {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    find(pos) {\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, pos.textDocument.uri);\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        const obj = this.reg.getObject(file.getObjectType(), file.getObjectName());\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return undefined;\r\n        }\r\n        const found = _lsp_utils_1.LSPUtils.findCursor(this.reg, pos);\r\n        if (found === undefined) {\r\n            return undefined;\r\n        }\r\n        else if (found.token instanceof Tokens.StringTemplate\r\n            || found.token instanceof Tokens.StringTemplateBegin\r\n            || found.token instanceof Tokens.StringTemplateEnd\r\n            || found.token instanceof Tokens.StringTemplateMiddle) {\r\n            return { kind: LServer.MarkupKind.Markdown, value: \"String Template\" };\r\n        }\r\n        else if (found.token instanceof Tokens.Comment) {\r\n            return { kind: LServer.MarkupKind.Markdown, value: \"Comment\" };\r\n        }\r\n        const lookup = _lookup_1.LSPLookup.lookup(found, this.reg, obj);\r\n        if (lookup === null || lookup === void 0 ? void 0 : lookup.hover) {\r\n            return { kind: LServer.MarkupKind.Markdown, value: lookup.hover };\r\n        }\r\n        if (found.token instanceof Tokens.String) {\r\n            return { kind: LServer.MarkupKind.Markdown, value: \"String\" };\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.Hover = Hover;\r\n//# sourceMappingURL=hover.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/hover.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/implementation.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/implementation.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Implementation = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst _lookup_1 = __webpack_require__(/*! ./_lookup */ \"./node_modules/@abaplint/core/build/src/lsp/_lookup.js\");\r\nconst types_1 = __webpack_require__(/*! ../abap/types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\n// note: finding implementations might be slow, ie finding method implementations currently searches the full registry\r\n// go to implementation\r\nclass Implementation {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    find(textDocument, position) {\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, textDocument.uri);\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        const obj = this.reg.getObject(file.getObjectType(), file.getObjectName());\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const found = _lsp_utils_1.LSPUtils.findCursor(this.reg, { textDocument, position });\r\n        if (found === undefined) {\r\n            return [];\r\n        }\r\n        const lookup = _lookup_1.LSPLookup.lookup(found, this.reg, obj);\r\n        if (lookup === null || lookup === void 0 ? void 0 : lookup.implementation) {\r\n            return [lookup === null || lookup === void 0 ? void 0 : lookup.implementation];\r\n        }\r\n        if ((lookup === null || lookup === void 0 ? void 0 : lookup.definitionId) instanceof types_1.MethodDefinition) {\r\n            return this.findMethodImplementations(lookup.definitionId);\r\n        }\r\n        return [];\r\n    }\r\n    findMethodImplementations(def) {\r\n        const ret = [];\r\n        // note that this searches _everything_\r\n        for (const obj of this.reg.getObjects()) {\r\n            if (this.reg.isDependency(obj) || !(obj instanceof _abap_object_1.ABAPObject)) {\r\n                continue;\r\n            }\r\n            const found = this.searchReferences(new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti.getTop(), def);\r\n            ret.push(...found);\r\n        }\r\n        return ret;\r\n    }\r\n    searchReferences(scope, id) {\r\n        const ret = [];\r\n        for (const r of scope.getData().references) {\r\n            if (r.referenceType === _reference_1.ReferenceType.MethodImplementationReference\r\n                && r.resolved\r\n                && r.resolved.getFilename() === id.getFilename()\r\n                && r.resolved.getStart().equals(id.getStart())) {\r\n                ret.push(_lsp_utils_1.LSPUtils.identiferToLocation(r.position));\r\n            }\r\n        }\r\n        for (const c of scope.getChildren()) {\r\n            ret.push(...this.searchReferences(c, id));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.Implementation = Implementation;\r\n//# sourceMappingURL=implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/language_server.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/language_server.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LanguageServer = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst symbols_1 = __webpack_require__(/*! ./symbols */ \"./node_modules/@abaplint/core/build/src/lsp/symbols.js\");\r\nconst hover_1 = __webpack_require__(/*! ./hover */ \"./node_modules/@abaplint/core/build/src/lsp/hover.js\");\r\nconst diagnostics_1 = __webpack_require__(/*! ./diagnostics */ \"./node_modules/@abaplint/core/build/src/lsp/diagnostics.js\");\r\nconst help_1 = __webpack_require__(/*! ./help */ \"./node_modules/@abaplint/core/build/src/lsp/help.js\");\r\nconst pretty_printer_1 = __webpack_require__(/*! ../pretty_printer/pretty_printer */ \"./node_modules/@abaplint/core/build/src/pretty_printer/pretty_printer.js\");\r\nconst definition_1 = __webpack_require__(/*! ./definition */ \"./node_modules/@abaplint/core/build/src/lsp/definition.js\");\r\nconst rename_1 = __webpack_require__(/*! ./rename */ \"./node_modules/@abaplint/core/build/src/lsp/rename.js\");\r\nconst highlight_1 = __webpack_require__(/*! ./highlight */ \"./node_modules/@abaplint/core/build/src/lsp/highlight.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst code_actions_1 = __webpack_require__(/*! ./code_actions */ \"./node_modules/@abaplint/core/build/src/lsp/code_actions.js\");\r\nconst references_1 = __webpack_require__(/*! ./references */ \"./node_modules/@abaplint/core/build/src/lsp/references.js\");\r\nconst implementation_1 = __webpack_require__(/*! ./implementation */ \"./node_modules/@abaplint/core/build/src/lsp/implementation.js\");\r\n// note Ranges are zero based in LSP,\r\n// https://github.com/microsoft/language-server-protocol/blob/main/versions/protocol-2-x.md#range\r\n// but 1 based in abaplint\r\n// the types in this file are not completely correct\r\n// see https://github.com/microsoft/vscode-languageserver-node/issues/354\r\nclass LanguageServer {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_documentSymbol\r\n    documentSymbol(params) {\r\n        return new symbols_1.Symbols(this.reg).find(params.textDocument.uri);\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_hover\r\n    hover(params) {\r\n        const hover = new hover_1.Hover(this.reg).find(params);\r\n        if (hover) {\r\n            return { contents: hover };\r\n        }\r\n        return undefined;\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_definition\r\n    gotoDefinition(params) {\r\n        return new definition_1.Definition(this.reg).find(params.textDocument, params.position);\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_formatting\r\n    documentFormatting(params) {\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, params.textDocument.uri);\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        const text = new pretty_printer_1.PrettyPrinter(file, this.reg.getConfig()).run();\r\n        const rows = file.getRawRows();\r\n        return [{\r\n                range: LServer.Range.create(0, 0, rows.length, rows[rows.length - 1].length + 1),\r\n                newText: text,\r\n            }];\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_publishDiagnostics\r\n    diagnostics(textDocument) {\r\n        return new diagnostics_1.Diagnostics(this.reg).find(textDocument);\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_prepareRename\r\n    prepareRename(params) {\r\n        return new rename_1.Rename(this.reg).prepareRename(params);\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_rename\r\n    rename(params) {\r\n        return new rename_1.Rename(this.reg).rename(params);\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_codeAction\r\n    codeActions(params) {\r\n        return new code_actions_1.CodeActions(this.reg).find(params);\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_documentHighlight\r\n    documentHighlight(_params) {\r\n        // todo, implement\r\n        return [];\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_implementation\r\n    implementation(params) {\r\n        return new implementation_1.Implementation(this.reg).find(params.textDocument, params.position);\r\n    }\r\n    // https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#textDocument_references\r\n    references(params) {\r\n        return new references_1.References(this.reg).references(params);\r\n    }\r\n    ////////////////////////////////////////\r\n    //  ______      _\r\n    // |  ____|    | |\r\n    // | |__  __  _| |_ _ __ __   ___\r\n    // |  __| \\ \\/ / __| '__/ _` / __|\r\n    // | |____ >  <| |_| | | (_| \\__ \\\r\n    // |______/_/\\_\\\\__|_|  \\__,_|___/\r\n    // extras, abaplint specific\r\n    ////////////////////////////////////////\r\n    help(textDocument, position) {\r\n        return help_1.Help.find(this.reg, textDocument, position);\r\n    }\r\n    listDefinitionPositions(textDocument) {\r\n        return new highlight_1.Highlight(this.reg).listDefinitionPositions(textDocument);\r\n    }\r\n    listReadPositions(textDocument) {\r\n        return new highlight_1.Highlight(this.reg).listReadPositions(textDocument);\r\n    }\r\n    listWritePositions(textDocument) {\r\n        return new highlight_1.Highlight(this.reg).listWritePositions(textDocument);\r\n    }\r\n}\r\nexports.LanguageServer = LanguageServer;\r\n//# sourceMappingURL=language_server.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/language_server.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/references.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/references.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.References = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _lookup_1 = __webpack_require__(/*! ./_lookup */ \"./node_modules/@abaplint/core/build/src/lsp/_lookup.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass References {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    references(pos) {\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, pos.textDocument.uri);\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        const obj = this.reg.getObject(file.getObjectType(), file.getObjectName());\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const found = _lsp_utils_1.LSPUtils.findCursor(this.reg, pos);\r\n        if ((found === null || found === void 0 ? void 0 : found.identifier) === undefined) {\r\n            return [];\r\n        }\r\n        const lookup = _lookup_1.LSPLookup.lookup(found, this.reg, obj);\r\n        if ((lookup === null || lookup === void 0 ? void 0 : lookup.definitionId) === undefined || (lookup === null || lookup === void 0 ? void 0 : lookup.scope) === undefined) {\r\n            return [];\r\n        }\r\n        const locs = this.search(lookup.definitionId, lookup.scope);\r\n        return locs.map(_lsp_utils_1.LSPUtils.identiferToLocation);\r\n    }\r\n    search(identifier, node, exitAfterFound = false, removeDuplicates = true) {\r\n        let ret = [];\r\n        // todo, this first assumes that the identifier is a variable?\r\n        if (node.getIdentifier().stype === _scope_type_1.ScopeType.Method\r\n            || node.getIdentifier().stype === _scope_type_1.ScopeType.FunctionModule\r\n            || node.getIdentifier().stype === _scope_type_1.ScopeType.Form) {\r\n            ret = this.findReferences(node, identifier);\r\n        }\r\n        if (ret.length > 1 && exitAfterFound === true) {\r\n            return ret;\r\n        }\r\n        for (const o of this.reg.getObjects()) {\r\n            if (o instanceof _abap_object_1.ABAPObject) {\r\n                if (this.reg.isDependency(o)) {\r\n                    continue; // do not search in dependencies\r\n                }\r\n                ret.push(...this.findReferences(new syntax_1.SyntaxLogic(this.reg, o).run().spaghetti.getTop(), identifier));\r\n            }\r\n        }\r\n        // remove duplicates, might be a changing(read and write) position\r\n        if (removeDuplicates === true) {\r\n            return this.removeDuplicates(ret);\r\n        }\r\n        else {\r\n            return ret;\r\n        }\r\n    }\r\n    ////////////////////////////////////////////\r\n    removeDuplicates(arr) {\r\n        const values = {};\r\n        return arr.filter(item => {\r\n            const val = item.getStart().getCol() + \"_\" + item.getStart().getRow() + \"_\" + item.getFilename();\r\n            const exists = values[val];\r\n            values[val] = true;\r\n            return !exists;\r\n        });\r\n    }\r\n    findReferences(node, identifier) {\r\n        var _a;\r\n        const ret = [];\r\n        if (node.getIdentifier().stype !== _scope_type_1.ScopeType.BuiltIn) {\r\n            // this is for finding the definitions\r\n            const vars = node.getData().vars;\r\n            const vid = vars[identifier.getName().toUpperCase()];\r\n            if (vid === null || vid === void 0 ? void 0 : vid.equals(identifier)) {\r\n                ret.push(vid);\r\n            }\r\n            // this is for finding the definitions\r\n            const types = node.getData().types;\r\n            const tid = types[identifier.getName().toUpperCase()];\r\n            if (tid === null || tid === void 0 ? void 0 : tid.equals(identifier)) {\r\n                ret.push(tid);\r\n            }\r\n            for (const r of node.getData().references) {\r\n                if ((_a = r.resolved) === null || _a === void 0 ? void 0 : _a.equals(identifier)) {\r\n                    ret.push(r.position);\r\n                }\r\n            }\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            ret.push(...this.findReferences(c, identifier));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.References = References;\r\n//# sourceMappingURL=references.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/references.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/rename.js":
/*!*************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/rename.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Rename = exports.RenameType = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _lookup_1 = __webpack_require__(/*! ./_lookup */ \"./node_modules/@abaplint/core/build/src/lsp/_lookup.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst types_1 = __webpack_require__(/*! ../abap/types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nconst references_1 = __webpack_require__(/*! ./references */ \"./node_modules/@abaplint/core/build/src/lsp/references.js\");\r\nconst renamer_1 = __webpack_require__(/*! ../objects/rename/renamer */ \"./node_modules/@abaplint/core/build/src/objects/rename/renamer.js\");\r\nvar RenameType;\r\n(function (RenameType) {\r\n    RenameType[RenameType[\"GlobalClass\"] = 1] = \"GlobalClass\";\r\n    RenameType[RenameType[\"Variable\"] = 2] = \"Variable\";\r\n    RenameType[RenameType[\"GlobalInterface\"] = 3] = \"GlobalInterface\";\r\n})(RenameType = exports.RenameType || (exports.RenameType = {}));\r\nclass Rename {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    prepareRename(params) {\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, params.textDocument.uri);\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        const obj = this.reg.getObject(file.getObjectType(), file.getObjectName());\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return undefined;\r\n        }\r\n        const cursor = _lsp_utils_1.LSPUtils.findCursor(this.reg, params);\r\n        if (cursor === undefined) {\r\n            return undefined;\r\n        }\r\n        const range = _lsp_utils_1.LSPUtils.tokenToRange(cursor.token);\r\n        const lookup = _lookup_1.LSPLookup.lookup(cursor, this.reg, obj);\r\n        if ((lookup === null || lookup === void 0 ? void 0 : lookup.definitionId) instanceof _typed_identifier_1.TypedIdentifier) {\r\n            return { range, placeholder: cursor.token.getStr(), type: RenameType.Variable, file };\r\n        }\r\n        else if ((lookup === null || lookup === void 0 ? void 0 : lookup.definitionId) instanceof types_1.ClassDefinition) {\r\n            return { range, placeholder: cursor.token.getStr(), type: RenameType.GlobalClass, file };\r\n        }\r\n        else if ((lookup === null || lookup === void 0 ? void 0 : lookup.definitionId) instanceof types_1.InterfaceDefinition) {\r\n            return { range, placeholder: cursor.token.getStr(), type: RenameType.GlobalInterface, file };\r\n        }\r\n        return undefined;\r\n    }\r\n    rename(params) {\r\n        const prepare = this.prepareRename(params);\r\n        if (prepare === undefined) {\r\n            return undefined;\r\n        }\r\n        switch (prepare.type) {\r\n            case RenameType.GlobalClass:\r\n                return new renamer_1.Renamer(this.reg).buildEdits(\"CLAS\", prepare.placeholder, params.newName);\r\n            case RenameType.GlobalInterface:\r\n                return new renamer_1.Renamer(this.reg).buildEdits(\"INTF\", prepare.placeholder, params.newName);\r\n            case RenameType.Variable:\r\n                return this.renameVariable(params);\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n    ////\r\n    renameVariable(params) {\r\n        var _a;\r\n        const workspace = { documentChanges: [] };\r\n        const refs = new references_1.References(this.reg).references(params);\r\n        for (const r of refs) {\r\n            const doc = { uri: r.uri, version: 1 };\r\n            const edit = LServer.TextDocumentEdit.create(doc, [LServer.TextEdit.replace(r.range, params.newName)]);\r\n            (_a = workspace.documentChanges) === null || _a === void 0 ? void 0 : _a.push(edit);\r\n        }\r\n        return workspace;\r\n    }\r\n}\r\nexports.Rename = Rename;\r\n//# sourceMappingURL=rename.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/rename.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/lsp/symbols.js":
/*!**************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/lsp/symbols.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Symbols = void 0;\r\nconst LServer = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ./_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nclass Symbols {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    find(uri) {\r\n        const file = _lsp_utils_1.LSPUtils.getABAPFile(this.reg, uri);\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        ret.push(...this.outputClasses(file));\r\n        ret.push(...this.outputForms(file));\r\n        return ret;\r\n    }\r\n    selectionRange(identifier) {\r\n        const pos = identifier.getStart();\r\n        const str = identifier.getName();\r\n        return LServer.Range.create(pos.getRow() - 1, pos.getCol() - 1, pos.getRow() - 1, pos.getCol() - 1 + str.length);\r\n    }\r\n    range(identifer) {\r\n        const start = identifer.getStart();\r\n        const end = identifer.getEnd();\r\n        return LServer.Range.create(start.getRow() - 1, start.getCol() - 1, end.getRow() - 1, end.getCol() - 1);\r\n    }\r\n    newSymbol(identifier, kind, children) {\r\n        const symbol = {\r\n            name: identifier.getName(),\r\n            kind: kind,\r\n            range: this.range(identifier),\r\n            selectionRange: this.selectionRange(identifier),\r\n            children,\r\n        };\r\n        return symbol;\r\n    }\r\n    outputForms(file) {\r\n        const ret = [];\r\n        for (const form of file.getInfo().listFormDefinitions()) {\r\n            const symbol = this.newSymbol(form.identifier, LServer.SymbolKind.Function, []);\r\n            ret.push(symbol);\r\n        }\r\n        return ret;\r\n    }\r\n    outputClasses(file) {\r\n        const ret = [];\r\n        for (const cla of file.getInfo().listClassDefinitions()) {\r\n            const children = [];\r\n            children.push(...this.outputClassAttributes(cla.attributes));\r\n            children.push(...this.outputMethodDefinitions(cla.methods));\r\n            const symbol = this.newSymbol(cla.identifier, LServer.SymbolKind.Class, children);\r\n            ret.push(symbol);\r\n        }\r\n        for (const cla of file.getInfo().listClassImplementations()) {\r\n            const children = [];\r\n            children.push(...this.outputMethodImplementations(cla.methods));\r\n            const symbol = this.newSymbol(cla.identifier, LServer.SymbolKind.Class, children);\r\n            ret.push(symbol);\r\n        }\r\n        return ret;\r\n    }\r\n    outputMethodImplementations(methods) {\r\n        const ret = [];\r\n        for (const method of methods) {\r\n            const symbol = this.newSymbol(method, LServer.SymbolKind.Method, []);\r\n            ret.push(symbol);\r\n        }\r\n        return ret;\r\n    }\r\n    outputClassAttributes(attr) {\r\n        if (attr === undefined) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        for (const id of attr) {\r\n            ret.push(this.newSymbol(id.identifier, LServer.SymbolKind.Property, []));\r\n        }\r\n        // todo, also add constants\r\n        return ret;\r\n    }\r\n    outputMethodDefinitions(methods) {\r\n        if (methods === undefined) {\r\n            return [];\r\n        }\r\n        // todo\r\n        return [];\r\n    }\r\n}\r\nexports.Symbols = Symbols;\r\n//# sourceMappingURL=symbols.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/lsp/symbols.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/_abap_object.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/_abap_object.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAPObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nconst abap_parser_1 = __webpack_require__(/*! ../abap/abap_parser */ \"./node_modules/@abaplint/core/build/src/abap/abap_parser.js\");\r\nclass ABAPObject extends _abstract_object_1.AbstractObject {\r\n    constructor(name) {\r\n        super(name);\r\n        this.parsed = [];\r\n        this.texts = undefined;\r\n    }\r\n    static is(x) {\r\n        return !!x && x instanceof ABAPObject;\r\n    }\r\n    parse(version, globalMacros) {\r\n        if (this.isDirty() === false) {\r\n            return { updated: false, runtime: 0 };\r\n        }\r\n        const abapFiles = this.getFiles().filter(f => f.getFilename().endsWith(\".abap\"));\r\n        const result = new abap_parser_1.ABAPParser(version, globalMacros).parse(abapFiles);\r\n        this.parsed = result.output;\r\n        this.old = result.issues;\r\n        this.dirty = false;\r\n        return { updated: true, runtime: result.runtime, runtimeExtra: result.runtimeExtra };\r\n    }\r\n    setDirty() {\r\n        this.syntaxResult = undefined;\r\n        this.texts = undefined;\r\n        super.setDirty();\r\n    }\r\n    getABAPFiles() {\r\n        return this.parsed;\r\n    }\r\n    getABAPFileByName(filename) {\r\n        for (const p of this.parsed) {\r\n            if (p.getFilename() === filename) {\r\n                return p;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getMainABAPFile() {\r\n        // todo, uris\r\n        const search = this.getName().replace(/\\//g, \"#\").toLowerCase() + \".\" + this.getType().toLowerCase() + \".abap\";\r\n        for (const file of this.getABAPFiles()) {\r\n            if (file.getFilename().endsWith(search)) {\r\n                return file;\r\n            }\r\n        }\r\n        // uri fallback,\r\n        for (const file of this.getABAPFiles()) {\r\n            if (file.getFilename().endsWith(\".abap\")) {\r\n                return file;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getTexts() {\r\n        if (this.texts === undefined) {\r\n            this.findTexts(this.parseRaw2());\r\n        }\r\n        return this.texts;\r\n    }\r\n    findTexts(parsed) {\r\n        var _a, _b;\r\n        this.texts = {};\r\n        if (((_b = (_a = parsed === null || parsed === void 0 ? void 0 : parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _a === void 0 ? void 0 : _a.TPOOL) === null || _b === void 0 ? void 0 : _b.item) === undefined) {\r\n            return;\r\n        }\r\n        for (const t of xml_utils_1.xmlToArray(parsed.abapGit[\"asx:abap\"][\"asx:values\"].TPOOL.item)) {\r\n            if ((t === null || t === void 0 ? void 0 : t.ID) === \"I\") {\r\n                if (t.KEY === undefined) {\r\n                    throw new Error(\"findTexts, undefined\");\r\n                }\r\n                const key = t.KEY;\r\n                if (key === undefined) {\r\n                    continue;\r\n                }\r\n                this.texts[key.toUpperCase()] = t.ENTRY ? xml_utils_1.unescape(t.ENTRY) : \"\";\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ABAPObject = ABAPObject;\r\n//# sourceMappingURL=_abap_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/_abap_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/_abstract_object.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/_abstract_object.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AbstractObject = void 0;\r\nconst fastxmlparser = __webpack_require__(/*! fast-xml-parser */ \"./node_modules/fast-xml-parser/src/parser.js\");\r\nconst _identifier_1 = __webpack_require__(/*! ../abap/4_file_information/_identifier */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_identifier.js\");\r\nconst identifier_1 = __webpack_require__(/*! ../abap/1_lexer/tokens/identifier */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/identifier.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass AbstractObject {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.files = [];\r\n        this.old = [];\r\n        this.dirty = false;\r\n    }\r\n    getParsingIssues() {\r\n        return this.old;\r\n    }\r\n    parse(_version, _globalMacros) {\r\n        return { updated: false, runtime: 0 };\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    setDirty() {\r\n        this.dirty = true;\r\n    }\r\n    addFile(file) {\r\n        this.setDirty();\r\n        this.files.push(file);\r\n    }\r\n    getFiles() {\r\n        return this.files;\r\n    }\r\n    containsFile(filename) {\r\n        for (const f of this.files) {\r\n            if (f.getFilename() === filename) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    removeFile(file) {\r\n        this.setDirty();\r\n        for (let i = 0; i < this.files.length; i++) {\r\n            if (this.files[i].getFilename() === file.getFilename()) {\r\n                this.files.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n        throw new Error(\"removeFile: file not found\");\r\n    }\r\n    isDirty() {\r\n        return this.dirty;\r\n    }\r\n    getIdentifier() {\r\n        // this method can be redefined in each object type to give a better result\r\n        const file = this.getXMLFile();\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        return new _identifier_1.Identifier(new identifier_1.Identifier(new position_1.Position(1, 1), this.getName()), file.getFilename());\r\n    }\r\n    getXMLFile() {\r\n        // todo, https://github.com/abaplint/abaplint/issues/673 uris\r\n        const expected1 = this.getName().toLowerCase().replace(/\\//g, \"#\") + \".\" + this.getType().toLowerCase() + \".xml\";\r\n        const expected2 = this.getName().toLowerCase().replace(/\\//g, \"%23\") + \".\" + this.getType().toLowerCase() + \".xml\";\r\n        for (const file of this.getFiles()) {\r\n            if (file.getFilename().endsWith(expected1) || file.getFilename().endsWith(expected2)) {\r\n                return file;\r\n            }\r\n        }\r\n        // uri fallback, assume there is only one xml file\r\n        for (const file of this.getFiles()) {\r\n            if (file.getFilename().endsWith(\".xml\")) {\r\n                return file;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getXML() {\r\n        const file = this.getXMLFile();\r\n        if (file) {\r\n            return file.getRaw();\r\n        }\r\n        return undefined;\r\n    }\r\n    updateFile(file) {\r\n        this.setDirty();\r\n        for (let i = 0; i < this.files.length; i++) {\r\n            if (this.files[i].getFilename() === file.getFilename()) {\r\n                this.files[i] = file;\r\n                return;\r\n            }\r\n        }\r\n        throw new Error(\"updateFile: file not found\");\r\n    }\r\n    parseRaw2() {\r\n        const xml = this.getXML();\r\n        if (xml === undefined) {\r\n            return undefined;\r\n        }\r\n        try {\r\n            return fastxmlparser.parse(xml, { parseNodeValue: false, ignoreAttributes: true, trimValues: false });\r\n        }\r\n        catch (_a) {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nexports.AbstractObject = AbstractObject;\r\n//# sourceMappingURL=_abstract_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/_abstract_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/_unknown_object.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/_unknown_object.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnknownObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst severity_1 = __webpack_require__(/*! ../severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\nclass UnknownObject extends _abstract_object_1.AbstractObject {\r\n    constructor(name, type) {\r\n        super(name);\r\n        this.type = type;\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 100,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        return undefined;\r\n    }\r\n    getParsingIssues() {\r\n        const pos = new position_1.Position(1, 1);\r\n        const file = this.getFiles()[0];\r\n        const message = \"Unknown object type, currently not supported in abaplint, open issue on github\";\r\n        const issue = issue_1.Issue.atPosition(file, pos, message, \"registry_add\", severity_1.Severity.Error);\r\n        return [issue];\r\n    }\r\n}\r\nexports.UnknownObject = UnknownObject;\r\n//# sourceMappingURL=_unknown_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/_unknown_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/activation_variant.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/activation_variant.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ActivationVariant = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ActivationVariant extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"AVAR\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ActivationVariant = ActivationVariant;\r\n//# sourceMappingURL=activation_variant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/activation_variant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/assignment_service_to_authorization_group.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/assignment_service_to_authorization_group.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AssignmentServiceToAuthorizationGroup = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass AssignmentServiceToAuthorizationGroup extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SUSH\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.AssignmentServiceToAuthorizationGroup = AssignmentServiceToAuthorizationGroup;\r\n//# sourceMappingURL=assignment_service_to_authorization_group.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/assignment_service_to_authorization_group.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/authorization_check_field.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/authorization_check_field.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthorizationCheckField = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass AuthorizationCheckField extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"AUTH\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.AuthorizationCheckField = AuthorizationCheckField;\r\n//# sourceMappingURL=authorization_check_field.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/authorization_check_field.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/authorization_group.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/authorization_group.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthorizationGroup = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass AuthorizationGroup extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SUCU\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.AuthorizationGroup = AuthorizationGroup;\r\n//# sourceMappingURL=authorization_group.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/authorization_group.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/authorization_object.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/authorization_object.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthorizationObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass AuthorizationObject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SUSO\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 10,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.AuthorizationObject = AuthorizationObject;\r\n//# sourceMappingURL=authorization_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/authorization_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/authorization_object_class.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/authorization_object_class.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthorizationObjectClass = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass AuthorizationObjectClass extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SUSC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 4,\r\n            allowNamespace: false,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.AuthorizationObjectClass = AuthorizationObjectClass;\r\n//# sourceMappingURL=authorization_object_class.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/authorization_object_class.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/behavior_definition.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/behavior_definition.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BehaviorDefinition = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass BehaviorDefinition extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"BDEF\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.BehaviorDefinition = BehaviorDefinition;\r\n//# sourceMappingURL=behavior_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/behavior_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/bsp_application.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/bsp_application.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BSPApplication = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass BSPApplication extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"WAPA\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.BSPApplication = BSPApplication;\r\n//# sourceMappingURL=bsp_application.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/bsp_application.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/business_add_in_implementation.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/business_add_in_implementation.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BusinessAddInImplementation = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass BusinessAddInImplementation extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SXCI\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.BusinessAddInImplementation = BusinessAddInImplementation;\r\n//# sourceMappingURL=business_add_in_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/business_add_in_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/business_configuration_set.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/business_configuration_set.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BusinessConfigurationSet = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass BusinessConfigurationSet extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SCP1\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 32,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.BusinessConfigurationSet = BusinessConfigurationSet;\r\n//# sourceMappingURL=business_configuration_set.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/business_configuration_set.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/business_function_assignment.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/business_function_assignment.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BusinessFunctionAssignment = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass BusinessFunctionAssignment extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SFBF\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.BusinessFunctionAssignment = BusinessFunctionAssignment;\r\n//# sourceMappingURL=business_function_assignment.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/business_function_assignment.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/business_function_set_assignment.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/business_function_set_assignment.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BusinessFunctionSetAssignment = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass BusinessFunctionSetAssignment extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SFBS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.BusinessFunctionSetAssignment = BusinessFunctionSetAssignment;\r\n//# sourceMappingURL=business_function_set_assignment.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/business_function_set_assignment.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/business_object_model.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/business_object_model.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BusinessObjectModel = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass BusinessObjectModel extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"BOBF\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.BusinessObjectModel = BusinessObjectModel;\r\n//# sourceMappingURL=business_object_model.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/business_object_model.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/cds_metadata_extension.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/cds_metadata_extension.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CDSMetadataExtension = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CDSMetadataExtension extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DDLX\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CDSMetadataExtension = CDSMetadataExtension;\r\n//# sourceMappingURL=cds_metadata_extension.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/cds_metadata_extension.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/change_document.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/change_document.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ChangeDocument = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ChangeDocument extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"CHDO\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 15,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ChangeDocument = ChangeDocument;\r\n//# sourceMappingURL=change_document.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/change_document.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/chapter_of_book_structure.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/chapter_of_book_structure.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ChapterOfBookStructure = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ChapterOfBookStructure extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DSYS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ChapterOfBookStructure = ChapterOfBookStructure;\r\n//# sourceMappingURL=chapter_of_book_structure.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/chapter_of_book_structure.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/checkpoint_group.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/checkpoint_group.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckpointGroup = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CheckpointGroup extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ACID\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CheckpointGroup = CheckpointGroup;\r\n//# sourceMappingURL=checkpoint_group.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/checkpoint_group.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/class.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/class.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Class = exports.ClassCategory = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ./_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nvar ClassCategory;\r\n(function (ClassCategory) {\r\n    ClassCategory[\"Test\"] = \"05\";\r\n    ClassCategory[\"Persistent\"] = \"10\";\r\n    ClassCategory[\"PersistentFactory\"] = \"11\";\r\n    ClassCategory[\"Exception\"] = \"40\";\r\n    ClassCategory[\"SharedObject\"] = \"45\";\r\n})(ClassCategory = exports.ClassCategory || (exports.ClassCategory = {}));\r\nclass Class extends _abap_object_1.ABAPObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.def = undefined;\r\n        this.parsedXML = undefined;\r\n    }\r\n    getType() {\r\n        return \"CLAS\";\r\n    }\r\n    getSequencedFiles() {\r\n        const sequence = [\".clas.locals_def.abap\", \".clas.locals_imp.abap\", \".clas.abap\", \".clas.testclasses.abap\"];\r\n        const copy = this.getABAPFiles().slice().sort((a, b) => {\r\n            const aValue = sequence.findIndex((s) => a.getFilename().endsWith(s));\r\n            const bValue = sequence.findIndex((s) => b.getFilename().endsWith(s));\r\n            return aValue - bValue;\r\n        });\r\n        return copy;\r\n    }\r\n    setDefinition(def) {\r\n        this.def = def;\r\n    }\r\n    getDefinition() {\r\n        return this.def;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.def = undefined;\r\n        this.parsedXML = undefined;\r\n        super.setDirty();\r\n    }\r\n    getClassDefinition() {\r\n        var _a;\r\n        return (_a = this.getMainABAPFile()) === null || _a === void 0 ? void 0 : _a.getInfo().getClassDefinitionByName(this.getName());\r\n    }\r\n    getIdentifier() {\r\n        var _a;\r\n        return (_a = this.getClassDefinition()) === null || _a === void 0 ? void 0 : _a.identifier;\r\n    }\r\n    // -------------------\r\n    getDescription() {\r\n        var _a;\r\n        this.parseXML();\r\n        return (_a = this.parsedXML) === null || _a === void 0 ? void 0 : _a.description;\r\n    }\r\n    getNameFromXML() {\r\n        var _a;\r\n        this.parseXML();\r\n        return (_a = this.parsedXML) === null || _a === void 0 ? void 0 : _a.name;\r\n    }\r\n    getCategory() {\r\n        var _a;\r\n        this.parseXML();\r\n        // https://blog.mariusschulz.com/2017/10/27/typescript-2-4-string-enums#no-reverse-mapping-for-string-valued-enum-members\r\n        return (_a = this.parsedXML) === null || _a === void 0 ? void 0 : _a.category;\r\n    }\r\n    getLocalsImpFile() {\r\n        for (const file of this.getABAPFiles()) {\r\n            if (file.getFilename().endsWith(\".clas.locals_imp.abap\")) {\r\n                return file;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /////////////////////////\r\n    parseXML() {\r\n        if (this.parsedXML !== undefined) {\r\n            return;\r\n        }\r\n        this.parsedXML = {};\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined\r\n            || parsed.abapGit[\"asx:abap\"] === undefined\r\n            || parsed.abapGit[\"asx:abap\"][\"asx:values\"] === undefined) {\r\n            return;\r\n        }\r\n        const vseo = parsed.abapGit[\"asx:abap\"][\"asx:values\"].VSEOCLASS;\r\n        if (vseo === undefined) {\r\n            return;\r\n        }\r\n        this.parsedXML.category = vseo.CATEGORY;\r\n        this.parsedXML.description = vseo.DESCRIPT ? vseo.DESCRIPT : \"\";\r\n        this.parsedXML.name = vseo.CLSNAME ? vseo.CLSNAME : \"\";\r\n    }\r\n}\r\nexports.Class = Class;\r\n//# sourceMappingURL=class.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/class.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/classification.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/classification.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Classification = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Classification extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"AVAS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 32,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Classification = Classification;\r\n//# sourceMappingURL=classification.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/classification.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/composite_enhancement_implementation.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/composite_enhancement_implementation.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CompositeEnhancementImplementation = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CompositeEnhancementImplementation extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ENHC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CompositeEnhancementImplementation = CompositeEnhancementImplementation;\r\n//# sourceMappingURL=composite_enhancement_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/composite_enhancement_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/composite_enhancement_spot.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/composite_enhancement_spot.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CompositeEnhancementSpot = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CompositeEnhancementSpot extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ENSC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CompositeEnhancementSpot = CompositeEnhancementSpot;\r\n//# sourceMappingURL=composite_enhancement_spot.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/composite_enhancement_spot.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/concepts_of_package.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/concepts_of_package.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConceptsOfPackage = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ConceptsOfPackage extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SOTS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ConceptsOfPackage = ConceptsOfPackage;\r\n//# sourceMappingURL=concepts_of_package.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/concepts_of_package.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/customer_enhancement_project.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/customer_enhancement_project.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CustomerEnhancementProject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CustomerEnhancementProject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"CMOD\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CustomerEnhancementProject = CustomerEnhancementProject;\r\n//# sourceMappingURL=customer_enhancement_project.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/customer_enhancement_project.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/customizing_attributes.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/customizing_attributes.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CustomizingAttributes = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CustomizingAttributes extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"CUS2\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CustomizingAttributes = CustomizingAttributes;\r\n//# sourceMappingURL=customizing_attributes.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/customizing_attributes.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/customizing_img_activity.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/customizing_img_activity.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CustomizingImgActivity = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CustomizingImgActivity extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"CUS0\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CustomizingImgActivity = CustomizingImgActivity;\r\n//# sourceMappingURL=customizing_img_activity.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/customizing_img_activity.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/customizing_transaction.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/customizing_transaction.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CustomizingTransaction = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass CustomizingTransaction extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"CUS1\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.CustomizingTransaction = CustomizingTransaction;\r\n//# sourceMappingURL=customizing_transaction.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/customizing_transaction.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/data_control.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/data_control.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataControl = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass DataControl extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DCLS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.DataControl = DataControl;\r\n//# sourceMappingURL=data_control.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/data_control.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/data_definition.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/data_definition.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataDefinition = void 0;\r\nconst basic_1 = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass DataDefinition extends _abstract_object_1.AbstractObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.sqlViewName = undefined;\r\n    }\r\n    getType() {\r\n        return \"DDLS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getSQLViewName() {\r\n        return this.sqlViewName;\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    parseType(_reg) {\r\n        return new basic_1.VoidType(\"DDLS:todo\");\r\n    }\r\n    setDirty() {\r\n        this.sqlViewName = undefined;\r\n        super.setDirty();\r\n    }\r\n    parse() {\r\n        if (this.isDirty() === false) {\r\n            return { updated: false, runtime: 0 };\r\n        }\r\n        this.sqlViewName = undefined;\r\n        const asddls = this.getFiles().find(f => f.getFilename().endsWith(\".asddls\"));\r\n        const match = asddls === null || asddls === void 0 ? void 0 : asddls.getRaw().match(/@AbapCatalog\\.sqlViewName: '(\\w+)'/);\r\n        if (match) {\r\n            this.sqlViewName = match[1].toUpperCase();\r\n        }\r\n        return { updated: true, runtime: 0 };\r\n    }\r\n}\r\nexports.DataDefinition = DataDefinition;\r\n//# sourceMappingURL=data_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/data_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/data_element.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/data_element.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataElement = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst Types = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass DataElement extends _abstract_object_1.AbstractObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.parsedXML = undefined;\r\n    }\r\n    getType() {\r\n        return \"DTEL\";\r\n    }\r\n    getDescription() {\r\n        var _a;\r\n        return (_a = this.parsedXML) === null || _a === void 0 ? void 0 : _a.description;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.parsedXML = undefined;\r\n        super.setDirty();\r\n    }\r\n    parseType(reg) {\r\n        let type;\r\n        if (this.parsedXML === undefined || this.parsedXML === {}) {\r\n            type = new Types.UnknownType(\"Data Element \" + this.getName() + \", parser error\");\r\n        }\r\n        else {\r\n            const ddic = new ddic_1.DDIC(reg);\r\n            if (this.parsedXML.refkind === \"D\" && this.parsedXML.domname) {\r\n                type = ddic.lookupDomain(this.parsedXML.domname);\r\n            }\r\n            else {\r\n                type = ddic.textToType(this.parsedXML.datatype, this.parsedXML.leng, this.parsedXML.decimals, this.getName());\r\n            }\r\n        }\r\n        return type;\r\n    }\r\n    parse() {\r\n        var _a, _b, _c;\r\n        if (this.parsedXML !== undefined) {\r\n            return { updated: false, runtime: 0 };\r\n        }\r\n        const start = Date.now();\r\n        this.parsedXML = {};\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return { updated: false, runtime: 0 };\r\n        }\r\n        const dd04v = (_c = (_b = (_a = parsed.abapGit) === null || _a === void 0 ? void 0 : _a[\"asx:abap\"]) === null || _b === void 0 ? void 0 : _b[\"asx:values\"]) === null || _c === void 0 ? void 0 : _c.DD04V;\r\n        this.parsedXML = {\r\n            description: dd04v === null || dd04v === void 0 ? void 0 : dd04v.DDTEXT,\r\n            refkind: dd04v === null || dd04v === void 0 ? void 0 : dd04v.REFKIND,\r\n            domname: dd04v === null || dd04v === void 0 ? void 0 : dd04v.DOMNAME,\r\n            datatype: dd04v === null || dd04v === void 0 ? void 0 : dd04v.DATATYPE,\r\n            leng: dd04v === null || dd04v === void 0 ? void 0 : dd04v.LENG,\r\n            decimals: dd04v === null || dd04v === void 0 ? void 0 : dd04v.DECIMALS,\r\n        };\r\n        const end = Date.now();\r\n        return { updated: true, runtime: end - start };\r\n    }\r\n}\r\nexports.DataElement = DataElement;\r\n//# sourceMappingURL=data_element.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/data_element.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/dialog_module.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/dialog_module.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DialogModule = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass DialogModule extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DIAL\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.DialogModule = DialogModule;\r\n//# sourceMappingURL=dialog_module.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/dialog_module.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/documentation.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/documentation.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Documentation = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Documentation extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DOCV\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Documentation = Documentation;\r\n//# sourceMappingURL=documentation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/documentation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/domain.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/domain.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Domain = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst Types = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass Domain extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DOMA\";\r\n    }\r\n    getDescription() {\r\n        var _a;\r\n        return (_a = this.parsedXML) === null || _a === void 0 ? void 0 : _a.description;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.parsedXML = undefined;\r\n        this.parsedType = undefined;\r\n        super.setDirty();\r\n    }\r\n    parseType(reg) {\r\n        if (this.parsedType) {\r\n            return this.parsedType;\r\n        }\r\n        else if (this.parsedXML === undefined) {\r\n            return new Types.UnknownType(\"Domain \" + this.getName() + \" parser error\", this.getName());\r\n        }\r\n        const ddic = new ddic_1.DDIC(reg);\r\n        this.parsedType = ddic.textToType(this.parsedXML.datatype, this.parsedXML.length, this.parsedXML.decimals, this.getName());\r\n        return this.parsedType;\r\n    }\r\n    parse() {\r\n        var _a, _b, _c;\r\n        if (this.parsedXML) {\r\n            return { updated: false, runtime: 0 };\r\n        }\r\n        const start = Date.now();\r\n        this.parsedXML = {};\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return { updated: false, runtime: 0 };\r\n        }\r\n        const dd01v = (_c = (_b = (_a = parsed.abapGit) === null || _a === void 0 ? void 0 : _a[\"asx:abap\"]) === null || _b === void 0 ? void 0 : _b[\"asx:values\"]) === null || _c === void 0 ? void 0 : _c.DD01V;\r\n        this.parsedXML = {\r\n            description: dd01v === null || dd01v === void 0 ? void 0 : dd01v.DDTEXT,\r\n            datatype: dd01v === null || dd01v === void 0 ? void 0 : dd01v.DATATYPE,\r\n            length: dd01v === null || dd01v === void 0 ? void 0 : dd01v.LENG,\r\n            decimals: dd01v === null || dd01v === void 0 ? void 0 : dd01v.DECIMALS,\r\n        };\r\n        const end = Date.now();\r\n        return { updated: true, runtime: end - start };\r\n    }\r\n}\r\nexports.Domain = Domain;\r\n//# sourceMappingURL=domain.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/domain.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/ecatt_test_configuration.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/ecatt_test_configuration.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EcattTestConfiguration = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass EcattTestConfiguration extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ECTC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.EcattTestConfiguration = EcattTestConfiguration;\r\n//# sourceMappingURL=ecatt_test_configuration.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/ecatt_test_configuration.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/ecatt_test_data_container.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/ecatt_test_data_container.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EcattTestDataContainer = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass EcattTestDataContainer extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ECTD\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.EcattTestDataContainer = EcattTestDataContainer;\r\n//# sourceMappingURL=ecatt_test_data_container.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/ecatt_test_data_container.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/ecatt_test_script.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/ecatt_test_script.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EcattTestScript = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass EcattTestScript extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ECAT\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.EcattTestScript = EcattTestScript;\r\n//# sourceMappingURL=ecatt_test_script.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/ecatt_test_script.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/enhancement_implementation.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/enhancement_implementation.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EnhancementImplementation = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass EnhancementImplementation extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ENHO\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.EnhancementImplementation = EnhancementImplementation;\r\n//# sourceMappingURL=enhancement_implementation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/enhancement_implementation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/enhancement_spot.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/enhancement_spot.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EnhancementSpot = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nclass EnhancementSpot extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ENHS\";\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.badis = undefined;\r\n        super.setDirty();\r\n    }\r\n    listBadiDefinitions() {\r\n        if (this.badis === undefined) {\r\n            this.badis = this.parseXML();\r\n        }\r\n        return this.badis;\r\n    }\r\n    /////////////////\r\n    parseXML() {\r\n        var _a, _b;\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        for (const b of xml_utils_1.xmlToArray((_b = (_a = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _a === void 0 ? void 0 : _a.BADI_DATA) === null || _b === void 0 ? void 0 : _b.ENH_BADI_DATA)) {\r\n            ret.push({\r\n                name: b.BADI_NAME,\r\n                interface: b.INTERFACE_NAME,\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.EnhancementSpot = EnhancementSpot;\r\n//# sourceMappingURL=enhancement_spot.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/enhancement_spot.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/extension_index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/extension_index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExtensionIndex = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ExtensionIndex extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"XINX\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 33,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ExtensionIndex = ExtensionIndex;\r\n//# sourceMappingURL=extension_index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/extension_index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/field_catalog.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/field_catalog.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldCatalog = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass FieldCatalog extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ASFC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.FieldCatalog = FieldCatalog;\r\n//# sourceMappingURL=field_catalog.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/field_catalog.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/form_object_form.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/form_object_form.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormObjectForm = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass FormObjectForm extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SFPF\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.FormObjectForm = FormObjectForm;\r\n//# sourceMappingURL=form_object_form.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/form_object_form.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/form_object_interface.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/form_object_interface.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormObjectInterface = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass FormObjectInterface extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SFPI\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.FormObjectInterface = FormObjectInterface;\r\n//# sourceMappingURL=form_object_interface.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/form_object_interface.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/format_type.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/format_type.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormatType = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass FormatType extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SPLO\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.FormatType = FormatType;\r\n//# sourceMappingURL=format_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/format_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/function_group.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/function_group.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionGroup = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ./_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst types_1 = __webpack_require__(/*! ../abap/types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nconst fastxmlparser = __webpack_require__(/*! fast-xml-parser */ \"./node_modules/fast-xml-parser/src/parser.js\");\r\nclass FunctionGroup extends _abap_object_1.ABAPObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.includes = undefined;\r\n        this.modules = undefined;\r\n    }\r\n    getType() {\r\n        return \"FUGR\";\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    setDirty() {\r\n        super.setDirty();\r\n        this.includes = undefined;\r\n        this.modules = undefined;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 26,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getSequencedFiles() {\r\n        const main = this.getMainABAPFile();\r\n        if (main === undefined) {\r\n            return [];\r\n        }\r\n        const sequence = [main];\r\n        for (const m of this.getModules()) {\r\n            const search = \".\" + m.getName().toLocaleLowerCase() + \".abap\";\r\n            for (const f of this.getABAPFiles()) {\r\n                if (f.getFilename().toLocaleLowerCase().endsWith(search)) {\r\n                    if (sequence.indexOf(f) < 0) {\r\n                        sequence.push(f);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return sequence;\r\n    }\r\n    getModules() {\r\n        if (this.modules === undefined) {\r\n            this.parseXML();\r\n        }\r\n        if (this.modules === undefined) {\r\n            throw new Error(\"getIncludes, undefined\");\r\n        }\r\n        return this.modules;\r\n    }\r\n    getIncludeFiles() {\r\n        const ret = [];\r\n        const includes = this.getIncludes();\r\n        for (const f of this.getABAPFiles()) {\r\n            for (const i of includes) {\r\n                const namespaced = i.startsWith(\"/\") && i.includes(\"/L\");\r\n                let search = i;\r\n                if (namespaced) {\r\n                    search = search.replace(/\\//g, \"#\");\r\n                }\r\n                if ((i.startsWith(\"L\") || namespaced) && f.getFilename().includes(search.toLowerCase())) {\r\n                    ret.push({ file: f, name: i });\r\n                }\r\n                // fix for URL encoded? Uris\r\n                if (namespaced) {\r\n                    search = i.replace(/\\//g, \"%23\");\r\n                    if (f.getFilename().includes(search.toLowerCase())) {\r\n                        ret.push({ file: f, name: i });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    getInclude(name) {\r\n        const upper = name.toUpperCase();\r\n        const includes = this.getIncludeFiles();\r\n        for (const i of includes) {\r\n            if (i.name.toUpperCase() === upper) {\r\n                return i.file;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getMainABAPFile() {\r\n        const regex = new RegExp(/\\.fugr\\.(#\\w+#)?sapl/, \"i\");\r\n        for (const f of this.getABAPFiles()) {\r\n            if (regex.test(f.getFilename())) {\r\n                return f;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getIncludes() {\r\n        if (this.includes === undefined) {\r\n            this.parseXML();\r\n        }\r\n        if (this.includes === undefined) {\r\n            throw new Error(\"getIncludes, undefined\");\r\n        }\r\n        return this.includes;\r\n    }\r\n    getModule(name) {\r\n        for (const mod of this.getModules()) {\r\n            if (mod.getName().toUpperCase() === name.toUpperCase()) {\r\n                return mod;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getTexts() {\r\n        if (this.texts === undefined) {\r\n            const found = this.findTextFile();\r\n            if (found === undefined) {\r\n                return {};\r\n            }\r\n            const parsed = fastxmlparser.parse(found.getRaw(), { parseNodeValue: false, ignoreAttributes: true, trimValues: false });\r\n            this.findTexts(parsed);\r\n        }\r\n        return this.texts;\r\n    }\r\n    /////////////////////////////////\r\n    parseXML() {\r\n        var _a, _b;\r\n        this.includes = [];\r\n        this.modules = [];\r\n        const parsed = this.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return;\r\n        }\r\n        // INCLUDES\r\n        const includes = (_a = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _a === void 0 ? void 0 : _a.INCLUDES;\r\n        if (includes !== undefined) {\r\n            for (const i of xml_utils_1.xmlToArray(includes.SOBJ_NAME)) {\r\n                this.includes.push(i);\r\n            }\r\n        }\r\n        // FUNCTION MODULES\r\n        const functions = (_b = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _b === void 0 ? void 0 : _b.FUNCTIONS;\r\n        for (const module of xml_utils_1.xmlToArray(functions === null || functions === void 0 ? void 0 : functions.item)) {\r\n            this.modules.push(new types_1.FunctionModuleDefinition(module));\r\n        }\r\n    }\r\n    findTextFile() {\r\n        const search = this.getName() + \".fugr.sapl\" + this.getName() + \".xml\";\r\n        for (const f of this.getFiles()) {\r\n            if (f.getFilename().includes(search.toLowerCase())) {\r\n                return f;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.FunctionGroup = FunctionGroup;\r\n//# sourceMappingURL=function_group.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/function_group.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/gateway_model.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/gateway_model.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GatewayModel = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GatewayModel extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IWMO\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 36,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GatewayModel = GatewayModel;\r\n//# sourceMappingURL=gateway_model.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/gateway_model.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/gateway_model_metadata.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/gateway_model_metadata.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GatewayModelMetadata = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GatewayModelMetadata extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IWOM\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GatewayModelMetadata = GatewayModelMetadata;\r\n//# sourceMappingURL=gateway_model_metadata.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/gateway_model_metadata.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/gateway_project.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/gateway_project.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GatewayProject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GatewayProject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IWPR\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GatewayProject = GatewayProject;\r\n//# sourceMappingURL=gateway_project.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/gateway_project.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/gateway_service.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/gateway_service.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GatewayService = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GatewayService extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IWSV\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 39,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GatewayService = GatewayService;\r\n//# sourceMappingURL=gateway_service.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/gateway_service.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/gateway_service_groups_metadata.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/gateway_service_groups_metadata.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GatewayServiceGroupsMetadata = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GatewayServiceGroupsMetadata extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IWSG\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GatewayServiceGroupsMetadata = GatewayServiceGroupsMetadata;\r\n//# sourceMappingURL=gateway_service_groups_metadata.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/gateway_service_groups_metadata.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/gateway_vocabulary_annotation.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/gateway_vocabulary_annotation.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GatewayVocabularyAnnotation = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GatewayVocabularyAnnotation extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IWVB\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 36,\r\n            allowNamespace: false,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GatewayVocabularyAnnotation = GatewayVocabularyAnnotation;\r\n//# sourceMappingURL=gateway_vocabulary_annotation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/gateway_vocabulary_annotation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/general_hierarchy_storage_extrension_name.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/general_hierarchy_storage_extrension_name.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GeneralHierarchyStorageExtrensionName = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GeneralHierarchyStorageExtrensionName extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SHI5\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 15,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GeneralHierarchyStorageExtrensionName = GeneralHierarchyStorageExtrensionName;\r\n//# sourceMappingURL=general_hierarchy_storage_extrension_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/general_hierarchy_storage_extrension_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/general_storage_structure.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/general_storage_structure.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GeneralStorageStructure = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GeneralStorageStructure extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SHI3\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 32,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GeneralStorageStructure = GeneralStorageStructure;\r\n//# sourceMappingURL=general_storage_structure.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/general_storage_structure.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/general_text.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/general_text.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GeneralText = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass GeneralText extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DOCT\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.GeneralText = GeneralText;\r\n//# sourceMappingURL=general_text.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/general_text.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/iac_binary_data.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/iac_binary_data.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IACBinaryData = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass IACBinaryData extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IAMU\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 100,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.IACBinaryData = IACBinaryData;\r\n//# sourceMappingURL=iac_binary_data.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/iac_binary_data.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/iac_language_resource.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/iac_language_resource.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IACLanguageResource = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass IACLanguageResource extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IARP\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 100,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.IACLanguageResource = IACLanguageResource;\r\n//# sourceMappingURL=iac_language_resource.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/iac_language_resource.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/iac_service.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/iac_service.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IACService = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass IACService extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IASP\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.IACService = IACService;\r\n//# sourceMappingURL=iac_service.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/iac_service.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/iac_template.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/iac_template.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IACTemplate = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass IACTemplate extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IATU\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 100,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.IACTemplate = IACTemplate;\r\n//# sourceMappingURL=iac_template.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/iac_template.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/icf_service.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/icf_service.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ICFService = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nclass ICFService extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SICF\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 100,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    // todo, cache parsed data\r\n    getHandlerList() {\r\n        const ret = [];\r\n        const parsed = this.parseRaw2();\r\n        if (parsed === undefined\r\n            || parsed.abapGit === undefined\r\n            || parsed.abapGit[\"asx:abap\"][\"asx:values\"] === undefined) {\r\n            return undefined;\r\n        }\r\n        const table = parsed.abapGit[\"asx:abap\"][\"asx:values\"].ICFHANDLER_TABLE;\r\n        for (const h of xml_utils_1.xmlToArray(table)) {\r\n            if (h.ICFHANDLER !== undefined) {\r\n                ret.push(h.ICFHANDLER.ICFHANDLER);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.ICFService = ICFService;\r\n//# sourceMappingURL=icf_service.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/icf_service.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/idoc.js":
/*!***************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/idoc.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Idoc = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Idoc extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IDOC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Idoc = Idoc;\r\n//# sourceMappingURL=idoc.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/idoc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/idoc_extension.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/idoc_extension.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IdocExtension = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass IdocExtension extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IEXT\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: false,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.IdocExtension = IdocExtension;\r\n//# sourceMappingURL=idoc_extension.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/idoc_extension.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./activation_variant */ \"./node_modules/@abaplint/core/build/src/objects/activation_variant.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./assignment_service_to_authorization_group */ \"./node_modules/@abaplint/core/build/src/objects/assignment_service_to_authorization_group.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./authorization_check_field */ \"./node_modules/@abaplint/core/build/src/objects/authorization_check_field.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./authorization_group */ \"./node_modules/@abaplint/core/build/src/objects/authorization_group.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./authorization_object_class */ \"./node_modules/@abaplint/core/build/src/objects/authorization_object_class.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./authorization_object */ \"./node_modules/@abaplint/core/build/src/objects/authorization_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./behavior_definition */ \"./node_modules/@abaplint/core/build/src/objects/behavior_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./bsp_application */ \"./node_modules/@abaplint/core/build/src/objects/bsp_application.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./business_add_in_implementation */ \"./node_modules/@abaplint/core/build/src/objects/business_add_in_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./business_configuration_set */ \"./node_modules/@abaplint/core/build/src/objects/business_configuration_set.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./business_function_assignment */ \"./node_modules/@abaplint/core/build/src/objects/business_function_assignment.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./business_function_set_assignment */ \"./node_modules/@abaplint/core/build/src/objects/business_function_set_assignment.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./business_object_model */ \"./node_modules/@abaplint/core/build/src/objects/business_object_model.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cds_metadata_extension */ \"./node_modules/@abaplint/core/build/src/objects/cds_metadata_extension.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./change_document */ \"./node_modules/@abaplint/core/build/src/objects/change_document.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./chapter_of_book_structure */ \"./node_modules/@abaplint/core/build/src/objects/chapter_of_book_structure.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./checkpoint_group */ \"./node_modules/@abaplint/core/build/src/objects/checkpoint_group.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class */ \"./node_modules/@abaplint/core/build/src/objects/class.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./classification */ \"./node_modules/@abaplint/core/build/src/objects/classification.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./composite_enhancement_implementation */ \"./node_modules/@abaplint/core/build/src/objects/composite_enhancement_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./composite_enhancement_spot */ \"./node_modules/@abaplint/core/build/src/objects/composite_enhancement_spot.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./concepts_of_package */ \"./node_modules/@abaplint/core/build/src/objects/concepts_of_package.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./customer_enhancement_project */ \"./node_modules/@abaplint/core/build/src/objects/customer_enhancement_project.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./customizing_attributes */ \"./node_modules/@abaplint/core/build/src/objects/customizing_attributes.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./customizing_img_activity */ \"./node_modules/@abaplint/core/build/src/objects/customizing_img_activity.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./customizing_transaction */ \"./node_modules/@abaplint/core/build/src/objects/customizing_transaction.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_control */ \"./node_modules/@abaplint/core/build/src/objects/data_control.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_definition */ \"./node_modules/@abaplint/core/build/src/objects/data_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./data_element */ \"./node_modules/@abaplint/core/build/src/objects/data_element.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dialog_module */ \"./node_modules/@abaplint/core/build/src/objects/dialog_module.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./documentation */ \"./node_modules/@abaplint/core/build/src/objects/documentation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./domain */ \"./node_modules/@abaplint/core/build/src/objects/domain.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ecatt_test_configuration */ \"./node_modules/@abaplint/core/build/src/objects/ecatt_test_configuration.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ecatt_test_data_container */ \"./node_modules/@abaplint/core/build/src/objects/ecatt_test_data_container.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ecatt_test_script */ \"./node_modules/@abaplint/core/build/src/objects/ecatt_test_script.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enhancement_implementation */ \"./node_modules/@abaplint/core/build/src/objects/enhancement_implementation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./enhancement_spot */ \"./node_modules/@abaplint/core/build/src/objects/enhancement_spot.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./extension_index */ \"./node_modules/@abaplint/core/build/src/objects/extension_index.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./field_catalog */ \"./node_modules/@abaplint/core/build/src/objects/field_catalog.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_object_form */ \"./node_modules/@abaplint/core/build/src/objects/form_object_form.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_object_interface */ \"./node_modules/@abaplint/core/build/src/objects/form_object_interface.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./format_type */ \"./node_modules/@abaplint/core/build/src/objects/format_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_group */ \"./node_modules/@abaplint/core/build/src/objects/function_group.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway_model_metadata */ \"./node_modules/@abaplint/core/build/src/objects/gateway_model_metadata.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway_model */ \"./node_modules/@abaplint/core/build/src/objects/gateway_model.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway_project */ \"./node_modules/@abaplint/core/build/src/objects/gateway_project.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway_service_groups_metadata */ \"./node_modules/@abaplint/core/build/src/objects/gateway_service_groups_metadata.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway_service */ \"./node_modules/@abaplint/core/build/src/objects/gateway_service.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./gateway_vocabulary_annotation */ \"./node_modules/@abaplint/core/build/src/objects/gateway_vocabulary_annotation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./general_hierarchy_storage_extrension_name */ \"./node_modules/@abaplint/core/build/src/objects/general_hierarchy_storage_extrension_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./general_storage_structure */ \"./node_modules/@abaplint/core/build/src/objects/general_storage_structure.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./general_text */ \"./node_modules/@abaplint/core/build/src/objects/general_text.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./iac_binary_data */ \"./node_modules/@abaplint/core/build/src/objects/iac_binary_data.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./iac_language_resource */ \"./node_modules/@abaplint/core/build/src/objects/iac_language_resource.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./iac_service */ \"./node_modules/@abaplint/core/build/src/objects/iac_service.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./iac_template */ \"./node_modules/@abaplint/core/build/src/objects/iac_template.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./icf_service */ \"./node_modules/@abaplint/core/build/src/objects/icf_service.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./idoc_extension */ \"./node_modules/@abaplint/core/build/src/objects/idoc_extension.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./idoc */ \"./node_modules/@abaplint/core/build/src/objects/idoc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./info_object */ \"./node_modules/@abaplint/core/build/src/objects/info_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./interface */ \"./node_modules/@abaplint/core/build/src/objects/interface.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./lock_object */ \"./node_modules/@abaplint/core/build/src/objects/lock_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./maintenance_and_transport_object */ \"./node_modules/@abaplint/core/build/src/objects/maintenance_and_transport_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./message_class */ \"./node_modules/@abaplint/core/build/src/objects/message_class.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./messaging_channel */ \"./node_modules/@abaplint/core/build/src/objects/messaging_channel.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./mime_object */ \"./node_modules/@abaplint/core/build/src/objects/mime_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./namespace */ \"./node_modules/@abaplint/core/build/src/objects/namespace.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./number_range */ \"./node_modules/@abaplint/core/build/src/objects/number_range.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./object_characteristic */ \"./node_modules/@abaplint/core/build/src/objects/object_characteristic.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./package_interface */ \"./node_modules/@abaplint/core/build/src/objects/package_interface.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./package */ \"./node_modules/@abaplint/core/build/src/objects/package.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parameter */ \"./node_modules/@abaplint/core/build/src/objects/parameter.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./personalization_object */ \"./node_modules/@abaplint/core/build/src/objects/personalization_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./program */ \"./node_modules/@abaplint/core/build/src/objects/program.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./proxy_object */ \"./node_modules/@abaplint/core/build/src/objects/proxy_object.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./push_channel */ \"./node_modules/@abaplint/core/build/src/objects/push_channel.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./rfc_service */ \"./node_modules/@abaplint/core/build/src/objects/rfc_service.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sapscript_style */ \"./node_modules/@abaplint/core/build/src/objects/sapscript_style.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sapscript */ \"./node_modules/@abaplint/core/build/src/objects/sapscript.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./screen_variant */ \"./node_modules/@abaplint/core/build/src/objects/screen_variant.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./search_help */ \"./node_modules/@abaplint/core/build/src/objects/search_help.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./service_binding */ \"./node_modules/@abaplint/core/build/src/objects/service_binding.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./service_definition */ \"./node_modules/@abaplint/core/build/src/objects/service_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./shared_memory */ \"./node_modules/@abaplint/core/build/src/objects/shared_memory.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./smart_form */ \"./node_modules/@abaplint/core/build/src/objects/smart_form.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./smart_style */ \"./node_modules/@abaplint/core/build/src/objects/smart_style.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./switch_assignment_hierarchy */ \"./node_modules/@abaplint/core/build/src/objects/switch_assignment_hierarchy.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./switch_assignments */ \"./node_modules/@abaplint/core/build/src/objects/switch_assignments.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./table_type */ \"./node_modules/@abaplint/core/build/src/objects/table_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./table */ \"./node_modules/@abaplint/core/build/src/objects/table.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./technical_job_definition */ \"./node_modules/@abaplint/core/build/src/objects/technical_job_definition.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./transaction_variant */ \"./node_modules/@abaplint/core/build/src/objects/transaction_variant.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./transaction */ \"./node_modules/@abaplint/core/build/src/objects/transaction.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./transformation */ \"./node_modules/@abaplint/core/build/src/objects/transformation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_pool */ \"./node_modules/@abaplint/core/build/src/objects/type_pool.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./view_cluster */ \"./node_modules/@abaplint/core/build/src/objects/view_cluster.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./view */ \"./node_modules/@abaplint/core/build/src/objects/view.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./virtual_end_point */ \"./node_modules/@abaplint/core/build/src/objects/virtual_end_point.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./web_dynpro_application_configuration */ \"./node_modules/@abaplint/core/build/src/objects/web_dynpro_application_configuration.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./web_dynpro_application */ \"./node_modules/@abaplint/core/build/src/objects/web_dynpro_application.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./web_dynpro_component_configuration */ \"./node_modules/@abaplint/core/build/src/objects/web_dynpro_component_configuration.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./web_dynpro_component */ \"./node_modules/@abaplint/core/build/src/objects/web_dynpro_component.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./web_mime */ \"./node_modules/@abaplint/core/build/src/objects/web_mime.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/info_object.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/info_object.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InfoObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass InfoObject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"IOBJ\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.InfoObject = InfoObject;\r\n//# sourceMappingURL=info_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/info_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/interface.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/interface.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Interface = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ./_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nclass Interface extends _abap_object_1.ABAPObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.def = undefined;\r\n        this.parsedXML = undefined;\r\n    }\r\n    getType() {\r\n        return \"INTF\";\r\n    }\r\n    setDefinition(def) {\r\n        this.def = def;\r\n    }\r\n    getSequencedFiles() {\r\n        const main = this.getMainABAPFile();\r\n        if (main === undefined) {\r\n            return [];\r\n        }\r\n        return [main];\r\n    }\r\n    getDefinition() {\r\n        return this.def;\r\n    }\r\n    getInterface() {\r\n        var _a;\r\n        return (_a = this.getMainABAPFile()) === null || _a === void 0 ? void 0 : _a.getInfo().getInterfaceDefinitionByName(this.getName());\r\n    }\r\n    getIdentifier() {\r\n        var _a;\r\n        return (_a = this.getInterface()) === null || _a === void 0 ? void 0 : _a.identifier;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.def = undefined;\r\n        this.parsedXML = undefined;\r\n        super.setDirty();\r\n    }\r\n    getNameFromXML() {\r\n        var _a;\r\n        this.parseXML();\r\n        return (_a = this.parsedXML) === null || _a === void 0 ? void 0 : _a.name;\r\n    }\r\n    getDescription() {\r\n        var _a;\r\n        this.parseXML();\r\n        return (_a = this.parsedXML) === null || _a === void 0 ? void 0 : _a.description;\r\n    }\r\n    /////////////////////////\r\n    parseXML() {\r\n        if (this.parsedXML !== undefined) {\r\n            return;\r\n        }\r\n        this.parsedXML = {};\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined\r\n            || parsed.abapGit[\"asx:abap\"][\"asx:values\"] === undefined) {\r\n            return;\r\n        }\r\n        const vseo = parsed.abapGit[\"asx:abap\"][\"asx:values\"].VSEOINTERF;\r\n        this.parsedXML.description = vseo.DESCRIPT ? vseo.DESCRIPT : \"\";\r\n        this.parsedXML.name = vseo.CLSNAME ? vseo.CLSNAME : \"\";\r\n    }\r\n}\r\nexports.Interface = Interface;\r\n//# sourceMappingURL=interface.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/interface.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/lock_object.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/lock_object.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LockObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass LockObject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"ENQU\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 16,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.LockObject = LockObject;\r\n//# sourceMappingURL=lock_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/lock_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/maintenance_and_transport_object.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/maintenance_and_transport_object.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MaintenanceAndTransportObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass MaintenanceAndTransportObject extends _abstract_object_1.AbstractObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.area = undefined;\r\n    }\r\n    setDirty() {\r\n        super.setDirty();\r\n        this.area = undefined;\r\n    }\r\n    getType() {\r\n        return \"TOBJ\";\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 31,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getArea() {\r\n        if (this.area === undefined) {\r\n            this.parseXML();\r\n        }\r\n        return this.area;\r\n    }\r\n    ////////////\r\n    parseXML() {\r\n        if (this.getFiles().length === 0) {\r\n            return;\r\n        }\r\n        const xml = this.getFiles()[0].getRaw();\r\n        const result = xml.match(/<AREA>([\\w/]+)<\\/AREA>/);\r\n        if (result) {\r\n            this.area = result[1];\r\n        }\r\n    }\r\n}\r\nexports.MaintenanceAndTransportObject = MaintenanceAndTransportObject;\r\n//# sourceMappingURL=maintenance_and_transport_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/maintenance_and_transport_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/message_class.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/message_class.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessageClass = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst message_1 = __webpack_require__(/*! ../abap/types/message */ \"./node_modules/@abaplint/core/build/src/abap/types/message.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nclass MessageClass extends _abstract_object_1.AbstractObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.parsedMessages = undefined;\r\n    }\r\n    getType() {\r\n        return \"MSAG\";\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.parsedMessages = undefined;\r\n        super.setDirty();\r\n    }\r\n    getMessages() {\r\n        this.parseXML();\r\n        const msg = this.parsedMessages;\r\n        return msg ? msg : [];\r\n    }\r\n    getByNumber(num) {\r\n        for (const message of this.getMessages()) {\r\n            if (message.getNumber() === num) {\r\n                return message;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /////////////////////////////////\r\n    parseXML() {\r\n        var _a, _b;\r\n        if (this.parsedMessages !== undefined) {\r\n            return;\r\n        }\r\n        this.parsedMessages = [];\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return;\r\n        }\r\n        const t100 = (_b = (_a = parsed === null || parsed === void 0 ? void 0 : parsed.abapGit) === null || _a === void 0 ? void 0 : _a[\"asx:abap\"][\"asx:values\"]) === null || _b === void 0 ? void 0 : _b.T100;\r\n        if (t100 === undefined) {\r\n            return;\r\n        }\r\n        for (const msg of xml_utils_1.xmlToArray(t100.T100)) {\r\n            this.parsedMessages.push(new message_1.Message(msg.MSGNR, xml_utils_1.unescape(msg.TEXT)));\r\n        }\r\n    }\r\n}\r\nexports.MessageClass = MessageClass;\r\n//# sourceMappingURL=message_class.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/message_class.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/messaging_channel.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/messaging_channel.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessagingChannel = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass MessagingChannel extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SAMC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.MessagingChannel = MessagingChannel;\r\n//# sourceMappingURL=messaging_channel.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/messaging_channel.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/mime_object.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/mime_object.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MIMEObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass MIMEObject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SMIM\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 32,\r\n            allowNamespace: false,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.MIMEObject = MIMEObject;\r\n//# sourceMappingURL=mime_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/mime_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/namespace.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/namespace.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Namespace = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Namespace extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"NSPC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 10,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Namespace = Namespace;\r\n//# sourceMappingURL=namespace.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/namespace.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/number_range.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/number_range.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NumberRange = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass NumberRange extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"NROB\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 10,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.NumberRange = NumberRange;\r\n//# sourceMappingURL=number_range.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/number_range.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/object_characteristic.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/object_characteristic.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ObjectCharacteristic = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ObjectCharacteristic extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"CHAR\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ObjectCharacteristic = ObjectCharacteristic;\r\n//# sourceMappingURL=object_characteristic.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/object_characteristic.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/package.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/package.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Package = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Package extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"DEVC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Package = Package;\r\n//# sourceMappingURL=package.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/package.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/package_interface.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/package_interface.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PackageInterface = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass PackageInterface extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"PINF\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.PackageInterface = PackageInterface;\r\n//# sourceMappingURL=package_interface.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/package_interface.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/parameter.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/parameter.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Parameter = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Parameter extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"PARA\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Parameter = Parameter;\r\n//# sourceMappingURL=parameter.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/parameter.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/personalization_object.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/personalization_object.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PersonalizationObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass PersonalizationObject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"PERS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.PersonalizationObject = PersonalizationObject;\r\n//# sourceMappingURL=personalization_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/personalization_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/program.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/program.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Program = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ./_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nclass Program extends _abap_object_1.ABAPObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isIncludeValue = undefined;\r\n    }\r\n    getType() {\r\n        return \"PROG\";\r\n    }\r\n    getSequencedFiles() {\r\n        const main = this.getMainABAPFile();\r\n        if (main === undefined) {\r\n            return [];\r\n        }\r\n        return [main];\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.isIncludeValue = undefined;\r\n        super.setDirty();\r\n    }\r\n    isInclude() {\r\n        if (this.isIncludeValue === undefined) {\r\n            const file = this.getXMLFile();\r\n            this.isIncludeValue = file ? file.getRaw().includes(\"<SUBC>I</SUBC>\") : false;\r\n        }\r\n        return this.isIncludeValue;\r\n    }\r\n}\r\nexports.Program = Program;\r\n//# sourceMappingURL=program.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/program.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/proxy_object.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/proxy_object.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ProxyObject = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ProxyObject extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SPRX\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 34,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ProxyObject = ProxyObject;\r\n//# sourceMappingURL=proxy_object.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/proxy_object.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/push_channel.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/push_channel.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PushChannel = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass PushChannel extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SAPC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.PushChannel = PushChannel;\r\n//# sourceMappingURL=push_channel.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/push_channel.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/rename/rename_global_class.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/rename/rename_global_class.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RenameGlobalClass = void 0;\r\nconst Statements = __webpack_require__(/*! ../../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst vscode_languageserver_types_1 = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ../../lsp/_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst renamer_helper_1 = __webpack_require__(/*! ./renamer_helper */ \"./node_modules/@abaplint/core/build/src/objects/rename/renamer_helper.js\");\r\nclass RenameGlobalClass {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    buildEdits(obj, oldName, newName) {\r\n        if (!(obj instanceof __1.Class)) {\r\n            throw new Error(\"not a class\");\r\n        }\r\n        const main = obj.getMainABAPFile();\r\n        if (main === undefined) {\r\n            throw new Error(\"Main file not found\");\r\n        }\r\n        let changes = [];\r\n        // todo, this is actually the same as \"id\" ?\r\n        {\r\n            const edits = [];\r\n            for (const s of main.getStatements()) {\r\n                if (s.get() instanceof Statements.ClassDefinition) {\r\n                    const exp = s.findFirstExpression(Expressions.ClassName);\r\n                    if (exp === undefined) {\r\n                        continue;\r\n                    }\r\n                    edits.push(vscode_languageserver_types_1.TextEdit.replace(_lsp_utils_1.LSPUtils.tokenToRange(exp.getFirstToken()), newName.toLowerCase()));\r\n                }\r\n                else if (s.get() instanceof Statements.ClassImplementation) {\r\n                    const exp = s.findFirstExpression(Expressions.ClassName);\r\n                    if (exp === undefined) {\r\n                        continue;\r\n                    }\r\n                    edits.push(vscode_languageserver_types_1.TextEdit.replace(_lsp_utils_1.LSPUtils.tokenToRange(exp.getFirstToken()), newName.toLowerCase()));\r\n                }\r\n            }\r\n            changes.push(vscode_languageserver_types_1.TextDocumentEdit.create({ uri: main.getFilename(), version: 1 }, edits));\r\n        }\r\n        const helper = new renamer_helper_1.RenamerHelper(this.reg);\r\n        changes = changes.concat(helper.buildXMLFileEdits(obj, \"CLSNAME\", oldName, newName));\r\n        changes = changes.concat(helper.renameFiles(obj, oldName, newName));\r\n        changes = changes.concat(helper.renameReferences(obj.getIdentifier(), oldName, newName));\r\n        return {\r\n            documentChanges: changes,\r\n        };\r\n    }\r\n}\r\nexports.RenameGlobalClass = RenameGlobalClass;\r\n//# sourceMappingURL=rename_global_class.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/rename/rename_global_class.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/rename/rename_global_interface.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/rename/rename_global_interface.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RenameGlobalInterface = void 0;\r\nconst Statements = __webpack_require__(/*! ../../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst vscode_languageserver_types_1 = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst _lsp_utils_1 = __webpack_require__(/*! ../../lsp/_lsp_utils */ \"./node_modules/@abaplint/core/build/src/lsp/_lsp_utils.js\");\r\nconst renamer_helper_1 = __webpack_require__(/*! ./renamer_helper */ \"./node_modules/@abaplint/core/build/src/objects/rename/renamer_helper.js\");\r\nconst interface_1 = __webpack_require__(/*! ../interface */ \"./node_modules/@abaplint/core/build/src/objects/interface.js\");\r\nclass RenameGlobalInterface {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    buildEdits(obj, oldName, newName) {\r\n        if (!(obj instanceof interface_1.Interface)) {\r\n            throw new Error(\"not an interface\");\r\n        }\r\n        const main = obj.getMainABAPFile();\r\n        if (main === undefined) {\r\n            throw new Error(\"Main file not found\");\r\n        }\r\n        let changes = [];\r\n        // todo, this is actually the same as \"id\" ?\r\n        {\r\n            const edits = [];\r\n            for (const s of main.getStatements()) {\r\n                if (s.get() instanceof Statements.Interface) {\r\n                    const exp = s.findFirstExpression(Expressions.InterfaceName);\r\n                    if (exp === undefined) {\r\n                        continue;\r\n                    }\r\n                    edits.push(vscode_languageserver_types_1.TextEdit.replace(_lsp_utils_1.LSPUtils.tokenToRange(exp.getFirstToken()), newName.toLowerCase()));\r\n                }\r\n            }\r\n            changes.push(vscode_languageserver_types_1.TextDocumentEdit.create({ uri: main.getFilename(), version: 1 }, edits));\r\n        }\r\n        const helper = new renamer_helper_1.RenamerHelper(this.reg);\r\n        changes = changes.concat(helper.buildXMLFileEdits(obj, \"CLSNAME\", oldName, newName));\r\n        changes = changes.concat(helper.renameFiles(obj, oldName, newName));\r\n        changes = changes.concat(helper.renameReferences(obj.getIdentifier(), oldName, newName));\r\n        return {\r\n            documentChanges: changes,\r\n        };\r\n    }\r\n}\r\nexports.RenameGlobalInterface = RenameGlobalInterface;\r\n//# sourceMappingURL=rename_global_interface.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/rename/rename_global_interface.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/rename/renamer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/rename/renamer.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Renamer = void 0;\r\nconst vscode_languageserver_types_1 = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst memory_file_1 = __webpack_require__(/*! ../../files/memory_file */ \"./node_modules/@abaplint/core/build/src/files/memory_file.js\");\r\nconst rename_global_class_1 = __webpack_require__(/*! ./rename_global_class */ \"./node_modules/@abaplint/core/build/src/objects/rename/rename_global_class.js\");\r\nconst rename_global_interface_1 = __webpack_require__(/*! ./rename_global_interface */ \"./node_modules/@abaplint/core/build/src/objects/rename/rename_global_interface.js\");\r\nclass Renamer {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    /** Applies the renaming to the objects and files in the registry,\r\n     *  after renaming the registry is not parsed */\r\n    rename(type, oldName, newName) {\r\n        const edits = this.buildEdits(type, oldName, newName);\r\n        if (edits === undefined) {\r\n            throw new Error(\"no changes could be determined\");\r\n        }\r\n        else if (edits.changes) {\r\n            throw new Error(\"only documentChanges expected\");\r\n        }\r\n        this.apply(edits);\r\n    }\r\n    /** Builds edits, but does not apply to registry, used by LSP */\r\n    buildEdits(type, oldName, newName) {\r\n        this.reg.parse(); // the registry must be parsed to dermine references\r\n        const obj = this.reg.getObject(type, oldName);\r\n        if (obj === undefined) {\r\n            throw new Error(\"rename, object not found\");\r\n        }\r\n        else if (newName.length > obj.getAllowedNaming().maxLength) {\r\n            // todo, also do not allow strange characters and spaces\r\n            throw new Error(\"Name not allowed\");\r\n        }\r\n        const r = this.factory(type);\r\n        return r.buildEdits(obj, oldName.toUpperCase(), newName);\r\n    }\r\n    //////////////////\r\n    factory(type) {\r\n        switch (type) {\r\n            case \"CLAS\":\r\n                return new rename_global_class_1.RenameGlobalClass(this.reg);\r\n            case \"INTF\":\r\n                return new rename_global_interface_1.RenameGlobalInterface(this.reg);\r\n            default:\r\n                throw new Error(\"Renaming of \" + type + \" not yet supported\");\r\n        }\r\n    }\r\n    apply(edits) {\r\n        const renames = [];\r\n        // assumption: only renames or text changes, no deletes or creates\r\n        for (const dc of edits.documentChanges || []) {\r\n            if (vscode_languageserver_types_1.TextDocumentEdit.is(dc)) {\r\n                this.applyEdit(dc);\r\n            }\r\n            else if (vscode_languageserver_types_1.RenameFile.is(dc)) {\r\n                renames.push(dc);\r\n            }\r\n            else {\r\n                throw new Error(\"unexpected documentChange type\");\r\n            }\r\n        }\r\n        this.applyRenames(renames);\r\n    }\r\n    applyEdit(dc) {\r\n        const file = this.reg.getFileByName(dc.textDocument.uri);\r\n        if (file === undefined) {\r\n            throw new Error(\"file \" + dc.textDocument.uri + \" not found\");\r\n        }\r\n        const rows = file.getRawRows();\r\n        for (const e of dc.edits) {\r\n            if (e.range.start.line !== e.range.end.line) {\r\n                throw new Error(\"applyEdit, start and end line differ\");\r\n            }\r\n            const before = rows[e.range.start.line];\r\n            rows[e.range.start.line] = before.substring(0, e.range.start.character) +\r\n                e.newText +\r\n                before.substring(e.range.end.character);\r\n        }\r\n        const newFile = new memory_file_1.MemoryFile(dc.textDocument.uri, rows.join(\"\\n\"));\r\n        this.reg.updateFile(newFile);\r\n    }\r\n    applyRenames(renames) {\r\n        for (const r of renames) {\r\n            const old = this.reg.getFileByName(r.oldUri);\r\n            if (old === undefined) {\r\n                throw new Error(\"applyRenames, old not found\");\r\n            }\r\n            const newFile = new memory_file_1.MemoryFile(r.newUri, old.getRaw());\r\n            this.reg.removeFile(old);\r\n            this.reg.addFile(newFile);\r\n        }\r\n    }\r\n}\r\nexports.Renamer = Renamer;\r\n//# sourceMappingURL=renamer.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/rename/renamer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/rename/renamer_helper.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/rename/renamer_helper.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RenamerHelper = void 0;\r\nconst vscode_languageserver_types_1 = __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\");\r\nconst __1 = __webpack_require__(/*! ../.. */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst position_1 = __webpack_require__(/*! ../../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nclass RenamerHelper {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n    }\r\n    renameReferences(id, oldName, newName) {\r\n        if (id === undefined) {\r\n            throw new Error(\"renameReferences, no main identifier found\");\r\n        }\r\n        let refs = [];\r\n        for (const o of this.reg.getObjects()) {\r\n            if (o instanceof _abap_object_1.ABAPObject) {\r\n                if (this.reg.isDependency(o)) {\r\n                    continue; // do not search in dependencies\r\n                }\r\n                refs = refs.concat(this.findReferences(new syntax_1.SyntaxLogic(this.reg, o).run().spaghetti.getTop(), id));\r\n            }\r\n        }\r\n        // start with the last reference in the file first, if there are multiple refs per line\r\n        return this.replaceRefs(refs, oldName, newName).reverse();\r\n    }\r\n    buildXMLFileEdits(clas, xmlTag, oldName, newName) {\r\n        const changes = [];\r\n        const xml = clas.getXMLFile();\r\n        if (xml === undefined) {\r\n            return [];\r\n        }\r\n        const tag = xmlTag.toUpperCase();\r\n        const search = \"<\" + tag + \">\" + oldName.toUpperCase() + \"</\" + tag + \">\";\r\n        const rows = xml.getRawRows();\r\n        for (let i = 0; i < rows.length; i++) {\r\n            const index = rows[i].indexOf(search);\r\n            if (index >= 0) {\r\n                const range = vscode_languageserver_types_1.Range.create(i, index + 9, i, index + oldName.length + 9);\r\n                changes.push(vscode_languageserver_types_1.TextDocumentEdit.create({ uri: xml.getFilename(), version: 1 }, [vscode_languageserver_types_1.TextEdit.replace(range, newName.toUpperCase())]));\r\n            }\r\n        }\r\n        return changes;\r\n    }\r\n    renameFiles(obj, oldName, name) {\r\n        const list = [];\r\n        const newName = name.toLowerCase().replace(/\\//g, \"#\");\r\n        for (const f of obj.getFiles()) {\r\n            // todo, this is not completely correct, ie. if the URI contains the same directory name as the object name\r\n            const newFilename = f.getFilename().replace(oldName.toLowerCase(), newName.toLowerCase());\r\n            list.push(vscode_languageserver_types_1.RenameFile.create(f.getFilename(), newFilename));\r\n        }\r\n        return list;\r\n    }\r\n    ////////////////////////\r\n    replaceRefs(refs, oldName, newName) {\r\n        const changes = [];\r\n        // \"zif_abapgit_auth~is_allowed\" is a single token so only replace the first part of a token\r\n        for (const r of refs) {\r\n            const range = vscode_languageserver_types_1.Range.create(r.getStart().getRow() - 1, r.getStart().getCol() - 1, r.getStart().getRow() - 1, r.getStart().getCol() - 1 + oldName.length);\r\n            changes.push(vscode_languageserver_types_1.TextDocumentEdit.create({ uri: r.getFilename(), version: 1 }, [vscode_languageserver_types_1.TextEdit.replace(range, newName.toLowerCase())]));\r\n        }\r\n        return changes;\r\n    }\r\n    findReferences(node, identifier) {\r\n        var _a;\r\n        let ret = [];\r\n        if (node.getIdentifier().stype !== _scope_type_1.ScopeType.BuiltIn) {\r\n            for (const r of node.getData().references) {\r\n                if (((_a = r.resolved) === null || _a === void 0 ? void 0 : _a.equals(identifier))\r\n                    && r.referenceType !== __1.ReferenceType.InferredType\r\n                    && !(r.position.getStart() instanceof position_1.VirtualPosition)) {\r\n                    ret.push(r.position);\r\n                }\r\n            }\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            ret = ret.concat(this.findReferences(c, identifier));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.RenamerHelper = RenamerHelper;\r\n//# sourceMappingURL=renamer_helper.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/rename/renamer_helper.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/rfc_service.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/rfc_service.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RFCService = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass RFCService extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SRFC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.RFCService = RFCService;\r\n//# sourceMappingURL=rfc_service.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/rfc_service.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/sapscript.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/sapscript.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SAPScript = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SAPScript extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"FORM\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SAPScript = SAPScript;\r\n//# sourceMappingURL=sapscript.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/sapscript.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/sapscript_style.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/sapscript_style.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SAPScriptStyle = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SAPScriptStyle extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"STYL\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SAPScriptStyle = SAPScriptStyle;\r\n//# sourceMappingURL=sapscript_style.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/sapscript_style.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/screen_variant.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/screen_variant.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ScreenVariant = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ScreenVariant extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SCVI\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ScreenVariant = ScreenVariant;\r\n//# sourceMappingURL=screen_variant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/screen_variant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/search_help.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/search_help.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SearchHelp = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SearchHelp extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SHLP\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SearchHelp = SearchHelp;\r\n//# sourceMappingURL=search_help.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/search_help.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/service_binding.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/service_binding.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ServiceBinding = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ServiceBinding extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SRVB\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 26,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ServiceBinding = ServiceBinding;\r\n//# sourceMappingURL=service_binding.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/service_binding.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/service_definition.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/service_definition.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ServiceDefinition = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ServiceDefinition extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SRVD\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ServiceDefinition = ServiceDefinition;\r\n//# sourceMappingURL=service_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/service_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/shared_memory.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/shared_memory.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SharedMemory = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SharedMemory extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SHMA\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SharedMemory = SharedMemory;\r\n//# sourceMappingURL=shared_memory.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/shared_memory.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/smart_form.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/smart_form.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SmartForm = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SmartForm extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SSFO\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SmartForm = SmartForm;\r\n//# sourceMappingURL=smart_form.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/smart_form.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/smart_style.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/smart_style.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SmartStyle = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SmartStyle extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SSST\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SmartStyle = SmartStyle;\r\n//# sourceMappingURL=smart_style.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/smart_style.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/switch_assignment_hierarchy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/switch_assignment_hierarchy.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SwitchAssignmentHierarchy = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SwitchAssignmentHierarchy extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SHI8\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SwitchAssignmentHierarchy = SwitchAssignmentHierarchy;\r\n//# sourceMappingURL=switch_assignment_hierarchy.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/switch_assignment_hierarchy.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/switch_assignments.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/switch_assignments.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SwitchAssignments = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass SwitchAssignments extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"SFSW\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.SwitchAssignments = SwitchAssignments;\r\n//# sourceMappingURL=switch_assignments.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/switch_assignments.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/table.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/table.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Table = exports.TableCategory = exports.EnhancementCategory = void 0;\r\nconst Types = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nvar EnhancementCategory;\r\n(function (EnhancementCategory) {\r\n    EnhancementCategory[\"NotClassified\"] = \"0\";\r\n    EnhancementCategory[\"CannotBeEhanced\"] = \"1\";\r\n    EnhancementCategory[\"Character\"] = \"2\";\r\n    EnhancementCategory[\"CharacterOrNumeric\"] = \"3\";\r\n    EnhancementCategory[\"Deep\"] = \"4\";\r\n})(EnhancementCategory = exports.EnhancementCategory || (exports.EnhancementCategory = {}));\r\nvar TableCategory;\r\n(function (TableCategory) {\r\n    TableCategory[\"Transparent\"] = \"TRANSP\";\r\n    TableCategory[\"Structure\"] = \"INTTAB\";\r\n    TableCategory[\"Cluster\"] = \"CLUSTER\";\r\n    TableCategory[\"Pooled\"] = \"POOL\";\r\n    TableCategory[\"View\"] = \"VIEW\";\r\n    TableCategory[\"Append\"] = \"APPEND\";\r\n})(TableCategory = exports.TableCategory || (exports.TableCategory = {}));\r\nclass Table extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"TABL\";\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.parsedData = undefined;\r\n        super.setDirty();\r\n    }\r\n    listKeys() {\r\n        if (this.parsedData === undefined) {\r\n            this.parseXML();\r\n        }\r\n        if (this.parsedData === undefined) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        for (const p of this.parsedData.fields) {\r\n            if (p.KEYFLAG === \"X\") {\r\n                ret.push(p.FIELDNAME);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    parseType(reg) {\r\n        var _a, _b;\r\n        if (this.parsedData === undefined) {\r\n            this.parseXML();\r\n        }\r\n        if (this.parsedData === undefined) {\r\n            return new Types.UnknownType(\"Table, parser error\");\r\n        }\r\n        const components = [];\r\n        const ddic = new ddic_1.DDIC(reg);\r\n        for (const field of this.parsedData.fields) {\r\n            const comptype = field.COMPTYPE ? field.COMPTYPE : \"\";\r\n            if (comptype === \"E\") { // data element\r\n                components.push({\r\n                    name: field.FIELDNAME,\r\n                    type: ddic.lookupDataElement(field.ROLLNAME)\r\n                });\r\n            }\r\n            else if (field.FIELDNAME === \".INCLUDE\" || field.FIELDNAME === \".INCLU--AP\") { // incude or append structure\r\n                let found = ddic.lookupTableOrView(field.PRECFIELD);\r\n                if (found instanceof _typed_identifier_1.TypedIdentifier) {\r\n                    found = found.getType();\r\n                }\r\n                if (found instanceof Types.StructureType) {\r\n                    for (const c of found.getComponents()) {\r\n                        components.push({\r\n                            name: c.name,\r\n                            type: c.type\r\n                        });\r\n                    }\r\n                }\r\n                else if ((((_a = field.PRECFIELD) === null || _a === void 0 ? void 0 : _a.startsWith(\"CI_\")) || ((_b = field.PRECFIELD) === null || _b === void 0 ? void 0 : _b.startsWith(\"SI_\")))\r\n                    && found instanceof Types.UnknownType) {\r\n                    continue;\r\n                }\r\n                else if (found instanceof Types.UnknownType) {\r\n                    return found;\r\n                }\r\n                else if (found instanceof Types.VoidType) {\r\n                    // set the full structure to void\r\n                    return found;\r\n                }\r\n                else {\r\n                    components.push({\r\n                        name: field.FIELDNAME,\r\n                        type: found\r\n                    });\r\n                }\r\n            }\r\n            else if (comptype === \"S\" && field.FIELDNAME.startsWith(\".INCLU-\")) {\r\n                components.push({\r\n                    name: field.FIELDNAME,\r\n                    type: new Types.UnknownType(\"Table \" + this.getName() + \", todo, group named INCLUDE\")\r\n                });\r\n            }\r\n            else if (comptype === \"S\") {\r\n                components.push({\r\n                    name: field.FIELDNAME,\r\n                    type: ddic.lookupTableOrView(field.ROLLNAME)\r\n                });\r\n            }\r\n            else if (comptype === \"R\") {\r\n                if (field.ROLLNAME === undefined) {\r\n                    throw new Error(\"Expected ROLLNAME\");\r\n                }\r\n                components.push({\r\n                    name: field.FIELDNAME,\r\n                    type: ddic.lookupObject(field.ROLLNAME)\r\n                });\r\n            }\r\n            else if (comptype === \"L\") {\r\n                components.push({\r\n                    name: field.FIELDNAME,\r\n                    type: ddic.lookupTableType(field.ROLLNAME)\r\n                });\r\n            }\r\n            else if (comptype === \"\") { // built in\r\n                const datatype = field.DATATYPE;\r\n                const length = field.LENG ? field.LENG : field.INTLEN;\r\n                const decimals = field.DECIMALS ? field.DECIMALS : undefined;\r\n                components.push({\r\n                    name: field.FIELDNAME,\r\n                    type: ddic.textToType(datatype, length, decimals, this.getName())\r\n                });\r\n            }\r\n            else {\r\n                components.push({\r\n                    name: field.FIELDNAME,\r\n                    type: new Types.UnknownType(\"Table \" + this.getName() + \", unknown component type \" + comptype)\r\n                });\r\n            }\r\n        }\r\n        if (components.length === 0) {\r\n            throw new Error(\"Table/Structure \" + this.getName() + \" does not contain any components\");\r\n        }\r\n        return new Types.StructureType(components, this.getName());\r\n    }\r\n    getTableCategory() {\r\n        var _a;\r\n        if (this.parsedData === undefined) {\r\n            this.parseXML();\r\n        }\r\n        return (_a = this.parsedData) === null || _a === void 0 ? void 0 : _a.tableCategory;\r\n    }\r\n    getEnhancementCategory() {\r\n        var _a;\r\n        if (this.parsedData === undefined) {\r\n            this.parseXML();\r\n        }\r\n        if (((_a = this.parsedData) === null || _a === void 0 ? void 0 : _a.enhancementCategory) === undefined) {\r\n            return EnhancementCategory.NotClassified;\r\n        }\r\n        return this.parsedData.enhancementCategory;\r\n    }\r\n    ///////////////\r\n    parseXML() {\r\n        var _a, _b, _c, _d, _e, _f, _g;\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return;\r\n        }\r\n        this.parsedData = { fields: [] };\r\n        // enhancement category\r\n        if (((_b = (_a = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _a === void 0 ? void 0 : _a.DD02V) === null || _b === void 0 ? void 0 : _b.EXCLASS) === undefined) {\r\n            this.parsedData.enhancementCategory = EnhancementCategory.NotClassified;\r\n        }\r\n        else {\r\n            this.parsedData.enhancementCategory = (_d = (_c = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _c === void 0 ? void 0 : _c.DD02V) === null || _d === void 0 ? void 0 : _d.EXCLASS;\r\n        }\r\n        // table category\r\n        this.parsedData.tableCategory = (_f = (_e = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _e === void 0 ? void 0 : _e.DD02V) === null || _f === void 0 ? void 0 : _f.TABCLASS;\r\n        // fields\r\n        const fields = (_g = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _g === void 0 ? void 0 : _g.DD03P_TABLE;\r\n        for (const field of xml_utils_1.xmlToArray(fields === null || fields === void 0 ? void 0 : fields.DD03P)) {\r\n            this.parsedData.fields.push({\r\n                FIELDNAME: field.FIELDNAME,\r\n                ROLLNAME: field.ROLLNAME,\r\n                COMPTYPE: field.COMPTYPE,\r\n                PRECFIELD: field.PRECFIELD,\r\n                LENG: field.LENG,\r\n                INTLEN: field.INTLEN,\r\n                DATATYPE: field.DATATYPE,\r\n                DECIMALS: field.DECIMALS,\r\n                KEYFLAG: field.KEYFLAG,\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.Table = Table;\r\n//# sourceMappingURL=table.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/table.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/table_type.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/table_type.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TableType = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst Types = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass TableType extends _abstract_object_1.AbstractObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.parsedXML = undefined;\r\n    }\r\n    getType() {\r\n        return \"TTYP\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    setDirty() {\r\n        this.parsedXML = undefined;\r\n        super.setDirty();\r\n    }\r\n    parseType(reg) {\r\n        this.parseXML();\r\n        const ddic = new ddic_1.DDIC(reg);\r\n        let type;\r\n        if (this.parsedXML === undefined || this.parsedXML === {}) {\r\n            type = new Types.UnknownType(\"Table Type, parser error\", this.getName());\r\n        }\r\n        else if (this.parsedXML.rowkind === \"S\") {\r\n            type = new Types.TableType(ddic.lookupTableOrView(this.parsedXML.rowtype), { withHeader: false }, this.getName());\r\n        }\r\n        else if (this.parsedXML.rowkind === \"E\") {\r\n            type = new Types.TableType(ddic.lookupDataElement(this.parsedXML.rowtype), { withHeader: false }, this.getName());\r\n        }\r\n        else if (this.parsedXML.rowkind === \"L\") {\r\n            type = new Types.TableType(ddic.lookupTableType(this.parsedXML.rowtype), { withHeader: false }, this.getName());\r\n        }\r\n        else if (this.parsedXML.rowkind === \"R\" && this.parsedXML.rowtype !== undefined) {\r\n            type = new Types.TableType(ddic.lookupObject(this.parsedXML.rowtype), { withHeader: false }, this.getName());\r\n        }\r\n        else if (this.parsedXML.rowkind === \"\") {\r\n            const row = ddic.textToType(this.parsedXML.datatype, this.parsedXML.leng, this.parsedXML.decimals, this.getName(), false);\r\n            type = new Types.TableType(row, { withHeader: false }, this.getName());\r\n        }\r\n        else {\r\n            type = new Types.UnknownType(\"Table Type, unknown kind \\\"\" + this.parsedXML.rowkind + \"\\\"\" + this.getName(), this.getName());\r\n        }\r\n        return type;\r\n    }\r\n    ////////////////////\r\n    parseXML() {\r\n        if (this.parsedXML !== undefined) {\r\n            return;\r\n        }\r\n        this.parsedXML = {};\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return;\r\n        }\r\n        const dd40v = parsed.abapGit[\"asx:abap\"][\"asx:values\"].DD40V;\r\n        this.parsedXML.rowtype = dd40v.ROWTYPE ? dd40v.ROWTYPE : \"\";\r\n        this.parsedXML.rowkind = dd40v.ROWKIND ? dd40v.ROWKIND : \"\";\r\n        this.parsedXML.datatype = dd40v.DATATYPE;\r\n        this.parsedXML.leng = dd40v.LENG;\r\n        this.parsedXML.decimals = dd40v.DECIMALS;\r\n    }\r\n}\r\nexports.TableType = TableType;\r\n//# sourceMappingURL=table_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/table_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/technical_job_definition.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/technical_job_definition.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TechnicalJobDefinition = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass TechnicalJobDefinition extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"JOBD\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 32,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.TechnicalJobDefinition = TechnicalJobDefinition;\r\n//# sourceMappingURL=technical_job_definition.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/technical_job_definition.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/transaction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/transaction.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Transaction = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Transaction extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"TRAN\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 20,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Transaction = Transaction;\r\n//# sourceMappingURL=transaction.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/transaction.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/transaction_variant.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/transaction_variant.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TransactionVariant = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass TransactionVariant extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"STVI\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.TransactionVariant = TransactionVariant;\r\n//# sourceMappingURL=transaction_variant.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/transaction_variant.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/transformation.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/transformation.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Transformation = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass Transformation extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"XSLT\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.Transformation = Transformation;\r\n//# sourceMappingURL=transformation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/transformation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/type_pool.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/type_pool.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypePool = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ./_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nclass TypePool extends _abap_object_1.ABAPObject {\r\n    getType() {\r\n        return \"TYPE\";\r\n    }\r\n    getSequencedFiles() {\r\n        const main = this.getMainABAPFile();\r\n        if (main === undefined) {\r\n            return [];\r\n        }\r\n        return [main];\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 5,\r\n            allowNamespace: false,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.TypePool = TypePool;\r\n//# sourceMappingURL=type_pool.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/type_pool.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/view.js":
/*!***************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/view.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.View = void 0;\r\nconst Types = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nclass View extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"VIEW\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    setDirty() {\r\n        this.parsedData = undefined;\r\n        super.setDirty();\r\n    }\r\n    parseType(reg) {\r\n        if (this.parsedData === undefined) {\r\n            this.parseXML();\r\n        }\r\n        if (this.parsedData === undefined) {\r\n            return new Types.UnknownType(\"View, parser error\", this.getName());\r\n        }\r\n        const components = [];\r\n        const ddic = new ddic_1.DDIC(reg);\r\n        for (const field of this.parsedData.fields) {\r\n            if (field.VIEWFIELD === \"*\") {\r\n                // ignore, this is a special case of old style .INCLUDE\r\n                continue;\r\n            }\r\n            let found = ddic.lookupTableOrView(field.TABNAME);\r\n            if (found instanceof _typed_identifier_1.TypedIdentifier) {\r\n                found = found.getType();\r\n            }\r\n            if (found instanceof Types.StructureType) {\r\n                const s = found.getComponentByName(field.FIELDNAME);\r\n                if (s === undefined) {\r\n                    found = new Types.UnknownType(field.FIELDNAME + \" not found in \" + field.TABNAME + \", VIEW parse type\");\r\n                }\r\n                else {\r\n                    found = s;\r\n                }\r\n            }\r\n            components.push({\r\n                name: field.VIEWFIELD,\r\n                type: found\r\n            });\r\n        }\r\n        if (components.length === 0) {\r\n            throw new Error(\"View \" + this.getName() + \" does not contain any components\");\r\n        }\r\n        return new Types.StructureType(components, this.getName());\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n    ///////////////\r\n    parseXML() {\r\n        var _a;\r\n        const parsed = super.parseRaw2();\r\n        if (parsed === undefined) {\r\n            return;\r\n        }\r\n        this.parsedData = { fields: [] };\r\n        const fields = (_a = parsed.abapGit[\"asx:abap\"][\"asx:values\"]) === null || _a === void 0 ? void 0 : _a.DD27P_TABLE;\r\n        for (const field of xml_utils_1.xmlToArray(fields === null || fields === void 0 ? void 0 : fields.DD27P)) {\r\n            this.parsedData.fields.push({\r\n                VIEWFIELD: field.VIEWFIELD,\r\n                TABNAME: field.TABNAME,\r\n                FIELDNAME: field.FIELDNAME,\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.View = View;\r\n//# sourceMappingURL=view.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/view.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/view_cluster.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/view_cluster.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ViewCluster = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass ViewCluster extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"VCLS\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.ViewCluster = ViewCluster;\r\n//# sourceMappingURL=view_cluster.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/view_cluster.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/virtual_end_point.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/virtual_end_point.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VirtualEndPoint = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass VirtualEndPoint extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"WEBI\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.VirtualEndPoint = VirtualEndPoint;\r\n//# sourceMappingURL=virtual_end_point.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/virtual_end_point.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/web_dynpro_application.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/web_dynpro_application.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebDynproApplication = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass WebDynproApplication extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"WDYA\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.WebDynproApplication = WebDynproApplication;\r\n//# sourceMappingURL=web_dynpro_application.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/web_dynpro_application.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/web_dynpro_application_configuration.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/web_dynpro_application_configuration.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebDynproApplicationConfiguration = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass WebDynproApplicationConfiguration extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"WDCA\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.WebDynproApplicationConfiguration = WebDynproApplicationConfiguration;\r\n//# sourceMappingURL=web_dynpro_application_configuration.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/web_dynpro_application_configuration.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/web_dynpro_component.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/web_dynpro_component.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebDynproComponent = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass WebDynproComponent extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"WDYN\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.WebDynproComponent = WebDynproComponent;\r\n//# sourceMappingURL=web_dynpro_component.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/web_dynpro_component.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/web_dynpro_component_configuration.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/web_dynpro_component_configuration.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebDynproComponentConfiguration = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass WebDynproComponentConfiguration extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"WDCC\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 30,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.WebDynproComponentConfiguration = WebDynproComponentConfiguration;\r\n//# sourceMappingURL=web_dynpro_component_configuration.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/web_dynpro_component_configuration.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/objects/web_mime.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/objects/web_mime.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WebMIME = void 0;\r\nconst _abstract_object_1 = __webpack_require__(/*! ./_abstract_object */ \"./node_modules/@abaplint/core/build/src/objects/_abstract_object.js\");\r\nclass WebMIME extends _abstract_object_1.AbstractObject {\r\n    getType() {\r\n        return \"W3MI\";\r\n    }\r\n    getAllowedNaming() {\r\n        return {\r\n            maxLength: 40,\r\n            allowNamespace: true,\r\n        };\r\n    }\r\n    getDescription() {\r\n        // todo\r\n        return undefined;\r\n    }\r\n}\r\nexports.WebMIME = WebMIME;\r\n//# sourceMappingURL=web_mime.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/objects/web_mime.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/position.js":
/*!***********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/position.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VirtualPosition = exports.Position = void 0;\r\n// first position is (1,1)\r\nclass Position {\r\n    constructor(row, col) {\r\n        this.row = row;\r\n        this.col = col;\r\n    }\r\n    getCol() {\r\n        return this.col;\r\n    }\r\n    getRow() {\r\n        return this.row;\r\n    }\r\n    isAfter(p) {\r\n        return this.row > p.row || (this.row === p.row && this.col >= p.col);\r\n    }\r\n    equals(p) {\r\n        return this.row === p.getRow() && this.col === p.getCol();\r\n    }\r\n    isBefore(p) {\r\n        return this.row < p.row || (this.row === p.row && this.col < p.col);\r\n    }\r\n    isBetween(p1, p2) {\r\n        return this.isAfter(p1) && this.isBefore(p2);\r\n    }\r\n}\r\nexports.Position = Position;\r\n/** used for macro calls */\r\nclass VirtualPosition extends Position {\r\n    constructor(virtual, row, col) {\r\n        super(virtual.getRow(), virtual.getCol());\r\n        this.virtual = virtual;\r\n        this.vrow = row;\r\n        this.vcol = col;\r\n    }\r\n    equals(p) {\r\n        if (!(p instanceof VirtualPosition)) {\r\n            return false;\r\n        }\r\n        return super.equals(this.virtual) && this.vrow === p.vrow && this.vcol === p.vcol;\r\n    }\r\n}\r\nexports.VirtualPosition = VirtualPosition;\r\n//# sourceMappingURL=position.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/position.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/pretty_printer/fix_keyword_case.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/pretty_printer/fix_keyword_case.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FixCase = void 0;\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst keyword_case_1 = __webpack_require__(/*! ../rules/keyword_case */ \"./node_modules/@abaplint/core/build/src/rules/keyword_case.js\");\r\nconst Tokens = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nclass FixCase {\r\n    constructor(fileContents, config) {\r\n        this.keywordCase = new keyword_case_1.KeywordCase();\r\n        this.keywordCase.setConfig(config.readByRule(this.keywordCase.getMetadata().key));\r\n        this.fileContents = fileContents;\r\n        this.config = config;\r\n    }\r\n    execute(statement) {\r\n        for (const child of statement.getChildren()) {\r\n            if (child instanceof nodes_1.TokenNodeRegex) {\r\n                const token = child.get();\r\n                if (token instanceof Tokens.String) {\r\n                    continue;\r\n                }\r\n                this.replaceString(token.getStart(), this.formatNonKeyword(token.getStr()));\r\n                continue;\r\n            }\r\n            else if (child instanceof nodes_1.TokenNode) {\r\n                const token = child.get();\r\n                const str = token.getStr();\r\n                if (this.keywordCase.violatesRule(str) && token instanceof tokens_1.Identifier) {\r\n                    this.replaceString(token.getStart(), this.formatKeyword(str));\r\n                }\r\n            }\r\n            else if (child instanceof nodes_1.ExpressionNode) {\r\n                this.execute(child);\r\n            }\r\n            else {\r\n                throw new Error(\"pretty printer, traverse, unexpected node type\");\r\n            }\r\n        }\r\n        return this.fileContents;\r\n    }\r\n    formatNonKeyword(str) {\r\n        return str.toLowerCase();\r\n    }\r\n    formatKeyword(keyword) {\r\n        const ruleKey = this.keywordCase.getMetadata().key;\r\n        const rule = this.config.readByRule(ruleKey);\r\n        const style = rule ? rule[\"style\"] : keyword_case_1.KeywordCaseStyle.Upper;\r\n        return style === keyword_case_1.KeywordCaseStyle.Lower ? keyword.toLowerCase() : keyword.toUpperCase();\r\n    }\r\n    replaceString(pos, str) {\r\n        const lines = this.fileContents.split(\"\\n\");\r\n        const line = lines[pos.getRow() - 1];\r\n        lines[pos.getRow() - 1] = line.substr(0, pos.getCol() - 1) + str + line.substr(pos.getCol() + str.length - 1);\r\n        this.fileContents = lines.join(\"\\n\");\r\n    }\r\n}\r\nexports.FixCase = FixCase;\r\n//# sourceMappingURL=fix_keyword_case.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/pretty_printer/fix_keyword_case.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/pretty_printer/indent.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/pretty_printer/indent.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Indent = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\n// todo, will break if there is multiple statements per line?\r\nclass Indent {\r\n    constructor(options) {\r\n        this.globalClasses = new Set();\r\n        this.options = options || {};\r\n    }\r\n    execute(original, modified) {\r\n        const statements = original.getStatements();\r\n        const expected = this.getExpectedIndents(original);\r\n        const lines = modified.split(\"\\n\");\r\n        for (const statement of statements) {\r\n            if (statement.getFirstToken().getStart() instanceof position_1.VirtualPosition) {\r\n                continue; // macro contents\r\n            }\r\n            const exp = expected.shift();\r\n            if (exp === undefined || exp < 0) {\r\n                continue;\r\n            }\r\n            const row = statement.getFirstToken().getStart().getRow() - 1;\r\n            lines[row] = lines[row].trim();\r\n            for (let i = 1; i < exp; i++) {\r\n                lines[row] = \" \" + lines[row];\r\n            }\r\n        }\r\n        return lines.join(\"\\n\");\r\n    }\r\n    // returns list of expected indentation for each line/statement?\r\n    getExpectedIndents(file) {\r\n        const ret = [];\r\n        const init = 1;\r\n        const stack = new Stack();\r\n        let indent = init;\r\n        let parentIsEvent = false;\r\n        let previousStatement = undefined;\r\n        for (const statement of file.getStatements()) {\r\n            if (statement.getFirstToken().getStart() instanceof position_1.VirtualPosition) {\r\n                continue; // skip macro contents\r\n            }\r\n            const type = statement.get();\r\n            if (type instanceof Statements.EndIf\r\n                || type instanceof Statements.EndWhile\r\n                || type instanceof Statements.EndModule\r\n                || type instanceof Statements.EndSelect\r\n                || type instanceof Statements.EndMethod\r\n                || type instanceof Statements.EndAt\r\n                || type instanceof Statements.Else\r\n                || type instanceof Statements.EndExec\r\n                || type instanceof Statements.EndOfDefinition\r\n                || type instanceof Statements.EndLoop\r\n                || type instanceof Statements.EndTestInjection\r\n                || type instanceof Statements.EndTestSeam\r\n                || type instanceof Statements.EndForm\r\n                || type instanceof Statements.EndCatch\r\n                || (this.options.selectionScreenBlockIndentation === true\r\n                    && type instanceof Statements.SelectionScreen\r\n                    && statement.concatTokens().toUpperCase().includes(\"END OF BLOCK\"))\r\n                || type instanceof Statements.ElseIf\r\n                || type instanceof Statements.EndFunction\r\n                || type instanceof Statements.EndInterface\r\n                || type instanceof Statements.EndDo) {\r\n                indent = indent - 2;\r\n            }\r\n            else if (type instanceof Statements.StartOfSelection\r\n                || type instanceof Statements.AtSelectionScreen\r\n                || type instanceof Statements.AtLineSelection\r\n                || type instanceof Statements.Initialization\r\n                || type instanceof Statements.AtUserCommand\r\n                || type instanceof Statements.TopOfPage\r\n                || type instanceof Statements.EndOfSelection\r\n                || type instanceof Statements.LoadOfProgram) {\r\n                indent = init;\r\n                parentIsEvent = true;\r\n            }\r\n            else if (type instanceof Statements.Form\r\n                || (type instanceof Statements.Include && parentIsEvent)\r\n                || type instanceof Statements.Module\r\n                || type instanceof Statements.ClassImplementation\r\n                || type instanceof Statements.ClassDefinition) {\r\n                indent = init;\r\n                parentIsEvent = false;\r\n            }\r\n            else if (type instanceof Statements.Cleanup\r\n                || type instanceof Statements.Catch) {\r\n                indent = stack.peek() - 2;\r\n            }\r\n            else if (type instanceof Statements.Public\r\n                || type instanceof Statements.Protected\r\n                || type instanceof Statements.Private\r\n                || type instanceof Statements.WhenType\r\n                || type instanceof Statements.WhenOthers\r\n                || type instanceof Statements.When) {\r\n                indent = stack.peek();\r\n            }\r\n            else if (type instanceof Statements.EndTry) {\r\n                indent = stack.pop() - (this.options.alignTryCatch ? 2 : 4);\r\n            }\r\n            else if (type instanceof Statements.EndClass\r\n                || type instanceof Statements.EndCase) {\r\n                indent = stack.pop() - 2;\r\n                indent = Math.max(indent, init); // maybe move this out of switch before ret.push(indent)\r\n            }\r\n            else if (type instanceof _statement_1.Comment\r\n                || type instanceof Statements.IncludeType\r\n                || type instanceof _statement_1.Empty\r\n                || type instanceof _statement_1.MacroContent) {\r\n                ret.push(-1);\r\n                previousStatement = statement;\r\n                continue;\r\n            }\r\n            if (previousStatement\r\n                && !(previousStatement.get() instanceof _statement_1.Comment)\r\n                && previousStatement.getLastToken().getEnd().getRow() === statement.getFirstToken().getStart().getRow()) {\r\n                // any indentation allowed if there are multiple statements on the same line\r\n                ret.push(-1);\r\n                previousStatement = statement;\r\n                continue;\r\n            }\r\n            ret.push(indent);\r\n            if (type instanceof Statements.If\r\n                || type instanceof Statements.While\r\n                || type instanceof Statements.Module\r\n                || type instanceof Statements.SelectLoop\r\n                || type instanceof Statements.FunctionModule\r\n                || type instanceof Statements.Interface\r\n                || type instanceof Statements.Do\r\n                || type instanceof Statements.At\r\n                || type instanceof Statements.ExecSQL\r\n                || type instanceof Statements.Catch\r\n                || type instanceof Statements.Define\r\n                || type instanceof Statements.When\r\n                || type instanceof Statements.WhenType\r\n                || type instanceof Statements.WhenOthers\r\n                || type instanceof Statements.Cleanup\r\n                || type instanceof Statements.Loop\r\n                || type instanceof Statements.CatchSystemExceptions\r\n                || type instanceof Statements.Form\r\n                || type instanceof Statements.Else\r\n                || type instanceof Statements.ElseIf\r\n                || type instanceof Statements.MethodImplementation\r\n                || type instanceof Statements.TestInjection\r\n                || type instanceof Statements.TestSeam\r\n                || (this.options.selectionScreenBlockIndentation === true\r\n                    && type instanceof Statements.SelectionScreen\r\n                    && statement.concatTokens().toUpperCase().includes(\"BEGIN OF BLOCK\"))\r\n                || type instanceof Statements.StartOfSelection\r\n                || type instanceof Statements.AtSelectionScreen\r\n                || type instanceof Statements.AtLineSelection\r\n                || type instanceof Statements.LoadOfProgram\r\n                || type instanceof Statements.Initialization\r\n                || type instanceof Statements.AtUserCommand\r\n                || type instanceof Statements.TopOfPage\r\n                || type instanceof Statements.EndOfSelection\r\n                || type instanceof Statements.Public\r\n                || type instanceof Statements.Protected\r\n                || type instanceof Statements.Private) {\r\n                indent = indent + 2;\r\n            }\r\n            else if (type instanceof Statements.Try) {\r\n                indent = indent + (this.options.alignTryCatch ? 2 : 4);\r\n                stack.push(indent);\r\n            }\r\n            else if (type instanceof Statements.ClassDefinition\r\n                || type instanceof Statements.Case\r\n                || type instanceof Statements.CaseType\r\n                || type instanceof Statements.ClassImplementation) {\r\n                indent = indent + (this.skipIndentForGlobalClass(statement) ? 0 : 2);\r\n                stack.push(indent);\r\n            }\r\n            previousStatement = statement;\r\n        }\r\n        return ret;\r\n    }\r\n    skipIndentForGlobalClass(statement) {\r\n        if (!this.options.globalClassSkipFirst) {\r\n            return false;\r\n        }\r\n        const type = statement.get();\r\n        if (type instanceof Statements.ClassDefinition && statement.findFirstExpression(Expressions.ClassGlobal)) {\r\n            const className = statement.findFirstExpression(Expressions.ClassName);\r\n            if (className) {\r\n                this.globalClasses.add(className.getFirstToken().getStr().toUpperCase());\r\n            }\r\n            return true;\r\n        }\r\n        else if (type instanceof Statements.ClassImplementation) {\r\n            const className = statement.findFirstExpression(Expressions.ClassName);\r\n            if (className && this.globalClasses.has(className.getFirstToken().getStr().toUpperCase())) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.Indent = Indent;\r\nclass Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n    push(item) {\r\n        this.items.push(item);\r\n    }\r\n    peek() {\r\n        return this.items[this.items.length - 1];\r\n    }\r\n    pop() {\r\n        const peek = this.peek();\r\n        this.items = this.items.slice(0, this.items.length - 1);\r\n        return peek;\r\n    }\r\n}\r\n//# sourceMappingURL=indent.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/pretty_printer/indent.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/pretty_printer/pretty_printer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/pretty_printer/pretty_printer.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PrettyPrinter = void 0;\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst fix_keyword_case_1 = __webpack_require__(/*! ./fix_keyword_case */ \"./node_modules/@abaplint/core/build/src/pretty_printer/fix_keyword_case.js\");\r\nconst indent_1 = __webpack_require__(/*! ./indent */ \"./node_modules/@abaplint/core/build/src/pretty_printer/indent.js\");\r\nconst remove_sequential_blanks_1 = __webpack_require__(/*! ./remove_sequential_blanks */ \"./node_modules/@abaplint/core/build/src/pretty_printer/remove_sequential_blanks.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst indentation_1 = __webpack_require__(/*! ../rules/indentation */ \"./node_modules/@abaplint/core/build/src/rules/indentation.js\");\r\nclass PrettyPrinter {\r\n    constructor(file, config) {\r\n        this.result = file.getRaw();\r\n        this.file = file;\r\n        this.config = config;\r\n        const indentationConf = config.readByRule(new indentation_1.Indentation().getMetadata().key);\r\n        this.options = {\r\n            alignTryCatch: indentationConf === null || indentationConf === void 0 ? void 0 : indentationConf.alignTryCatch,\r\n            globalClassSkipFirst: indentationConf === null || indentationConf === void 0 ? void 0 : indentationConf.globalClassSkipFirst,\r\n        };\r\n    }\r\n    run() {\r\n        const statements = this.file.getStatements();\r\n        for (const statement of statements) {\r\n            if (statement.get() instanceof _statement_1.Unknown\r\n                || statement.get() instanceof _statement_1.MacroContent\r\n                || statement.get() instanceof _statement_1.MacroCall\r\n                || statement.getFirstToken().getStart() instanceof position_1.VirtualPosition\r\n                || statement.get() instanceof _statement_1.Comment) {\r\n                continue;\r\n            }\r\n            // note that no positions are changed when case is changed\r\n            const fixCase = new fix_keyword_case_1.FixCase(this.result, this.config);\r\n            this.result = fixCase.execute(statement);\r\n        }\r\n        const indentation = new indent_1.Indent(this.options);\r\n        this.result = indentation.execute(this.file, this.result);\r\n        const removeBlanks = new remove_sequential_blanks_1.RemoveSequentialBlanks(this.config);\r\n        this.result = removeBlanks.execute(this.file, this.result);\r\n        return this.result;\r\n    }\r\n}\r\nexports.PrettyPrinter = PrettyPrinter;\r\n//# sourceMappingURL=pretty_printer.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/pretty_printer/pretty_printer.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/pretty_printer/remove_sequential_blanks.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/pretty_printer/remove_sequential_blanks.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RemoveSequentialBlanks = void 0;\r\nconst rules_1 = __webpack_require__(/*! ../rules */ \"./node_modules/@abaplint/core/build/src/rules/index.js\");\r\nclass RemoveSequentialBlanks {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n    execute(file, modified) {\r\n        const sequentialBlankConfig = this.getSequentialBlankConfig();\r\n        if (sequentialBlankConfig) {\r\n            return this.withoutSequentialBlanks(file, modified, sequentialBlankConfig.lines);\r\n        }\r\n        return modified;\r\n    }\r\n    withoutSequentialBlanks(file, modified, threshold) {\r\n        const rows = file.getRawRows();\r\n        let blanks = 0;\r\n        const rowsToRemove = [];\r\n        const newBlankCount = (current, row) => {\r\n            return rules_1.SequentialBlank.isBlankOrWhitespace(row) ? current + 1 : 0;\r\n        };\r\n        for (let i = 0; i < rows.length; i++) {\r\n            blanks = newBlankCount(blanks, rows[i]);\r\n            if (blanks === threshold) {\r\n                // count additional blanks\r\n                for (let j = i; j < rows.length; j++) {\r\n                    if (rules_1.SequentialBlank.isBlankOrWhitespace(rows[j])) {\r\n                        rowsToRemove.push(j);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.removeRows(modified.split(\"\\n\"), rowsToRemove);\r\n    }\r\n    removeRows(lines, rowsToRemove) {\r\n        const withoutRemoved = lines.filter((_, idx) => {\r\n            return rowsToRemove.indexOf(idx) === -1;\r\n        });\r\n        return withoutRemoved.join(\"\\n\").trim();\r\n    }\r\n    getSequentialBlankConfig() {\r\n        return this.config.readByRule(new rules_1.SequentialBlank().getMetadata().key);\r\n    }\r\n}\r\nexports.RemoveSequentialBlanks = RemoveSequentialBlanks;\r\n//# sourceMappingURL=remove_sequential_blanks.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/pretty_printer/remove_sequential_blanks.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/registry.js":
/*!***********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/registry.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Registry = void 0;\nconst config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@abaplint/core/build/src/config.js\");\nconst artifacts_objects_1 = __webpack_require__(/*! ./artifacts_objects */ \"./node_modules/@abaplint/core/build/src/artifacts_objects.js\");\nconst artifacts_rules_1 = __webpack_require__(/*! ./artifacts_rules */ \"./node_modules/@abaplint/core/build/src/artifacts_rules.js\");\nconst skip_logic_1 = __webpack_require__(/*! ./skip_logic */ \"./node_modules/@abaplint/core/build/src/skip_logic.js\");\nconst _abap_object_1 = __webpack_require__(/*! ./objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\nconst find_global_definitions_1 = __webpack_require__(/*! ./abap/5_syntax/global_definitions/find_global_definitions */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/global_definitions/find_global_definitions.js\");\nconst syntax_1 = __webpack_require__(/*! ./abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\nconst excludeHelper_1 = __webpack_require__(/*! ./utils/excludeHelper */ \"./node_modules/@abaplint/core/build/src/utils/excludeHelper.js\");\n// todo, this should really be an instance in case there are multiple Registry'ies\nclass ParsingPerformance {\n    static clear() {\n        this.results = [];\n        this.lexing = 0;\n        this.statements = 0;\n        this.structure = 0;\n    }\n    static push(obj, result) {\n        if (result.runtimeExtra) {\n            this.lexing += result.runtimeExtra.lexing;\n            this.statements += result.runtimeExtra.statements;\n            this.structure += result.runtimeExtra.structure;\n        }\n        if (result.runtime < 100) {\n            return;\n        }\n        if (this.results === undefined) {\n            this.results = [];\n        }\n        let extra = \"\";\n        if (result.runtimeExtra) {\n            extra = `\\t(lexing: ${result.runtimeExtra.lexing}ms, statements: ${result.runtimeExtra.statements}ms, structure: ${result.runtimeExtra.structure}ms)`;\n        }\n        this.results.push({\n            runtime: result.runtime,\n            extra,\n            name: obj.getType() + \" \" + obj.getName(),\n        });\n    }\n    static output() {\n        const MAX = 10;\n        this.results.sort((a, b) => { return b.runtime - a.runtime; });\n        for (let i = 0; i < MAX; i++) {\n            const row = this.results[i];\n            if (row === undefined) {\n                break;\n            }\n            process.stderr.write(`\\t${row.runtime}ms\\t${row.name} ${row.extra}\\n`);\n        }\n        process.stderr.write(`\\tTotal lexing:     ${this.lexing}ms\\n`);\n        process.stderr.write(`\\tTotal statements: ${this.statements}ms\\n`);\n        process.stderr.write(`\\tTotal structure:  ${this.structure}ms\\n`);\n    }\n}\nclass Registry {\n    constructor(conf) {\n        this.objects = {};\n        this.objectsByType = {};\n        /** object containing filenames of dependencies */\n        this.dependencies = {};\n        this.issues = [];\n        this.conf = conf ? conf : config_1.Config.getDefault();\n    }\n    static abaplintVersion() {\n        // magic, see build script \"version.sh\"\n        return \"2.74.48\";\n    }\n    *getObjects() {\n        for (const name in this.objects) {\n            for (const type in this.objects[name]) {\n                yield this.objects[name][type];\n            }\n        }\n    }\n    *getObjectsByType(type) {\n        for (const name in this.objectsByType[type] || []) {\n            yield this.objectsByType[type][name];\n        }\n    }\n    *getFiles() {\n        for (const obj of this.getObjects()) {\n            for (const file of obj.getFiles()) {\n                yield file;\n            }\n        }\n    }\n    getFirstObject() {\n        for (const name in this.objects) {\n            for (const type in this.objects[name]) {\n                return this.objects[name][type];\n            }\n        }\n        return undefined;\n    }\n    getObjectCount(skipDependencies = true) {\n        let res = 0;\n        for (const o of this.getObjects()) {\n            if (skipDependencies === true && this.isDependency(o)) {\n                continue;\n            }\n            res = res + 1;\n        }\n        return res;\n    }\n    getFileByName(filename) {\n        const upper = filename.toUpperCase();\n        for (const o of this.getObjects()) {\n            for (const f of o.getFiles()) {\n                if (f.getFilename().toUpperCase() === upper) {\n                    return f;\n                }\n            }\n        }\n        return undefined;\n    }\n    getObject(type, name) {\n        if (type === undefined || name === undefined) {\n            return undefined;\n        }\n        const searchName = name.toUpperCase();\n        if (this.objects[searchName]) {\n            return this.objects[searchName][type];\n        }\n        return undefined;\n    }\n    getConfig() {\n        return this.conf;\n    }\n    // assumption: Config is immutable, and can only be changed via this method\n    setConfig(conf) {\n        for (const obj of this.getObjects()) {\n            obj.setDirty();\n        }\n        this.conf = conf;\n        return this;\n    }\n    inErrorNamespace(name) {\n        const reg = new RegExp(this.getConfig().getSyntaxSetttings().errorNamespace, \"i\");\n        return reg.test(name);\n    }\n    addFile(file) {\n        return this.addFiles([file]);\n    }\n    updateFile(file) {\n        const obj = this.find(file.getObjectName(), file.getObjectType());\n        obj.updateFile(file);\n        return this;\n    }\n    removeFile(file) {\n        const obj = this.find(file.getObjectName(), file.getObjectType());\n        obj.removeFile(file);\n        if (obj.getFiles().length === 0) {\n            this.removeObject(obj);\n        }\n        return this;\n    }\n    addFiles(files) {\n        var _a;\n        const globalExclude = ((_a = this.conf.getGlobal().exclude) !== null && _a !== void 0 ? _a : [])\n            .map(pattern => new RegExp(pattern, \"i\"));\n        for (const f of files) {\n            const filename = f.getFilename();\n            const isNotAbapgitFile = filename.split(\".\").length <= 2;\n            if (isNotAbapgitFile || excludeHelper_1.ExcludeHelper.isExcluded(filename, globalExclude)) {\n                continue;\n            }\n            const found = this.findOrCreate(f.getObjectName(), f.getObjectType());\n            found.addFile(f);\n        }\n        return this;\n    }\n    addDependencies(files) {\n        for (const f of files) {\n            this.dependencies[f.getFilename().toUpperCase()] = true;\n        }\n        return this.addFiles(files);\n    }\n    addDependency(file) {\n        this.dependencies[file.getFilename().toUpperCase()] = true;\n        this.addFile(file);\n        return this;\n    }\n    isDependency(obj) {\n        const filename = obj.getFiles()[0].getFilename().toUpperCase();\n        return this.dependencies[filename] === true;\n    }\n    isFileDependency(filename) {\n        return this.dependencies[filename.toUpperCase()] === true;\n    }\n    // assumption: the file is already in the registry\n    findObjectForFile(file) {\n        const filename = file.getFilename();\n        for (const obj of this.getObjects()) {\n            for (const ofile of obj.getFiles()) {\n                if (ofile.getFilename() === filename) {\n                    return obj;\n                }\n            }\n        }\n        return undefined;\n    }\n    // todo, this will be changed to async sometime\n    findIssues(input) {\n        if (this.isDirty() === true) {\n            this.parse();\n        }\n        return this.runRules(input);\n    }\n    // todo, this will be changed to async sometime\n    findIssuesObject(iobj) {\n        if (this.isDirty() === true) {\n            this.parse();\n        }\n        return this.runRules(undefined, iobj);\n    }\n    // todo, this will be changed to async sometime\n    parse() {\n        if (this.isDirty() === false) {\n            return this;\n        }\n        ParsingPerformance.clear();\n        this.issues = [];\n        for (const o of this.getObjects()) {\n            this.parsePrivate(o);\n            this.issues.push(...o.getParsingIssues());\n        }\n        new find_global_definitions_1.FindGlobalDefinitions(this).run();\n        return this;\n    }\n    async parseAsync(input) {\n        var _a, _b;\n        if (this.isDirty() === false) {\n            return this;\n        }\n        ParsingPerformance.clear();\n        (_a = input === null || input === void 0 ? void 0 : input.progress) === null || _a === void 0 ? void 0 : _a.set(this.getObjectCount(false), \"Lexing and parsing\");\n        this.issues = [];\n        for (const o of this.getObjects()) {\n            await ((_b = input === null || input === void 0 ? void 0 : input.progress) === null || _b === void 0 ? void 0 : _b.tick(\"Lexing and parsing(\" + this.conf.getVersion() + \") - \" + o.getType() + \" \" + o.getName()));\n            this.parsePrivate(o);\n            this.issues.push(...o.getParsingIssues());\n        }\n        if ((input === null || input === void 0 ? void 0 : input.outputPerformance) === true) {\n            ParsingPerformance.output();\n        }\n        new find_global_definitions_1.FindGlobalDefinitions(this).run(input === null || input === void 0 ? void 0 : input.progress);\n        return this;\n    }\n    //////////////////////////////////////////\n    // todo, refactor, this is a mess, see where-used, a lot of the code should be in this method instead\n    parsePrivate(input) {\n        const config = this.getConfig();\n        const result = input.parse(config.getVersion(), config.getSyntaxSetttings().globalMacros);\n        ParsingPerformance.push(input, result);\n    }\n    isDirty() {\n        for (const o of this.getObjects()) {\n            const dirty = o.isDirty();\n            if (dirty === true) {\n                return true;\n            }\n        }\n        return false;\n    }\n    runRules(input, iobj) {\n        var _a, _b, _c, _d, _e, _f;\n        const rulePerformance = {};\n        const issues = this.issues.slice(0);\n        const objects = iobj ? [iobj] : this.getObjects();\n        const rules = this.conf.getEnabledRules();\n        const skipLogic = new skip_logic_1.SkipLogic(this);\n        (_a = input === null || input === void 0 ? void 0 : input.progress) === null || _a === void 0 ? void 0 : _a.set(iobj ? 1 : this.getObjectCount(false), \"Run Syntax\");\n        const check = [];\n        for (const obj of objects) {\n            (_b = input === null || input === void 0 ? void 0 : input.progress) === null || _b === void 0 ? void 0 : _b.tick(\"Run Syntax - \" + obj.getName());\n            if (skipLogic.skip(obj) || this.isDependency(obj)) {\n                continue;\n            }\n            if (obj instanceof _abap_object_1.ABAPObject) {\n                new syntax_1.SyntaxLogic(this, obj).run();\n            }\n            check.push(obj);\n        }\n        (_c = input === null || input === void 0 ? void 0 : input.progress) === null || _c === void 0 ? void 0 : _c.set(rules.length, \"Initialize Rules\");\n        for (const rule of rules) {\n            (_d = input === null || input === void 0 ? void 0 : input.progress) === null || _d === void 0 ? void 0 : _d.tick(\"Initialize Rules - \" + rule.getMetadata().key);\n            if (rule.initialize === undefined) {\n                throw new Error(rule.getMetadata().key + \" missing initialize method\");\n            }\n            rule.initialize(this);\n            rulePerformance[rule.getMetadata().key] = 0;\n        }\n        (_e = input === null || input === void 0 ? void 0 : input.progress) === null || _e === void 0 ? void 0 : _e.set(check.length, \"Finding Issues\");\n        for (const obj of check) {\n            (_f = input === null || input === void 0 ? void 0 : input.progress) === null || _f === void 0 ? void 0 : _f.tick(\"Finding Issues - \" + obj.getType() + \" \" + obj.getName());\n            for (const rule of rules) {\n                const before = Date.now();\n                issues.push(...rule.run(obj));\n                const runtime = Date.now() - before;\n                rulePerformance[rule.getMetadata().key] = rulePerformance[rule.getMetadata().key] + runtime;\n            }\n        }\n        if ((input === null || input === void 0 ? void 0 : input.outputPerformance) === true) {\n            const perf = [];\n            for (const p in rulePerformance) {\n                if (rulePerformance[p] > 100) { // ignore rules if it takes less than 100ms\n                    perf.push({ name: p, time: rulePerformance[p] });\n                }\n            }\n            perf.sort((a, b) => { return b.time - a.time; });\n            for (const p of perf) {\n                process.stderr.write(\"\\t\" + p.time + \"ms\\t\" + p.name + \"\\n\");\n            }\n        }\n        return this.excludeIssues(issues);\n    }\n    excludeIssues(issues) {\n        var _a;\n        const ret = issues;\n        // exclude issues, as now we know both the filename and issue key\n        for (const rule of artifacts_rules_1.ArtifactsRules.getRules()) {\n            const key = rule.getMetadata().key;\n            const ruleExclude = ((_a = this.conf.readByKey(key, \"exclude\")) !== null && _a !== void 0 ? _a : []);\n            const ruleExcludePatterns = ruleExclude.map(x => new RegExp(x, \"i\"));\n            for (let i = ret.length - 1; i >= 0; i--) {\n                if (ret[i].getKey() !== key) {\n                    continue;\n                }\n                const filename = ret[i].getFilename();\n                if (excludeHelper_1.ExcludeHelper.isExcluded(filename, ruleExcludePatterns)) {\n                    ret.splice(i, 1);\n                }\n            }\n        }\n        return ret;\n    }\n    findOrCreate(name, type) {\n        try {\n            return this.find(name, type);\n        }\n        catch (_a) {\n            const newName = name.toUpperCase();\n            const newType = type ? type : \"UNKNOWN\";\n            const add = artifacts_objects_1.ArtifactsObjects.newObject(newName, newType);\n            if (this.objects[newName] === undefined) {\n                this.objects[newName] = {};\n            }\n            this.objects[newName][newType] = add;\n            if (this.objectsByType[newType] === undefined) {\n                this.objectsByType[newType] = {};\n            }\n            this.objectsByType[newType][newName] = add;\n            return add;\n        }\n    }\n    removeObject(remove) {\n        if (remove === undefined) {\n            return;\n        }\n        if (this.objects[remove.getName()][remove.getType()] === undefined) {\n            throw new Error(\"removeObject: object not found\");\n        }\n        if (Object.keys(this.objects[remove.getName()]).length === 1) {\n            delete this.objects[remove.getName()];\n        }\n        else {\n            delete this.objects[remove.getName()][remove.getType()];\n        }\n        if (Object.keys(this.objectsByType[remove.getType()]).length === 1) {\n            delete this.objectsByType[remove.getType()];\n        }\n        else {\n            delete this.objectsByType[remove.getType()][remove.getName()];\n        }\n    }\n    find(name, type) {\n        const searchType = type ? type : \"UNKNOWN\";\n        const searchName = name.toUpperCase();\n        if (this.objects[searchName] !== undefined\n            && this.objects[searchName][searchType]) {\n            return this.objects[searchName][searchType];\n        }\n        throw new Error(\"find: object not found, \" + type + \" \" + name);\n    }\n}\nexports.Registry = Registry;\n//# sourceMappingURL=registry.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/registry.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/7bit_ascii.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/7bit_ascii.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SevenBitAscii = exports.SevenBitAsciiConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass SevenBitAsciiConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.SevenBitAsciiConf = SevenBitAsciiConf;\r\nclass SevenBitAscii {\r\n    constructor() {\r\n        this.conf = new SevenBitAsciiConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"7bit_ascii\",\r\n            title: \"Check for 7bit ascii\",\r\n            shortDescription: `Only allow characters from the 7bit ASCII set.`,\r\n            extendedInformation: `https://docs.abapopenchecks.org/checks/05/`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        const output = [];\r\n        for (const file of obj.getFiles()) {\r\n            if (file.getFilename().endsWith(\".abap\")) {\r\n                const rows = file.getRawRows();\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    const found = /[\\u007f-\\uffff]/.exec(rows[i]);\r\n                    if (found !== null) {\r\n                        const column = found.index + 1;\r\n                        const start = new position_1.Position(i + 1, column);\r\n                        const end = new position_1.Position(i + 1, column + 1);\r\n                        const message = \"Contains non 7 bit ascii character\";\r\n                        const issue = issue_1.Issue.atRange(file, start, end, message, this.getMetadata().key, this.conf.severity);\r\n                        output.push(issue);\r\n                    }\r\n                    // method getRawRows() splits by newline, so the carraige return\r\n                    // should always be last character if present\r\n                    const carriage = /\\r.+$/.exec(rows[i]);\r\n                    if (carriage !== null) {\r\n                        const column = carriage.index + 1;\r\n                        const start = new position_1.Position(i + 1, column);\r\n                        const end = new position_1.Position(i + 1, column + 1);\r\n                        const message = \"Dangling carriage return\";\r\n                        const issue = issue_1.Issue.atRange(file, start, end, message, this.getMetadata().key, this.conf.severity);\r\n                        output.push(issue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.SevenBitAscii = SevenBitAscii;\r\n//# sourceMappingURL=7bit_ascii.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/7bit_ascii.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/_abap_rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/_abap_rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ABAPRule = void 0;\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nclass ABAPRule {\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const abap = obj;\r\n        const output = [];\r\n        for (const file of abap.getABAPFiles()) {\r\n            output.push(...this.runParsed(file, obj));\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.ABAPRule = ABAPRule;\r\n//# sourceMappingURL=_abap_rule.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/_abap_rule.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BasicRuleConfig = void 0;\r\nconst severity_1 = __webpack_require__(/*! ../severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\nclass BasicRuleConfig {\r\n    constructor() {\r\n        /** List of file regex filename patterns to exclude, case insensitive */\r\n        this.exclude = [];\r\n        /** Problem severity */\r\n        this.severity = severity_1.Severity.Error;\r\n    }\r\n}\r\nexports.BasicRuleConfig = BasicRuleConfig;\r\n//# sourceMappingURL=_basic_rule_config.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/_irule.js":
/*!***************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/_irule.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RuleTag = void 0;\r\nvar RuleTag;\r\n(function (RuleTag) {\r\n    RuleTag[\"Experimental\"] = \"Experimental\";\r\n    RuleTag[\"DeprecationCandidate\"] = \"DeprecationCandidate\";\r\n    RuleTag[\"Upport\"] = \"Upport\";\r\n    RuleTag[\"Downport\"] = \"Downport\";\r\n    RuleTag[\"Whitespace\"] = \"Whitespace\";\r\n    RuleTag[\"Naming\"] = \"Naming\";\r\n    RuleTag[\"Quickfix\"] = \"Quickfix\";\r\n    RuleTag[\"Performance\"] = \"Performance\";\r\n    RuleTag[\"Syntax\"] = \"Syntax\";\r\n    RuleTag[\"Security\"] = \"Security\";\r\n    /** Relevant wrt the official SAP ABAP style guide*/\r\n    RuleTag[\"Styleguide\"] = \"Styleguide\";\r\n    /** Single file compatible, the rule gives correct results when having only information about the single file */\r\n    RuleTag[\"SingleFile\"] = \"SingleFile\";\r\n})(RuleTag = exports.RuleTag || (exports.RuleTag = {}));\r\n//# sourceMappingURL=_irule.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/_irule.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NamingRuleConfig = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nclass NamingRuleConfig extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Specifies whether the pattern is forbidden (violation if name matches) or required (violation if name does not match). */\r\n        this.patternKind = \"required\";\r\n        /** A list of names to be ignored */\r\n        this.ignoreNames = [];\r\n        /** A list of patterns to be ignored. For example, you can use it to ignore ambiguous prefixes */\r\n        this.ignorePatterns = [];\r\n    }\r\n}\r\nexports.NamingRuleConfig = NamingRuleConfig;\r\n//# sourceMappingURL=_naming_rule_config.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/abapdoc.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/abapdoc.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Abapdoc = exports.AbapdocConf = void 0;\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../abap/4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass AbapdocConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Check local classes and interfaces for abapdoc. */\r\n        this.checkLocal = false;\r\n    }\r\n}\r\nexports.AbapdocConf = AbapdocConf;\r\nclass Abapdoc extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new AbapdocConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"abapdoc\",\r\n            title: \"Check abapdoc\",\r\n            shortDescription: `Various checks regarding abapdoc.\nBase rule checks for existence of abapdoc for public class methods and all interface methods.`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const rows = file.getRawRows();\r\n        let methods = [];\r\n        for (const classDef of file.getInfo().listClassDefinitions()) {\r\n            if (this.conf.checkLocal === false && classDef.isLocal === true) {\r\n                continue;\r\n            }\r\n            methods = methods.concat(classDef.methods.filter(m => m.visibility === visibility_1.Visibility.Public));\r\n        }\r\n        for (const interfaceDef of file.getInfo().listInterfaceDefinitions()) {\r\n            if (this.conf.checkLocal === false && interfaceDef.isLocal === true) {\r\n                continue;\r\n            }\r\n            methods = methods.concat(interfaceDef.methods);\r\n        }\r\n        for (const method of methods) {\r\n            if (method.isRedefinition === true) {\r\n                continue;\r\n            }\r\n            const previousRow = method.identifier.getStart().getRow() - 2;\r\n            if (!(rows[previousRow].trim().substring(0, 2) === \"\\\"!\")) {\r\n                const message = \"Missing ABAP Doc for method \" + method.identifier.getToken().getStr();\r\n                const issue = issue_1.Issue.atIdentifier(method.identifier, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.Abapdoc = Abapdoc;\r\n//# sourceMappingURL=abapdoc.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/abapdoc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/allowed_object_naming.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/allowed_object_naming.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AllowedObjectNaming = exports.AllowedObjectNamingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nclass AllowedObjectNamingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.AllowedObjectNamingConf = AllowedObjectNamingConf;\r\nclass AllowedObjectNaming {\r\n    constructor() {\r\n        this.conf = new AllowedObjectNamingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"allowed_object_naming\",\r\n            title: \"Allowed object naming\",\r\n            shortDescription: `Enforces basic name length and namespace restrictions, see note SAP 104010`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        const allowed = obj.getAllowedNaming();\r\n        let message = \"\";\r\n        if (obj.getName().length > allowed.maxLength) {\r\n            message = \"Name exceeds max length\";\r\n        }\r\n        else if (allowed.allowNamespace === false && obj.getName().indexOf(\"/\") >= 0) {\r\n            message = \"Namespace not allowed for object type\";\r\n        }\r\n        else if (obj.getType() === \"NSPC\") {\r\n            if (obj.getName().match(/^\\/[A-Z_\\d]{3,8}\\/$/i) === null) {\r\n                message = \"Name not allowed\";\r\n            }\r\n        }\r\n        else if (obj.getName().match(/^(\\/[A-Z_\\d]{3,8}\\/)?[A-Z_\\d<> ]+$/i) === null) {\r\n            message = \"Name not allowed\";\r\n        }\r\n        if (message.length > 0) {\r\n            return [issue_1.Issue.atRow(obj.getFiles()[0], 1, message, this.getMetadata().key, this.conf.severity)];\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.AllowedObjectNaming = AllowedObjectNaming;\r\n//# sourceMappingURL=allowed_object_naming.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/allowed_object_naming.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/allowed_object_types.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/allowed_object_types.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AllowedObjectTypes = exports.AllowedObjectTypesConf = void 0;\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass AllowedObjectTypesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** List of allowed object types, example: [\"CLAS\", \"INTF\"]\r\n         * @uniqueItems true\r\n        */\r\n        this.allowed = [];\r\n    }\r\n}\r\nexports.AllowedObjectTypesConf = AllowedObjectTypesConf;\r\nclass AllowedObjectTypes {\r\n    constructor() {\r\n        this.conf = new AllowedObjectTypesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"allowed_object_types\",\r\n            title: \"Check allowed object types\",\r\n            shortDescription: `Restricts the set of allowed object types.`,\r\n            extendedInformation: `\"allowed\" is a list of 4 character R3TR object types, example: [\"CLAS\", \"INTF\"]`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    getDescription(objectType) {\r\n        return \"Object type \" + objectType + \" not allowed\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        const allowed = this.getConfig().allowed;\r\n        if (allowed === undefined || allowed.length === 0) {\r\n            return [];\r\n        }\r\n        const objectType = obj.getType();\r\n        if (allowed.indexOf(objectType) < 0) {\r\n            const position = new position_1.Position(1, 1);\r\n            const issue = issue_1.Issue.atPosition(obj.getFiles()[0], position, this.getDescription(objectType), this.getMetadata().key, this.conf.severity);\r\n            return [issue];\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.AllowedObjectTypes = AllowedObjectTypes;\r\n//# sourceMappingURL=allowed_object_types.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/allowed_object_types.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/ambiguous_statement.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/ambiguous_statement.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AmbiguousStatement = exports.AmbiguousStatementConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst combi_1 = __webpack_require__(/*! ../abap/2_statements/combi */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/combi.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass AmbiguousStatementConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.AmbiguousStatementConf = AmbiguousStatementConf;\r\nclass AmbiguousStatement extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new AmbiguousStatementConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"ambiguous_statement\",\r\n            title: \"Check for ambigious statements\",\r\n            shortDescription: `Checks for ambiguity between deleting or modifying from internal and database table\nAdd \"TABLE\" keyword or \"@\" for escaping SQL variables\n\nOnly works if the target version is 740sp05 or above`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `DELETE foo FROM bar.\nMODIFY foo FROM bar.`,\r\n            goodExample: `DELETE foo FROM @bar.\nMODIFY TABLE foo FROM bar.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Ambiguous statement. Use explicit syntax.\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        if (this.reg.getConfig().getVersion() < version_1.Version.v740sp05) {\r\n            return [];\r\n        }\r\n        for (const statement of file.getStatements()) {\r\n            let match = false;\r\n            if (statement.get() instanceof Statements.DeleteDatabase) {\r\n                match = this.tryMatch(statement, this.reg, Statements.DeleteInternal);\r\n            }\r\n            else if (statement.get() instanceof Statements.DeleteInternal) {\r\n                match = this.tryMatch(statement, this.reg, Statements.DeleteDatabase);\r\n            }\r\n            else if (statement.get() instanceof Statements.ModifyInternal) {\r\n                match = this.tryMatch(statement, this.reg, Statements.ModifyDatabase);\r\n            }\r\n            else if (statement.get() instanceof Statements.ModifyDatabase) {\r\n                match = this.tryMatch(statement, this.reg, Statements.ModifyInternal);\r\n            }\r\n            if (match) {\r\n                const issue = issue_1.Issue.atStatement(file, statement, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    tryMatch(st, reg, type1) {\r\n        const ver = reg.getConfig().getVersion();\r\n        const tokens = st.getTokens().slice(0);\r\n        tokens.pop();\r\n        const match = combi_1.Combi.run(new type1().getMatcher(), tokens, ver);\r\n        return match !== undefined;\r\n    }\r\n}\r\nexports.AmbiguousStatement = AmbiguousStatement;\r\n//# sourceMappingURL=ambiguous_statement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/ambiguous_statement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/avoid_use.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/avoid_use.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AvoidUse = exports.AvoidUseConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass AvoidUseConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Detects DEFINE (macro definitions) */\r\n        this.define = true;\r\n        /** Detects statics */\r\n        this.statics = true;\r\n        /** Detects DEFAULT KEY definitions, from version v740sp02 and up */\r\n        this.defaultKey = true;\r\n        /** Detects BREAK and BREAK-POINTS */\r\n        this.break = true;\r\n        /** Detects DESCRIBE TABLE LINES, use lines() instead */\r\n        this.describeLines = true;\r\n    }\r\n}\r\nexports.AvoidUseConf = AvoidUseConf;\r\nclass AvoidUse extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new AvoidUseConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"avoid_use\",\r\n            title: \"Avoid use of certain statements\",\r\n            shortDescription: `Detects usage of certain statements.`,\r\n            extendedInformation: `\nDEFAULT KEY: https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#avoid-default-key\n\nMacros: https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenmacros_guidl.htm\n\nDESCRIBE TABLE LINES: use lines() instead (quickfix exists)`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(statement) {\r\n        return \"Avoid use of \" + statement;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let isStaticsBlock = false;\r\n        for (const statementNode of file.getStatements()) {\r\n            const statement = statementNode.get();\r\n            let message = undefined;\r\n            let fix = undefined;\r\n            if (this.conf.define && statement instanceof Statements.Define) {\r\n                message = \"DEFINE\";\r\n            }\r\n            else if (this.conf.describeLines && statement instanceof Statements.Describe) {\r\n                const children = statementNode.getChildren();\r\n                if (children.length === 6 && children[3].getFirstToken().getStr().toUpperCase() === \"LINES\") {\r\n                    message = \"DESCRIBE LINES, use lines() instead\";\r\n                    fix = this.getDescribeLinesFix(file, statementNode);\r\n                }\r\n            }\r\n            else if (this.conf.statics && statement instanceof Statements.StaticBegin) {\r\n                isStaticsBlock = true;\r\n                message = \"STATICS\";\r\n            }\r\n            else if (this.conf.statics && statement instanceof Statements.StaticEnd) {\r\n                isStaticsBlock = false;\r\n            }\r\n            else if (this.conf.statics && statement instanceof Statements.Static && isStaticsBlock === false) {\r\n                message = \"STATICS\";\r\n            }\r\n            else if (this.conf.break && statement instanceof Statements.Break) {\r\n                message = \"BREAK/BREAK-POINT\";\r\n            }\r\n            if (message) {\r\n                issues.push(issue_1.Issue.atStatement(file, statementNode, this.getDescription(message), this.getMetadata().key, this.conf.severity, fix));\r\n            }\r\n            if (this.conf.defaultKey\r\n                && (this.reg.getConfig().getVersion() >= version_1.Version.v740sp02\r\n                    || this.reg.getConfig().getVersion() === version_1.Version.Cloud)\r\n                && (statement instanceof Statements.Data || statement instanceof Statements.Type)) {\r\n                const tt = statementNode.findFirstExpression(expressions_1.TypeTable);\r\n                const token = tt === null || tt === void 0 ? void 0 : tt.findDirectTokenByText(\"DEFAULT\");\r\n                if (tt && token) {\r\n                    tt.concatTokensWithoutStringsAndComments().toUpperCase().endsWith(\"DEFAULT KEY\");\r\n                    message = \"DEFAULT KEY\";\r\n                    issues.push(issue_1.Issue.atToken(file, token, this.getDescription(message), this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    getDescribeLinesFix(file, statementNode) {\r\n        const children = statementNode.getChildren();\r\n        const target = children[4].concatTokens();\r\n        const source = children[2].concatTokens();\r\n        const startPosition = children[0].getFirstToken().getStart();\r\n        const insertText = target + \" = lines( \" + source + \" ).\";\r\n        const deleteFix = edit_helper_1.EditHelper.deleteStatement(file, statementNode);\r\n        const insertFix = edit_helper_1.EditHelper.insertAt(file, startPosition, insertText);\r\n        const finalFix = edit_helper_1.EditHelper.merge(deleteFix, insertFix);\r\n        return finalFix;\r\n    }\r\n}\r\nexports.AvoidUse = AvoidUse;\r\n//# sourceMappingURL=avoid_use.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/avoid_use.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/begin_end_names.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/begin_end_names.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BeginEndNames = exports.BeginEndNamesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass BeginEndNamesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.BeginEndNamesConf = BeginEndNamesConf;\r\nclass BeginEndNames extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new BeginEndNamesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"begin_end_names\",\r\n            title: \"Check BEGIN END names\",\r\n            shortDescription: `Check BEGIN OF and END OF names match, plus there must be statements between BEGIN and END`,\r\n            tags: [_irule_1.RuleTag.Syntax, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            badExample: `DATA: BEGIN OF stru,\n      field TYPE i,\n    END OF structure_not_the_same.`,\r\n            goodExample: `DATA: BEGIN OF stru,\n      field TYPE i,\n    END OF stru.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const output = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        output.push(...this.test(struc, Structures.Data, Statements.DataBegin, Statements.DataEnd, file));\r\n        output.push(...this.test(struc, Structures.ClassData, Statements.ClassDataBegin, Statements.ClassDataEnd, file));\r\n        output.push(...this.test(struc, Structures.Constants, Statements.ConstantBegin, Statements.ConstantEnd, file));\r\n        output.push(...this.test(struc, Structures.Statics, Statements.StaticBegin, Statements.StaticEnd, file));\r\n        output.push(...this.test(struc, Structures.TypeEnum, Statements.TypeEnumBegin, Statements.TypeEnumEnd, file));\r\n        output.push(...this.test(struc, Structures.Types, Statements.TypeBegin, Statements.TypeEnd, file));\r\n        return output;\r\n    }\r\n    test(stru, type, b, e, file) {\r\n        const output = [];\r\n        for (const sub of stru.findAllStructuresRecursive(type)) {\r\n            let begin = sub.findDirectStatements(b)[0].findFirstExpression(Expressions.NamespaceSimpleName);\r\n            if (begin === undefined) {\r\n                begin = sub.findDirectStatements(b)[0].findFirstExpression(Expressions.DefinitionName);\r\n            }\r\n            if (begin === undefined) {\r\n                continue;\r\n            }\r\n            const first = begin.getFirstToken();\r\n            let end = sub.findDirectStatements(e)[0].findFirstExpression(Expressions.NamespaceSimpleName);\r\n            if (end === undefined) {\r\n                end = sub.findDirectStatements(e)[0].findFirstExpression(Expressions.DefinitionName);\r\n            }\r\n            if (end === undefined) {\r\n                continue;\r\n            }\r\n            const last = end.getFirstToken();\r\n            if (first.getStr().toUpperCase() !== last.getStr().toUpperCase()) {\r\n                const fix = edit_helper_1.EditHelper.replaceRange(file, last.getStart(), last.getEnd(), first.getStr());\r\n                const message = \"BEGIN END names must match\";\r\n                const issue = issue_1.Issue.atToken(file, first, message, this.getMetadata().key, this.conf.severity, fix);\r\n                output.push(issue);\r\n            }\r\n            if (sub.getChildren().length === 2) {\r\n                const message = \"There must be statements between BEGIN and END\";\r\n                const issue = issue_1.Issue.atToken(file, first, message, this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.BeginEndNames = BeginEndNames;\r\n//# sourceMappingURL=begin_end_names.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/begin_end_names.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/begin_single_include.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/begin_single_include.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BeginSingleInclude = exports.BeginSingleIncludeConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass BeginSingleIncludeConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.BeginSingleIncludeConf = BeginSingleIncludeConf;\r\nclass BeginSingleInclude extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new BeginSingleIncludeConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"begin_single_include\",\r\n            title: \"BEGIN contains single INCLUDE\",\r\n            shortDescription: `Finds TYPE BEGIN with just one INCLUDE TYPE, and DATA with single INCLUDE STRUCTURE`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `TYPES: BEGIN OF dummy1.\n  INCLUDE TYPE dselc.\nTYPES: END OF dummy1.\n\nDATA BEGIN OF foo.\nINCLUDE STRUCTURE syst.\nDATA END OF foo.\n\nSTATICS BEGIN OF bar.\nINCLUDE STRUCTURE syst.\nSTATICS END OF bar.`,\r\n            goodExample: `DATA BEGIN OF foo.\nINCLUDE STRUCTURE dselc.\nDATA END OF foo.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        for (const t of stru.findAllStructures(Structures.Types)) {\r\n            if (t.getChildren().length !== 3) {\r\n                continue;\r\n            }\r\n            if (t.findFirstStatement(Statements.IncludeType)) {\r\n                const token = t.getFirstToken();\r\n                const message = \"TYPE BEGIN with single INCLUDE\";\r\n                const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        for (const t of stru.findAllStructures(Structures.Data)) {\r\n            if (t.getChildren().length !== 3) {\r\n                continue;\r\n            }\r\n            if (t.findFirstStatement(Statements.IncludeType)) {\r\n                const token = t.getFirstToken();\r\n                const message = \"DATA BEGIN with single INCLUDE\";\r\n                const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        for (const t of stru.findAllStructures(Structures.Statics)) {\r\n            if (t.getChildren().length !== 3) {\r\n                continue;\r\n            }\r\n            if (t.findFirstStatement(Statements.IncludeType)) {\r\n                const token = t.getFirstToken();\r\n                const message = \"STATICS BEGIN with single INCLUDE\";\r\n                const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.BeginSingleInclude = BeginSingleInclude;\r\n//# sourceMappingURL=begin_single_include.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/begin_single_include.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/call_transaction_authority_check.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/call_transaction_authority_check.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CallTransactionAuthorityCheck = exports.CallTransactionAuthorityCheckConf = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nclass CallTransactionAuthorityCheckConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CallTransactionAuthorityCheckConf = CallTransactionAuthorityCheckConf;\r\nclass CallTransactionAuthorityCheck extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new CallTransactionAuthorityCheckConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"call_transaction_authority_check\",\r\n            title: \"Call Transaction Authority-Check\",\r\n            shortDescription: `Checks that usages of CALL TRANSACTION contain an authority-check.`,\r\n            extendedInformation: `https://docs.abapopenchecks.org/checks/54/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Security],\r\n            badExample: `CALL TRANSACTION 'FOO'.`,\r\n            goodExample: `CALL TRANSACTION 'FOO' WITH AUTHORITY-CHECK.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Add an authority check to CALL TRANSACTION\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        for (const statNode of file.getStatements()) {\r\n            const statement = statNode.get();\r\n            if (statement instanceof Statements.CallTransaction && !statNode.concatTokensWithoutStringsAndComments().toUpperCase().includes(\"WITH AUTHORITY-CHECK\")) {\r\n                issues.push(issue_1.Issue.atStatement(file, statNode, this.getMessage(), this.getMetadata().key));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.CallTransactionAuthorityCheck = CallTransactionAuthorityCheck;\r\n//# sourceMappingURL=call_transaction_authority_check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/call_transaction_authority_check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/chain_mainly_declarations.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/chain_mainly_declarations.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ChainMainlyDeclarations = exports.ChainMainlyDeclarationsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass ChainMainlyDeclarationsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Allow definition statements to be chained */\r\n        this.definitions = true;\r\n        /** Allow WRITE statements to be chained */\r\n        this.write = true;\r\n        /** Allow MOVE statements to be chained */\r\n        this.move = true;\r\n        /** Allow REFRESH statements to be chained */\r\n        this.refresh = true;\r\n        /** Allow UNASSIGN statements to be chained */\r\n        this.unassign = true;\r\n        /** Allow CLEAR statements to be chained */\r\n        this.clear = true;\r\n        /** Allow HIDE statements to be chained */\r\n        this.hide = true;\r\n        /** Allow FREE statements to be chained */\r\n        this.free = true;\r\n        /** Allow INCLUDE statements to be chained */\r\n        this.include = true;\r\n        /** Allow CHECK statements to be chained */\r\n        this.check = true;\r\n        /** Allow SORT statements to be chained */\r\n        this.sort = true;\r\n    }\r\n}\r\nexports.ChainMainlyDeclarationsConf = ChainMainlyDeclarationsConf;\r\nclass ChainMainlyDeclarations extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ChainMainlyDeclarationsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"chain_mainly_declarations\",\r\n            title: \"Chain mainly declarations\",\r\n            shortDescription: `Chain mainly declarations, allows chaining for the configured statements, reports errors for other statements.`,\r\n            extendedInformation: `\nhttps://docs.abapopenchecks.org/checks/23/\n\nhttps://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abenchained_statements_guidl.htm\n`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Quickfix],\r\n            badExample: `CALL METHOD: bar.`,\r\n            goodExample: `CALL METHOD bar.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const issues = [];\r\n        const structure = file.getStructure();\r\n        if (structure === undefined) {\r\n            return [];\r\n        }\r\n        let previousRow;\r\n        for (const statementNode of structure.findAllStatementNodes()) {\r\n            const colon = statementNode.getColon();\r\n            if (colon === undefined) {\r\n                continue;\r\n            }\r\n            const statement = statementNode.get();\r\n            if (this.conf.definitions === true\r\n                && (statement instanceof Statements.ClassData\r\n                    || statement instanceof Statements.ClassDataBegin\r\n                    || statement instanceof Statements.ClassDataEnd\r\n                    || statement instanceof Statements.Static\r\n                    || statement instanceof Statements.StaticBegin\r\n                    || statement instanceof Statements.StaticEnd\r\n                    || statement instanceof Statements.Local\r\n                    || statement instanceof Statements.Constant\r\n                    || statement instanceof Statements.ConstantBegin\r\n                    || statement instanceof Statements.ConstantEnd\r\n                    || statement instanceof Statements.Controls\r\n                    || statement instanceof Statements.Parameter\r\n                    || statement instanceof Statements.SelectOption\r\n                    || statement instanceof Statements.SelectionScreen\r\n                    || statement instanceof Statements.Aliases\r\n                    || statement instanceof Statements.Tables\r\n                    || statement instanceof Statements.MethodDef\r\n                    || statement instanceof Statements.InterfaceDef\r\n                    || statement instanceof Statements.Type\r\n                    || statement instanceof Statements.TypeBegin\r\n                    || statement instanceof Statements.TypeEnd\r\n                    || statement instanceof Statements.TypeEnumBegin\r\n                    || statement instanceof Statements.TypeEnumEnd\r\n                    || statement instanceof Statements.TypeEnum\r\n                    || statement instanceof Statements.Events\r\n                    || statement instanceof Statements.Ranges\r\n                    || statement instanceof Statements.TypePools\r\n                    || statement instanceof Statements.FieldSymbol\r\n                    || statement instanceof Statements.Data\r\n                    || statement instanceof Statements.DataBegin\r\n                    || statement instanceof Statements.DataEnd)) {\r\n                continue;\r\n            }\r\n            else if (this.conf.write === true && statement instanceof Statements.Write) {\r\n                continue;\r\n            }\r\n            else if (this.conf.move === true && statement instanceof Statements.Move) {\r\n                continue;\r\n            }\r\n            else if (this.conf.refresh === true && statement instanceof Statements.Refresh) {\r\n                continue;\r\n            }\r\n            else if (this.conf.unassign === true && statement instanceof Statements.Unassign) {\r\n                continue;\r\n            }\r\n            else if (this.conf.clear === true && statement instanceof Statements.Clear) {\r\n                continue;\r\n            }\r\n            else if (this.conf.hide === true && statement instanceof Statements.Hide) {\r\n                continue;\r\n            }\r\n            else if (this.conf.free === true && statement instanceof Statements.Free) {\r\n                continue;\r\n            }\r\n            else if (this.conf.include === true && statement instanceof Statements.Include) {\r\n                continue;\r\n            }\r\n            else if (this.conf.check === true && statement instanceof Statements.Check) {\r\n                continue;\r\n            }\r\n            else if (this.conf.sort === true && statement instanceof Statements.Sort) {\r\n                continue;\r\n            }\r\n            let prevFix;\r\n            if (previousRow === colon.getStart().getRow()) {\r\n                prevFix = (_a = issues.pop()) === null || _a === void 0 ? void 0 : _a.getFix();\r\n            }\r\n            const fix = this.getFix(file, statement, statementNode, prevFix);\r\n            const message = \"Chain mainly declarations\";\r\n            issues.push(issue_1.Issue.atToken(file, statementNode.getFirstToken(), message, this.getMetadata().key, this.conf.severity, fix));\r\n            previousRow = statementNode.getColon().getStart().getRow();\r\n        }\r\n        return issues;\r\n    }\r\n    getFix(file, statement, statementNode, prevFix) {\r\n        if (statement instanceof Statements.ClassDataBegin ||\r\n            statement instanceof Statements.ClassDataEnd ||\r\n            statement instanceof Statements.StaticBegin ||\r\n            statement instanceof Statements.StaticEnd ||\r\n            statement instanceof Statements.ConstantBegin ||\r\n            statement instanceof Statements.ConstantEnd ||\r\n            statement instanceof Statements.TypeBegin ||\r\n            statement instanceof Statements.TypeEnd ||\r\n            statement instanceof Statements.TypeEnumBegin ||\r\n            statement instanceof Statements.TypeEnumEnd ||\r\n            statement instanceof Statements.DataBegin ||\r\n            statement instanceof Statements.DataEnd) {\r\n            return undefined;\r\n        }\r\n        let replacement = statementNode.concatTokens();\r\n        replacement = replacement.replace(\",\", \".\");\r\n        let start;\r\n        if (prevFix === undefined) {\r\n            start = statementNode.getStart();\r\n        }\r\n        else {\r\n            start = statementNode.getTokens()[1].getStart();\r\n        }\r\n        let fix = edit_helper_1.EditHelper.replaceRange(file, start, statementNode.getEnd(), replacement);\r\n        if (prevFix !== undefined) {\r\n            fix = edit_helper_1.EditHelper.merge(fix, prevFix);\r\n        }\r\n        return fix;\r\n    }\r\n}\r\nexports.ChainMainlyDeclarations = ChainMainlyDeclarations;\r\n//# sourceMappingURL=chain_mainly_declarations.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/chain_mainly_declarations.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_abstract.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_abstract.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckAbstract = exports.CheckAbstractConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass CheckAbstractConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CheckAbstractConf = CheckAbstractConf;\r\nvar IssueType;\r\n(function (IssueType) {\r\n    /** Abstract method defined in non-abstract class */\r\n    IssueType[IssueType[\"NotAbstractClass\"] = 0] = \"NotAbstractClass\";\r\n    IssueType[IssueType[\"AbstractAndFinal\"] = 1] = \"AbstractAndFinal\";\r\n})(IssueType || (IssueType = {}));\r\nclass CheckAbstract extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new CheckAbstractConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_abstract\",\r\n            title: \"Check abstract methods and classes\",\r\n            shortDescription: `Checks abstract methods and classes:\n- class defined as abstract and final,\n- non-abstract class contains abstract methods`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(issueType, name) {\r\n        switch (issueType) {\r\n            case IssueType.AbstractAndFinal: return \"Classes cannot be ABSTRACT and FINAL: \" + name;\r\n            case IssueType.NotAbstractClass: return \"Abstract methods require abstract classes: \" + name;\r\n            default: return \"\";\r\n        }\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        for (const classDef of file.getInfo().listClassDefinitions()) {\r\n            if (classDef.isAbstract === true) {\r\n                if (classDef.isFinal === true && classDef.isForTesting === false) {\r\n                    issues.push(issue_1.Issue.atIdentifier(classDef.identifier, this.getDescription(IssueType.AbstractAndFinal, classDef.name), this.getMetadata().key, this.conf.severity));\r\n                }\r\n                continue;\r\n            }\r\n            for (const methodDef of classDef.methods) {\r\n                if (methodDef.isAbstract === true) {\r\n                    issues.push(issue_1.Issue.atIdentifier(methodDef.identifier, this.getDescription(IssueType.NotAbstractClass, methodDef.name), this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.CheckAbstract = CheckAbstract;\r\n//# sourceMappingURL=check_abstract.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_abstract.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_comments.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_comments.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckComments = exports.CheckCommentsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass CheckCommentsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Allows the use of end-of-line comments. */\r\n        this.allowEndOfLine = false;\r\n    }\r\n}\r\nexports.CheckCommentsConf = CheckCommentsConf;\r\nvar IssueType;\r\n(function (IssueType) {\r\n    IssueType[IssueType[\"EndOfLine\"] = 0] = \"EndOfLine\";\r\n})(IssueType || (IssueType = {}));\r\nclass CheckComments extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new CheckCommentsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_comments\",\r\n            title: \"Check Comments\",\r\n            shortDescription: `\nVarious checks for comment usage.\n\n* End of line comments. Comments starting with \"#EC\" or \"##\" are ignored`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#put-comments-before-the-statement-they-relate-to`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(issueType) {\r\n        switch (issueType) {\r\n            case IssueType.EndOfLine: return `Do not use end of line comments - move comment to previous row instead`;\r\n            default: return \"\";\r\n        }\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const rows = file.getRawRows();\r\n        if (this.conf.allowEndOfLine === true) {\r\n            return [];\r\n        }\r\n        const commentRows = [];\r\n        for (let i = 0; i < rows.length; i++) {\r\n            const row = rows[i];\r\n            if (row.trim().startsWith(\"*\") || row.trim().startsWith(`\"`)) {\r\n                commentRows.push(i);\r\n            }\r\n        }\r\n        const statements = file.getStatements();\r\n        for (let i = statements.length - 1; i >= 0; i--) {\r\n            const statement = statements[i];\r\n            if (statement.get() instanceof _statement_1.Comment && !commentRows.includes(statement.getStart().getRow() - 1)) {\r\n                if (statement.getFirstToken().getStr().startsWith(`\"#EC`)\r\n                    || statement.getFirstToken().getStr().startsWith(`\"##`)) {\r\n                    continue;\r\n                }\r\n                issues.push(issue_1.Issue.atStatement(file, statement, this.getDescription(IssueType.EndOfLine), this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.CheckComments = CheckComments;\r\n//# sourceMappingURL=check_comments.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_comments.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_ddic.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_ddic.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckDDIC = exports.CheckDDICConf = void 0;\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst basic_1 = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nclass CheckDDICConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CheckDDICConf = CheckDDICConf;\r\nclass CheckDDIC {\r\n    constructor() {\r\n        this.conf = new CheckDDICConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_ddic\",\r\n            title: \"Check DDIC\",\r\n            // eslint-disable-next-line max-len\r\n            shortDescription: `Checks the types of DDIC objects can be resolved, the namespace of the development/errors can be configured in \"errorNamespace\" `,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        let found = undefined;\r\n        if (obj instanceof Objects.DataElement\r\n            || obj instanceof Objects.Domain\r\n            || obj instanceof Objects.Table\r\n            || obj instanceof Objects.View\r\n            || obj instanceof Objects.TableType) {\r\n            found = obj.parseType(this.reg);\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n        return this.check(found, obj);\r\n    }\r\n    check(found, obj) {\r\n        const ret = [];\r\n        if (found instanceof basic_1.UnknownType) {\r\n            const position = new position_1.Position(1, 1);\r\n            const message = \"Unknown/un-resolveable type in \" + obj.getName() + \": \" + found.getError();\r\n            ret.push(issue_1.Issue.atPosition(obj.getFiles()[0], position, message, this.getMetadata().key, this.conf.severity));\r\n        }\r\n        else if (found instanceof basic_1.StructureType) {\r\n            // assumption: no circular types\r\n            for (const c of found.getComponents()) {\r\n                ret.push(...this.check(c.type instanceof _typed_identifier_1.TypedIdentifier ? c.type.getType() : c.type, obj));\r\n            }\r\n        }\r\n        else if (found instanceof basic_1.TableType) {\r\n            ret.push(...this.check(found.getRowType(), obj));\r\n        }\r\n        // todo, reference types?\r\n        return ret;\r\n    }\r\n}\r\nexports.CheckDDIC = CheckDDIC;\r\n//# sourceMappingURL=check_ddic.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_ddic.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_include.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_include.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckInclude = exports.CheckIncludeConf = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst include_graph_1 = __webpack_require__(/*! ../utils/include_graph */ \"./node_modules/@abaplint/core/build/src/utils/include_graph.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass CheckIncludeConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CheckIncludeConf = CheckIncludeConf;\r\nclass CheckInclude {\r\n    constructor() {\r\n        this.conf = new CheckIncludeConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_include\",\r\n            title: \"Check INCLUDEs\",\r\n            shortDescription: `Checks INCLUDE statements`,\r\n            extendedInformation: `\n* Reports unused includes\n* Errors if the includes are not found\n* Error if including a main program`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        this.graph = new include_graph_1.IncludeGraph(this.reg);\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        let ret = [];\r\n        for (const file of obj.getABAPFiles()) {\r\n            ret = ret.concat(this.graph.getIssuesFile(file));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.CheckInclude = CheckInclude;\r\n//# sourceMappingURL=check_include.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_include.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_no_handler_pragma.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_no_handler_pragma.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckNoHandlerPragma = exports.CheckNoHandlerPragmaConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass CheckNoHandlerPragmaConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CheckNoHandlerPragmaConf = CheckNoHandlerPragmaConf;\r\nclass CheckNoHandlerPragma extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new CheckNoHandlerPragmaConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_no_handler_pragma\",\r\n            title: \"Check if NO_HANDLER can be removed\",\r\n            shortDescription: `Checks NO_HANDLER pragmas that can be removed`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `TRY.\n    ...\n  CATCH zcx_abapgit_exception ##NO_HANDLER.\n    RETURN. \" it has a handler\nENDTRY.`,\r\n            goodExample: `TRY.\n    ...\n  CATCH zcx_abapgit_exception.\n    RETURN.\nENDTRY.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let noHandler = false;\r\n        const statements = file.getStatements();\r\n        for (let i = 0; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            if (statement.get() instanceof Statements.EndTry) {\r\n                noHandler = false;\r\n            }\r\n            else if (statement.get() instanceof _statement_1.Comment) {\r\n                continue;\r\n            }\r\n            else if (noHandler === true && !(statement.get() instanceof Statements.Catch)) {\r\n                const message = \"NO_HANDLER pragma or pseudo comment can be removed\";\r\n                const issue = issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n                noHandler = false;\r\n            }\r\n            else {\r\n                noHandler = this.containsNoHandler(statement, statements[i + 1]);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    containsNoHandler(statement, next) {\r\n        for (const t of statement.getPragmas()) {\r\n            if (t.getStr().toUpperCase() === \"##NO_HANDLER\") {\r\n                return true;\r\n            }\r\n        }\r\n        if (next\r\n            && next.get() instanceof _statement_1.Comment\r\n            && next.concatTokens().toUpperCase().includes(\"#EC NO_HANDLER\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.CheckNoHandlerPragma = CheckNoHandlerPragma;\r\n//# sourceMappingURL=check_no_handler_pragma.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_no_handler_pragma.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_subrc.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_subrc.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckSubrc = exports.CheckSubrcConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass CheckSubrcConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.openDataset = true;\r\n        this.authorityCheck = true;\r\n        this.selectSingle = true;\r\n        this.selectTable = true;\r\n        this.updateDatabase = true;\r\n        this.insertDatabase = true;\r\n        this.modifyDatabase = true;\r\n        this.readTable = true;\r\n        this.assign = true;\r\n        this.find = true;\r\n    }\r\n}\r\nexports.CheckSubrcConf = CheckSubrcConf;\r\nclass CheckSubrc extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new CheckSubrcConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_subrc\",\r\n            title: \"Check sy-subrc\",\r\n            shortDescription: `Check sy-subrc`,\r\n            extendedInformation: `Pseudo comment \"#EC CI_SUBRC can be added to suppress findings\n\nIf sy-dbcnt is checked after database statements, it is considered okay.\n\n\"SELECT SINGLE @abap_true FROM \" is considered as an existence check\n\nIf IS ASSIGNED is checked after assigning, it is considered okay.\n\nFollowing FIND statements are considered okay if subrc is not checked,\nFIND with MATCH COUNT\nFIND with MATCH LENGTH\nFIND with RESULTS\nFIND with SUBMATCHES\nFIND with MATCH OFFSET\nFIND with MATCH LINE`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            pseudoComment: \"EC CI_SUBRC\",\r\n            pragma: \"##SUBRC_OK\",\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const statements = file.getStatements();\r\n        const message = \"Check sy-subrc\";\r\n        const config = this.getConfig();\r\n        for (let i = 0; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            // todo: CALL FUNCTION\r\n            if (statement.getPragmas().some(t => t.getStr() === this.getMetadata().pragma)) {\r\n                continue;\r\n            }\r\n            if (config.openDataset === true\r\n                && statement.get() instanceof Statements.OpenDataset\r\n                && this.isChecked(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.authorityCheck === true\r\n                && statement.get() instanceof Statements.AuthorityCheck\r\n                && this.isChecked(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.selectSingle === true\r\n                && statement.get() instanceof Statements.Select\r\n                && statement.concatTokens().toUpperCase().startsWith(\"SELECT SINGLE \")\r\n                && this.isChecked(i, statements) === false\r\n                && this.checksDbcnt(i, statements) === false) {\r\n                const concat = statement.concatTokens().toUpperCase();\r\n                if (concat.startsWith(\"SELECT SINGLE @ABAP_TRUE FROM \")) {\r\n                    continue;\r\n                }\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.selectTable === true\r\n                && statement.get() instanceof Statements.Select\r\n                && statement.concatTokens().toUpperCase().startsWith(\"SELECT SINGLE \") === false\r\n                && this.isChecked(i, statements) === false\r\n                && this.checksDbcnt(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.updateDatabase === true\r\n                && statement.get() instanceof Statements.UpdateDatabase\r\n                && this.isChecked(i, statements) === false\r\n                && this.checksDbcnt(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.insertDatabase === true\r\n                && statement.get() instanceof Statements.InsertDatabase\r\n                && this.isChecked(i, statements) === false\r\n                && this.checksDbcnt(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.modifyDatabase === true\r\n                && statement.get() instanceof Statements.ModifyDatabase\r\n                && this.isChecked(i, statements) === false\r\n                && this.checksDbcnt(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.readTable === true\r\n                && statement.get() instanceof Statements.ReadTable\r\n                && this.isChecked(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.assign === true\r\n                && statement.get() instanceof Statements.Assign\r\n                && this.isChecked(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (config.find === true\r\n                && statement.get() instanceof Statements.Find\r\n                && this.isExemptedFind(statement) === false\r\n                && this.isChecked(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    ////////////////\r\n    isExemptedFind(s) {\r\n        return s.findDirectExpression(Expressions.Target) !== undefined;\r\n    }\r\n    checksDbcnt(index, statements) {\r\n        for (let i = index + 1; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            const concat = statement.concatTokens().toUpperCase();\r\n            if (statement.get() instanceof _statement_1.Comment) {\r\n                continue;\r\n            }\r\n            else if (statement.get() instanceof Statements.EndIf) {\r\n                continue;\r\n            }\r\n            else {\r\n                return concat.includes(\"SY-DBCNT\");\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isChecked(index, statements) {\r\n        var _a, _b;\r\n        let assigned = undefined;\r\n        let assignedn = undefined;\r\n        if (statements[index].get() instanceof Statements.Assign\r\n            || statements[index].get() instanceof Statements.ReadTable) {\r\n            const fs = (_b = (_a = statements[index].findFirstExpression(Expressions.FSTarget)) === null || _a === void 0 ? void 0 : _a.findFirstExpression(Expressions.FieldSymbol)) === null || _b === void 0 ? void 0 : _b.getFirstToken().getStr();\r\n            assigned = (fs === null || fs === void 0 ? void 0 : fs.toUpperCase()) + \" IS ASSIGNED\";\r\n            assignedn = (fs === null || fs === void 0 ? void 0 : fs.toUpperCase()) + \" IS NOT ASSIGNED\";\r\n        }\r\n        for (let i = index + 1; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            const concat = statement.concatTokens().toUpperCase();\r\n            if (statement.get() instanceof _statement_1.Comment) {\r\n                if (concat.includes(\"\" + this.getMetadata().pseudoComment)) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (statement.get() instanceof Statements.EndIf) {\r\n                continue;\r\n            }\r\n            else {\r\n                if (assigned && concat.includes(assigned)) {\r\n                    return true;\r\n                }\r\n                if (assignedn && concat.includes(assignedn)) {\r\n                    return true;\r\n                }\r\n                return concat.includes(\" SY-SUBRC\")\r\n                    || concat.includes(\"CL_ABAP_UNIT_ASSERT=>ASSERT_SUBRC\");\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.CheckSubrc = CheckSubrc;\r\n//# sourceMappingURL=check_subrc.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_subrc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_syntax.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_syntax.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckSyntax = exports.CheckSyntaxConf = void 0;\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass CheckSyntaxConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CheckSyntaxConf = CheckSyntaxConf;\r\nclass CheckSyntax {\r\n    constructor() {\r\n        this.conf = new CheckSyntaxConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_syntax\",\r\n            title: \"Check syntax\",\r\n            shortDescription: `Enables syntax check and variable resolution`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        return new syntax_1.SyntaxLogic(this.reg, obj).run().issues;\r\n    }\r\n}\r\nexports.CheckSyntax = CheckSyntax;\r\n//# sourceMappingURL=check_syntax.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_syntax.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_text_elements.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_text_elements.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckTextElements = exports.CheckTextElementsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst include_graph_1 = __webpack_require__(/*! ../utils/include_graph */ \"./node_modules/@abaplint/core/build/src/utils/include_graph.js\");\r\nclass CheckTextElementsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CheckTextElementsConf = CheckTextElementsConf;\r\nclass CheckTextElements {\r\n    constructor() {\r\n        this.conf = new CheckTextElementsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_text_elements\",\r\n            title: \"Check text elements\",\r\n            shortDescription: `Check text elements exists or matches code`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        this.graph = new include_graph_1.IncludeGraph(this.reg);\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const output = [];\r\n        for (const file of obj.getABAPFiles()) {\r\n            const stru = file.getStructure();\r\n            if (stru === undefined) {\r\n                continue;\r\n            }\r\n            let texts;\r\n            let mainName = undefined;\r\n            const mains = this.graph.listMainForInclude(file.getFilename());\r\n            if (mains.length === 1) {\r\n                // todo, this only checks the first main\r\n                mainName = mains[0];\r\n                const main1 = this.reg.findObjectForFile(this.reg.getFileByName(mains[0]));\r\n                texts = main1.getTexts();\r\n            }\r\n            else {\r\n                texts = obj.getTexts();\r\n            }\r\n            const expressions = stru.findAllExpressionsMulti([Expressions.TextElement, Expressions.TextElementString]);\r\n            for (const e of expressions) {\r\n                if (e.get() instanceof Expressions.TextElement) {\r\n                    const token = e.findFirstExpression(Expressions.TextElementKey).getFirstToken();\r\n                    const key = token.getStr().toUpperCase();\r\n                    if (texts[key] === undefined) {\r\n                        const message = `Text element \"${key}\" not found` + (mainName ? \", \" + mainName : \"\");\r\n                        output.push(issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity));\r\n                    }\r\n                }\r\n                else {\r\n                    // its a Expressions.TextElementString\r\n                    const token = e.findFirstExpression(Expressions.TextElementKey).getFirstToken();\r\n                    const code = e.getFirstToken().getStr();\r\n                    const key = token.getStr().toUpperCase();\r\n                    let found = texts[key];\r\n                    if (found && code.startsWith(\"'\")) {\r\n                        found = found.replace(/'/g, \"''\");\r\n                    }\r\n                    if (found === undefined) {\r\n                        const message = `Text element \"${key}\" not found` + (mainName ? \", \" + mainName : \"\");\r\n                        output.push(issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity));\r\n                    }\r\n                    else if (code !== \"'\" + found + \"'\"\r\n                        && code !== \"`\" + found + \"`\") {\r\n                        output.push(issue_1.Issue.atToken(file, token, \"Text does not match text element\", this.getMetadata().key, this.conf.severity));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.CheckTextElements = CheckTextElements;\r\n//# sourceMappingURL=check_text_elements.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_text_elements.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/check_transformation_exists.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/check_transformation_exists.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CheckTransformationExists = exports.CheckTransformationExistsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst statements_1 = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass CheckTransformationExistsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CheckTransformationExistsConf = CheckTransformationExistsConf;\r\nclass CheckTransformationExists extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new CheckTransformationExistsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"check_transformation_exists\",\r\n            title: \"Check transformation exists\",\r\n            shortDescription: `Checks that used XSLT transformations exist.`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getDescription(name) {\r\n        return \"Transformation \\\"\" + name + \"\\\" not found\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const output = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            if (s.get() instanceof statements_1.CallTransformation) {\r\n                const name = s.findFirstExpression(expressions_1.NamespaceSimpleName);\r\n                if (name === undefined) {\r\n                    continue;\r\n                }\r\n                const tok = name.getFirstToken();\r\n                if (this.reg.getObject(\"XSLT\", tok.getStr()) === undefined) {\r\n                    const issue = issue_1.Issue.atToken(file, tok, this.getDescription(tok.getStr()), this.getMetadata().key);\r\n                    output.push(issue);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.CheckTransformationExists = CheckTransformationExists;\r\n//# sourceMappingURL=check_transformation_exists.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/check_transformation_exists.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/class_attribute_names.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/class_attribute_names.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ClassAttributeNames = exports.ClassAttributeNamesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _naming_rule_config_1 = __webpack_require__(/*! ./_naming_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js\");\r\nconst name_validator_1 = __webpack_require__(/*! ../utils/name_validator */ \"./node_modules/@abaplint/core/build/src/utils/name_validator.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _abap_file_information_1 = __webpack_require__(/*! ../abap/4_file_information/_abap_file_information */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass ClassAttributeNamesConf extends _naming_rule_config_1.NamingRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Ignore global exception classes */\r\n        this.ignoreExceptions = true;\r\n        /** Ignore local classes */\r\n        this.ignoreLocal = true;\r\n        /** Ignore interfaces */\r\n        this.ignoreInterfaces = false;\r\n        /** The pattern for static variable names */\r\n        this.statics = \"^G._.+$\";\r\n        /** The pattern for instance variable names */\r\n        this.instance = \"^M._.+$\";\r\n        /** The pattern for constant variable names */\r\n        this.constants = \"\";\r\n    }\r\n}\r\nexports.ClassAttributeNamesConf = ClassAttributeNamesConf;\r\nclass ClassAttributeNames extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ClassAttributeNamesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"class_attribute_names\",\r\n            title: \"Class attributes naming\",\r\n            shortDescription: `Allows you to enforce a pattern, such as a prefix, for class variable names.`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(actual, expected) {\r\n        return this.conf.patternKind === \"required\" ?\r\n            \"Class attribute name \\\"\" + actual + \"\\\" does not match pattern \" + expected :\r\n            \"Class attribute name \\\"\" + actual + \"\\\" must not match pattern \" + expected;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        let issues = [];\r\n        if (this.conf.patternKind === undefined) {\r\n            this.conf.patternKind = \"required\";\r\n        }\r\n        let attributes = [];\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const classDef of file.getInfo().listClassDefinitions()) {\r\n            if ((classDef.isLocal && this.conf.ignoreLocal)\r\n                || (ddic.isException(classDef, obj) && this.conf.ignoreExceptions)) {\r\n                continue;\r\n            }\r\n            attributes = attributes.concat(classDef.attributes);\r\n        }\r\n        if (this.conf.ignoreInterfaces === false) {\r\n            for (const intfDef of file.getInfo().listInterfaceDefinitions()) {\r\n                if (intfDef.isLocal && this.conf.ignoreLocal) {\r\n                    continue;\r\n                }\r\n                attributes = attributes.concat(intfDef.attributes);\r\n            }\r\n        }\r\n        issues = this.checkAttributes(attributes);\r\n        return issues;\r\n    }\r\n    checkAttributes(attr) {\r\n        if (attr === undefined) {\r\n            return [];\r\n        }\r\n        let ret = [];\r\n        for (const a of attr) {\r\n            switch (a.level) {\r\n                case _abap_file_information_1.AttributeLevel.Instance:\r\n                    ret = ret.concat(this.checkName(a.identifier, this.conf.instance));\r\n                    break;\r\n                case _abap_file_information_1.AttributeLevel.Static:\r\n                    ret = ret.concat(this.checkName(a.identifier, this.conf.statics));\r\n                    break;\r\n                case _abap_file_information_1.AttributeLevel.Constant:\r\n                    ret = ret.concat(this.checkName(a.identifier, this.conf.constants));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    checkName(attr, expected) {\r\n        const ret = [];\r\n        const regex = new RegExp(expected, \"i\");\r\n        const name = attr.getName();\r\n        if (name_validator_1.NameValidator.violatesRule(name, regex, this.conf)) {\r\n            const issue = issue_1.Issue.atIdentifier(attr, this.getDescription(name, expected), this.getMetadata().key, this.conf.severity);\r\n            ret.push(issue);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.ClassAttributeNames = ClassAttributeNames;\r\n//# sourceMappingURL=class_attribute_names.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/class_attribute_names.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/cloud_types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/cloud_types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CloudTypes = exports.CloudTypesConf = void 0;\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass CloudTypesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.CloudTypesConf = CloudTypesConf;\r\nclass CloudTypes {\r\n    constructor() {\r\n        this.conf = new CloudTypesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"cloud_types\",\r\n            title: \"Check cloud types\",\r\n            shortDescription: `Checks that the package does not contain any object types unsupported in cloud ABAP.`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(objectType) {\r\n        return \"Object type \" + objectType + \" not supported in cloud\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (this.reg.getConfig().getVersion() !== version_1.Version.Cloud\r\n            || obj instanceof Objects.Class\r\n            || obj instanceof Objects.Interface\r\n            || obj instanceof Objects.MessageClass\r\n            || obj instanceof Objects.Package\r\n            || obj instanceof Objects.Table\r\n            || obj instanceof Objects.TableType\r\n            || obj instanceof Objects.DataDefinition\r\n            || obj instanceof Objects.DataControl\r\n            || obj instanceof Objects.LockObject\r\n            || obj instanceof Objects.Transformation\r\n            || obj instanceof Objects.FunctionGroup\r\n            || obj instanceof Objects.DataElement\r\n            || obj instanceof Objects.Domain) {\r\n            return [];\r\n        }\r\n        const position = new position_1.Position(1, 1);\r\n        const issue = issue_1.Issue.atPosition(obj.getFiles()[0], position, this.getDescription(obj.getType()), this.getMetadata().key, this.conf.severity);\r\n        return [issue];\r\n    }\r\n}\r\nexports.CloudTypes = CloudTypes;\r\n//# sourceMappingURL=cloud_types.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/cloud_types.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/colon_missing_space.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/colon_missing_space.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ColonMissingSpace = exports.ColonMissingSpaceConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass ColonMissingSpaceConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ColonMissingSpaceConf = ColonMissingSpaceConf;\r\nclass ColonMissingSpace extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ColonMissingSpaceConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"colon_missing_space\",\r\n            title: \"Colon missing space\",\r\n            shortDescription: `Checks for missing spaces after colons in chained statements.`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Missing space after the colon\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const tokens = file.getTokens();\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            const token = tokens[i];\r\n            if (token.getStr() === \":\"\r\n                && tokens[i + 1] !== undefined\r\n                && tokens[i + 1].getRow() === token.getRow()\r\n                && tokens[i + 1].getCol() === token.getCol() + 1) {\r\n                const start = token.getStart();\r\n                const end = new position_1.Position(start.getRow(), start.getCol() + 1);\r\n                const fix = edit_helper_1.EditHelper.insertAt(file, end, \" \");\r\n                const issue = issue_1.Issue.atRange(file, start, end, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.ColonMissingSpace = ColonMissingSpace;\r\n//# sourceMappingURL=colon_missing_space.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/colon_missing_space.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/commented_code.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/commented_code.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CommentedCode = exports.CommentedCodeConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst statements_1 = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst abap_parser_1 = __webpack_require__(/*! ../abap/abap_parser */ \"./node_modules/@abaplint/core/build/src/abap/abap_parser.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst memory_file_1 = __webpack_require__(/*! ../files/memory_file */ \"./node_modules/@abaplint/core/build/src/files/memory_file.js\");\r\nclass CommentedCodeConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Allow INCLUDEs in function groups */\r\n        this.allowIncludeInFugr = true;\r\n    }\r\n}\r\nexports.CommentedCodeConf = CommentedCodeConf;\r\nclass CommentedCode extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new CommentedCodeConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"commented_code\",\r\n            title: \"Find commented code\",\r\n            shortDescription: `Detects usage of commented out code.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#delete-code-instead-of-commenting-it\nhttps://docs.abapopenchecks.org/checks/14/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Commented code\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        let issues = [];\r\n        const rows = file.getRawRows();\r\n        let code = \"\";\r\n        let posEnd = undefined;\r\n        let posStart = undefined;\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (this.isCommentLine(rows[i])) {\r\n                if (code === \"\") {\r\n                    posStart = new position_1.Position(i + 1, 1);\r\n                }\r\n                code = code + rows[i].trim().substr(1) + \"\\n\";\r\n                posEnd = new position_1.Position(i + 1, rows[i].length + 1);\r\n            }\r\n            else if (code !== \"\" && posStart && posEnd) {\r\n                issues = issues.concat(this.check(code.trim(), file, posStart, posEnd, obj));\r\n                code = \"\";\r\n            }\r\n        }\r\n        if (posStart && posEnd) {\r\n            issues = issues.concat(this.check(code.trim(), file, posStart, posEnd, obj));\r\n        }\r\n        return issues;\r\n    }\r\n    check(code, file, posStart, posEnd, obj) {\r\n        // assumption: code must end with \".\" in order to be valid ABAP\r\n        if (code === \"\" || code.charAt(code.length - 1) !== \".\") {\r\n            return [];\r\n        }\r\n        const commented = new memory_file_1.MemoryFile(\"_foobar.prog.abap\", code);\r\n        const abapFile = new abap_parser_1.ABAPParser().parse([commented]).output[0];\r\n        const statementNodes = abapFile.getStatements();\r\n        if (statementNodes.length === 0) {\r\n            return [];\r\n        }\r\n        let containsStatement = false;\r\n        for (const statementNode of statementNodes) {\r\n            const statement = statementNode.get();\r\n            if (this.getConfig().allowIncludeInFugr === true\r\n                && obj instanceof objects_1.FunctionGroup\r\n                && statement instanceof statements_1.Include) {\r\n                continue;\r\n            }\r\n            if (!(statement instanceof _statement_1.Unknown\r\n                || statement instanceof _statement_1.Empty\r\n                || statement instanceof _statement_1.Comment)) {\r\n                containsStatement = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!containsStatement) {\r\n            return [];\r\n        }\r\n        const fix = edit_helper_1.EditHelper.deleteRange(file, posStart, posEnd);\r\n        const issue = issue_1.Issue.atRange(file, posStart, posEnd, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n        return [issue];\r\n    }\r\n    isCommentLine(text) {\r\n        return (text.substr(0, 1) === \"*\")\r\n            || (text.trim().substr(0, 1) === \"\\\"\" && text.trim().substr(1, 1) !== \"!\");\r\n    }\r\n}\r\nexports.CommentedCode = CommentedCode;\r\n//# sourceMappingURL=commented_code.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/commented_code.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/constructor_visibility_public.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/constructor_visibility_public.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConstructorVisibilityPublic = exports.ConstructorVisibilityPublicConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../abap/4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nclass ConstructorVisibilityPublicConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ConstructorVisibilityPublicConf = ConstructorVisibilityPublicConf;\r\nclass ConstructorVisibilityPublic {\r\n    constructor() {\r\n        this.conf = new ConstructorVisibilityPublicConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"constructor_visibility_public\",\r\n            title: \"Check constructor visibility is public\",\r\n            shortDescription: `Constructor must be placed in the public section, even if the class is not CREATE PUBLIC.`,\r\n            extendedInformation: `\nThis only applies to global classes.\n\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#if-your-global-class-is-create-private-leave-the-constructor-public\nhttps://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abeninstance_constructor_guidl.htm`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Constructor visibility should be public\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        const issues = [];\r\n        if (!(obj instanceof objects_1.Class)) {\r\n            return [];\r\n        }\r\n        const def = obj.getClassDefinition();\r\n        if (def === undefined) {\r\n            return [];\r\n        }\r\n        for (const method of def.methods) {\r\n            if (method.name.toUpperCase() === \"CONSTRUCTOR\"\r\n                && method.visibility !== visibility_1.Visibility.Public) {\r\n                const issue = issue_1.Issue.atIdentifier(method.identifier, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.ConstructorVisibilityPublic = ConstructorVisibilityPublic;\r\n//# sourceMappingURL=constructor_visibility_public.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/constructor_visibility_public.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/contains_tab.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/contains_tab.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ContainsTab = exports.ContainsTabConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass ContainsTabConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** quick fix replace with number of spaces */\r\n        this.spaces = 1;\r\n    }\r\n}\r\nexports.ContainsTabConf = ContainsTabConf;\r\nclass ContainsTab extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ContainsTabConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"contains_tab\",\r\n            title: \"Code contains tab\",\r\n            shortDescription: `Checks for usage of tabs (enable to enforce spaces)`,\r\n            extendedInformation: `\nhttps://docs.abapopenchecks.org/checks/09/\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#indent-and-snap-to-tab`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Code should not contain tabs\";\r\n    }\r\n    getConfig() {\r\n        if (this.conf.spaces === undefined) {\r\n            this.conf.spaces = 1;\r\n        }\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const lines = file.getRaw().split(\"\\n\");\r\n        lines.forEach((_, i) => {\r\n            const tabCol = lines[i].indexOf(\"\\t\");\r\n            if (tabCol >= 0) {\r\n                let tabAmount = 1;\r\n                while (lines[i].indexOf(\"\\t\", tabCol + tabAmount - 1) >= 0) {\r\n                    tabAmount++;\r\n                }\r\n                issues.push(this.createIssue(i, tabCol, tabAmount, file));\r\n            }\r\n        });\r\n        return issues;\r\n    }\r\n    createIssue(line, tabCol, tabAmount, file) {\r\n        const tabStartPos = new position_1.Position(line + 1, tabCol + 1);\r\n        const tabEndPos = new position_1.Position(line + 1, tabCol + tabAmount);\r\n        const fix = edit_helper_1.EditHelper.replaceRange(file, tabStartPos, tabEndPos, \" \".repeat(this.getConfig().spaces));\r\n        return issue_1.Issue.atRange(file, tabStartPos, tabEndPos, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n    }\r\n}\r\nexports.ContainsTab = ContainsTab;\r\n//# sourceMappingURL=contains_tab.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/contains_tab.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/cyclomatic_complexity.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/cyclomatic_complexity.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CyclomaticComplexity = exports.CyclomaticComplexityConf = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst cyclomatic_complexity_stats_1 = __webpack_require__(/*! ../utils/cyclomatic_complexity_stats */ \"./node_modules/@abaplint/core/build/src/utils/cyclomatic_complexity_stats.js\");\r\nclass CyclomaticComplexityConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.max = 20;\r\n    }\r\n}\r\nexports.CyclomaticComplexityConf = CyclomaticComplexityConf;\r\nclass CyclomaticComplexity {\r\n    constructor() {\r\n        this.conf = new CyclomaticComplexityConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"cyclomatic_complexity\",\r\n            title: \"Cyclomatic Complexity\",\r\n            shortDescription: `Cyclomatic complexity, only reported for methods`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        const issues = [];\r\n        const stats = cyclomatic_complexity_stats_1.CyclomaticComplexityStats.run(obj);\r\n        for (const s of stats) {\r\n            if (s.count > this.conf.max) {\r\n                const message = \"Max cyclomatic complexity reached, \" + s.count + \", \" + s.name;\r\n                const issue = issue_1.Issue.atPosition(s.file, s.pos, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.CyclomaticComplexity = CyclomaticComplexity;\r\n//# sourceMappingURL=cyclomatic_complexity.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/cyclomatic_complexity.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/dangerous_statement.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/dangerous_statement.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DangerousStatement = exports.DangerousStatementConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass DangerousStatementConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Detects execSQL (dynamic SQL) */\r\n        this.execSQL = true;\r\n        /** Detects kernel calls */\r\n        this.kernelCall = true;\r\n        /** Detects SYSTEM-CALL */\r\n        this.systemCall = true;\r\n        /** Detects INSERT REPORT */\r\n        this.insertReport = true;\r\n        this.generateDynpro = true;\r\n        this.generateReport = true;\r\n        this.generateSubroutine = true;\r\n        this.deleteReport = true;\r\n        this.deleteTextpool = true;\r\n        this.deleteDynpro = true;\r\n        this.importDynpro = true;\r\n    }\r\n}\r\nexports.DangerousStatementConf = DangerousStatementConf;\r\nclass DangerousStatement extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new DangerousStatementConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"dangerous_statement\",\r\n            title: \"Dangerous statement\",\r\n            shortDescription: `Detects potentially dangerous statements`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Security],\r\n        };\r\n    }\r\n    getDescription(statement) {\r\n        return \"Potential dangerous statement \" + statement;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        for (const statementNode of file.getStatements()) {\r\n            const statement = statementNode.get();\r\n            let message = undefined;\r\n            if (this.conf.execSQL && statement instanceof Statements.ExecSQL) {\r\n                message = \"EXEC SQL\";\r\n            }\r\n            else if (this.conf.kernelCall && statement instanceof Statements.CallKernel) {\r\n                message = \"KERNEL CALL\";\r\n            }\r\n            else if (this.conf.systemCall && statement instanceof Statements.SystemCall) {\r\n                message = \"SYSTEM-CALL\";\r\n            }\r\n            else if (this.conf.insertReport && statement instanceof Statements.InsertReport) {\r\n                message = \"INSERT REPORT\";\r\n            }\r\n            else if (this.conf.generateDynpro && statement instanceof Statements.GenerateDynpro) {\r\n                message = \"GENERATE DYNPRO\";\r\n            }\r\n            else if (this.conf.generateReport && statement instanceof Statements.GenerateReport) {\r\n                message = \"GENERATE REPORT\";\r\n            }\r\n            else if (this.conf.generateSubroutine && statement instanceof Statements.GenerateSubroutine) {\r\n                message = \"GENERATE SUBROUTINE\";\r\n            }\r\n            else if (this.conf.deleteReport && statement instanceof Statements.DeleteReport) {\r\n                message = \"DELETE REPORT\";\r\n            }\r\n            else if (this.conf.deleteTextpool && statement instanceof Statements.DeleteTextpool) {\r\n                message = \"DELETE TEXTPOOL\";\r\n            }\r\n            else if (this.conf.deleteDynpro && statement instanceof Statements.DeleteDynpro) {\r\n                message = \"DELETE DYNPRO\";\r\n            }\r\n            else if (this.conf.importDynpro && statement instanceof Statements.ImportDynpro) {\r\n                message = \"IMPORT DYNPRO\";\r\n            }\r\n            if (message) {\r\n                issues.push(issue_1.Issue.atStatement(file, statementNode, this.getDescription(message), this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.DangerousStatement = DangerousStatement;\r\n//# sourceMappingURL=dangerous_statement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/dangerous_statement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/db_operation_in_loop.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/db_operation_in_loop.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DbOperationInLoop = exports.DbOperationInLoopConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass DbOperationInLoopConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.DbOperationInLoopConf = DbOperationInLoopConf;\r\nclass DbOperationInLoop extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new DbOperationInLoopConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"db_operation_in_loop\",\r\n            title: \"Database operation in loop\",\r\n            shortDescription: `Database operation in LOOP/DO/WHILE`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Performance],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return issues;\r\n        }\r\n        const loops = stru.findAllStructures(Structures.Loop);\r\n        loops.push(...stru.findAllStructures(Structures.Do));\r\n        loops.push(...stru.findAllStructures(Structures.While));\r\n        for (const l of loops) {\r\n            let found = undefined;\r\n            if (found === undefined) {\r\n                found = l.findFirstStatement(Statements.Select);\r\n            }\r\n            if (found === undefined) {\r\n                found = l.findFirstStatement(Statements.SelectLoop);\r\n            }\r\n            if (found === undefined) {\r\n                found = l.findFirstStatement(Statements.InsertDatabase);\r\n            }\r\n            if (found === undefined) {\r\n                found = l.findFirstStatement(Statements.DeleteDatabase);\r\n            }\r\n            if (found === undefined) {\r\n                found = l.findFirstStatement(Statements.UpdateDatabase);\r\n            }\r\n            if (found === undefined) {\r\n                found = l.findFirstStatement(Statements.ModifyDatabase);\r\n            }\r\n            if (found) {\r\n                const message = \"Database operation in loop\";\r\n                issues.push(issue_1.Issue.atStatement(file, found, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.DbOperationInLoop = DbOperationInLoop;\r\n//# sourceMappingURL=db_operation_in_loop.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/db_operation_in_loop.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/definitions_top.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/definitions_top.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DefinitionsTop = exports.DefinitionsTopConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nclass DefinitionsTopConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.DefinitionsTopConf = DefinitionsTopConf;\r\n// todo, use enum instead?\r\n// const ANY = 1;\r\nconst DEFINITION = 2;\r\nconst AFTER = 3;\r\nconst IGNORE = 4;\r\nclass DefinitionsTop extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new DefinitionsTopConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"definitions_top\",\r\n            title: \"Place definitions in top of routine\",\r\n            shortDescription: `Checks that definitions are placed at the beginning of METHODs and FORMs.`,\r\n            extendedInformation: `https://docs.abapopenchecks.org/checks/17/`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Quickfix],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Reorder definitions to top of routine\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const structure = file.getStructure();\r\n        if (structure === undefined) {\r\n            return [];\r\n        }\r\n        // one fix per file\r\n        this.fixed = false;\r\n        const routines = structure.findAllStructures(Structures.Form).concat(structure.findAllStructures(Structures.Method));\r\n        for (const r of routines) {\r\n            this.mode = DEFINITION;\r\n            this.moveTo = r.getFirstStatement();\r\n            const found = this.walk(r, file);\r\n            if (found) {\r\n                issues.push(found);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    //////////////////\r\n    walk(r, file) {\r\n        for (const c of r.getChildren()) {\r\n            if (c instanceof nodes_1.StatementNode && c.get() instanceof _statement_1.Comment) {\r\n                continue;\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && c.get() instanceof Statements.Form) {\r\n                continue;\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && c.get() instanceof Statements.MethodImplementation) {\r\n                continue;\r\n            }\r\n            if (c instanceof nodes_1.StructureNode\r\n                && (c.get() instanceof Structures.Data\r\n                    || c.get() instanceof Structures.Types\r\n                    || c.get() instanceof Structures.Constants\r\n                    || c.get() instanceof Structures.Statics)) {\r\n                if (this.mode === AFTER) {\r\n                    // no quick fixes for these, its difficult?\r\n                    return issue_1.Issue.atStatement(file, c.getFirstStatement(), this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode\r\n                && (c.get() instanceof Statements.Data\r\n                    || c.get() instanceof Statements.Type\r\n                    || c.get() instanceof Statements.Constant\r\n                    || c.get() instanceof Statements.Static\r\n                    || c.get() instanceof Statements.FieldSymbol)) {\r\n                if (this.mode === AFTER) {\r\n                    // only one fix per file, as it reorders a lot\r\n                    let fix = undefined;\r\n                    if (this.fixed === false && this.moveTo) {\r\n                        fix = this.buildFix(file, c, this.moveTo);\r\n                        this.fixed = true;\r\n                    }\r\n                    return issue_1.Issue.atStatement(file, c, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                }\r\n                else {\r\n                    this.moveTo = c;\r\n                }\r\n            }\r\n            else if (c instanceof nodes_1.StructureNode && c.get() instanceof Structures.Define) {\r\n                this.mode = IGNORE;\r\n                return undefined;\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && c.get() instanceof _statement_1.Unknown) {\r\n                this.mode = IGNORE;\r\n                return undefined;\r\n            }\r\n            else if (c instanceof nodes_1.StatementNode && this.mode === DEFINITION) {\r\n                this.mode = AFTER;\r\n            }\r\n            else if (c instanceof nodes_1.StructureNode) {\r\n                const found = this.walk(c, file);\r\n                if (found) {\r\n                    return found;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    buildFix(file, statement, start) {\r\n        const concat = statement.concatTokens();\r\n        const fix1 = edit_helper_1.EditHelper.deleteStatement(file, statement);\r\n        const indentation = \" \".repeat(statement.getFirstToken().getCol() - 1);\r\n        const fix2 = edit_helper_1.EditHelper.insertAt(file, start.getEnd(), \"\\n\" + indentation + concat);\r\n        return edit_helper_1.EditHelper.merge(fix1, fix2);\r\n    }\r\n}\r\nexports.DefinitionsTop = DefinitionsTop;\r\n//# sourceMappingURL=definitions_top.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/definitions_top.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/description_empty.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/description_empty.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DescriptionEmpty = exports.DescriptionEmptyConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\n// standard class CL_OO_CLASS assumes classes have descriptions\r\nclass DescriptionEmptyConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.DescriptionEmptyConf = DescriptionEmptyConf;\r\nclass DescriptionEmpty {\r\n    constructor() {\r\n        this.conf = new DescriptionEmptyConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"description_empty\",\r\n            title: \"Description in class must exist\",\r\n            shortDescription: `Ensures descriptions in class metadata exist.`,\r\n        };\r\n    }\r\n    getDescription(name) {\r\n        return \"Description empty in \" + name;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        const issues = [];\r\n        if (obj instanceof objects_1.Class || obj instanceof objects_1.Interface) {\r\n            const description = obj.getDescription();\r\n            let message = undefined;\r\n            if (description === \"\") {\r\n                message = this.getDescription(obj.getName());\r\n            }\r\n            else if (description === undefined) {\r\n                message = this.getDescription(obj.getName() + \", class XML file not found\");\r\n            }\r\n            if (message) {\r\n                const position = new position_1.Position(1, 1);\r\n                const issue = issue_1.Issue.atPosition(obj.getFiles()[0], position, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.DescriptionEmpty = DescriptionEmpty;\r\n//# sourceMappingURL=description_empty.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/description_empty.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/double_space.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/double_space.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DoubleSpace = exports.DoubleSpaceConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst statements_1 = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass DoubleSpaceConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Check for double space after keywords */\r\n        this.keywords = true;\r\n        /** Check for double space after start parenthesis */\r\n        this.startParen = true;\r\n        /** Check for double space before end parenthesis */\r\n        this.endParen = true;\r\n        /** Check for double space after colon/chaining operator */\r\n        this.afterColon = true;\r\n    }\r\n}\r\nexports.DoubleSpaceConf = DoubleSpaceConf;\r\nclass DoubleSpace extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new DoubleSpaceConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"double_space\",\r\n            title: \"Double space\",\r\n            shortDescription: `Checks that only a single space follows certain common statements.`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            badExample: `DATA  foo TYPE i.`,\r\n            goodExample: `DATA foo TYPE i.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Remove double space\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        let issues = [];\r\n        for (const s of file.getStatements()) {\r\n            if (this.conf.keywords === true\r\n                && !(s.get() instanceof _statement_1.Unknown)\r\n                && !(s.get() instanceof statements_1.MethodDef)\r\n                && !(s.get() instanceof _statement_1.MacroCall)\r\n                && !(s.get() instanceof _statement_1.MacroContent)) {\r\n                issues = issues.concat(this.checkKeywords(s, file));\r\n            }\r\n            issues = issues.concat(this.checkParen(s, file));\r\n        }\r\n        issues = issues.concat(this.checkAfterColon(file));\r\n        return issues;\r\n    }\r\n    checkAfterColon(file) {\r\n        const issues = [];\r\n        let cPosition = undefined;\r\n        if (this.conf.afterColon !== true) {\r\n            return [];\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            const colon = s.getColon();\r\n            if (colon === undefined) {\r\n                continue;\r\n            }\r\n            else if (cPosition !== undefined && cPosition.getCol() === colon.getCol()) {\r\n                continue;\r\n            }\r\n            cPosition = colon.getStart();\r\n            for (const t of s.getTokens()) {\r\n                if (t.getRow() !== cPosition.getRow()) {\r\n                    return [];\r\n                }\r\n                else if (t.getCol() < cPosition.getCol()) {\r\n                    continue;\r\n                }\r\n                if (t.getCol() > cPosition.getCol() + 2) {\r\n                    const issueStartPos = new position_1.Position(cPosition.getRow(), cPosition.getCol() + 2);\r\n                    const issueEndPos = new position_1.Position(t.getRow(), t.getCol());\r\n                    const fix = edit_helper_1.EditHelper.deleteRange(file, issueStartPos, issueEndPos);\r\n                    issues.push(issue_1.Issue.atRange(file, issueStartPos, issueEndPos, this.getMessage(), this.getMetadata().key, this.conf.severity, fix));\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    checkParen(s, file) {\r\n        const issues = [];\r\n        let prev = undefined;\r\n        for (const t of s.getTokens()) {\r\n            if (prev === undefined) {\r\n                prev = t;\r\n                continue;\r\n            }\r\n            if (this.getConfig().startParen === true\r\n                && prev.getRow() === t.getRow()\r\n                && prev instanceof tokens_1.ParenLeftW\r\n                && !(t instanceof tokens_1.Comment)\r\n                && prev.getEnd().getCol() + 1 < t.getCol()) {\r\n                const issueStartPos = new position_1.Position(prev.getRow(), prev.getCol() + 2);\r\n                const issueEndPos = new position_1.Position(t.getRow(), t.getCol());\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, issueStartPos, issueEndPos);\r\n                issues.push(issue_1.Issue.atRange(file, issueStartPos, issueEndPos, this.getMessage(), this.getMetadata().key, this.conf.severity, fix));\r\n            }\r\n            if (this.getConfig().endParen === true\r\n                && prev.getRow() === t.getRow()\r\n                && !(prev instanceof tokens_1.ParenLeftW)\r\n                && (t instanceof tokens_1.WParenRightW || t instanceof tokens_1.WParenRight)\r\n                && prev.getEnd().getCol() + 1 < t.getCol()) {\r\n                const issueStartPos = new position_1.Position(prev.getEnd().getRow(), prev.getEnd().getCol() + 1);\r\n                const issueEndPos = new position_1.Position(t.getRow(), t.getCol());\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, issueStartPos, issueEndPos);\r\n                issues.push(issue_1.Issue.atRange(file, issueStartPos, issueEndPos, this.getMessage(), this.getMetadata().key, this.conf.severity, fix));\r\n            }\r\n            prev = t;\r\n        }\r\n        return issues;\r\n    }\r\n    checkKeywords(s, file) {\r\n        const issues = [];\r\n        let prev = undefined;\r\n        if (s.getColon() !== undefined || s.getPragmas().length > 0) {\r\n            // for chained statments just give up\r\n            return [];\r\n        }\r\n        for (const n of s.getTokenNodes()) {\r\n            if (prev === undefined) {\r\n                prev = n;\r\n                continue;\r\n            }\r\n            const upper = prev.get().getStr().toUpperCase();\r\n            if (prev instanceof nodes_1.TokenNodeRegex\r\n                || upper === \"(\"\r\n                || upper === \"CHANGING\"\r\n                || upper === \"EXPORTING\"\r\n                || upper === \"OTHERS\") {\r\n                // not a keyword, continue\r\n                prev = n;\r\n                continue;\r\n            }\r\n            if (prev.get().getStart().getRow() === n.get().getStart().getRow()\r\n                && prev.get().getEnd().getCol() + 1 < n.get().getStart().getCol()) {\r\n                const issueStartPos = new position_1.Position(prev.get().getEnd().getRow(), prev.get().getEnd().getCol() + 1);\r\n                const issueEndPos = new position_1.Position(n.get().getRow(), n.get().getCol());\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, issueStartPos, issueEndPos);\r\n                issues.push(issue_1.Issue.atRange(file, issueStartPos, issueEndPos, this.getMessage(), this.getMetadata().key, this.conf.severity, fix));\r\n                return issues;\r\n            }\r\n            prev = n;\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.DoubleSpace = DoubleSpace;\r\n//# sourceMappingURL=double_space.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/double_space.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/downport.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/downport.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Downport = exports.DownportConf = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst registry_1 = __webpack_require__(/*! ../registry */ \"./node_modules/@abaplint/core/build/src/registry.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst basic_1 = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass DownportConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.DownportConf = DownportConf;\r\nclass Downport {\r\n    constructor() {\r\n        this.conf = new DownportConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"downport\",\r\n            title: \"Downport statement\",\r\n            shortDescription: `Experimental downport functionality`,\r\n            extendedInformation: `Much like the 'commented_code' rule this rule loops through unknown statements and tries parsing with\na higher level language version. If successful, various rules are applied to downport the statement.\nTarget downport version is always v702, thus rule is only enabled if target version is v702.\n\nCurrent rules:\n* NEW transformed to CREATE OBJECT, opposite of https://rules.abaplint.org/use_new/\n* DATA() definitions are outlined, opposite of https://rules.abaplint.org/prefer_inline/\n* FIELD-SYMBOL() definitions are outlined\n* CONV is outlined\n* EMPTY KEY is changed to DEFAULT KEY, opposite of DEFAULT KEY in https://rules.abaplint.org/avoid_use/\n* CAST changed to ?=\n* LOOP AT method_call( ) is outlined\n* VALUE # with structure fields\n\nOnly one transformation is applied to a statement at a time, so multiple steps might be required to do the full downport.`,\r\n            tags: [_irule_1.RuleTag.Experimental, _irule_1.RuleTag.Downport, _irule_1.RuleTag.Quickfix],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.lowReg = reg;\r\n        return this;\r\n    }\r\n    run(lowObj) {\r\n        const ret = [];\r\n        this.counter = 1;\r\n        if (this.lowReg.getConfig().getVersion() !== version_1.Version.v702) {\r\n            return ret;\r\n        }\r\n        else if (!(lowObj instanceof _abap_object_1.ABAPObject)) {\r\n            return ret;\r\n        }\r\n        this.initHighReg();\r\n        const highObj = this.highReg.getObject(lowObj.getType(), lowObj.getName());\r\n        if (highObj === undefined || !(highObj instanceof _abap_object_1.ABAPObject)) {\r\n            return ret;\r\n        }\r\n        const highSyntax = new syntax_1.SyntaxLogic(this.highReg, highObj).run();\r\n        for (const lowFile of lowObj.getABAPFiles()) {\r\n            const highFile = highObj.getABAPFileByName(lowFile.getFilename());\r\n            if (highFile === undefined) {\r\n                continue;\r\n            }\r\n            const lowStatements = lowFile.getStatements();\r\n            const highStatements = highFile.getStatements();\r\n            if (lowStatements.length !== highStatements.length) {\r\n                // after applying a fix, there might be more statements in lowFile\r\n                // should highReg be initialized again?\r\n                /*\r\n                const message = \"Internal Error: Statement lengths does not match\";\r\n                ret.push(Issue.atStatement(lowFile, lowStatements[0], message, this.getMetadata().key));\r\n                */\r\n                continue;\r\n            }\r\n            for (let i = 0; i < lowStatements.length; i++) {\r\n                const low = lowStatements[i];\r\n                const high = highStatements[i];\r\n                if ((low.get() instanceof _statement_1.Unknown && !(high.get() instanceof _statement_1.Unknown))\r\n                    || high.findFirstExpression(Expressions.InlineData)) {\r\n                    const issue = this.checkStatement(low, high, lowFile, highSyntax);\r\n                    if (issue) {\r\n                        ret.push(issue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    ////////////////////\r\n    /** clones the orginal repository into highReg, and parses it with higher language version */\r\n    initHighReg() {\r\n        if (this.highReg !== undefined) {\r\n            return;\r\n        }\r\n        // use default configuration, ie. default target version\r\n        // todo: consider globalConstants, globalMacros, errorNamespace?\r\n        this.highReg = new registry_1.Registry();\r\n        for (const o of this.lowReg.getObjects()) {\r\n            for (const f of o.getFiles()) {\r\n                if (this.lowReg.isDependency(o) === true) {\r\n                    this.highReg.addDependency(f);\r\n                }\r\n                else {\r\n                    this.highReg.addFile(f);\r\n                }\r\n            }\r\n        }\r\n        this.highReg.parse();\r\n    }\r\n    /** applies one rule at a time, multiple iterations are required to transform complex statements */\r\n    checkStatement(low, high, lowFile, highSyntax) {\r\n        if (low.getFirstToken().getStart() instanceof position_1.VirtualPosition) {\r\n            return undefined;\r\n        }\r\n        let found = this.emptyKey(high, lowFile);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.outlineLoop(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.outlineValue(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.outlineCast(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.outlineConv(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.outlineData(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.outlineFS(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.newToCreateObject(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        found = this.replaceXsdBool(high, lowFile, highSyntax);\r\n        if (found) {\r\n            return found;\r\n        }\r\n        // todo, add more rules here\r\n        return undefined;\r\n    }\r\n    //////////////////////////////////////////\r\n    emptyKey(node, lowFile) {\r\n        for (const i of node.findAllExpressions(Expressions.TypeTable)) {\r\n            const concat = i.concatTokens();\r\n            if (concat.includes(\"WITH EMPTY KEY\") === false) {\r\n                continue;\r\n            }\r\n            const token = i.findDirectTokenByText(\"EMPTY\");\r\n            if (token === undefined) {\r\n                continue;\r\n            }\r\n            const fix = edit_helper_1.EditHelper.replaceToken(lowFile, token, \"DEFAULT\");\r\n            return issue_1.Issue.atToken(lowFile, i.getFirstToken(), \"Downport EMPTY KEY\", this.getMetadata().key, this.conf.severity, fix);\r\n        }\r\n        return;\r\n    }\r\n    outlineLoop(node, lowFile, highSyntax) {\r\n        if (!(node.get() instanceof Statements.Loop)) {\r\n            return undefined;\r\n        }\r\n        else if (node.findDirectExpression(Expressions.SimpleSource2)) {\r\n            return undefined;\r\n        }\r\n        // the first Source must be outlined\r\n        const s = node.findDirectExpression(Expressions.Source);\r\n        if (s === undefined) {\r\n            return undefined;\r\n        }\r\n        const uniqueName = this.uniqueName(node.getFirstToken().getStart(), lowFile.getFilename(), highSyntax);\r\n        const code = `DATA(${uniqueName}) = ${s.concatTokens()}.\\n` +\r\n            \" \".repeat(node.getFirstToken().getStart().getCol() - 1);\r\n        const fix1 = edit_helper_1.EditHelper.insertAt(lowFile, node.getFirstToken().getStart(), code);\r\n        const fix2 = edit_helper_1.EditHelper.replaceRange(lowFile, s.getFirstToken().getStart(), s.getLastToken().getEnd(), uniqueName);\r\n        const fix = edit_helper_1.EditHelper.merge(fix2, fix1);\r\n        return issue_1.Issue.atToken(lowFile, node.getFirstToken(), \"Outline LOOP input\", this.getMetadata().key, this.conf.severity, fix);\r\n    }\r\n    outlineValue(node, lowFile, highSyntax) {\r\n        var _a;\r\n        for (const i of node.findAllExpressionsRecursive(Expressions.Source)) {\r\n            const firstToken = i.getFirstToken();\r\n            if (firstToken.getStr().toUpperCase() !== \"VALUE\") {\r\n                continue;\r\n            }\r\n            const type = this.findType(i, lowFile, highSyntax);\r\n            if (type === undefined) {\r\n                continue;\r\n            }\r\n            const uniqueName = this.uniqueName(firstToken.getStart(), lowFile.getFilename(), highSyntax);\r\n            const indentation = \" \".repeat(node.getFirstToken().getStart().getCol() - 1);\r\n            let body = \"\";\r\n            let concat = \"\";\r\n            for (const b of ((_a = i.findDirectExpression(Expressions.ValueBody)) === null || _a === void 0 ? void 0 : _a.getChildren()) || []) {\r\n                concat += b.concatTokens() + \" \";\r\n                if (b.get() instanceof Expressions.FieldAssignment) {\r\n                    body += indentation + uniqueName + \"-\" + concat.trim() + \".\\n\";\r\n                    concat = \"\";\r\n                }\r\n            }\r\n            const abap = `DATA ${uniqueName} TYPE ${type}.\\n` +\r\n                body +\r\n                indentation;\r\n            const fix1 = edit_helper_1.EditHelper.insertAt(lowFile, node.getFirstToken().getStart(), abap);\r\n            const fix2 = edit_helper_1.EditHelper.replaceRange(lowFile, firstToken.getStart(), i.getLastToken().getEnd(), uniqueName);\r\n            const fix = edit_helper_1.EditHelper.merge(fix2, fix1);\r\n            return issue_1.Issue.atToken(lowFile, firstToken, \"Downport VALUE\", this.getMetadata().key, this.conf.severity, fix);\r\n        }\r\n        return undefined;\r\n    }\r\n    findType(i, lowFile, highSyntax) {\r\n        const expr = i.findDirectExpression(Expressions.TypeNameOrInfer);\r\n        if (expr === undefined) {\r\n            return undefined;\r\n        }\r\n        const firstToken = expr.getFirstToken();\r\n        const concat = expr.concatTokens();\r\n        if (concat !== \"#\") {\r\n            return concat;\r\n        }\r\n        const spag = highSyntax.spaghetti.lookupPosition(firstToken.getStart(), lowFile.getFilename());\r\n        if (spag === undefined) {\r\n            return undefined;\r\n        }\r\n        let inferred = undefined;\r\n        for (const r of (spag === null || spag === void 0 ? void 0 : spag.getData().references) || []) {\r\n            if (r.referenceType === _reference_1.ReferenceType.InferredType\r\n                && r.resolved\r\n                && r.position.getStart().equals(firstToken.getStart())\r\n                && r.resolved instanceof _typed_identifier_1.TypedIdentifier) {\r\n                inferred = r.resolved;\r\n                break;\r\n            }\r\n        }\r\n        if (inferred === undefined) {\r\n            return undefined;\r\n        }\r\n        return inferred.getType().getQualifiedName();\r\n    }\r\n    outlineFS(node, lowFile, highSyntax) {\r\n        var _a;\r\n        for (const i of node.findAllExpressionsRecursive(Expressions.InlineFS)) {\r\n            const nameToken = (_a = i.findDirectExpression(Expressions.TargetFieldSymbol)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n            if (nameToken === undefined) {\r\n                continue;\r\n            }\r\n            const name = nameToken.getStr();\r\n            const spag = highSyntax.spaghetti.lookupPosition(nameToken.getStart(), lowFile.getFilename());\r\n            if (spag === undefined) {\r\n                continue;\r\n            }\r\n            const found = spag.findVariable(name);\r\n            if (found === undefined) {\r\n                continue;\r\n            }\r\n            else if (found.getType() instanceof basic_1.VoidType) {\r\n                return issue_1.Issue.atToken(lowFile, i.getFirstToken(), \"Error outlining voided type\", this.getMetadata().key, this.conf.severity);\r\n            }\r\n            const type = found.getType().getQualifiedName() ? found.getType().getQualifiedName() : found.getType().toABAP();\r\n            const code = `FIELD-SYMBOLS ${name} TYPE ${type}.\\n` +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1);\r\n            const fix1 = edit_helper_1.EditHelper.insertAt(lowFile, node.getFirstToken().getStart(), code);\r\n            const fix2 = edit_helper_1.EditHelper.replaceRange(lowFile, i.getFirstToken().getStart(), i.getLastToken().getEnd(), name);\r\n            const fix = edit_helper_1.EditHelper.merge(fix2, fix1);\r\n            return issue_1.Issue.atToken(lowFile, i.getFirstToken(), \"Outline FIELD-SYMBOL\", this.getMetadata().key, this.conf.severity, fix);\r\n        }\r\n        return undefined;\r\n    }\r\n    outlineData(node, lowFile, highSyntax) {\r\n        var _a;\r\n        for (const i of node.findAllExpressionsRecursive(Expressions.InlineData)) {\r\n            const nameToken = (_a = i.findDirectExpression(Expressions.TargetField)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n            if (nameToken === undefined) {\r\n                continue;\r\n            }\r\n            const name = nameToken.getStr();\r\n            const spag = highSyntax.spaghetti.lookupPosition(nameToken.getStart(), lowFile.getFilename());\r\n            if (spag === undefined) {\r\n                continue;\r\n            }\r\n            const found = spag.findVariable(name);\r\n            if (found === undefined) {\r\n                continue;\r\n            }\r\n            else if (found.getType() instanceof basic_1.VoidType) {\r\n                return issue_1.Issue.atToken(lowFile, i.getFirstToken(), \"Error outlining voided type\", this.getMetadata().key, this.conf.severity);\r\n            }\r\n            const type = found.getType().getQualifiedName() ? found.getType().getQualifiedName() : found.getType().toABAP();\r\n            const code = `DATA ${name} TYPE ${type}.\\n` +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1);\r\n            const fix1 = edit_helper_1.EditHelper.insertAt(lowFile, node.getFirstToken().getStart(), code);\r\n            const fix2 = edit_helper_1.EditHelper.replaceRange(lowFile, i.getFirstToken().getStart(), i.getLastToken().getEnd(), name);\r\n            const fix = edit_helper_1.EditHelper.merge(fix2, fix1);\r\n            return issue_1.Issue.atToken(lowFile, i.getFirstToken(), \"Outline DATA\", this.getMetadata().key, this.conf.severity, fix);\r\n        }\r\n        return undefined;\r\n    }\r\n    outlineConv(node, lowFile, highSyntax) {\r\n        var _a;\r\n        for (const i of node.findAllExpressionsRecursive(Expressions.Source)) {\r\n            if (i.getFirstToken().getStr().toUpperCase() !== \"CONV\") {\r\n                continue;\r\n            }\r\n            const body = (_a = i.findDirectExpression(Expressions.ConvBody)) === null || _a === void 0 ? void 0 : _a.concatTokens();\r\n            if (body === undefined) {\r\n                continue;\r\n            }\r\n            const uniqueName = this.uniqueName(i.getFirstToken().getStart(), lowFile.getFilename(), highSyntax);\r\n            const type = this.findType(i, lowFile, highSyntax);\r\n            const abap = `DATA ${uniqueName} TYPE ${type}.\\n` +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1) +\r\n                `${uniqueName} = ${body}.\\n` +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1);\r\n            const fix1 = edit_helper_1.EditHelper.insertAt(lowFile, node.getFirstToken().getStart(), abap);\r\n            const fix2 = edit_helper_1.EditHelper.replaceRange(lowFile, i.getFirstToken().getStart(), i.getLastToken().getEnd(), uniqueName);\r\n            const fix = edit_helper_1.EditHelper.merge(fix2, fix1);\r\n            return issue_1.Issue.atToken(lowFile, i.getFirstToken(), \"Downport CONV\", this.getMetadata().key, this.conf.severity, fix);\r\n        }\r\n        return undefined;\r\n    }\r\n    // \"CAST\" to \"?=\"\r\n    outlineCast(node, lowFile, highSyntax) {\r\n        var _a;\r\n        for (const i of node.findAllExpressionsRecursive(Expressions.Cast)) {\r\n            const uniqueName = this.uniqueName(i.getFirstToken().getStart(), lowFile.getFilename(), highSyntax);\r\n            const type = this.findType(i, lowFile, highSyntax);\r\n            const body = (_a = i.findDirectExpression(Expressions.Source)) === null || _a === void 0 ? void 0 : _a.concatTokens();\r\n            const abap = `DATA ${uniqueName} TYPE REF TO ${type}.\\n` +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1) +\r\n                `${uniqueName} ?= ${body}.\\n` +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1);\r\n            const fix1 = edit_helper_1.EditHelper.insertAt(lowFile, node.getFirstToken().getStart(), abap);\r\n            const fix2 = edit_helper_1.EditHelper.replaceRange(lowFile, i.getFirstToken().getStart(), i.getLastToken().getEnd(), uniqueName);\r\n            const fix = edit_helper_1.EditHelper.merge(fix2, fix1);\r\n            return issue_1.Issue.atToken(lowFile, i.getFirstToken(), \"Downport CAST\", this.getMetadata().key, this.conf.severity, fix);\r\n        }\r\n        return undefined;\r\n    }\r\n    uniqueName(position, filename, highSyntax) {\r\n        const spag = highSyntax.spaghetti.lookupPosition(position, filename);\r\n        if (spag === undefined) {\r\n            return \"uniqueErrorSpag\";\r\n        }\r\n        while (true) {\r\n            const name = \"temp\" + this.counter;\r\n            const found = spag.findVariable(name);\r\n            this.counter++;\r\n            if (found === undefined) {\r\n                return name;\r\n            }\r\n        }\r\n    }\r\n    replaceXsdBool(node, lowFile, highSyntax) {\r\n        const spag = highSyntax.spaghetti.lookupPosition(node.getFirstToken().getStart(), lowFile.getFilename());\r\n        for (const r of (spag === null || spag === void 0 ? void 0 : spag.getData().references) || []) {\r\n            if (r.referenceType === _reference_1.ReferenceType.BuiltinMethodReference\r\n                && r.position.getName().toUpperCase() === \"XSDBOOL\") {\r\n                const token = r.position.getToken();\r\n                const fix = edit_helper_1.EditHelper.replaceRange(lowFile, token.getStart(), token.getEnd(), \"boolc\");\r\n                return issue_1.Issue.atToken(lowFile, token, \"Use BOOLC\", this.getMetadata().key, this.conf.severity, fix);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    newToCreateObject(node, lowFile, highSyntax) {\r\n        const source = node.findDirectExpression(Expressions.Source);\r\n        let fix = undefined;\r\n        if (node.get() instanceof Statements.Move && source && source.concatTokens().startsWith(\"NEW \")) {\r\n            const target = node.findDirectExpression(Expressions.Target);\r\n            const found = source === null || source === void 0 ? void 0 : source.findFirstExpression(Expressions.NewObject);\r\n            // must be at top level of the source for quickfix to work(todo: handle more scenarios)\r\n            // todo, assumption: the target is not an inline definition\r\n            if (target && found && source.concatTokens() === found.concatTokens()) {\r\n                const abap = this.newParameters(found, target.concatTokens(), highSyntax, lowFile);\r\n                if (abap !== undefined) {\r\n                    fix = edit_helper_1.EditHelper.replaceRange(lowFile, node.getFirstToken().getStart(), node.getLastToken().getEnd(), abap);\r\n                }\r\n            }\r\n        }\r\n        if (fix === undefined && node.findAllExpressions(Expressions.NewObject)) {\r\n            const found = node.findFirstExpression(Expressions.NewObject);\r\n            if (found === undefined) {\r\n                return undefined;\r\n            }\r\n            const name = this.uniqueName(found.getFirstToken().getStart(), lowFile.getFilename(), highSyntax);\r\n            const abap = this.newParameters(found, name, highSyntax, lowFile);\r\n            if (abap === undefined) {\r\n                return undefined;\r\n            }\r\n            const type = this.findType(found, lowFile, highSyntax);\r\n            const data = `DATA ${name} TYPE REF TO ${type}.\\n` +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1) +\r\n                abap + \"\\n\" +\r\n                \" \".repeat(node.getFirstToken().getStart().getCol() - 1);\r\n            const fix1 = edit_helper_1.EditHelper.insertAt(lowFile, node.getFirstToken().getStart(), data);\r\n            const fix2 = edit_helper_1.EditHelper.replaceRange(lowFile, found.getFirstToken().getStart(), found.getLastToken().getEnd(), name);\r\n            fix = edit_helper_1.EditHelper.merge(fix2, fix1);\r\n        }\r\n        if (fix) {\r\n            return issue_1.Issue.atToken(lowFile, node.getFirstToken(), \"Use CREATE OBJECT instead of NEW\", this.getMetadata().key, this.conf.severity, fix);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    newParameters(found, name, highSyntax, lowFile) {\r\n        var _a, _b, _c;\r\n        const typeToken = (_a = found.findDirectExpression(Expressions.TypeNameOrInfer)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n        let extra = (typeToken === null || typeToken === void 0 ? void 0 : typeToken.getStr()) === \"#\" ? \"\" : \" TYPE \" + (typeToken === null || typeToken === void 0 ? void 0 : typeToken.getStr());\r\n        const parameters = found.findFirstExpression(Expressions.ParameterListS);\r\n        if (parameters) {\r\n            extra = parameters ? extra + \" EXPORTING \" + parameters.concatTokens() : extra;\r\n        }\r\n        else if (typeToken) {\r\n            const source = (_b = found.findDirectExpression(Expressions.Source)) === null || _b === void 0 ? void 0 : _b.concatTokens();\r\n            if (source) {\r\n                // find the default parameter name for the constructor\r\n                const spag = highSyntax.spaghetti.lookupPosition(typeToken === null || typeToken === void 0 ? void 0 : typeToken.getStart(), lowFile.getFilename());\r\n                let cdef = undefined;\r\n                for (const r of (spag === null || spag === void 0 ? void 0 : spag.getData().references) || []) {\r\n                    if ((r.referenceType === _reference_1.ReferenceType.InferredType\r\n                        || r.referenceType === _reference_1.ReferenceType.ObjectOrientedReference)\r\n                        && r.resolved && r.position.getStart().equals(typeToken.getStart())) {\r\n                        cdef = r.resolved;\r\n                    }\r\n                }\r\n                const importing = (_c = cdef === null || cdef === void 0 ? void 0 : cdef.getMethodDefinitions().getByName(\"CONSTRUCTOR\")) === null || _c === void 0 ? void 0 : _c.getParameters().getDefaultImporting();\r\n                if (importing) {\r\n                    extra += \" EXPORTING \" + importing + \" = \" + source;\r\n                }\r\n                else if (spag === undefined) {\r\n                    extra += \" SpagUndefined\";\r\n                }\r\n                else if (cdef === undefined) {\r\n                    extra += \" ClassDefinitionNotFound\";\r\n                }\r\n                else {\r\n                    extra += \" SomeError\";\r\n                }\r\n            }\r\n        }\r\n        const abap = `CREATE OBJECT ${name}${extra}.`;\r\n        return abap;\r\n    }\r\n}\r\nexports.Downport = Downport;\r\n//# sourceMappingURL=downport.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/downport.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/empty_line_in_statement.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/empty_line_in_statement.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EmptyLineinStatement = exports.EmptyLineinStatementConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass EmptyLineinStatementConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Allow changed empty lines in chanined statements */\r\n        this.allowChained = false;\r\n    }\r\n}\r\nexports.EmptyLineinStatementConf = EmptyLineinStatementConf;\r\nclass EmptyLineinStatement extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new EmptyLineinStatementConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"empty_line_in_statement\",\r\n            title: \"Find empty lines in statements\",\r\n            shortDescription: `Checks that statements do not contain empty lines.`,\r\n            extendedInformation: `https://docs.abapopenchecks.org/checks/41/`,\r\n            tags: [_irule_1.RuleTag.Quickfix, _irule_1.RuleTag.Whitespace, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Remove empty line in statement\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            if (s.get() instanceof _statement_1.Unknown\r\n                || s.get() instanceof _statement_1.NativeSQL) {\r\n                return []; // skip the file if there are parser errors or native/sqlscript\r\n            }\r\n        }\r\n        let prevLine = undefined;\r\n        for (const t of file.getTokens()) {\r\n            if (prevLine === undefined && t instanceof tokens_1.Comment) {\r\n                continue;\r\n            }\r\n            else if (prevLine === undefined) {\r\n                prevLine = t.getRow();\r\n            }\r\n            if (prevLine && t.getRow() - prevLine >= 2) {\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, new position_1.Position(prevLine + 1, 1), t.getStart());\r\n                const issue = issue_1.Issue.atToken(file, t, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n            if (t instanceof tokens_1.Punctuation && t.getStr() === \".\") {\r\n                prevLine = undefined;\r\n            }\r\n            else if (this.conf.allowChained === true && t instanceof tokens_1.Punctuation && t.getStr() === \",\") {\r\n                prevLine = undefined;\r\n            }\r\n            else {\r\n                prevLine = t.getRow();\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.EmptyLineinStatement = EmptyLineinStatement;\r\n//# sourceMappingURL=empty_line_in_statement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/empty_line_in_statement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/empty_statement.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/empty_statement.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EmptyStatement = exports.EmptyStatementConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass EmptyStatementConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.EmptyStatementConf = EmptyStatementConf;\r\nclass EmptyStatement extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new EmptyStatementConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"empty_statement\",\r\n            title: \"Remove empty statement\",\r\n            shortDescription: `Checks for empty statements (an empty statement is a single dot)`,\r\n            tags: [_irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const statements = file.getStatements();\r\n        let previousEnd = new position_1.Position(1, 1);\r\n        for (const sta of statements) {\r\n            if (sta.get() instanceof _statement_1.Empty) {\r\n                const token = sta.getFirstToken();\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, previousEnd, token.getEnd());\r\n                const issue = issue_1.Issue.atStatement(file, sta, \"Remove empty statement\", this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n            previousEnd = sta.getLastToken().getEnd();\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.EmptyStatement = EmptyStatement;\r\n//# sourceMappingURL=empty_statement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/empty_statement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/empty_structure.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/empty_structure.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EmptyStructure = exports.EmptyStructureConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass EmptyStructureConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Checks for empty LOOP blocks */\r\n        this.loop = true;\r\n        /** Checks for empty IF blocks */\r\n        this.if = true;\r\n        /** Checks for empty WHILE blocks */\r\n        this.while = true;\r\n        /** Checks for empty CASE blocks */\r\n        this.case = true;\r\n        /** Checks for empty SELECT blockss */\r\n        this.select = true;\r\n        /** Checks for empty DO blocks */\r\n        this.do = true;\r\n        /** Checks for empty AT blocks */\r\n        this.at = true;\r\n        /** Checks for empty TRY blocks */\r\n        this.try = true;\r\n        // todo, other category containing WHEN, ELSE\r\n    }\r\n}\r\nexports.EmptyStructureConf = EmptyStructureConf;\r\nclass EmptyStructure extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new EmptyStructureConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"empty_structure\",\r\n            title: \"Find empty blocks\",\r\n            shortDescription: `Checks that the code does not contain empty blocks.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#no-empty-if-branches`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(name) {\r\n        return \"Empty block, add code: \" + name;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        const candidates = [];\r\n        if (this.getConfig().loop === true) {\r\n            candidates.push(...stru.findAllStructures(Structures.Loop));\r\n        }\r\n        if (this.getConfig().while === true) {\r\n            candidates.push(...stru.findAllStructures(Structures.While));\r\n        }\r\n        if (this.getConfig().case === true) {\r\n            candidates.push(...stru.findAllStructures(Structures.Case));\r\n        }\r\n        if (this.getConfig().select === true) {\r\n            candidates.push(...stru.findAllStructures(Structures.Select));\r\n        }\r\n        if (this.getConfig().do === true) {\r\n            candidates.push(...stru.findAllStructures(Structures.Do));\r\n        }\r\n        if (this.getConfig().at === true) {\r\n            candidates.push(...stru.findAllStructures(Structures.At));\r\n        }\r\n        for (const l of candidates) {\r\n            if (l.getChildren().length === 2) {\r\n                const token = l.getFirstToken();\r\n                const issue = issue_1.Issue.atToken(file, token, this.getDescription(l.get().constructor.name), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        if (this.getConfig().try === true) {\r\n            const tries = stru.findAllStructures(Structures.Try);\r\n            for (const t of tries) {\r\n                const normal = t.findDirectStructure(Structures.Body);\r\n                if (normal === undefined) {\r\n                    const token = t.getFirstToken();\r\n                    const issue = issue_1.Issue.atToken(file, token, this.getDescription(t.get().constructor.name), this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n        if (this.getConfig().if === true) {\r\n            const tries = stru.findAllStructures(Structures.If)\r\n                .concat(stru.findAllStructures(Structures.Else))\r\n                .concat(stru.findAllStructures(Structures.ElseIf));\r\n            for (const t of tries) {\r\n                const normal = t.findDirectStructure(Structures.Body);\r\n                if (normal === undefined) {\r\n                    const token = t.getFirstToken();\r\n                    const issue = issue_1.Issue.atToken(file, token, this.getDescription(t.get().constructor.name), this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.EmptyStructure = EmptyStructure;\r\n//# sourceMappingURL=empty_structure.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/empty_structure.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/exit_or_check.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/exit_or_check.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExitOrCheck = exports.ExitOrCheckConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass ExitOrCheckConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.allowExit = false;\r\n        this.allowCheck = false;\r\n    }\r\n}\r\nexports.ExitOrCheckConf = ExitOrCheckConf;\r\nclass ExitOrCheck extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ExitOrCheckConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"exit_or_check\",\r\n            title: \"Find EXIT or CHECK outside loops\",\r\n            shortDescription: `Detects usages of EXIT or CHECK statements outside of loops.\nUse RETURN to leave procesing blocks instead.`,\r\n            extendedInformation: `\nhttps://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abenleave_processing_blocks.htm\nhttps://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abapcheck_processing_blocks.htm\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#check-vs-return\n`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Quickfix],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const stack = [];\r\n        for (const statement of file.getStatements()) {\r\n            if (statement.get() instanceof Statements.Loop\r\n                || statement.get() instanceof Statements.While\r\n                || statement.get() instanceof Statements.SelectLoop\r\n                || statement.get() instanceof Statements.Do) {\r\n                stack.push(statement);\r\n            }\r\n            else if (statement.get() instanceof Statements.EndLoop\r\n                || statement.get() instanceof Statements.EndWhile\r\n                || statement.get() instanceof Statements.EndSelect\r\n                || statement.get() instanceof Statements.EndDo) {\r\n                stack.pop();\r\n            }\r\n            else if (this.conf.allowCheck === false && statement.get() instanceof Statements.Check && stack.length === 0) {\r\n                const message = \"CHECK is not allowed outside of loops\";\r\n                let tokensString = statement.concatTokens();\r\n                tokensString = tokensString.slice(statement.getFirstToken().getEnd().getCol());\r\n                const replacement = \"IF NOT \" + tokensString + \"\\n  RETURN.\\nENDIF.\";\r\n                const fix = edit_helper_1.EditHelper.replaceRange(file, statement.getFirstToken().getStart(), statement.getLastToken().getEnd(), replacement);\r\n                const issue = issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n            else if (this.conf.allowExit === false && statement.get() instanceof Statements.Exit && stack.length === 0) {\r\n                const message = \"EXIT is not allowed outside of loops\";\r\n                const fix = edit_helper_1.EditHelper.replaceToken(file, statement.getFirstToken(), \"RETURN\");\r\n                const issue = issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.ExitOrCheck = ExitOrCheck;\r\n//# sourceMappingURL=exit_or_check.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/exit_or_check.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/exporting.js":
/*!******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/exporting.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Exporting = exports.ExportingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass ExportingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ExportingConf = ExportingConf;\r\nclass Exporting extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ExportingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"exporting\",\r\n            title: \"EXPORTING can be omitted\",\r\n            shortDescription: `Detects EXPORTING statements which can be omitted.`,\r\n            badExample: `call_method( EXPORTING foo = bar ).`,\r\n            goodExample: `call_method( foo = bar ).`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#omit-the-optional-keyword-exporting\nhttps://docs.abapopenchecks.org/checks/30/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"The EXPORTING keyword can be omitted\";\r\n    }\r\n    runParsed(file, obj) {\r\n        let issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        for (const statement of file.getStatements()) {\r\n            const expressions = statement.findAllExpressionsMulti([expressions_1.MethodCallBody, expressions_1.MethodCall]);\r\n            for (const b of expressions) {\r\n                if (b.get() instanceof expressions_1.MethodCallBody) {\r\n                    if (b.getFirstToken().getStr() !== \"(\") {\r\n                        continue;\r\n                    }\r\n                    issues = issues.concat(this.check(b, file));\r\n                }\r\n                else if (b.get() instanceof expressions_1.MethodCall) {\r\n                    issues = issues.concat(this.check(b, file));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    check(node, file) {\r\n        const e = node.findFirstExpression(expressions_1.MethodParameters);\r\n        if (e === undefined) {\r\n            return [];\r\n        }\r\n        if (e.getFirstToken().getStr().toUpperCase() !== \"EXPORTING\") {\r\n            return [];\r\n        }\r\n        const tokens = e.getDirectTokens();\r\n        const strings = tokens.map(t => t.getStr().toUpperCase());\r\n        if (strings[0] === \"EXPORTING\"\r\n            && strings.includes(\"IMPORTING\") === false\r\n            && strings.includes(\"RECEIVING\") === false\r\n            && strings.includes(\"EXCEPTIONS\") === false\r\n            && strings.includes(\"CHANGING\") === false) {\r\n            const next = e.getAllTokens()[1];\r\n            const fix = edit_helper_1.EditHelper.deleteRange(file, tokens[0].getStart(), next.getStart());\r\n            const issue = issue_1.Issue.atToken(file, tokens[0], this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n            return [issue];\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.Exporting = Exporting;\r\n//# sourceMappingURL=exporting.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/exporting.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/forbidden_identifier.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/forbidden_identifier.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ForbiddenIdentifier = exports.ForbiddenIdentifierConf = void 0;\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass ForbiddenIdentifierConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** List of forbideen identifiers, array of string regex\r\n         * @uniqueItems true\r\n        */\r\n        this.check = [];\r\n    }\r\n}\r\nexports.ForbiddenIdentifierConf = ForbiddenIdentifierConf;\r\nclass ForbiddenIdentifier extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ForbiddenIdentifierConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"forbidden_identifier\",\r\n            title: \"Forbidden Identifier\",\r\n            shortDescription: `Forbid use of specified identifiers, list of regex.`,\r\n            extendedInformation: `Used in the transpiler to find javascript keywords in ABAP identifiers,\nhttps://github.com/abaplint/transpiler/blob/bda94b8b56e2b7f2f87be2168f12361aa530220e/packages/transpiler/src/validation.ts#L44`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n        if (this.conf.check === undefined) {\r\n            this.conf.check = [];\r\n        }\r\n    }\r\n    runParsed(file) {\r\n        if (this.conf.check.length === 0) {\r\n            return [];\r\n        }\r\n        let ret = [];\r\n        for (const s of file.getStatements()) {\r\n            ret = ret.concat(this.traverse(s, file));\r\n        }\r\n        return ret;\r\n    }\r\n    traverse(node, file) {\r\n        let ret = [];\r\n        for (const c of node.getChildren()) {\r\n            if (c instanceof nodes_1.TokenNodeRegex) {\r\n                ret = ret.concat(this.check(c.get(), file));\r\n            }\r\n            else if (c instanceof nodes_1.TokenNode) {\r\n                continue;\r\n            }\r\n            else {\r\n                ret = ret.concat(this.traverse(c, file));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    check(token, file) {\r\n        const str = token.getStr();\r\n        const ret = [];\r\n        for (const c of this.conf.check) {\r\n            const reg = new RegExp(c, \"i\");\r\n            if (reg.exec(str)) {\r\n                const message = \"Identifer \\\"\" + str + \"\\\" not allowed\";\r\n                ret.push(issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.ForbiddenIdentifier = ForbiddenIdentifier;\r\n//# sourceMappingURL=forbidden_identifier.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/forbidden_identifier.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/forbidden_pseudo_and_pragma.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/forbidden_pseudo_and_pragma.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ForbiddenPseudoAndPragma = exports.ForbiddenPseudoAndPragmaConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass ForbiddenPseudoAndPragmaConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** @uniqueItems true */\r\n        this.pseudo = [];\r\n        /** @uniqueItems true */\r\n        this.pragmas = [];\r\n        this.ignoreGlobalClassDefinition = false;\r\n        this.ignoreGlobalInterface = false;\r\n    }\r\n}\r\nexports.ForbiddenPseudoAndPragmaConf = ForbiddenPseudoAndPragmaConf;\r\nclass ForbiddenPseudoAndPragma extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ForbiddenPseudoAndPragmaConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"forbidden_pseudo_and_pragma\",\r\n            title: \"Forbidden pseudo comments and pragma\",\r\n            shortDescription: `Checks for unwanted pseudo comments and pragma`,\r\n            tags: [_irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        if (this.conf.pseudo === undefined) {\r\n            this.conf.pseudo = [];\r\n        }\r\n        if (this.conf.pragmas === undefined) {\r\n            this.conf.pragmas = [];\r\n        }\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    // todo, this method could use some refactoring\r\n    // note that the top loop is on the configuration, which makes the default config run fast\r\n    runParsed(file) {\r\n        let skip = false;\r\n        const issues = [];\r\n        for (const p of this.conf.pragmas) {\r\n            for (const s of file.getStatements()) {\r\n                if (this.conf.ignoreGlobalClassDefinition === true) {\r\n                    if (s.get() instanceof Statements.ClassDefinition\r\n                        && s.findFirstExpression(Expressions.ClassGlobal)) {\r\n                        skip = true;\r\n                        continue;\r\n                    }\r\n                    else if (skip === true && s.get() instanceof Statements.EndClass) {\r\n                        skip = false;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (this.conf.ignoreGlobalInterface === true) {\r\n                    if (s.get() instanceof Statements.Interface\r\n                        && s.findFirstExpression(Expressions.ClassGlobal)) {\r\n                        skip = true;\r\n                        continue;\r\n                    }\r\n                    else if (skip === true && s.get() instanceof Statements.EndInterface) {\r\n                        skip = false;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (skip === true) {\r\n                    continue;\r\n                }\r\n                const list = s.getPragmas();\r\n                const found = list.find((a) => a.getStr().toUpperCase() === p.toUpperCase());\r\n                if (found) {\r\n                    const fix = edit_helper_1.EditHelper.deleteToken(file, found);\r\n                    const message = \"Forbidden pragma\";\r\n                    issues.push(issue_1.Issue.atToken(file, found, message, this.getMetadata().key, this.conf.severity, fix));\r\n                }\r\n            }\r\n        }\r\n        skip = false;\r\n        for (const p of this.conf.pseudo) {\r\n            for (const s of file.getStatements()) {\r\n                if (this.conf.ignoreGlobalClassDefinition === true) {\r\n                    if (s.get() instanceof Statements.ClassDefinition\r\n                        && s.findFirstExpression(Expressions.ClassGlobal)) {\r\n                        skip = true;\r\n                        continue;\r\n                    }\r\n                    else if (skip === true && s.get() instanceof Statements.EndClass) {\r\n                        skip = false;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (this.conf.ignoreGlobalInterface === true) {\r\n                    if (s.get() instanceof Statements.Interface\r\n                        && s.findFirstExpression(Expressions.ClassGlobal)) {\r\n                        skip = true;\r\n                        continue;\r\n                    }\r\n                    else if (skip === true && s.get() instanceof Statements.EndInterface) {\r\n                        skip = false;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (skip === true) {\r\n                    continue;\r\n                }\r\n                if (!(s.get() instanceof _statement_1.Comment)) {\r\n                    continue;\r\n                }\r\n                if (s.concatTokens().toUpperCase().includes(p.toUpperCase())) {\r\n                    const fix = edit_helper_1.EditHelper.deleteStatement(file, s);\r\n                    const message = \"Forbidden pseudo comment\";\r\n                    issues.push(issue_1.Issue.atStatement(file, s, message, this.getMetadata().key, this.conf.severity, fix));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.ForbiddenPseudoAndPragma = ForbiddenPseudoAndPragma;\r\n//# sourceMappingURL=forbidden_pseudo_and_pragma.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/forbidden_pseudo_and_pragma.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/forbidden_void_type.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/forbidden_void_type.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ForbiddenVoidType = exports.ForbiddenVoidTypeConf = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst void_type_1 = __webpack_require__(/*! ../abap/types/basic/void_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/void_type.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst basic_1 = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass ForbiddenVoidTypeConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** List of forbidden void types, array of string regex, case in-sensitive\r\n         * @uniqueItems true\r\n        */\r\n        this.check = [];\r\n    }\r\n}\r\nexports.ForbiddenVoidTypeConf = ForbiddenVoidTypeConf;\r\nclass ForbiddenVoidType {\r\n    constructor() {\r\n        this.conf = new ForbiddenVoidTypeConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"forbidden_void_type\",\r\n            title: \"Forbidden Void Types\",\r\n            shortDescription: `Avoid usage of specified void types.`,\r\n            extendedInformation: `Inspiration:\nBOOLEAN, BOOLE_D, CHAR01, CHAR1, CHAR10, CHAR12, CHAR128, CHAR2, CHAR20, CHAR4, CHAR70,\nDATS, TIMS, DATUM, FLAG, INT4, NUMC3, NUMC4, SAP_BOOL, TEXT25, TEXT80, X255, XFELD`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n        if (this.conf.check === undefined) {\r\n            this.conf.check = [];\r\n        }\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject) || this.conf.check.length === 0) {\r\n            return [];\r\n        }\r\n        return this.traverse(new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti.getTop());\r\n    }\r\n    ///////////////\r\n    traverse(node) {\r\n        var _a, _b, _c;\r\n        let ret = [];\r\n        const message = \"Forbidden void type: \";\r\n        if (node.getIdentifier().stype !== _scope_type_1.ScopeType.BuiltIn) {\r\n            for (const r of node.getData().references) {\r\n                if (r.referenceType === _reference_1.ReferenceType.ObjectOrientedVoidReference\r\n                    && ((_a = r.extra) === null || _a === void 0 ? void 0 : _a.ooName) !== undefined\r\n                    && this.isForbiddenName((_b = r.extra) === null || _b === void 0 ? void 0 : _b.ooName)) {\r\n                    ret.push(issue_1.Issue.atIdentifier(r.position, message + ((_c = r.extra) === null || _c === void 0 ? void 0 : _c.ooName), this.getMetadata().key, this.conf.severity));\r\n                }\r\n                if ((r.referenceType === _reference_1.ReferenceType.VoidType\r\n                    || r.referenceType === _reference_1.ReferenceType.TableVoidReference)\r\n                    && this.isForbiddenName(r.position.getName())) {\r\n                    ret.push(issue_1.Issue.atIdentifier(r.position, message + r.position.getName(), this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            ret = ret.concat(this.traverse(c));\r\n        }\r\n        return ret;\r\n    }\r\n    isForbiddenType(type) {\r\n        if (type instanceof basic_1.StructureType) {\r\n            return type.getComponents().some(c => this.isForbiddenType(c.type));\r\n        }\r\n        else if (!(type instanceof void_type_1.VoidType)) {\r\n            return false;\r\n        }\r\n        const name = type.getVoided();\r\n        return this.isForbiddenName(name);\r\n    }\r\n    isForbiddenName(name) {\r\n        if (name === undefined) {\r\n            return false;\r\n        }\r\n        for (const c of this.conf.check) {\r\n            const reg = new RegExp(c, \"i\");\r\n            const match = reg.test(name);\r\n            if (match === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.ForbiddenVoidType = ForbiddenVoidType;\r\n//# sourceMappingURL=forbidden_void_type.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/forbidden_void_type.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/form_tables_obsolete.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/form_tables_obsolete.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FormTablesObsolete = exports.FormTablesObsoleteConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass FormTablesObsoleteConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.FormTablesObsoleteConf = FormTablesObsoleteConf;\r\nclass FormTablesObsolete extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new FormTablesObsoleteConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"form_tables_obsolete\",\r\n            title: \"TABLES parameters are obsolete\",\r\n            shortDescription: `Checks for TABLES parameters in forms.`,\r\n            extendedInformation: `https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abapform_tables.htm`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"FORM TABLES parameters are obsolete\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const ret = [];\r\n        const stru = file.getStructure();\r\n        if (obj instanceof objects_1.Class || stru === undefined) {\r\n            return ret;\r\n        }\r\n        for (const form of stru.findAllExpressions(Expressions.FormTables)) {\r\n            const token = form.getFirstToken();\r\n            const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n            ret.push(issue);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.FormTablesObsolete = FormTablesObsolete;\r\n//# sourceMappingURL=form_tables_obsolete.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/form_tables_obsolete.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/fully_type_constants.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/fully_type_constants.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FullyTypeConstants = exports.FullyTypeConsantsConf = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass FullyTypeConsantsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Add check for implicit data definition, require full typing. */\r\n        this.checkData = true;\r\n    }\r\n}\r\nexports.FullyTypeConsantsConf = FullyTypeConsantsConf;\r\nclass FullyTypeConstants extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new FullyTypeConsantsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"fully_type_constants\",\r\n            title: \"Fully type constants\",\r\n            shortDescription: `Checks constants for full typing - no implicit typing allowed.`,\r\n            badExample: \"CONSTANTS foo VALUE 'a'.\",\r\n            goodExample: \"CONSTANTS foo TYPE c LENGTH 1 VALUE 'a'.\",\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(type) {\r\n        return `Fully type ${type}, no implicit typing`;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a, _b;\r\n        const issues = [];\r\n        for (const stat of file.getStatements()) {\r\n            if ((stat.get() instanceof Statements.Constant\r\n                || (this.conf.checkData === true && stat.get() instanceof Statements.Data))\r\n                && (!this.isTyped(stat))) {\r\n                const type = stat.get() instanceof Statements.Constant ? \"constant definition\" : \"data definition\";\r\n                let token = (_a = stat.findFirstExpression(expressions_1.NamespaceSimpleName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n                if (token === undefined) {\r\n                    token = (_b = stat.findFirstExpression(expressions_1.DefinitionName)) === null || _b === void 0 ? void 0 : _b.getFirstToken();\r\n                }\r\n                if (token === undefined) {\r\n                    throw new Error(\"fully type constants, unexpected node\");\r\n                }\r\n                issues.push(issue_1.Issue.atToken(file, token, this.getDescription(type), this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    isTyped(stat) {\r\n        return (stat.findFirstExpression(expressions_1.Type) || stat.findFirstExpression(expressions_1.TypeTable));\r\n    }\r\n}\r\nexports.FullyTypeConstants = FullyTypeConstants;\r\n//# sourceMappingURL=fully_type_constants.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/fully_type_constants.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/function_module_recommendations.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/function_module_recommendations.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionModuleRecommendations = exports.FunctionModuleRecommendationsConf = void 0;\r\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass FunctionModuleRecommendationsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Tuple of Function Module Name to be replaced, the recommended alternative and\r\n         * the version from which the recommendation is valid.*/\r\n        this.recommendations = [\r\n            { name: \"SUBST_GET_FILE_LIST\", replace: \"see note 1686357\" },\r\n            { name: \"ROUND\", replace: \"use built in function: round()\" },\r\n            { name: \"SO_NEW_DOCUMENT_ATT_SEND_API1\", replace: \"use CL_BCS\" },\r\n            { name: \"ECATT_CONV_XSTRING_TO_STRING\", replace: \"use CL_BINARY_CONVERT\" },\r\n            { name: \"SCMS_STRING_TO_XSTRING\", replace: \"use CL_BINARY_CONVERT\" },\r\n            { name: \"JOB_CREATE\", replace: \"use CL_BP_ABAP_JOB\" },\r\n            { name: \"JOB_SUBMIT\", replace: \"use CL_BP_ABAP_JOB\" },\r\n            { name: \"GUI_DOWNLOAD\", replace: \"use CL_GUI_FRONTEND_SERVICES\" },\r\n            { name: \"GUI_UPLOAD\", replace: \"use CL_GUI_FRONTEND_SERVICES\" },\r\n            { name: \"WS_FILENAME_GET\", replace: \"use CL_GUI_FRONTEND_SERVICES\" },\r\n            { name: \"F4_FILENAME\", replace: \"use CL_GUI_FRONTEND_SERVICES\" },\r\n            { name: \"SAPGUI_PROGRESS_INDICATOR\", replace: \"use CL_PROGRESS_INDICATOR\" },\r\n            { name: \"GUID_CREATE\", replace: \"use CL_SYSTEM_UUID\" },\r\n            { name: \"SSFC_BASE64_DECODE\", replace: \"use class CL_HTTP_UTILITY methods\" },\r\n            { name: \"SSFC_BASE64_ENCODE\", replace: \"use class CL_HTTP_UTILITY methods\" },\r\n            { name: \"SCMS_BASE64_DECODE_STR\", replace: \"use class CL_HTTP_UTILITY methods\" },\r\n            { name: \"POPUP_TO_DECIDE\", replace: \"use POPUP_TO_CONFIRM\" },\r\n            { name: \"REUSE_ALV_GRID_DISPLAY\", replace: \"use CL_SALV_TABLE=>FACTORY or CL_GUI_ALV_GRID\" },\r\n            { name: \"CALCULATE_HASH_FOR_RAW\", replace: \"use CL_ABAP_HMAC\" },\r\n            { name: \"FUNCTION_EXISTS\", replace: \"surround with try-catch CX_SY_DYN_CALL_ILLEGAL_METHOD instead\" },\r\n        ];\r\n    }\r\n}\r\nexports.FunctionModuleRecommendationsConf = FunctionModuleRecommendationsConf;\r\nclass FunctionModuleRecommendations extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new FunctionModuleRecommendationsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"function_module_recommendations\",\r\n            title: \"Function Module Recommendations\",\r\n            shortDescription: `Function Module Recommendations`,\r\n            extendedInformation: `https://docs.abapopenchecks.org/checks/53/`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const issues = [];\r\n        if (!this.conf.recommendations) {\r\n            return issues;\r\n        }\r\n        const configVersion = this.reg.getConfig().getVersion();\r\n        for (const exNode of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllExpressions(expressions_1.FunctionName)) || []) {\r\n            const token = exNode.getFirstToken();\r\n            let funcName = token.getStr().toUpperCase();\r\n            // only check constant FM names\r\n            if (!funcName.startsWith(\"'\")) {\r\n                continue;\r\n            }\r\n            // remove leading and trailing single quote\r\n            funcName = funcName.slice(1, funcName.length - 1);\r\n            const index = this.conf.recommendations.findIndex(i => i.name.toUpperCase() === funcName && (i.from === undefined || configVersion >= i.from));\r\n            if (index >= 0) {\r\n                issues.push(__1.Issue.atToken(file, token, this.getMessage(index), this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    getMessage(index) {\r\n        return `Recommendation: Replace Function ${this.conf.recommendations[index].name} with: ${this.conf.recommendations[index].replace}`;\r\n    }\r\n}\r\nexports.FunctionModuleRecommendations = FunctionModuleRecommendations;\r\n//# sourceMappingURL=function_module_recommendations.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/function_module_recommendations.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/functional_writing.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/functional_writing.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FunctionalWriting = exports.FunctionalWritingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass FunctionalWritingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Ignore functional writing in exception classes, local + global */\r\n        this.ignoreExceptions = true;\r\n    }\r\n}\r\nexports.FunctionalWritingConf = FunctionalWritingConf;\r\nclass FunctionalWriting extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new FunctionalWritingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"functional_writing\",\r\n            title: \"Use functional writing\",\r\n            shortDescription: `Detects usage of call method when functional style calls can be used.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-functional-to-procedural-calls\nhttps://docs.abapopenchecks.org/checks/07/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            badExample: `CALL METHOD zcl_class=>method( ).\nCALL METHOD cl_abap_typedescr=>describe_by_name\n  EXPORTING\n    p_name         = 'NAME'\n  RECEIVING\n    p_descr_ref    = lr_typedescr\n  EXCEPTIONS\n    type_not_found = 1\n    OTHERS         = 2.`,\r\n            goodExample: `zcl_class=>method( ).\ncl_abap_typedescr=>describe_by_name(\n  EXPORTING\n    p_name         = 'NAME'\n  RECEIVING\n    p_descr_ref    = lr_typedescr\n  EXCEPTIONS\n    type_not_found = 1\n    OTHERS         = 2 ).`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Use functional writing style for method calls\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        var _a, _b;\r\n        const issues = [];\r\n        let exception = false;\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        let definition = undefined;\r\n        if (obj instanceof objects_1.Class) {\r\n            definition = obj.getClassDefinition();\r\n        }\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const statNode of file.getStatements()) {\r\n            if (statNode.get() instanceof Statements.ClassImplementation\r\n                && definition\r\n                && ddic.isException(definition, obj)\r\n                && this.conf.ignoreExceptions) {\r\n                exception = true;\r\n            }\r\n            else if (statNode.get() instanceof Statements.EndClass) {\r\n                exception = false;\r\n            }\r\n            else if (exception === false && statNode.get() instanceof Statements.Call) {\r\n                if (((_a = statNode.getFirstChild()) === null || _a === void 0 ? void 0 : _a.get()) instanceof Expressions.MethodCallChain) {\r\n                    continue;\r\n                }\r\n                const dynamic = (_b = statNode.findDirectExpression(Expressions.MethodSource)) === null || _b === void 0 ? void 0 : _b.findDirectExpression(Expressions.Dynamic);\r\n                if (dynamic !== undefined) {\r\n                    continue;\r\n                }\r\n                issues.push(this.createIssueForStatementNode(file, statNode));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    createIssueForStatementNode(file, statNode) {\r\n        const fixString = this.buildFixString(statNode);\r\n        const fix = edit_helper_1.EditHelper.replaceRange(file, statNode.getStart(), statNode.getEnd(), fixString);\r\n        return issue_1.Issue.atStatement(file, statNode, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n    }\r\n    buildFixString(statNode) {\r\n        // Note: line breaks from source are lost\r\n        const methodSource = statNode.findDirectExpression(Expressions.MethodSource);\r\n        let methodSourceStr = methodSource === null || methodSource === void 0 ? void 0 : methodSource.concatTokens();\r\n        const methodBody = statNode.findDirectExpression(Expressions.MethodCallBody);\r\n        let methodBodyStr = \"\";\r\n        if (methodBody) {\r\n            const methodCallParam = methodBody.findDirectExpression(Expressions.MethodCallParam);\r\n            if (methodCallParam && methodCallParam.getFirstToken().getStr() === \"(\") {\r\n                // has parameters and parantheses\r\n                methodBodyStr = `${methodBody.concatTokens()}.`;\r\n            }\r\n            else {\r\n                // has parameters, but parentheses are missing\r\n                methodSourceStr = `${methodSourceStr}( `;\r\n                methodBodyStr = `${methodBody.concatTokens()} ).`;\r\n            }\r\n        }\r\n        else {\r\n            // no body means no parentheses and no parameters\r\n            methodBodyStr = \"( ).\";\r\n        }\r\n        return methodSourceStr + methodBodyStr;\r\n    }\r\n}\r\nexports.FunctionalWriting = FunctionalWriting;\r\n//# sourceMappingURL=functional_writing.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/functional_writing.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/global_class.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/global_class.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GlobalClass = exports.GlobalClassConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass GlobalClassConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.GlobalClassConf = GlobalClassConf;\r\nclass GlobalClass extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new GlobalClassConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"global_class\",\r\n            title: \"Global class checks\",\r\n            shortDescription: `Checks related to global classes.\n* global classes must be in own files\n* file names must match class name\n* global classes must be global definitions\n* global interfaces must be global definitions`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const output = [];\r\n        for (const definition of file.getInfo().listClassDefinitions()) {\r\n            if (definition.isLocal && obj instanceof Objects.Class && file.getFilename().match(/\\.clas\\.abap$/)) {\r\n                const issue = issue_1.Issue.atIdentifier(definition.identifier, \"Global classes must be global\", this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n            }\r\n            if (definition.isGlobal && obj instanceof Objects.Class && definition.name.toUpperCase() !== obj.getName().toUpperCase()) {\r\n                const issue = issue_1.Issue.atIdentifier(definition.identifier, \"Class definition name must match filename\", this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n            }\r\n            if (definition.isGlobal && !(obj instanceof Objects.Class)) {\r\n                const issue = issue_1.Issue.atIdentifier(definition.identifier, \"Class must be local\", this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n            }\r\n        }\r\n        for (const impl of file.getInfo().listClassImplementations()) {\r\n            if (file.getFilename().match(/\\.clas\\.abap$/)\r\n                && obj instanceof Objects.Class\r\n                && impl.identifier.getName().toUpperCase() !== obj.getName().toUpperCase()) {\r\n                const issue = issue_1.Issue.atIdentifier(impl.identifier, \"Class implementation name must match filename\", this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n            }\r\n        }\r\n        for (const intf of file.getInfo().listInterfaceDefinitions()) {\r\n            if (intf.isLocal && obj instanceof Objects.Interface && file.getFilename().match(/\\.intf\\.abap$/)) {\r\n                const issue = issue_1.Issue.atIdentifier(intf.identifier, \"Global interface must be global\", this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.GlobalClass = GlobalClass;\r\n//# sourceMappingURL=global_class.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/global_class.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/identical_conditions.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/identical_conditions.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IdenticalConditions = exports.IdenticalConditionsConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nclass Conditions {\r\n    constructor() {\r\n        this.arr = [];\r\n        this.arr = [];\r\n    }\r\n    push(e) {\r\n        this.arr.push(e.concatTokens());\r\n    }\r\n    hasDuplicates() {\r\n        return this.arr.some(x => this.arr.indexOf(x) !== this.arr.lastIndexOf(x));\r\n    }\r\n}\r\nclass IdenticalConditionsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.IdenticalConditionsConf = IdenticalConditionsConf;\r\nclass IdenticalConditions extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new IdenticalConditionsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"identical_conditions\",\r\n            title: \"Identical conditions\",\r\n            shortDescription: `Find identical conditions in IF + CASE + WHILE etc\n\nPrerequsites: code is pretty printed with identical cAsE`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        let issues = [];\r\n        const structure = file.getStructure();\r\n        if (structure === undefined) {\r\n            return [];\r\n        }\r\n        for (const i of structure.findAllStructures(Structures.If)) {\r\n            issues = issues.concat(this.analyzeIf(file, i));\r\n        }\r\n        for (const i of structure.findAllStructures(Structures.Case)) {\r\n            issues = issues.concat(this.analyzeWhen(file, i));\r\n        }\r\n        for (const i of structure.findAllExpressions(Expressions.Cond)) {\r\n            issues = issues.concat(this.analyzeCond(file, i));\r\n        }\r\n        return issues;\r\n    }\r\n    ////////////////\r\n    analyzeCond(file, node) {\r\n        const conditions = new Conditions();\r\n        let operator = \"\";\r\n        for (const c of node.getChildren()) {\r\n            if (c instanceof nodes_1.ExpressionNode) {\r\n                conditions.push(c);\r\n            }\r\n            else if (operator === \"\") {\r\n                operator = c.get().getStr().toUpperCase();\r\n            }\r\n            else if (operator !== c.get().getStr().toUpperCase()) {\r\n                return [];\r\n            }\r\n        }\r\n        if (conditions.hasDuplicates()) {\r\n            const message = \"Identical conditions\";\r\n            const issue = issue_1.Issue.atToken(file, node.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n            return [issue];\r\n        }\r\n        return [];\r\n    }\r\n    analyzeIf(file, node) {\r\n        var _a;\r\n        const conditions = new Conditions();\r\n        const i = node.findDirectStatement(Statements.If);\r\n        if (i === undefined) {\r\n            throw new Error(\"identical_conditions, no IF found\");\r\n        }\r\n        const c = i === null || i === void 0 ? void 0 : i.findDirectExpression(Expressions.Cond);\r\n        if (c) {\r\n            conditions.push(c);\r\n        }\r\n        for (const e of node.findDirectStructures(Structures.ElseIf)) {\r\n            const c = (_a = e.findDirectStatement(Statements.ElseIf)) === null || _a === void 0 ? void 0 : _a.findDirectExpression(Expressions.Cond);\r\n            if (c) {\r\n                conditions.push(c);\r\n            }\r\n        }\r\n        if (conditions.hasDuplicates()) {\r\n            const message = \"Identical conditions\";\r\n            const issue = issue_1.Issue.atStatement(file, i, message, this.getMetadata().key, this.conf.severity);\r\n            return [issue];\r\n        }\r\n        return [];\r\n    }\r\n    analyzeWhen(file, node) {\r\n        const conditions = new Conditions();\r\n        const i = node.findDirectStatement(Statements.Case);\r\n        if (i === undefined) {\r\n            throw new Error(\"identical_conditions, no CASE found\");\r\n        }\r\n        for (const e of node.findDirectStructures(Structures.When)) {\r\n            const w = e.findDirectStatement(Statements.When);\r\n            if (w === undefined) {\r\n                continue;\r\n            }\r\n            for (const s of w.findAllExpressions(Expressions.Source)) {\r\n                conditions.push(s);\r\n            }\r\n        }\r\n        if (conditions.hasDuplicates()) {\r\n            const message = \"Identical conditions\";\r\n            const issue = issue_1.Issue.atStatement(file, i, message, this.getMetadata().key, this.conf.severity);\r\n            return [issue];\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.IdenticalConditions = IdenticalConditions;\r\n//# sourceMappingURL=identical_conditions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/identical_conditions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/identical_contents.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/identical_contents.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IdenticalContents = exports.IdenticalContentsConf = void 0;\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nclass IdenticalContentsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.IdenticalContentsConf = IdenticalContentsConf;\r\nclass IdenticalContents extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new IdenticalContentsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"identical_contents\",\r\n            title: \"Identical contents\",\r\n            shortDescription: `Find identical contents in blocks inside IFs, both in the beginning and in the end.\n\nPrerequsites: code is pretty printed with identical cAsE\n\nChained statments are ignored`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `IF foo = bar.\n  WRITE 'bar'.\n  WRITE 'world'.\nELSE.\n  WRITE 'foo'.\n  WRITE 'world'.\nENDIF.`,\r\n            goodExample: `IF foo = bar.\n  WRITE 'bar'.\nELSE.\n  WRITE 'foo'.\nENDIF.\nWRITE 'world'.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        let issues = [];\r\n        const structure = file.getStructure();\r\n        if (structure === undefined) {\r\n            return [];\r\n        }\r\n        for (const i of structure.findAllStructuresRecursive(Structures.If)) {\r\n            issues = issues.concat(this.analyzeIf(file, i));\r\n        }\r\n        return issues;\r\n    }\r\n    ////////////////\r\n    analyzeIf(file, node) {\r\n        var _a;\r\n        if (node.getChildren().length !== 4) {\r\n            return [];\r\n        }\r\n        const ifBody = node.findDirectStructure(Structures.Body);\r\n        if (node.findDirectStructure(Structures.ElseIf)) {\r\n            return [];\r\n        }\r\n        const elseBody = (_a = node.findDirectStructure(Structures.Else)) === null || _a === void 0 ? void 0 : _a.findDirectStructure(Structures.Body);\r\n        if (elseBody === undefined || ifBody === undefined) {\r\n            return [];\r\n        }\r\n        {\r\n            const ifFirst = ifBody.getFirstChild();\r\n            const elseFirst = elseBody.getFirstChild();\r\n            if (ifFirst === undefined || elseFirst === undefined || this.isChained(ifFirst)) {\r\n                return [];\r\n            }\r\n            else if (ifFirst.concatTokens() === elseFirst.concatTokens()) {\r\n                const message = \"Identical contents\";\r\n                const issue = issue_1.Issue.atToken(file, node.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n                return [issue];\r\n            }\r\n        }\r\n        {\r\n            const ifLast = ifBody.getLastChild();\r\n            const elseLast = elseBody.getLastChild();\r\n            if (ifLast === undefined || elseLast === undefined || this.isChained(ifLast)) {\r\n                return [];\r\n            }\r\n            else if (ifLast.concatTokens() === elseLast.concatTokens()) {\r\n                const message = \"Identical contents\";\r\n                const issue = issue_1.Issue.atToken(file, node.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n                return [issue];\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    isChained(node) {\r\n        if (node === undefined) {\r\n            return false;\r\n        }\r\n        else if (node instanceof nodes_1.StatementNode) {\r\n            return node.getColon() !== undefined;\r\n        }\r\n        else {\r\n            return this.isChained(node.getFirstStatement());\r\n        }\r\n    }\r\n}\r\nexports.IdenticalContents = IdenticalContents;\r\n//# sourceMappingURL=identical_contents.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/identical_contents.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/identical_descriptions.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/identical_descriptions.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IdenticalDescriptions = exports.IdenticalDescriptionsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nclass IdenticalDescriptionsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.IdenticalDescriptionsConf = IdenticalDescriptionsConf;\r\nclass IdenticalDescriptions {\r\n    constructor() {\r\n        this.conf = new IdenticalDescriptionsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"identical_descriptions\",\r\n            title: \"Identical descriptions\",\r\n            shortDescription: `Searches for objects with the same type and same description`,\r\n            extendedInformation: `Case insensitive\n\nOnly checks the master language descriptions\n\nWorks for: INTF, CLAS, DOMA, DTEL, FUNC in same FUGR`,\r\n            tags: [],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        var _a;\r\n        this.descriptions = {};\r\n        this.types = [\"INTF\", \"CLAS\", \"DOMA\", \"DTEL\"];\r\n        for (const o of reg.getObjects()) {\r\n            const type = o.getType();\r\n            if (this.types.includes(type)) {\r\n                const description = (_a = o.getDescription()) === null || _a === void 0 ? void 0 : _a.toUpperCase();\r\n                if (description === undefined || description === \"\") {\r\n                    continue;\r\n                }\r\n                if (this.descriptions[type] === undefined) {\r\n                    this.descriptions[type] = {};\r\n                }\r\n                if (this.descriptions[type][description] === undefined) {\r\n                    this.descriptions[type][description] = [];\r\n                }\r\n                this.descriptions[type][description].push(o.getName());\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    run(o) {\r\n        var _a;\r\n        const issues = [];\r\n        const type = o.getType();\r\n        if (this.types.includes(type)) {\r\n            const description = (_a = o.getDescription()) === null || _a === void 0 ? void 0 : _a.toUpperCase();\r\n            if (description === undefined || description === \"\") {\r\n                return issues;\r\n            }\r\n            const found = this.descriptions[type][description].filter(a => a !== o.getName());\r\n            if (found.length > 0) {\r\n                const message = \"Identical description: \" + found[0];\r\n                issues.push(issue_1.Issue.atRow(o.getXMLFile(), 1, message, this.getMetadata().key, this.getConfig().severity));\r\n            }\r\n        }\r\n        if (o instanceof objects_1.FunctionGroup) {\r\n            issues.push(...this.checkFunctionModules(o));\r\n        }\r\n        return issues;\r\n    }\r\n    checkFunctionModules(fugr) {\r\n        var _a;\r\n        const descriptions = {};\r\n        for (const fm of fugr.getModules()) {\r\n            const d = (_a = fm.getDescription()) === null || _a === void 0 ? void 0 : _a.toUpperCase();\r\n            if (d === undefined || d === \"\") {\r\n                continue;\r\n            }\r\n            if (descriptions[d] !== undefined) {\r\n                const message = \"FUGR \" + fugr.getName() + \" contains function modules with identical descriptions\";\r\n                return [issue_1.Issue.atRow(fugr.getXMLFile(), 1, message, this.getMetadata().key, this.getConfig().severity)];\r\n            }\r\n            descriptions[d] = true;\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.IdenticalDescriptions = IdenticalDescriptions;\r\n//# sourceMappingURL=identical_descriptions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/identical_descriptions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/identical_form_names.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/identical_form_names.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IdenticalFormNames = exports.IdenticalFormNamesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nclass IdenticalFormNamesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.IdenticalFormNamesConf = IdenticalFormNamesConf;\r\nclass IdenticalFormNames {\r\n    constructor() {\r\n        this.conf = new IdenticalFormNamesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"identical_form_names\",\r\n            title: \"Identical FORM names\",\r\n            shortDescription: `Detects identically named FORMs`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        const found = [];\r\n        for (const file of obj.getABAPFiles()) {\r\n            for (const form of file.getInfo().listFormDefinitions()) {\r\n                const name = form.name.toUpperCase();\r\n                if (found.indexOf(name) >= 0) {\r\n                    const message = \"Identical FORM Names: \\\"\" + name + \"\\\"\";\r\n                    const issue = issue_1.Issue.atIdentifier(form.identifier, message, this.getMetadata().key, this.conf.severity);\r\n                    ret.push(issue);\r\n                }\r\n                else {\r\n                    found.push(name);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.IdenticalFormNames = IdenticalFormNames;\r\n//# sourceMappingURL=identical_form_names.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/identical_form_names.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/if_in_if.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/if_in_if.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IfInIf = exports.IfInIfConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass IfInIfConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.IfInIfConf = IfInIfConf;\r\nclass IfInIf extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new IfInIfConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"if_in_if\",\r\n            title: \"IF in IF\",\r\n            shortDescription: `Detects nested ifs which can be refactored to a single condition using AND.`,\r\n            extendedInformation: `https://docs.abapopenchecks.org/checks/01/\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#keep-the-nesting-depth-low`,\r\n            badExample: `IF condition1.\n  IF condition2.\n    ...\n  ENDIF.\nENDIF.`,\r\n            goodExample: `IF ( condition1 ) AND ( condition2 ).\n  ...\nENDIF.`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"IF in IF. Use IF cond1 AND cond2 instead\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        let possible = stru.findAllStructures(Structures.If);\r\n        possible = possible.concat(stru.findAllStructures(Structures.Else));\r\n        for (const i of possible) {\r\n            if (i.findDirectStructures(Structures.ElseIf).length > 0\r\n                || i.findDirectStructures(Structures.Else).length > 0) {\r\n                continue;\r\n            }\r\n            const blist = i.findDirectStructures(Structures.Body);\r\n            if (blist.length === 0) {\r\n                continue;\r\n            }\r\n            const nlist = blist[0].findDirectStructures(Structures.Normal);\r\n            if (nlist.length !== 1) {\r\n                continue;\r\n            }\r\n            const niflist = nlist[0].findDirectStructures(Structures.If);\r\n            if (niflist.length !== 1) {\r\n                continue;\r\n            }\r\n            const nestedIf = niflist[0];\r\n            if (i.get() instanceof Structures.If\r\n                && (nestedIf.findDirectStructures(Structures.ElseIf).length > 0\r\n                    || nestedIf.findDirectStructures(Structures.Else).length > 0)) {\r\n                continue;\r\n            }\r\n            const token = i.getFirstToken();\r\n            const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n            issues.push(issue);\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.IfInIf = IfInIf;\r\n//# sourceMappingURL=if_in_if.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/if_in_if.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/implement_methods.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/implement_methods.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ImplementMethods = exports.ImplementMethodsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\n// todo: abstract methods from superclass parents(might be multiple), if class is not abstract\r\nclass ImplementMethodsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ImplementMethodsConf = ImplementMethodsConf;\r\nclass ImplementMethods extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ImplementMethodsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"implement_methods\",\r\n            title: \"Implement methods\",\r\n            shortDescription: `Checks for abstract methods and methods from interfaces which need implementing.`,\r\n            tags: [_irule_1.RuleTag.Syntax, _irule_1.RuleTag.Quickfix],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        let ret = [];\r\n        if (file.getStructure() === undefined) {\r\n            return [];\r\n        }\r\n        this.obj = obj;\r\n        for (const classDefinition of file.getInfo().listClassDefinitions()) {\r\n            const classImplementation = this.lookupImplementationInObject(classDefinition.name, obj);\r\n            if (classImplementation === undefined) {\r\n                const message = \"Class implementation for \\\"\" + classDefinition.name + \"\\\" not found\";\r\n                const issue = issue_1.Issue.atIdentifier(classDefinition.identifier, message, this.getMetadata().key, this.conf.severity);\r\n                ret.push(issue);\r\n                continue;\r\n            }\r\n            ret = ret.concat(this.checkClass(classDefinition, classImplementation));\r\n            ret = ret.concat(this.checkInterfaces(classDefinition, classImplementation));\r\n        }\r\n        return ret;\r\n    }\r\n    /////////////////////////////////\r\n    lookupImplementationInObject(name, obj) {\r\n        for (const sub of obj.getABAPFiles()) {\r\n            const impl = sub.getInfo().getClassImplementationByName(name);\r\n            if (impl !== undefined) {\r\n                return impl;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    lookupDefinitionInObject(name) {\r\n        for (const sub of this.obj.getABAPFiles()) {\r\n            const def = sub.getInfo().getClassDefinitionByName(name);\r\n            if (def !== undefined) {\r\n                return def;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkClass(def, impl) {\r\n        const ret = [];\r\n        for (const md of def.methods) {\r\n            const found = impl.methods.find(m => m.getName().toUpperCase() === md.name.toUpperCase());\r\n            if (md.isAbstract === true) {\r\n                if (found !== undefined) {\r\n                    const issue = issue_1.Issue.atIdentifier(found, \"Do not implement abstract method \\\"\" + md.name + \"\\\"\", this.getMetadata().key, this.conf.severity);\r\n                    ret.push(issue);\r\n                }\r\n                continue;\r\n            }\r\n            if (found === undefined) {\r\n                const message = \"Implement method \\\"\" + md.name + \"\\\"\";\r\n                const fix = this.buildFix(impl, md.name);\r\n                const issue = issue_1.Issue.atIdentifier(impl.identifier, message, this.getMetadata().key, this.conf.severity, fix);\r\n                ret.push(issue);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    buildFix(impl, methodName) {\r\n        var _a, _b;\r\n        const file = this.obj.getABAPFileByName(impl.identifier.getFilename());\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        for (const i of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllStatements(Statements.ClassImplementation)) || []) {\r\n            const name = (_b = i.findFirstExpression(Expressions.ClassName)) === null || _b === void 0 ? void 0 : _b.getFirstToken().getStr().toUpperCase();\r\n            if (name === impl.identifier.getName().toUpperCase()) {\r\n                return edit_helper_1.EditHelper.insertAt(file, i.getLastToken().getEnd(), `\n  METHOD ${methodName.toLowerCase()}.\n    RETURN. \" todo, implement method\n  ENDMETHOD.`);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findInterface(identifier, name) {\r\n        const idef = this.findInterfaceByName(name);\r\n        if (idef === undefined) {\r\n            const message = \"Implemented interface \\\"\" + name + \"\\\" not found\";\r\n            const issue = issue_1.Issue.atIdentifier(identifier, message, this.getMetadata().key, this.conf.severity);\r\n            return issue;\r\n        }\r\n        return idef;\r\n    }\r\n    findInterfaceByName(name) {\r\n        var _a;\r\n        let idef = undefined;\r\n        const intf = this.reg.getObject(\"INTF\", name);\r\n        if (intf === undefined) {\r\n            // lookup in localfiles\r\n            for (const file of this.obj.getABAPFiles()) {\r\n                const found = file.getInfo().getInterfaceDefinitionByName(name);\r\n                if (found) {\r\n                    idef = found;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            idef = (_a = intf.getMainABAPFile()) === null || _a === void 0 ? void 0 : _a.getInfo().listInterfaceDefinitions()[0];\r\n        }\r\n        return idef;\r\n    }\r\n    /** including implemented super interfaces */\r\n    findInterfaceMethods(idef) {\r\n        const methods = idef.methods.map((m) => {\r\n            return { objectName: idef.name, method: m };\r\n        });\r\n        for (const i of idef.interfaces) {\r\n            const sup = this.findInterface(idef.identifier, i.name);\r\n            if (sup !== undefined && !(sup instanceof issue_1.Issue)) {\r\n                sup.methods.forEach(m => {\r\n                    methods.push({ objectName: sup.name, method: m });\r\n                });\r\n            }\r\n        }\r\n        return methods;\r\n    }\r\n    findClass(name) {\r\n        let def = this.lookupDefinitionInObject(name);\r\n        let impl = this.lookupImplementationInObject(name, this.obj);\r\n        if (def && impl) {\r\n            return { def, impl };\r\n        }\r\n        const global = this.reg.getObject(\"CLAS\", name);\r\n        if (global) {\r\n            def = global.getClassDefinition();\r\n            impl = this.lookupImplementationInObject(name, global);\r\n            if (def && impl) {\r\n                return { def, impl };\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkInterfaces(def, impl) {\r\n        const ret = [];\r\n        for (const interfaceInfo of def.interfaces) {\r\n            const idef = this.findInterface(def.identifier, interfaceInfo.name);\r\n            if (idef === undefined || interfaceInfo.partial === true || interfaceInfo.allAbstract === true) {\r\n                continue; // ignore parser errors in interface\r\n            }\r\n            else if (idef instanceof issue_1.Issue) {\r\n                return [idef];\r\n            }\r\n            for (const m of this.findInterfaceMethods(idef)) {\r\n                if (interfaceInfo.abstractMethods.includes(m.method.name.toUpperCase())) {\r\n                    continue;\r\n                }\r\n                if (this.isImplemented(m, def, impl) === false) {\r\n                    const message = \"Implement method \\\"\" + m.method.name + \"\\\" from interface \\\"\" + m.objectName + \"\\\"\";\r\n                    const fix = this.buildFix(impl, m.objectName + \"~\" + m.method.name);\r\n                    const issue = issue_1.Issue.atIdentifier(impl.identifier, message, this.getMetadata().key, this.conf.severity, fix);\r\n                    ret.push(issue);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isImplemented(m, def, impl) {\r\n        const name = m.objectName + \"~\" + m.method.name;\r\n        let found = impl.methods.find(m => m.getName().toUpperCase() === name.toUpperCase());\r\n        if (found === undefined) {\r\n            // try looking for ALIASes\r\n            for (const alias of def.aliases) {\r\n                if (alias.component.toUpperCase() === name.toUpperCase()) {\r\n                    found = impl.methods.find(m => m.getName().toUpperCase() === alias.name.toUpperCase());\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (found === undefined && def.superClassName !== undefined) {\r\n            const clas = this.findClass(def.superClassName);\r\n            if (clas) {\r\n                return this.isImplemented(m, clas === null || clas === void 0 ? void 0 : clas.def, clas === null || clas === void 0 ? void 0 : clas.impl);\r\n            }\r\n        }\r\n        if (found === undefined) {\r\n            for (const i of def.interfaces) {\r\n                const idef = this.findInterfaceByName(i.name);\r\n                if (idef === undefined) {\r\n                    continue;\r\n                }\r\n                const ali = this.viaAliasInInterface(m, idef, impl);\r\n                if (ali) {\r\n                    return ali;\r\n                }\r\n            }\r\n        }\r\n        return found !== undefined;\r\n    }\r\n    viaAliasInInterface(m, intf, impl) {\r\n        for (const a of intf.aliases) {\r\n            if (a.component.toUpperCase() === m.objectName.toUpperCase() + \"~\" + m.method.name.toUpperCase()) {\r\n                const name = intf.name + \"~\" + a.name;\r\n                const found = impl.methods.find(m => m.getName().toUpperCase() === name.toUpperCase());\r\n                if (found) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.ImplementMethods = ImplementMethods;\r\n//# sourceMappingURL=implement_methods.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/implement_methods.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/in_statement_indentation.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/in_statement_indentation.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InStatementIndentation = exports.InStatementIndentationConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass InStatementIndentationConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Ignore global exception classes */\r\n        this.ignoreExceptions = true;\r\n    }\r\n}\r\nexports.InStatementIndentationConf = InStatementIndentationConf;\r\nclass InStatementIndentation extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new InStatementIndentationConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"in_statement_indentation\",\r\n            title: \"In-statement indentation\",\r\n            // eslint-disable-next-line max-len\r\n            shortDescription: `Checks alignment within block statement declarations which span multiple lines, such as multiple conditions in IF statements.`,\r\n            badExample: `IF 1 = 1\n  AND 2 = 2.\n  WRITE 'hello'.\nENDIF.`,\r\n            goodExample: `IF 1 = 1\n    AND 2 = 2.\n  WRITE 'hello'.\nENDIF.`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Fix in-statement indentation\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const ret = [];\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        if (obj instanceof objects_1.Class) {\r\n            const definition = obj.getClassDefinition();\r\n            if (definition === undefined) {\r\n                return [];\r\n            }\r\n            else if (this.conf.ignoreExceptions && ddic.isException(definition, obj)) {\r\n                return [];\r\n            }\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            if (s.get() instanceof _statement_1.Comment || s.get() instanceof _statement_1.Unknown) {\r\n                continue;\r\n            }\r\n            const tokens = s.getTokens();\r\n            if (tokens.length === 0) {\r\n                continue;\r\n            }\r\n            const beginLine = tokens[0].getRow();\r\n            let expected = tokens[0].getCol() + 2;\r\n            const type = s.get();\r\n            if (type instanceof Statements.If\r\n                || type instanceof Statements.While\r\n                || type instanceof Statements.Module\r\n                || type instanceof Statements.SelectLoop\r\n                || type instanceof Statements.FunctionModule\r\n                || type instanceof Statements.Do\r\n                || type instanceof Statements.At\r\n                || type instanceof Statements.Catch\r\n                || type instanceof Statements.When\r\n                || type instanceof Statements.Cleanup\r\n                || type instanceof Statements.Loop\r\n                || type instanceof Statements.Form\r\n                || type instanceof Statements.Else\r\n                || type instanceof Statements.ElseIf\r\n                || type instanceof Statements.MethodImplementation) {\r\n                expected = expected + 2;\r\n            }\r\n            for (const t of tokens) {\r\n                if (t.getRow() === beginLine) {\r\n                    continue;\r\n                }\r\n                if (t.getCol() < expected) {\r\n                    const fix = edit_helper_1.EditHelper.replaceRange(file, new position_1.Position(t.getRow(), 1), t.getStart(), \" \".repeat(expected - 1));\r\n                    const issue = issue_1.Issue.atToken(file, t, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                    ret.push(issue);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.InStatementIndentation = InStatementIndentation;\r\n//# sourceMappingURL=in_statement_indentation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/in_statement_indentation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/indentation.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/indentation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Indentation = exports.IndentationConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst indent_1 = __webpack_require__(/*! ../pretty_printer/indent */ \"./node_modules/@abaplint/core/build/src/pretty_printer/indent.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass IndentationConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Ignore global exception classes */\r\n        this.ignoreExceptions = true;\r\n        /** Align TRY CATCH, TRY and CATCH should have the same indentation */\r\n        this.alignTryCatch = false;\r\n        /** Add indentation for SELECTION SCREEN BLOCK, standard pretty printer indents this from 754 */\r\n        this.selectionScreenBlockIndentation = false;\r\n        this.globalClassSkipFirst = false;\r\n        this.ignoreGlobalClassDefinition = false;\r\n        this.ignoreGlobalInterface = false;\r\n    }\r\n}\r\nexports.IndentationConf = IndentationConf;\r\nclass Indentation extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new IndentationConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"indentation\",\r\n            title: \"Indentation\",\r\n            shortDescription: `Checks indentation`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        var _a, _b;\r\n        const MAX_ISSUES = 100;\r\n        let skip = false;\r\n        if (file.getStructure() === undefined) {\r\n            return []; // syntax error in file\r\n        }\r\n        if (obj instanceof objects_1.Class) {\r\n            const definition = obj.getClassDefinition();\r\n            const ddic = new ddic_1.DDIC(this.reg);\r\n            if (definition === undefined) {\r\n                return [];\r\n            }\r\n            else if (this.conf.ignoreExceptions && ddic.isException(definition, obj)) {\r\n                return [];\r\n            }\r\n        }\r\n        const indentOpts = {\r\n            selectionScreenBlockIndentation: (_a = this.conf) === null || _a === void 0 ? void 0 : _a.selectionScreenBlockIndentation,\r\n            alignTryCatch: (_b = this.conf) === null || _b === void 0 ? void 0 : _b.alignTryCatch,\r\n            globalClassSkipFirst: this.conf.globalClassSkipFirst,\r\n        };\r\n        const expected = new indent_1.Indent(indentOpts).getExpectedIndents(file);\r\n        const ret = [];\r\n        for (const statement of file.getStatements()) {\r\n            const position = statement.getFirstToken().getStart();\r\n            if (position instanceof position_1.VirtualPosition) {\r\n                continue;\r\n            }\r\n            const indent = expected.shift();\r\n            if (this.conf.ignoreGlobalClassDefinition) {\r\n                if (statement.get() instanceof Statements.ClassDefinition\r\n                    && statement.findFirstExpression(Expressions.ClassGlobal)) {\r\n                    skip = true;\r\n                    continue;\r\n                }\r\n                else if (skip === true && statement.get() instanceof Statements.EndClass) {\r\n                    skip = false;\r\n                    continue;\r\n                }\r\n                else if (skip === true) {\r\n                    continue;\r\n                }\r\n            }\r\n            if (this.conf.ignoreGlobalInterface) {\r\n                if (statement.get() instanceof Statements.Interface\r\n                    && statement.findFirstExpression(Expressions.ClassGlobal)) {\r\n                    skip = true;\r\n                    continue;\r\n                }\r\n                else if (skip === true && statement.get() instanceof Statements.EndInterface) {\r\n                    skip = false;\r\n                    continue;\r\n                }\r\n                else if (skip === true) {\r\n                    continue;\r\n                }\r\n            }\r\n            if (indent && indent > 0 && indent !== position.getCol()) {\r\n                const expected = indent - 1;\r\n                const fix = edit_helper_1.EditHelper.replaceRange(file, new position_1.Position(position.getRow(), 1), position, \" \".repeat(expected));\r\n                const message = \"Indentation problem, expected \" + expected + \" spaces\";\r\n                const issue = issue_1.Issue.atPosition(file, position, message, this.getMetadata().key, this.conf.severity, fix);\r\n                ret.push(issue);\r\n                if (ret.length >= MAX_ISSUES) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.Indentation = Indentation;\r\n//# sourceMappingURL=indentation.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/indentation.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./7bit_ascii */ \"./node_modules/@abaplint/core/build/src/rules/7bit_ascii.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./abapdoc */ \"./node_modules/@abaplint/core/build/src/rules/abapdoc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./allowed_object_naming */ \"./node_modules/@abaplint/core/build/src/rules/allowed_object_naming.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./allowed_object_types */ \"./node_modules/@abaplint/core/build/src/rules/allowed_object_types.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./ambiguous_statement */ \"./node_modules/@abaplint/core/build/src/rules/ambiguous_statement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./avoid_use */ \"./node_modules/@abaplint/core/build/src/rules/avoid_use.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./begin_end_names */ \"./node_modules/@abaplint/core/build/src/rules/begin_end_names.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./begin_single_include */ \"./node_modules/@abaplint/core/build/src/rules/begin_single_include.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./call_transaction_authority_check */ \"./node_modules/@abaplint/core/build/src/rules/call_transaction_authority_check.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./chain_mainly_declarations */ \"./node_modules/@abaplint/core/build/src/rules/chain_mainly_declarations.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_abstract */ \"./node_modules/@abaplint/core/build/src/rules/check_abstract.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_comments */ \"./node_modules/@abaplint/core/build/src/rules/check_comments.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_ddic */ \"./node_modules/@abaplint/core/build/src/rules/check_ddic.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_include */ \"./node_modules/@abaplint/core/build/src/rules/check_include.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_no_handler_pragma */ \"./node_modules/@abaplint/core/build/src/rules/check_no_handler_pragma.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_subrc */ \"./node_modules/@abaplint/core/build/src/rules/check_subrc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_syntax */ \"./node_modules/@abaplint/core/build/src/rules/check_syntax.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_text_elements */ \"./node_modules/@abaplint/core/build/src/rules/check_text_elements.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./check_transformation_exists */ \"./node_modules/@abaplint/core/build/src/rules/check_transformation_exists.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./class_attribute_names */ \"./node_modules/@abaplint/core/build/src/rules/class_attribute_names.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cloud_types */ \"./node_modules/@abaplint/core/build/src/rules/cloud_types.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./colon_missing_space */ \"./node_modules/@abaplint/core/build/src/rules/colon_missing_space.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./commented_code */ \"./node_modules/@abaplint/core/build/src/rules/commented_code.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./constructor_visibility_public */ \"./node_modules/@abaplint/core/build/src/rules/constructor_visibility_public.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./contains_tab */ \"./node_modules/@abaplint/core/build/src/rules/contains_tab.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./cyclomatic_complexity */ \"./node_modules/@abaplint/core/build/src/rules/cyclomatic_complexity.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./dangerous_statement */ \"./node_modules/@abaplint/core/build/src/rules/dangerous_statement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./db_operation_in_loop */ \"./node_modules/@abaplint/core/build/src/rules/db_operation_in_loop.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./definitions_top */ \"./node_modules/@abaplint/core/build/src/rules/definitions_top.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./description_empty */ \"./node_modules/@abaplint/core/build/src/rules/description_empty.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./double_space */ \"./node_modules/@abaplint/core/build/src/rules/double_space.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./downport */ \"./node_modules/@abaplint/core/build/src/rules/downport.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./empty_line_in_statement */ \"./node_modules/@abaplint/core/build/src/rules/empty_line_in_statement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./empty_statement */ \"./node_modules/@abaplint/core/build/src/rules/empty_statement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./empty_structure */ \"./node_modules/@abaplint/core/build/src/rules/empty_structure.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./exit_or_check */ \"./node_modules/@abaplint/core/build/src/rules/exit_or_check.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./exporting */ \"./node_modules/@abaplint/core/build/src/rules/exporting.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./forbidden_identifier */ \"./node_modules/@abaplint/core/build/src/rules/forbidden_identifier.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./forbidden_pseudo_and_pragma */ \"./node_modules/@abaplint/core/build/src/rules/forbidden_pseudo_and_pragma.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./forbidden_void_type */ \"./node_modules/@abaplint/core/build/src/rules/forbidden_void_type.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./form_tables_obsolete */ \"./node_modules/@abaplint/core/build/src/rules/form_tables_obsolete.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./fully_type_constants */ \"./node_modules/@abaplint/core/build/src/rules/fully_type_constants.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./function_module_recommendations */ \"./node_modules/@abaplint/core/build/src/rules/function_module_recommendations.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./functional_writing */ \"./node_modules/@abaplint/core/build/src/rules/functional_writing.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./global_class */ \"./node_modules/@abaplint/core/build/src/rules/global_class.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./identical_conditions */ \"./node_modules/@abaplint/core/build/src/rules/identical_conditions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./identical_contents */ \"./node_modules/@abaplint/core/build/src/rules/identical_contents.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./identical_descriptions */ \"./node_modules/@abaplint/core/build/src/rules/identical_descriptions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./identical_form_names */ \"./node_modules/@abaplint/core/build/src/rules/identical_form_names.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./if_in_if */ \"./node_modules/@abaplint/core/build/src/rules/if_in_if.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./implement_methods */ \"./node_modules/@abaplint/core/build/src/rules/implement_methods.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./in_statement_indentation */ \"./node_modules/@abaplint/core/build/src/rules/in_statement_indentation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./indentation */ \"./node_modules/@abaplint/core/build/src/rules/indentation.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./inline_data_old_versions */ \"./node_modules/@abaplint/core/build/src/rules/inline_data_old_versions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./intf_referencing_clas */ \"./node_modules/@abaplint/core/build/src/rules/intf_referencing_clas.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./keep_single_parameter_on_one_line */ \"./node_modules/@abaplint/core/build/src/rules/keep_single_parameter_on_one_line.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./keyword_case */ \"./node_modules/@abaplint/core/build/src/rules/keyword_case.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./line_break_multiple_parameters */ \"./node_modules/@abaplint/core/build/src/rules/line_break_multiple_parameters.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./line_break_style */ \"./node_modules/@abaplint/core/build/src/rules/line_break_style.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./line_length */ \"./node_modules/@abaplint/core/build/src/rules/line_length.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./line_only_punc */ \"./node_modules/@abaplint/core/build/src/rules/line_only_punc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./local_class_naming */ \"./node_modules/@abaplint/core/build/src/rules/local_class_naming.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./local_testclass_location */ \"./node_modules/@abaplint/core/build/src/rules/local_testclass_location.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./local_variable_names */ \"./node_modules/@abaplint/core/build/src/rules/local_variable_names.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./main_file_contents */ \"./node_modules/@abaplint/core/build/src/rules/main_file_contents.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./many_parenthesis */ \"./node_modules/@abaplint/core/build/src/rules/many_parenthesis.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./max_one_method_parameter_per_line */ \"./node_modules/@abaplint/core/build/src/rules/max_one_method_parameter_per_line.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./max_one_statement */ \"./node_modules/@abaplint/core/build/src/rules/max_one_statement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./message_exists */ \"./node_modules/@abaplint/core/build/src/rules/message_exists.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_implemented_twice */ \"./node_modules/@abaplint/core/build/src/rules/method_implemented_twice.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_length */ \"./node_modules/@abaplint/core/build/src/rules/method_length.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_overwrites_builtin */ \"./node_modules/@abaplint/core/build/src/rules/method_overwrites_builtin.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./method_parameter_names */ \"./node_modules/@abaplint/core/build/src/rules/method_parameter_names.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./mix_returning */ \"./node_modules/@abaplint/core/build/src/rules/mix_returning.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./modify_only_own_db_tables */ \"./node_modules/@abaplint/core/build/src/rules/modify_only_own_db_tables.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./msag_consistency */ \"./node_modules/@abaplint/core/build/src/rules/msag_consistency.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./names_no_dash */ \"./node_modules/@abaplint/core/build/src/rules/names_no_dash.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./nesting */ \"./node_modules/@abaplint/core/build/src/rules/nesting.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./newline_between_methods */ \"./node_modules/@abaplint/core/build/src/rules/newline_between_methods.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./no_public_attributes */ \"./node_modules/@abaplint/core/build/src/rules/no_public_attributes.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./no_yoda_conditions */ \"./node_modules/@abaplint/core/build/src/rules/no_yoda_conditions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./object_naming */ \"./node_modules/@abaplint/core/build/src/rules/object_naming.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./obsolete_statement */ \"./node_modules/@abaplint/core/build/src/rules/obsolete_statement.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./omit_parameter_name */ \"./node_modules/@abaplint/core/build/src/rules/omit_parameter_name.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./omit_receiving */ \"./node_modules/@abaplint/core/build/src/rules/omit_receiving.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parser_702_chaining */ \"./node_modules/@abaplint/core/build/src/rules/parser_702_chaining.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parser_error */ \"./node_modules/@abaplint/core/build/src/rules/parser_error.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./parser_missing_space */ \"./node_modules/@abaplint/core/build/src/rules/parser_missing_space.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./prefer_inline */ \"./node_modules/@abaplint/core/build/src/rules/prefer_inline.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./prefer_is_not */ \"./node_modules/@abaplint/core/build/src/rules/prefer_is_not.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./prefer_raise_exception_new */ \"./node_modules/@abaplint/core/build/src/rules/prefer_raise_exception_new.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./prefer_returning_to_exporting */ \"./node_modules/@abaplint/core/build/src/rules/prefer_returning_to_exporting.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./prefer_xsdbool */ \"./node_modules/@abaplint/core/build/src/rules/prefer_xsdbool.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./preferred_compare_operator */ \"./node_modules/@abaplint/core/build/src/rules/preferred_compare_operator.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./prefix_is_current_class */ \"./node_modules/@abaplint/core/build/src/rules/prefix_is_current_class.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./reduce_string_templates */ \"./node_modules/@abaplint/core/build/src/rules/reduce_string_templates.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./release_idoc */ \"./node_modules/@abaplint/core/build/src/rules/release_idoc.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./remove_descriptions */ \"./node_modules/@abaplint/core/build/src/rules/remove_descriptions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./rfc_error_handling */ \"./node_modules/@abaplint/core/build/src/rules/rfc_error_handling.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./select_add_order_by */ \"./node_modules/@abaplint/core/build/src/rules/select_add_order_by.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./select_performance */ \"./node_modules/@abaplint/core/build/src/rules/select_performance.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./selection_screen_naming */ \"./node_modules/@abaplint/core/build/src/rules/selection_screen_naming.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sequential_blank */ \"./node_modules/@abaplint/core/build/src/rules/sequential_blank.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./short_case */ \"./node_modules/@abaplint/core/build/src/rules/short_case.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sicf_consistency */ \"./node_modules/@abaplint/core/build/src/rules/sicf_consistency.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./space_before_colon */ \"./node_modules/@abaplint/core/build/src/rules/space_before_colon.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./space_before_dot */ \"./node_modules/@abaplint/core/build/src/rules/space_before_dot.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sql_escape_host_variables */ \"./node_modules/@abaplint/core/build/src/rules/sql_escape_host_variables.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./start_at_tab */ \"./node_modules/@abaplint/core/build/src/rules/start_at_tab.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./superclass_final */ \"./node_modules/@abaplint/core/build/src/rules/superclass_final.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./sy_modification */ \"./node_modules/@abaplint/core/build/src/rules/sy_modification.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./tabl_enhancement_category */ \"./node_modules/@abaplint/core/build/src/rules/tabl_enhancement_category.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./try_without_catch */ \"./node_modules/@abaplint/core/build/src/rules/try_without_catch.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./type_form_parameters */ \"./node_modules/@abaplint/core/build/src/rules/type_form_parameters.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./types_naming */ \"./node_modules/@abaplint/core/build/src/rules/types_naming.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./uncaught_exception */ \"./node_modules/@abaplint/core/build/src/rules/uncaught_exception.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unknown_types */ \"./node_modules/@abaplint/core/build/src/rules/unknown_types.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unreachable_code */ \"./node_modules/@abaplint/core/build/src/rules/unreachable_code.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unsecure_fae */ \"./node_modules/@abaplint/core/build/src/rules/unsecure_fae.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unused_methods */ \"./node_modules/@abaplint/core/build/src/rules/unused_methods.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unused_types */ \"./node_modules/@abaplint/core/build/src/rules/unused_types.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./unused_variables */ \"./node_modules/@abaplint/core/build/src/rules/unused_variables.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./use_bool_expression */ \"./node_modules/@abaplint/core/build/src/rules/use_bool_expression.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./use_class_based_exceptions */ \"./node_modules/@abaplint/core/build/src/rules/use_class_based_exceptions.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./use_line_exists */ \"./node_modules/@abaplint/core/build/src/rules/use_line_exists.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./use_new */ \"./node_modules/@abaplint/core/build/src/rules/use_new.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./when_others_last */ \"./node_modules/@abaplint/core/build/src/rules/when_others_last.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./whitespace_end */ \"./node_modules/@abaplint/core/build/src/rules/whitespace_end.js\"), exports);\r\n__exportStar(__webpack_require__(/*! ./xml_consistency */ \"./node_modules/@abaplint/core/build/src/rules/xml_consistency.js\"), exports);\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/index.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/inline_data_old_versions.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/inline_data_old_versions.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InlineDataOldVersions = exports.InlineDataOldVersionsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass InlineDataOldVersionsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.InlineDataOldVersionsConf = InlineDataOldVersionsConf;\r\nclass InlineDataOldVersions extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new InlineDataOldVersionsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"inline_data_old_versions\",\r\n            title: \"Inline data, old versions\",\r\n            shortDescription: `Checks for inline data declarations in older releases. Only active for versions less than v740sp02`,\r\n            tags: [_irule_1.RuleTag.Syntax, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        if (this.reg.getConfig().getVersion() >= version_1.Version.v740sp02\r\n            || this.reg.getConfig().getVersion() === version_1.Version.Cloud) {\r\n            return [];\r\n        }\r\n        for (const statement of file.getStatements()) {\r\n            // when parsed in old versions these expressions are NOT InlineData\r\n            for (const target of statement.findAllExpressions(expressions_1.Target)) {\r\n                const tokens = target.getAllTokens();\r\n                if (tokens.length !== 4) {\r\n                    continue;\r\n                }\r\n                if (!tokens[0].getStr().match(/DATA/i)) {\r\n                    continue;\r\n                }\r\n                if (tokens[1].getStr() !== \"(\") {\r\n                    continue;\r\n                }\r\n                if (tokens[3].getStr() !== \")\") {\r\n                    continue;\r\n                }\r\n                const message = \"Inline DATA not possible in \" + this.reg.getConfig().getVersion();\r\n                const issue = issue_1.Issue.atToken(file, tokens[0], message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.InlineDataOldVersions = InlineDataOldVersions;\r\n//# sourceMappingURL=inline_data_old_versions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/inline_data_old_versions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/intf_referencing_clas.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/intf_referencing_clas.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IntfReferencingClas = exports.IntfReferencingClasConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass IntfReferencingClasConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** List of classes allowed to be referenced, regex, case insensitive\r\n         * @uniqueItems true\r\n        */\r\n        this.allow = [];\r\n    }\r\n}\r\nexports.IntfReferencingClasConf = IntfReferencingClasConf;\r\nclass IntfReferencingClas {\r\n    constructor() {\r\n        this.conf = new IntfReferencingClasConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"intf_referencing_clas\",\r\n            title: \"INTF referencing CLAS\",\r\n            shortDescription: `Interface contains references to class`,\r\n            extendedInformation: `Only global interfaces are checked.\n      Only first level references are checked.\n      Exception class references are ignored.\n      Void references are ignored.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        if (this.conf.allow === undefined) {\r\n            this.conf.allow = [];\r\n        }\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof objects_1.Interface)) {\r\n            return [];\r\n        }\r\n        return this.traverse(new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti.getTop());\r\n    }\r\n    ////////////////\r\n    traverse(node) {\r\n        var _a, _b;\r\n        let ret = [];\r\n        const message = \"Referencing CLAS: \";\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const r of node.getData().references) {\r\n            if (r.referenceType === _reference_1.ReferenceType.ObjectOrientedReference\r\n                && ((_a = r.extra) === null || _a === void 0 ? void 0 : _a.ooType) === \"CLAS\"\r\n                && ((_b = r.extra) === null || _b === void 0 ? void 0 : _b.ooName) !== undefined) {\r\n                const found = this.reg.getObject(\"CLAS\", r.extra.ooName) || undefined;\r\n                if (found && ddic.isException(found.getClassDefinition(), found)) {\r\n                    continue;\r\n                }\r\n                else if (this.getConfig().allow.some(reg => new RegExp(reg, \"i\").test(r.extra.ooName))) {\r\n                    continue;\r\n                }\r\n                ret.push(issue_1.Issue.atIdentifier(r.position, message + r.extra.ooName, this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            ret = ret.concat(this.traverse(c));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.IntfReferencingClas = IntfReferencingClas;\r\n//# sourceMappingURL=intf_referencing_clas.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/intf_referencing_clas.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/keep_single_parameter_on_one_line.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/keep_single_parameter_on_one_line.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.KeepSingleParameterCallsOnOneLine = exports.KeepSingleParameterCallsOnOneLineConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass KeepSingleParameterCallsOnOneLineConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Max line length, in characters */\r\n        this.length = 120;\r\n    }\r\n}\r\nexports.KeepSingleParameterCallsOnOneLineConf = KeepSingleParameterCallsOnOneLineConf;\r\nclass KeepSingleParameterCallsOnOneLine extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new KeepSingleParameterCallsOnOneLineConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"keep_single_parameter_on_one_line\",\r\n            title: \"Keep single parameters on one line\",\r\n            shortDescription: `Keep single parameter calls on one line`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#keep-single-parameter-calls-on-one-line`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n            badExample: `call_method(\\n  2 ).`,\r\n            goodExample: `call_method( 2 ).`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        let issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            // todo, add length as configurable setting\r\n            if (this.isMultiLine(s) === false\r\n                || this.calcStatementLength(s) > this.getConfig().length\r\n                || this.containsNewLineValue(s)\r\n                || this.containsNewLineTableExpression(s)\r\n                || this.containsFieldAssigments(s)\r\n                || this.containsNewLineTemplate(s)) {\r\n                continue;\r\n            }\r\n            for (const c of s.findAllExpressions(Expressions.MethodCallParam)) {\r\n                issues = issues.concat(this.check(c, file));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    ///////////////////////////////////////\r\n    containsFieldAssigments(s) {\r\n        const fs = s.findAllExpressions(Expressions.FieldAssignment);\r\n        return fs.length > 1;\r\n    }\r\n    containsNewLineTableExpression(s) {\r\n        for (const st of s.findAllExpressions(Expressions.TableExpression)) {\r\n            if (st.getFirstToken().getRow() !== st.getLastToken().getRow()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    containsNewLineValue(s) {\r\n        for (const st of s.findAllExpressions(Expressions.Source)) {\r\n            const first = st.getFirstToken().getStr().toUpperCase();\r\n            if (first === \"VALUE\" && st.getFirstToken().getRow() !== st.getLastToken().getRow()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    containsNewLineTemplate(s) {\r\n        for (const st of s.findAllExpressions(Expressions.StringTemplate)) {\r\n            for (const t of st.getAllTokens()) {\r\n                if (t.getStr().includes(\"\\\\n\")) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    check(c, file) {\r\n        if (this.isSingleParameter(c) === true && this.isMultiLine(c) === true) {\r\n            for (const sub of c.findAllExpressions(Expressions.MethodCallParam)) {\r\n                if (this.isSingleParameter(sub) === false\r\n                    && this.isWithoutParameters(sub) === false) {\r\n                    return [];\r\n                }\r\n            }\r\n            const message = \"Keep single parameter on one line\";\r\n            return [issue_1.Issue.atToken(file, c.getFirstToken(), message, this.getMetadata().key, this.conf.severity)];\r\n        }\r\n        return [];\r\n    }\r\n    // including first indentation, worst case calculation add space after each token\r\n    calcStatementLength(c) {\r\n        let length = 0;\r\n        for (const t of c.getTokens()) {\r\n            if (length === 0) {\r\n                length = length + t.getStart().getCol();\r\n            }\r\n            length = length + t.getStr().length + 1;\r\n        }\r\n        return length;\r\n    }\r\n    isMultiLine(c) {\r\n        const first = c.getFirstToken();\r\n        const last = c.getLastToken();\r\n        return first.getStart().getRow() < last.getStart().getRow();\r\n    }\r\n    isWithoutParameters(c) {\r\n        return c.getChildren().length === 2;\r\n    }\r\n    isSingleParameter(c) {\r\n        if (c.findDirectExpression(Expressions.Source)) {\r\n            return true;\r\n        }\r\n        const list = c.findDirectExpression(Expressions.ParameterListS);\r\n        if (list) {\r\n            return list.getChildren().length === 1;\r\n        }\r\n        const param = c.findDirectExpression(Expressions.MethodParameters);\r\n        if (param) {\r\n            if (param.getChildren().length > 2) {\r\n                return false;\r\n            }\r\n            const paramsource = param.findDirectExpression(Expressions.ParameterListS);\r\n            if (paramsource && paramsource.getChildren().length === 1) {\r\n                return true;\r\n            }\r\n            const paramtarget = param.findDirectExpression(Expressions.ParameterListT);\r\n            if (paramtarget && paramtarget.getChildren().length === 1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.KeepSingleParameterCallsOnOneLine = KeepSingleParameterCallsOnOneLine;\r\n//# sourceMappingURL=keep_single_parameter_on_one_line.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/keep_single_parameter_on_one_line.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/keyword_case.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/keyword_case.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.KeywordCase = exports.KeywordCaseConf = exports.KeywordCaseStyle = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nvar KeywordCaseStyle;\r\n(function (KeywordCaseStyle) {\r\n    KeywordCaseStyle[\"Upper\"] = \"upper\";\r\n    KeywordCaseStyle[\"Lower\"] = \"lower\";\r\n})(KeywordCaseStyle = exports.KeywordCaseStyle || (exports.KeywordCaseStyle = {}));\r\nclass KeywordCaseConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.style = KeywordCaseStyle.Upper;\r\n        /** Ignore global exception classes */\r\n        this.ignoreExceptions = true;\r\n        this.ignoreLowerClassImplmentationStatement = true;\r\n        this.ignoreGlobalClassDefinition = false;\r\n        this.ignoreGlobalInterface = false;\r\n        this.ignoreFunctionModuleName = false;\r\n        // this ignores keywords in CLASS/ENDCLASS statements of a global class (and only in them, the rest is checked)\r\n        this.ignoreGlobalClassBoundaries = false;\r\n        /** A list of keywords to be ignored */\r\n        this.ignoreKeywords = [];\r\n    }\r\n}\r\nexports.KeywordCaseConf = KeywordCaseConf;\r\nclass Skip {\r\n    constructor(conf) {\r\n        this.skip = false;\r\n        this.isGlobalClass = false;\r\n        this.isGlobalIf = false;\r\n        this.conf = conf;\r\n    }\r\n    skipStatement(statement) {\r\n        const get = statement.get();\r\n        if (get instanceof _statement_1.Unknown\r\n            || get instanceof _statement_1.MacroContent\r\n            || get instanceof _statement_1.MacroCall\r\n            || statement.getFirstToken().getStart() instanceof position_1.VirtualPosition\r\n            || get instanceof _statement_1.Comment) {\r\n            return true;\r\n        }\r\n        if (this.conf.ignoreGlobalClassBoundaries) {\r\n            const node = get;\r\n            if (node instanceof Statements.Interface && statement.findFirstExpression(Expressions.ClassGlobal)) {\r\n                this.isGlobalIf = true;\r\n                return true;\r\n            }\r\n            else if (this.isGlobalIf === true && node instanceof Statements.EndInterface) {\r\n                return true;\r\n            }\r\n            if (node instanceof Statements.ClassDefinition && statement.findFirstExpression(Expressions.ClassGlobal)) {\r\n                this.isGlobalClass = true;\r\n                return true;\r\n            }\r\n            else if (this.isGlobalClass === true\r\n                && (node instanceof Statements.EndClass || node instanceof Statements.ClassImplementation)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.conf.ignoreGlobalClassDefinition) {\r\n            if (get instanceof Statements.ClassDefinition\r\n                && statement.findFirstExpression(Expressions.ClassGlobal)) {\r\n                this.skip = true;\r\n                return true;\r\n            }\r\n            else if (this.skip === true && get instanceof Statements.EndClass) {\r\n                this.skip = false;\r\n                return true;\r\n            }\r\n            else if (this.skip === true) {\r\n                return true;\r\n            }\r\n        }\r\n        if (this.conf.ignoreGlobalInterface) {\r\n            if (get instanceof Statements.Interface\r\n                && statement.findFirstExpression(Expressions.ClassGlobal)) {\r\n                this.skip = true;\r\n                return true;\r\n            }\r\n            else if (this.skip === true && get instanceof Statements.EndInterface) {\r\n                this.skip = false;\r\n                return true;\r\n            }\r\n            else if (this.skip === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass KeywordCase extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new KeywordCaseConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"keyword_case\",\r\n            title: \"Keyword case\",\r\n            shortDescription: `Checks that keywords have the same case. Non-keywords must be lower case.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#use-your-pretty-printer-team-settings`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Quickfix],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n        if (this.conf === undefined) {\r\n            this.conf = new KeywordCaseConf();\r\n        }\r\n        if (this.conf.style === undefined) {\r\n            this.conf = new KeywordCaseConf();\r\n        }\r\n        if (this.conf.ignoreExceptions === undefined) {\r\n            this.conf.ignoreExceptions = new KeywordCaseConf().ignoreExceptions;\r\n        }\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        const MAX_ISSUES = 100;\r\n        if (this.conf.ignoreExceptions && obj instanceof objects_1.Class) {\r\n            const definition = obj.getClassDefinition();\r\n            if (definition === undefined || ddic.isException(definition, obj)) {\r\n                return [];\r\n            }\r\n        }\r\n        const skip = new Skip(this.getConfig());\r\n        for (const statement of file.getStatements()) {\r\n            if (skip.skipStatement(statement) === true) {\r\n                continue;\r\n            }\r\n            let result = this.traverse(statement, statement.get());\r\n            if (result.length > 0) {\r\n                if (statement.getColon() !== undefined) {\r\n                    // if its a chained statement, go token by token\r\n                    result = [result[0]];\r\n                }\r\n                const issue = this.build(result, file);\r\n                issues.push(issue);\r\n                if (issues.length > MAX_ISSUES) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    //////////////////\r\n    build(tokens, file) {\r\n        const first = tokens[0];\r\n        const firstToken = tokens[0].token;\r\n        const lastToken = tokens[tokens.length - 1].token;\r\n        const firstTokenValue = firstToken.getStr();\r\n        let description = \"\";\r\n        if (first.keyword === true) {\r\n            description = `Keyword should be ${this.conf.style} case: \"${firstTokenValue}\"`;\r\n        }\r\n        else {\r\n            description = `Identifiers should be lower case: \"${firstTokenValue}\"`;\r\n        }\r\n        const draft = new edit_helper_1.EditDraft(file);\r\n        for (const token of tokens) {\r\n            const str = token.token.getStr();\r\n            const pos = token.token.getStart();\r\n            if (token.keyword === true) {\r\n                if (this.conf.style === KeywordCaseStyle.Lower) {\r\n                    draft.replace(pos, str.toLowerCase());\r\n                }\r\n                else {\r\n                    draft.replace(pos, str.toUpperCase());\r\n                }\r\n            }\r\n            else {\r\n                draft.replace(pos, str.toLowerCase());\r\n            }\r\n        }\r\n        const fix = draft.toEdit();\r\n        return issue_1.Issue.atRange(file, firstToken.getStart(), lastToken.getEnd(), description, this.getMetadata().key, this.conf.severity, fix);\r\n    }\r\n    /** returns a list of tokens which violates the keyword_case rule */\r\n    traverse(s, parent) {\r\n        let ret = [];\r\n        for (const child of s.getChildren()) {\r\n            if (child instanceof nodes_1.TokenNodeRegex) {\r\n                if (this.conf.ignoreLowerClassImplmentationStatement\r\n                    && parent instanceof Statements.ClassImplementation) {\r\n                    continue;\r\n                }\r\n                const str = child.get().getStr();\r\n                const upper = str.toUpperCase();\r\n                // todo, this is a hack, the parser should recongize OTHERS/TEXT as a keyword\r\n                if (upper === \"OTHERS\" || upper === \"TEXT\") {\r\n                    continue;\r\n                }\r\n                if (this.conf.ignoreFunctionModuleName === true\r\n                    && parent instanceof Statements.FunctionModule && upper !== \"FUNCTION\") {\r\n                    continue;\r\n                }\r\n                // todo, this is a hack, the parser should recigize SCREEN as a keyword\r\n                if (upper === \"SCREEN\"\r\n                    && (parent instanceof Statements.ModifyDatabase\r\n                        || parent instanceof Statements.ModifyInternal\r\n                        || parent instanceof Statements.Loop)) {\r\n                    continue;\r\n                }\r\n                if (str !== str.toLowerCase() && child.get() instanceof tokens_1.Identifier) {\r\n                    ret.push({ token: child.get(), keyword: false });\r\n                }\r\n            }\r\n            else if (child instanceof nodes_1.TokenNode) {\r\n                const str = child.get().getStr();\r\n                if (this.violatesRule(str) && child.get() instanceof tokens_1.Identifier) {\r\n                    ret.push({ token: child.get(), keyword: true });\r\n                }\r\n            }\r\n            else if (child instanceof nodes_1.ExpressionNode) {\r\n                ret = ret.concat(this.traverse(child, parent));\r\n            }\r\n            else {\r\n                throw new Error(\"keyword_case, traverseStatement, unexpected node type\");\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    violatesRule(keyword) {\r\n        if (this.conf.ignoreKeywords && this.conf.ignoreKeywords.map(k => { return k.toUpperCase(); }).includes(keyword.toUpperCase())) {\r\n            return false;\r\n        }\r\n        if (this.conf.style === KeywordCaseStyle.Lower) {\r\n            return keyword !== keyword.toLowerCase();\r\n        }\r\n        else if (this.conf.style === KeywordCaseStyle.Upper) {\r\n            return keyword !== keyword.toUpperCase();\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.KeywordCase = KeywordCase;\r\n//# sourceMappingURL=keyword_case.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/keyword_case.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/line_break_multiple_parameters.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/line_break_multiple_parameters.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LineBreakMultipleParameters = exports.LineBreakMultipleParametersConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass LineBreakMultipleParametersConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.LineBreakMultipleParametersConf = LineBreakMultipleParametersConf;\r\nclass LineBreakMultipleParameters extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new LineBreakMultipleParametersConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"line_break_multiple_parameters\",\r\n            title: \"Line break multiple parameters\",\r\n            shortDescription: `Line break multiple parameters`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#line-break-multiple-parameters`,\r\n            badExample: `method( parameter1 = value parameter2 = value ).`,\r\n            goodExample: `method( parameter1 = value\\n        parameter2 = value ).`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            for (const e of s.findAllExpressions(Expressions.ParameterListS)) {\r\n                if (s.getFirstToken().getStart() instanceof position_1.VirtualPosition) {\r\n                    continue; // skip macro content\r\n                }\r\n                const parameters = e.findDirectExpressions(Expressions.ParameterS);\r\n                if (parameters.length <= 1) {\r\n                    continue;\r\n                }\r\n                let previous = parameters[0];\r\n                for (let i = 1; i < parameters.length; i++) {\r\n                    const current = parameters[i];\r\n                    const first = current.getFirstToken();\r\n                    if (previous.getFirstToken().getRow() === first.getRow()) {\r\n                        const fix = edit_helper_1.EditHelper.insertAt(file, first.getStart(), \"\\n\" + \" \".repeat(parameters[0].getFirstToken().getStart().getCol() - 1));\r\n                        issues.push(issue_1.Issue.atToken(file, current.getFirstToken(), this.getMetadata().title, this.getMetadata().key, this.conf.severity, fix));\r\n                    }\r\n                    previous = current;\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.LineBreakMultipleParameters = LineBreakMultipleParameters;\r\n//# sourceMappingURL=line_break_multiple_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/line_break_multiple_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/line_break_style.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/line_break_style.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LineBreakStyle = exports.LineBreakStyleConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass LineBreakStyleConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.LineBreakStyleConf = LineBreakStyleConf;\r\nclass LineBreakStyle {\r\n    constructor() {\r\n        this.conf = new LineBreakStyleConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"line_break_style\",\r\n            title: \"Makes sure line breaks are consistent in the ABAP code\",\r\n            shortDescription: `Enforces LF as newlines in ABAP files\n\nabapGit does not work with CRLF`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        const output = [];\r\n        for (const file of obj.getFiles()) {\r\n            if (file.getFilename().endsWith(\".abap\")) {\r\n                const rows = file.getRawRows();\r\n                for (let i = 0; i < rows.length; i++) {\r\n                    if (rows[i].endsWith(\"\\r\") === true) {\r\n                        const message = \"Line contains carriage return\";\r\n                        const issue = issue_1.Issue.atRow(file, i + 1, message, this.getMetadata().key, this.conf.severity);\r\n                        output.push(issue);\r\n                        break; // only one finding per file\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.LineBreakStyle = LineBreakStyle;\r\n//# sourceMappingURL=line_break_style.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/line_break_style.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/line_length.js":
/*!********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/line_length.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LineLength = exports.LineLengthConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass LineLengthConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Maximum line length in characters, trailing whitespace ignored */\r\n        this.length = 120;\r\n    }\r\n}\r\nexports.LineLengthConf = LineLengthConf;\r\nclass LineLength extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new LineLengthConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"line_length\",\r\n            title: \"Line length\",\r\n            shortDescription: `Detects lines exceeding the provided maximum length.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#stick-to-a-reasonable-line-length\nhttps://docs.abapopenchecks.org/checks/04/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        // maximum line length in abap files\r\n        const maxLineLength = 255;\r\n        file.getRawRows().forEach((row, rowIndex) => {\r\n            row = row.replace(\"\\r\", \"\");\r\n            let message = \"\";\r\n            if (row.length > maxLineLength) {\r\n                message = `Maximum allowed line length of ${maxLineLength} exceeded, currently  ${row.length}`;\r\n            }\r\n            else if (row.length > this.conf.length) {\r\n                message = `Reduce line length to max ${this.conf.length}, currently ${row.length}`;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            issues.push(issue_1.Issue.atRow(file, rowIndex + 1, message, this.getMetadata().key, this.conf.severity));\r\n        });\r\n        return issues;\r\n    }\r\n}\r\nexports.LineLength = LineLength;\r\n//# sourceMappingURL=line_length.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/line_length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/line_only_punc.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/line_only_punc.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LineOnlyPunc = exports.LineOnlyPuncConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass LineOnlyPuncConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Ignore lines with only puncutation in global exception classes */\r\n        this.ignoreExceptions = true;\r\n    }\r\n}\r\nexports.LineOnlyPuncConf = LineOnlyPuncConf;\r\nclass LineOnlyPunc extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new LineOnlyPuncConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"line_only_punc\",\r\n            title: \"Line containing only punctuation\",\r\n            shortDescription: `Detects lines containing only punctuation.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#close-brackets-at-line-end\nhttps://docs.abapopenchecks.org/checks/16/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            badExample: \"zcl_class=>method(\\n).\",\r\n            goodExample: \"zcl_class=>method( ).\",\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"A line should not contain only \\\".\\\" or \\\").\\\"\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        if (obj instanceof objects_1.Class) {\r\n            const definition = obj.getClassDefinition();\r\n            if (definition === undefined) {\r\n                return [];\r\n            }\r\n            else if (this.conf.ignoreExceptions && ddic.isException(definition, obj)) {\r\n                return [];\r\n            }\r\n        }\r\n        const rows = file.getRawRows();\r\n        const reg = new RegExp(\"^\\\\)?\\\\. *(\\\\\\\".*)?$\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (reg.exec(rows[i].trim())) {\r\n                const column = rows[i].indexOf(\")\") >= 0 ? rows[i].indexOf(\")\") + 1 : rows[i].indexOf(\".\") + 1;\r\n                const position = new position_1.Position(i + 1, column);\r\n                // merge punc into previous row\r\n                let rowContent = rows[i].trim();\r\n                // if reported row contains a paranthesis, prefix with space if needed\r\n                if (rowContent.length > 1 && !rows[i - 1].endsWith(\" \") && !rows[i - 1].endsWith(\" \\r\")) {\r\n                    rowContent = \" \" + rowContent;\r\n                }\r\n                let offset = 0;\r\n                if (rows[i - 1].endsWith(\"\\r\")) {\r\n                    offset = -1;\r\n                }\r\n                const startPos = new position_1.Position(i, rows[i - 1].length + 1 + offset);\r\n                const endPos = new position_1.Position(i + 1, rows[i].length + 1);\r\n                const fix = edit_helper_1.EditHelper.replaceRange(file, startPos, endPos, rowContent);\r\n                const issue = issue_1.Issue.atPosition(file, position, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.LineOnlyPunc = LineOnlyPunc;\r\n//# sourceMappingURL=line_only_punc.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/line_only_punc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/local_class_naming.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/local_class_naming.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LocalClassNaming = exports.LocalClassNamingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _naming_rule_config_1 = __webpack_require__(/*! ./_naming_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js\");\r\nconst name_validator_1 = __webpack_require__(/*! ../utils/name_validator */ \"./node_modules/@abaplint/core/build/src/utils/name_validator.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass LocalClassNamingConf extends _naming_rule_config_1.NamingRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** The pattern for local class names */\r\n        this.local = \"^LCL_.+$\";\r\n        /** The pattern for local exception names */\r\n        this.exception = \"^LCX_.+$\";\r\n        /** The pattern for local test class names */\r\n        this.test = \"^LTCL_.+$\";\r\n    }\r\n}\r\nexports.LocalClassNamingConf = LocalClassNamingConf;\r\nclass LocalClassNaming extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new LocalClassNamingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"local_class_naming\",\r\n            title: \"Local class naming conventions\",\r\n            shortDescription: `Allows you to enforce a pattern, such as a prefix, for local class names.`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(expected, actual) {\r\n        return this.conf.patternKind === \"required\" ?\r\n            \"Local class name does not match pattern \" + expected + \": \" + actual :\r\n            \"Local class name must not match pattern \" + expected + \": \" + actual;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        if (this.conf.patternKind === undefined) {\r\n            this.conf.patternKind = \"required\";\r\n        }\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const classDef of file.getInfo().listClassDefinitions()) {\r\n            if (classDef.isGlobal) {\r\n                continue;\r\n            }\r\n            const className = classDef.name;\r\n            let expected = \"\";\r\n            if (classDef.isForTesting) {\r\n                expected = this.conf.test;\r\n            }\r\n            else if (ddic.isException(classDef, obj)) {\r\n                expected = this.conf.exception;\r\n            }\r\n            else {\r\n                expected = this.conf.local;\r\n            }\r\n            if (expected === undefined || expected.length === 0) {\r\n                continue;\r\n            }\r\n            const regex = new RegExp(expected, \"i\");\r\n            if (name_validator_1.NameValidator.violatesRule(className, regex, this.conf)) {\r\n                issues.push(issue_1.Issue.atIdentifier(classDef.identifier, this.getDescription(expected, className), this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.LocalClassNaming = LocalClassNaming;\r\n//# sourceMappingURL=local_class_naming.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/local_class_naming.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/local_testclass_location.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/local_testclass_location.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LocalTestclassLocation = exports.LocalTestclassLocationConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass LocalTestclassLocationConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.LocalTestclassLocationConf = LocalTestclassLocationConf;\r\nclass LocalTestclassLocation extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new LocalTestclassLocationConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"local_testclass_location\",\r\n            title: \"Local testclass location\",\r\n            shortDescription: `Checks that local test classes are placed in the test include.`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(className) {\r\n        return \"Place local testclass \\\"\" + className + \"\\\" in the testclass include\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        if (!(obj instanceof objects_1.Class)) {\r\n            return [];\r\n        }\r\n        for (const c of file.getInfo().listClassDefinitions()) {\r\n            if (c.isLocal && c.isForTesting && !file.getFilename().includes(\".testclasses.abap\")) {\r\n                const issue = issue_1.Issue.atIdentifier(c.identifier, this.getDescription(c.name), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.LocalTestclassLocation = LocalTestclassLocation;\r\n//# sourceMappingURL=local_testclass_location.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/local_testclass_location.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/local_variable_names.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/local_variable_names.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LocalVariableNames = exports.LocalVariableNamesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _naming_rule_config_1 = __webpack_require__(/*! ./_naming_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js\");\r\nconst name_validator_1 = __webpack_require__(/*! ../utils/name_validator */ \"./node_modules/@abaplint/core/build/src/utils/name_validator.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass LocalVariableNamesConf extends _naming_rule_config_1.NamingRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** The pattern for local variable names */\r\n        this.expectedData = \"^L._.+$\";\r\n        /** The pattern for local constant names */\r\n        this.expectedConstant = \"^LC_.+$\";\r\n        /** The pattern for field symbol names */\r\n        this.expectedFS = \"^<L._.+>$\";\r\n    }\r\n}\r\nexports.LocalVariableNamesConf = LocalVariableNamesConf;\r\nclass LocalVariableNames extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new LocalVariableNamesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"local_variable_names\",\r\n            title: \"Local variable naming conventions\",\r\n            shortDescription: `\nAllows you to enforce a pattern, such as a prefix, for local variables, constants and field symbols.\nRegexes are case-insensitive.`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(expected, actual) {\r\n        return this.conf.patternKind === \"required\" ?\r\n            \"Local variable name does not match pattern \" + expected + \": \" + actual :\r\n            \"Local variable name must not match pattern \" + expected + \": \" + actual;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const ret = [];\r\n        if (this.conf.patternKind === undefined) {\r\n            this.conf.patternKind = \"required\";\r\n        }\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        // inside METHOD, FORM, FUNCTION MODULE\r\n        for (const node of stru.findAllStructures(Structures.Form)) {\r\n            ret.push(...this.checkLocals(node, file));\r\n        }\r\n        for (const node of stru.findAllStructures(Structures.Method)) {\r\n            ret.push(...this.checkLocals(node, file));\r\n        }\r\n        for (const node of stru.findAllStructures(Structures.FunctionModule)) {\r\n            ret.push(...this.checkLocals(node, file));\r\n        }\r\n        return ret;\r\n    }\r\n    checkLocals(structure, file) {\r\n        let ret = [];\r\n        // data, field symbols\r\n        for (const dat of structure.findAllStatements(Statements.Data)) {\r\n            const parent = structure.findParent(dat);\r\n            if (parent && parent.get() instanceof Structures.Data) {\r\n                continue; // inside DATA BEGIN OF\r\n            }\r\n            const found = dat.findFirstExpression(Expressions.DefinitionName);\r\n            if (found) {\r\n                const token = found.getFirstToken();\r\n                ret = ret.concat(this.checkName(token, file, this.conf.expectedData));\r\n            }\r\n        }\r\n        // inline data\r\n        for (const dat of structure.findAllExpressions(Expressions.InlineData)) {\r\n            const found = dat.findFirstExpression(Expressions.TargetField);\r\n            if (found) {\r\n                const token = found.getFirstToken();\r\n                ret = ret.concat(this.checkName(token, file, this.conf.expectedData));\r\n            }\r\n        }\r\n        // data structures, data begin of, first level\r\n        const dataStructures = structure.findAllStructures(Structures.Data);\r\n        for (const struc of dataStructures) {\r\n            // ignore nested DATA BEGIN\r\n            const stat = struc.findFirstStatement(Statements.DataBegin);\r\n            const found = stat === null || stat === void 0 ? void 0 : stat.findFirstExpression(Expressions.DefinitionName);\r\n            if (found) {\r\n                const token = found.getFirstToken();\r\n                ret = ret.concat(this.checkName(token, file, this.conf.expectedData));\r\n            }\r\n        }\r\n        for (const fieldsymbol of structure.findAllStatements(Statements.FieldSymbol)) {\r\n            const found = fieldsymbol.findFirstExpression(Expressions.FieldSymbol);\r\n            if (found) {\r\n                const token = found.getFirstToken();\r\n                ret = ret.concat(this.checkName(token, file, this.conf.expectedFS));\r\n            }\r\n        }\r\n        // inline field symbols\r\n        for (const fieldsymbol of structure.findAllExpressions(Expressions.InlineFS)) {\r\n            const found = fieldsymbol.findFirstExpression(Expressions.TargetFieldSymbol);\r\n            if (found) {\r\n                const token = found.getFirstToken();\r\n                ret = ret.concat(this.checkName(token, file, this.conf.expectedFS));\r\n            }\r\n        }\r\n        const constants = structure.findAllStatements(Statements.Constant);\r\n        for (const constant of constants) {\r\n            const parent = structure.findParent(constant);\r\n            if (parent && parent.get() instanceof Structures.Constants) {\r\n                continue; // inside DATA BEGIN OF\r\n            }\r\n            const found = constant.findFirstExpression(Expressions.DefinitionName);\r\n            if (found) {\r\n                const token = found.getFirstToken();\r\n                ret = ret.concat(this.checkName(token, file, this.conf.expectedConstant));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    checkName(token, file, expected) {\r\n        const ret = [];\r\n        const regex = new RegExp(expected, \"i\");\r\n        const name = token.getStr();\r\n        if (name_validator_1.NameValidator.violatesRule(name, regex, this.conf)) {\r\n            const message = this.getDescription(expected, name);\r\n            const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n            ret.push(issue);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.LocalVariableNames = LocalVariableNames;\r\n//# sourceMappingURL=local_variable_names.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/local_variable_names.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/main_file_contents.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/main_file_contents.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MainFileContents = exports.MainFileContentsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass MainFileContentsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MainFileContentsConf = MainFileContentsConf;\r\nclass MainFileContents {\r\n    constructor() {\r\n        this.conf = new MainFileContentsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"main_file_contents\",\r\n            title: \"Main file contents\",\r\n            shortDescription: `Checks related to report declarations.`,\r\n            extendedInformation: `Does not run if the target version is Cloud`,\r\n        };\r\n    }\r\n    getDescription(details) {\r\n        return \"Main file must have specific contents: \" + details;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)\r\n            || this.reg.getConfig().getVersion() === version_1.Version.Cloud) {\r\n            return [];\r\n        }\r\n        const main = obj.getMainABAPFile();\r\n        if (main === undefined) {\r\n            return [];\r\n        }\r\n        const stru = main.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        if (obj instanceof Objects.Program && obj.isInclude() === false) {\r\n            let count = 0;\r\n            let first = main.getStatements()[count];\r\n            while (first !== undefined && first.get() instanceof _statement_1.Comment) {\r\n                count = count + 1;\r\n                first = main.getStatements()[count];\r\n            }\r\n            if (first === undefined || !(first.get() instanceof Statements.Report\r\n                || first.get() instanceof Statements.Program)) {\r\n                const position = new position_1.Position(1, 1);\r\n                const issue = issue_1.Issue.atPosition(main, position, this.getDescription(\"Report must begin with REPORT or PROGRAM\"), this.getMetadata().key, this.conf.severity);\r\n                return [issue];\r\n            }\r\n            const name = first.findFirstExpression(Expressions.ReportName);\r\n            if (name === undefined) {\r\n                const token = first.getFirstToken();\r\n                const issue = issue_1.Issue.atToken(main, token, this.getDescription(\"Add report name to REPORT or PROGRAM statement\"), this.getMetadata().key, this.conf.severity);\r\n                return [issue];\r\n            }\r\n            else if (name.getFirstToken().getStr().toUpperCase() !== obj.getName()) {\r\n                const token = name.getFirstToken();\r\n                const issue = issue_1.Issue.atToken(main, token, this.getDescription(\"REPORT or PROGRAM name should match filename\"), this.getMetadata().key, this.conf.severity);\r\n                return [issue];\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.MainFileContents = MainFileContents;\r\n//# sourceMappingURL=main_file_contents.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/main_file_contents.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/many_parenthesis.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/many_parenthesis.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ManyParenthesis = exports.ManyParenthesisConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nclass ManyParenthesisConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ManyParenthesisConf = ManyParenthesisConf;\r\nclass ManyParenthesis extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ManyParenthesisConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"many_parenthesis\",\r\n            title: \"Too many parenthesis\",\r\n            shortDescription: `Searches for expressions where extra parenthesis can safely be removed`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `\nIF ( destination IS INITIAL ).\nENDIF.\nIF foo = boo AND ( bar = lar AND moo = loo ).\nENDIF.\n`,\r\n            goodExample: `\nIF destination IS INITIAL.\nENDIF.\nIF foo = boo AND bar = lar AND moo = loo.\nENDIF.\n`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const structure = file.getStructure();\r\n        if (structure === undefined) {\r\n            return [];\r\n        }\r\n        for (const cond of structure.findAllExpressions(Expressions.Cond)) {\r\n            issues.push(...this.analyze(file, cond));\r\n        }\r\n        for (const sub of structure.findAllExpressions(Expressions.CondSub)) {\r\n            const cond = sub.findDirectExpressions(Expressions.Cond);\r\n            if (cond.length !== 1) {\r\n                continue;\r\n            }\r\n            if (cond[0].getChildren().length === 1) {\r\n                const message = \"Too many parenthesis, simple\";\r\n                const issue = issue_1.Issue.atToken(file, sub.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    ////////////////////\r\n    analyze(file, cond) {\r\n        const issues = [];\r\n        let comparator = \"\";\r\n        for (const c of cond.getChildren()) {\r\n            let current = \"\";\r\n            if (c instanceof nodes_1.TokenNode) {\r\n                current = c.get().getStr().toUpperCase();\r\n            }\r\n            else if (c instanceof nodes_1.ExpressionNode && c.get() instanceof Expressions.CondSub) {\r\n                if (c.getFirstToken().getStr() === \"NOT\") {\r\n                    return [];\r\n                }\r\n                const i = c.findDirectExpression(Expressions.Cond);\r\n                if (i === undefined) {\r\n                    return [];\r\n                }\r\n                current = this.findComparator(i);\r\n            }\r\n            if (comparator === \"\") {\r\n                comparator = current;\r\n            }\r\n            else if (comparator !== current) {\r\n                return [];\r\n            }\r\n        }\r\n        if (comparator !== \"\" && comparator !== \"MIXED\") {\r\n            const message = \"Too many parenthesis, complex\";\r\n            const issue = issue_1.Issue.atToken(file, cond.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n            issues.push(issue);\r\n        }\r\n        return issues;\r\n    }\r\n    findComparator(cond) {\r\n        let comparator = \"\";\r\n        const children = cond.getChildren();\r\n        for (const c of children) {\r\n            if (c instanceof nodes_1.TokenNode) {\r\n                const current = c.get().getStr().toUpperCase();\r\n                if (comparator === \"\") {\r\n                    comparator = current;\r\n                }\r\n                else if (current !== comparator) {\r\n                    return \"MIXED\";\r\n                }\r\n            }\r\n        }\r\n        return comparator;\r\n    }\r\n}\r\nexports.ManyParenthesis = ManyParenthesis;\r\n//# sourceMappingURL=many_parenthesis.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/many_parenthesis.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/max_one_method_parameter_per_line.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/max_one_method_parameter_per_line.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MaxOneMethodParameterPerLine = exports.MaxOneMethodParameterPerLineConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass MaxOneMethodParameterPerLineConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MaxOneMethodParameterPerLineConf = MaxOneMethodParameterPerLineConf;\r\nclass MaxOneMethodParameterPerLine extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new MaxOneMethodParameterPerLineConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"max_one_method_parameter_per_line\",\r\n            title: \"Max one method parameter definition per line\",\r\n            shortDescription: `Keep max one method parameter description per line`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Whitespace],\r\n            badExample: `\nMETHODS apps_scope_token\n  IMPORTING\n    body TYPE bodyapps_scope_token client_id TYPE str.`,\r\n            goodExample: `\nMETHODS apps_scope_token\n  IMPORTING\n    body      TYPE bodyapps_scope_token\n    client_id TYPE str.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const issues = [];\r\n        for (const statement of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllStatements(Statements.MethodDef)) || []) {\r\n            let prev = undefined;\r\n            for (const p of statement.findAllExpressions(Expressions.MethodParam)) {\r\n                if (prev === undefined) {\r\n                    prev = p;\r\n                    continue;\r\n                }\r\n                if (prev.getFirstToken().getStart().getRow() === p.getFirstToken().getStart().getRow()) {\r\n                    const issue = issue_1.Issue.atToken(file, prev.getFirstToken(), this.getMetadata().title, this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n                prev = p;\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.MaxOneMethodParameterPerLine = MaxOneMethodParameterPerLine;\r\n//# sourceMappingURL=max_one_method_parameter_per_line.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/max_one_method_parameter_per_line.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/max_one_statement.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/max_one_statement.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MaxOneStatement = exports.MaxOneStatementConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass MaxOneStatementConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MaxOneStatementConf = MaxOneStatementConf;\r\nclass MaxOneStatement extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new MaxOneStatementConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"max_one_statement\",\r\n            title: \"Max one statement per line\",\r\n            shortDescription: `Checks that each line contains only a single statement.`,\r\n            extendedInformation: `Does not report empty statements, use rule empty_statement for detecting empty statements.\n\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#no-more-than-one-statement-per-line\nhttps://docs.abapopenchecks.org/checks/11/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            badExample: `WRITE foo. WRITE bar.`,\r\n            goodExample: `WRITE foo.\\nWRITE bar.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Only one statement is allowed per line\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let prev = 0;\r\n        let reported = 0;\r\n        for (const statement of file.getStatements()) {\r\n            const term = statement.getTerminator();\r\n            if (statement.get() instanceof _statement_1.Comment\r\n                || statement.get() instanceof _statement_1.NativeSQL\r\n                || term === \",\") {\r\n                continue;\r\n            }\r\n            const pos = statement.getStart();\r\n            if (pos instanceof position_1.VirtualPosition) {\r\n                continue;\r\n            }\r\n            const row = pos.getRow();\r\n            if (prev === row && row !== reported && statement.getFirstToken().getStr() !== \".\") {\r\n                const fix = edit_helper_1.EditHelper.insertAt(file, pos, \"\\n\");\r\n                const issue = issue_1.Issue.atPosition(file, pos, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n                reported = row;\r\n            }\r\n            prev = row;\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.MaxOneStatement = MaxOneStatement;\r\n//# sourceMappingURL=max_one_statement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/max_one_statement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/message_exists.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/message_exists.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessageExistsRule = exports.MessageExistsConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass MessageExistsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MessageExistsConf = MessageExistsConf;\r\nclass MessageExistsRule extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new MessageExistsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"message_exists\",\r\n            title: \"Check MESSAGE exists\",\r\n            shortDescription: `In message statements, check that the message class + id exist`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        const expressions = struc.findAllExpressionsMulti([Expressions.MessageClass, Expressions.MessageSource]);\r\n        for (const node of expressions) {\r\n            if (node.get() instanceof Expressions.MessageClass) {\r\n                const token = node.getFirstToken();\r\n                const name = token.getStr();\r\n                if (this.reg.getObject(\"MSAG\", name) === undefined\r\n                    && new ddic_1.DDIC(this.reg).inErrorNamespace(name) === true) {\r\n                    const message = \"Message class \\\"\" + name + \"\\\" not found\";\r\n                    const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n        for (const node of expressions) {\r\n            if (node.get() instanceof Expressions.MessageSource) {\r\n                const clas = node.findFirstExpression(Expressions.MessageClass);\r\n                if (clas === undefined) {\r\n                    // todo, handle case where message class is defined on header level instead of in the statement\r\n                    continue;\r\n                }\r\n                const token = clas.getFirstToken();\r\n                const name = token.getStr();\r\n                const msag = this.reg.getObject(\"MSAG\", name);\r\n                if (msag === undefined) {\r\n                    if (new ddic_1.DDIC(this.reg).inErrorNamespace(name) === true) {\r\n                        const message = \"Message class \\\"\" + token.getStr() + \"\\\" not found\";\r\n                        const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                    }\r\n                    continue;\r\n                }\r\n                const typeNumber = node.findFirstExpression(Expressions.MessageTypeAndNumber);\r\n                if (typeNumber === undefined) {\r\n                    continue;\r\n                }\r\n                const numberToken = typeNumber.getFirstToken();\r\n                const num = numberToken.getStr().substr(1);\r\n                if (msag.getByNumber(num) === undefined) {\r\n                    const message = \"Message number \\\"\" + num + \"\\\" not found in class \\\"\" + name + \"\\\"\";\r\n                    const issue = issue_1.Issue.atToken(file, numberToken, message, this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n        // todo, check number of placeholders in message vs code matches\r\n        return issues;\r\n    }\r\n}\r\nexports.MessageExistsRule = MessageExistsRule;\r\n//# sourceMappingURL=message_exists.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/message_exists.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/method_implemented_twice.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/method_implemented_twice.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodImplementedTwice = exports.MethodImplementedTwiceConf = void 0;\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass MethodImplementedTwiceConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MethodImplementedTwiceConf = MethodImplementedTwiceConf;\r\nclass MethodImplementedTwice extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new MethodImplementedTwiceConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"method_implemented_twice\",\r\n            title: \"Method implemented twice\",\r\n            shortDescription: `Reports an error if a method is implemented or defined twice`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        for (const classDef of file.getInfo().listClassImplementations()) {\r\n            const names = {};\r\n            for (const m of classDef.methods) {\r\n                const name = m.getName().toUpperCase();\r\n                if (names[name] === undefined) {\r\n                    names[name] = true;\r\n                }\r\n                else {\r\n                    const message = `Method ${name} implemented twice`;\r\n                    issues.push(issue_1.Issue.atToken(file, m.getToken(), message, this.getMetadata().key, this.getConfig().severity));\r\n                }\r\n            }\r\n        }\r\n        for (const classDef of file.getInfo().listClassDefinitions()) {\r\n            const names = {};\r\n            for (const m of classDef.methods) {\r\n                const name = m.name.toUpperCase();\r\n                if (names[name] === undefined) {\r\n                    names[name] = true;\r\n                }\r\n                else {\r\n                    const message = `Method ${name} defined twice`;\r\n                    issues.push(issue_1.Issue.atToken(file, m.identifier.getToken(), message, this.getMetadata().key, this.getConfig().severity));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.MethodImplementedTwice = MethodImplementedTwice;\r\n//# sourceMappingURL=method_implemented_twice.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/method_implemented_twice.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/method_length.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/method_length.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodLength = exports.MethodLengthConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst method_length_stats_1 = __webpack_require__(/*! ../utils/method_length_stats */ \"./node_modules/@abaplint/core/build/src/utils/method_length_stats.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nclass MethodLengthConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Maximum method length in statements */\r\n        this.statements = 100;\r\n        /** Checks for empty methods. */\r\n        this.errorWhenEmpty = true;\r\n        /** Option to ignore test classes for this check.  */\r\n        this.ignoreTestClasses = false;\r\n    }\r\n}\r\nexports.MethodLengthConf = MethodLengthConf;\r\nvar IssueType;\r\n(function (IssueType) {\r\n    IssueType[IssueType[\"EmptyMethod\"] = 0] = \"EmptyMethod\";\r\n    IssueType[IssueType[\"MaxStatements\"] = 1] = \"MaxStatements\";\r\n})(IssueType || (IssueType = {}));\r\nclass MethodLength {\r\n    constructor() {\r\n        this.conf = new MethodLengthConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"method_length\",\r\n            title: \"Method Length\",\r\n            shortDescription: `Checks relating to method length.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#keep-methods-small`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(issueType, actual) {\r\n        switch (issueType) {\r\n            case IssueType.EmptyMethod: {\r\n                return \"Empty method\";\r\n            }\r\n            case IssueType.MaxStatements: {\r\n                return \"Reduce method length to max \" + this.conf.statements + \" statements, currently \" + actual;\r\n            }\r\n            default: {\r\n                return \"\";\r\n            }\r\n        }\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        const issues = [];\r\n        const stats = method_length_stats_1.MethodLengthStats.run(obj);\r\n        for (const s of stats) {\r\n            if ((this.conf.ignoreTestClasses === true)\r\n                && s.file.getFilename().includes(\".testclasses.\")) {\r\n                continue;\r\n            }\r\n            if (s.count === 0 && this.conf.errorWhenEmpty === true) {\r\n                const issue = issue_1.Issue.atPosition(s.file, s.pos, this.getDescription(IssueType.EmptyMethod, \"0\"), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n                continue;\r\n            }\r\n            if (s.count > this.conf.statements) {\r\n                const message = this.getDescription(IssueType.MaxStatements, s.count.toString());\r\n                const issue = issue_1.Issue.atPosition(s.file, s.pos, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.MethodLength = MethodLength;\r\n//# sourceMappingURL=method_length.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/method_length.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/method_overwrites_builtin.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/method_overwrites_builtin.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodOverwritesBuiltIn = exports.MethodOverwritesBuiltInConf = void 0;\r\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nconst _builtin_1 = __webpack_require__(/*! ../abap/5_syntax/_builtin */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_builtin.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass MethodOverwritesBuiltInConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MethodOverwritesBuiltInConf = MethodOverwritesBuiltInConf;\r\nclass MethodOverwritesBuiltIn extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new MethodOverwritesBuiltInConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"method_overwrites_builtin\",\r\n            title: \"Method name overwrites builtin function\",\r\n            shortDescription: `Checks Method names that overwrite builtin SAP functions`,\r\n            extendedInformation: `https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-us/abenbuilt_in_functions_overview.htm`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let methods = [];\r\n        for (const classDef of file.getInfo().listClassDefinitions()) {\r\n            methods = methods.concat(classDef.methods);\r\n        }\r\n        for (const intfDef of file.getInfo().listInterfaceDefinitions()) {\r\n            methods = methods.concat(intfDef.methods);\r\n        }\r\n        const builtIn = new _builtin_1.BuiltIn();\r\n        for (const method of methods) {\r\n            if (builtIn.searchBuiltin(method.name.toUpperCase())) {\r\n                const message = `Method name \"${method.name}\" overwrites built-in SAP function name`;\r\n                issues.push(__1.Issue.atIdentifier(method.identifier, message, this.getMetadata().key));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.MethodOverwritesBuiltIn = MethodOverwritesBuiltIn;\r\n//# sourceMappingURL=method_overwrites_builtin.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/method_overwrites_builtin.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/method_parameter_names.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/method_parameter_names.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodParameterNames = exports.MethodParameterNamesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _naming_rule_config_1 = __webpack_require__(/*! ./_naming_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js\");\r\nconst name_validator_1 = __webpack_require__(/*! ../utils/name_validator */ \"./node_modules/@abaplint/core/build/src/utils/name_validator.js\");\r\nconst _abap_file_information_1 = __webpack_require__(/*! ../abap/4_file_information/_abap_file_information */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass MethodParameterNamesConf extends _naming_rule_config_1.NamingRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Ignore parameters in methods of exception classes */\r\n        this.ignoreExceptions = true;\r\n        /** The pattern for importing parameters */\r\n        this.importing = \"^I._.+$\";\r\n        /** The pattern for returning parameters */\r\n        this.returning = \"^R._.+$\";\r\n        /** The pattern for changing parameters */\r\n        this.changing = \"^C._.+$\";\r\n        /** The pattern for exporting parameters */\r\n        this.exporting = \"^E._.+$\";\r\n    }\r\n}\r\nexports.MethodParameterNamesConf = MethodParameterNamesConf;\r\nclass MethodParameterNames {\r\n    constructor() {\r\n        this.conf = new MethodParameterNamesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"method_parameter_names\",\r\n            title: \"Method parameter naming conventions\",\r\n            shortDescription: `Allows you to enforce a pattern, such as a prefix, for method parameter names`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(expected, actual) {\r\n        return this.conf.patternKind === \"required\" ?\r\n            \"Method parameter name does not match pattern \" + expected + \": \" + actual :\r\n            \"Method parameter name must not match pattern \" + expected + \": \" + actual;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        let ret = [];\r\n        if (this.conf.patternKind === undefined) {\r\n            this.conf.patternKind = \"required\";\r\n        }\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const file of obj.getABAPFiles()) {\r\n            for (const def of file.getInfo().listInterfaceDefinitions()) {\r\n                for (const method of def.methods) {\r\n                    ret = ret.concat(this.checkMethod(method));\r\n                }\r\n            }\r\n            for (const def of file.getInfo().listClassDefinitions()) {\r\n                if (this.conf.ignoreExceptions && ddic.isException(def, obj)) {\r\n                    continue;\r\n                }\r\n                for (const method of def.methods) {\r\n                    if (method.isEventHandler) {\r\n                        continue;\r\n                    }\r\n                    ret = ret.concat(this.checkMethod(method));\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    checkMethod(method) {\r\n        let ret = [];\r\n        for (const p of method.parameters) {\r\n            switch (p.direction) {\r\n                case _abap_file_information_1.MethodParameterDirection.Importing:\r\n                    ret = ret.concat(this.checkParameter(p, this.conf.importing));\r\n                    break;\r\n                case _abap_file_information_1.MethodParameterDirection.Exporting:\r\n                    ret = ret.concat(this.checkParameter(p, this.conf.exporting));\r\n                    break;\r\n                case _abap_file_information_1.MethodParameterDirection.Changing:\r\n                    ret = ret.concat(this.checkParameter(p, this.conf.changing));\r\n                    break;\r\n                case _abap_file_information_1.MethodParameterDirection.Returning:\r\n                    ret = ret.concat(this.checkParameter(p, this.conf.returning));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    checkParameter(param, expected) {\r\n        const ret = [];\r\n        const regex = new RegExp(expected, \"i\");\r\n        const name = param.name;\r\n        if (name_validator_1.NameValidator.violatesRule(name, regex, this.conf)) {\r\n            const message = this.getDescription(expected, name);\r\n            const issue = issue_1.Issue.atIdentifier(param.identifier, message, this.getMetadata().key, this.conf.severity);\r\n            ret.push(issue);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.MethodParameterNames = MethodParameterNames;\r\n//# sourceMappingURL=method_parameter_names.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/method_parameter_names.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/mix_returning.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/mix_returning.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MixReturning = exports.MixReturningConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass MixReturningConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MixReturningConf = MixReturningConf;\r\nclass MixReturning extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new MixReturningConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"mix_returning\",\r\n            title: \"Mix of returning and exporting\",\r\n            shortDescription: `Checks that methods don't have a mixture of returning and exporting/changing parameters`,\r\n            // eslint-disable-next-line max-len\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#use-either-returning-or-exporting-or-changing-but-not-a-combination`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Don't mix RETURNING and EXPORTING/CHANGING parameters in a single method.\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const ret = [];\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        for (const def of stru.findAllStatements(Statements.MethodDef)) {\r\n            if (!def.findFirstExpression(Expressions.MethodDefReturning)) {\r\n                continue;\r\n            }\r\n            if (def.findFirstExpression(Expressions.MethodDefExporting)\r\n                || def.findFirstExpression(Expressions.MethodDefChanging)) {\r\n                const token = def.getFirstToken();\r\n                const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                ret.push(issue);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.MixReturning = MixReturning;\r\n//# sourceMappingURL=mix_returning.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/mix_returning.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/modify_only_own_db_tables.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/modify_only_own_db_tables.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ModifyOnlyOwnDBTables = exports.ModifyOnlyOwnDBTablesConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass ModifyOnlyOwnDBTablesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.reportDynamic = true;\r\n        /** Case insensitve regex for own tables */\r\n        this.ownTables = \"^[yz]\";\r\n    }\r\n}\r\nexports.ModifyOnlyOwnDBTablesConf = ModifyOnlyOwnDBTablesConf;\r\nclass ModifyOnlyOwnDBTables extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ModifyOnlyOwnDBTablesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"modify_only_own_db_tables\",\r\n            title: \"Modify only own DB tables\",\r\n            shortDescription: `Modify only own DB tables`,\r\n            extendedInformation: \"https://docs.abapopenchecks.org/checks/26/\",\r\n            tags: [_irule_1.RuleTag.Security, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const output = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        const regExp = new RegExp(this.getConfig().ownTables, \"i\");\r\n        for (const s of file.getStatements()) {\r\n            const g = s.get();\r\n            if (g instanceof Statements.DeleteDatabase\r\n                || g instanceof Statements.UpdateDatabase\r\n                || g instanceof Statements.InsertDatabase\r\n                || g instanceof Statements.ModifyDatabase) {\r\n                const databaseTable = s.findFirstExpression(Expressions.DatabaseTable);\r\n                if (databaseTable === undefined) {\r\n                    continue;\r\n                }\r\n                if (((_a = databaseTable.getFirstChild()) === null || _a === void 0 ? void 0 : _a.get()) instanceof Expressions.Dynamic) {\r\n                    if (this.getConfig().reportDynamic === true) {\r\n                        output.push(issue_1.Issue.atStatement(file, s, this.getMetadata().title, this.getMetadata().key, this.getConfig().severity));\r\n                    }\r\n                    continue;\r\n                }\r\n                const concat = databaseTable.concatTokens().toUpperCase();\r\n                if (regExp.test(concat) === false && concat !== \"SCREEN\") {\r\n                    output.push(issue_1.Issue.atStatement(file, s, this.getMetadata().title, this.getMetadata().key, this.getConfig().severity));\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.ModifyOnlyOwnDBTables = ModifyOnlyOwnDBTables;\r\n//# sourceMappingURL=modify_only_own_db_tables.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/modify_only_own_db_tables.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/msag_consistency.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/msag_consistency.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MSAGConsistency = exports.MSAGConsistencyConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass MSAGConsistencyConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.MSAGConsistencyConf = MSAGConsistencyConf;\r\nclass MSAGConsistency {\r\n    constructor() {\r\n        this.conf = new MSAGConsistencyConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"msag_consistency\",\r\n            title: \"MSAG consistency check\",\r\n            shortDescription: `Checks the validity of messages in message classes`,\r\n        };\r\n    }\r\n    getDescription(reason) {\r\n        return \"Message class invalid: \" + reason;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        const issues = [];\r\n        if (!(obj instanceof objects_1.MessageClass)) {\r\n            return [];\r\n        }\r\n        for (const message of obj.getMessages()) {\r\n            // todo, get the right positions in xml file\r\n            if (!message.getNumber().match(/\\d\\d\\d/)) {\r\n                const text = this.getDescription(\"Message number must be 3 digits: message \" + message.getNumber());\r\n                const position = new position_1.Position(1, 1);\r\n                const issue = issue_1.Issue.atPosition(obj.getFiles()[0], position, text, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n            if (message.getMessage() === \"\") {\r\n                const text = \"Message text empty: message \" + message.getNumber();\r\n                const position = new position_1.Position(1, 1);\r\n                const issue = issue_1.Issue.atPosition(obj.getFiles()[0], position, text, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.MSAGConsistency = MSAGConsistency;\r\n//# sourceMappingURL=msag_consistency.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/msag_consistency.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/names_no_dash.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/names_no_dash.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NamesNoDash = exports.NamesNoDashConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass NamesNoDashConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.NamesNoDashConf = NamesNoDashConf;\r\n// todo, also check for other characters like %&$, rename rule? and extend to more kinds of identifiers?\r\nclass NamesNoDash extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new NamesNoDashConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"names_no_dash\",\r\n            title: \"No dashes in FORM and DATA names\",\r\n            shortDescription: `Checks for a \"-\" in FORM, DATA, PARAMETER and SELECT-OPTION names`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Naming],\r\n            badExample: \"DATA foo-bar TYPE i.\",\r\n            goodExample: \"DATA foobar TYPE i.\",\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"No dash allowed in FORM and DATA names\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return issues;\r\n        }\r\n        if (obj.getType() !== \"CLAS\" && obj.getType() !== \"INTF\") {\r\n            for (const form of struc.findAllStatements(Statements.Form)) {\r\n                const expr = form.findFirstExpression(expressions_1.FormName);\r\n                for (const token of expr.getTokens()) {\r\n                    if (token instanceof tokens_1.Dash || token instanceof tokens_1.DashW) {\r\n                        const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            for (const form of struc.findAllStatements(Statements.Parameter)) {\r\n                const expr = form.findFirstExpression(Expressions.FieldSub);\r\n                for (const token of expr.getTokens()) {\r\n                    if (token instanceof tokens_1.Dash || token instanceof tokens_1.DashW) {\r\n                        const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            for (const form of struc.findAllStatements(Statements.SelectOption)) {\r\n                const expr = form.findFirstExpression(Expressions.FieldSub);\r\n                for (const token of expr.getTokens()) {\r\n                    if (token instanceof tokens_1.Dash || token instanceof tokens_1.DashW) {\r\n                        const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (const name of struc.findAllExpressions(Expressions.DefinitionName)) {\r\n            const text = name.concatTokens();\r\n            if (text.includes(\"-\")) {\r\n                const issue = issue_1.Issue.atToken(file, name.getFirstToken(), this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.NamesNoDash = NamesNoDash;\r\n//# sourceMappingURL=names_no_dash.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/names_no_dash.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/nesting.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/nesting.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Nesting = exports.NestingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass NestingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Maximum allowed nesting depth */\r\n        this.depth = 5;\r\n    }\r\n}\r\nexports.NestingConf = NestingConf;\r\nclass Nesting extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new NestingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"nesting\",\r\n            title: \"Check nesting depth\",\r\n            shortDescription: `Checks for methods exceeding a maximum nesting depth`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#keep-the-nesting-depth-low\nhttps://docs.abapopenchecks.org/checks/74/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(max) {\r\n        return \"Reduce nesting depth to max \" + max;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let depth = 0;\r\n        for (const statement of file.getStatements()) {\r\n            const type = statement.get();\r\n            if (type instanceof Statements.If\r\n                || type instanceof Statements.Case\r\n                || type instanceof Statements.While\r\n                || type instanceof Statements.Loop\r\n                || type instanceof Statements.SelectLoop\r\n                || type instanceof Statements.Do\r\n                || type instanceof Statements.Try) {\r\n                depth = depth + 1;\r\n            }\r\n            else if (type instanceof Statements.EndIf\r\n                || type instanceof Statements.EndCase\r\n                || type instanceof Statements.EndWhile\r\n                || type instanceof Statements.EndLoop\r\n                || type instanceof Statements.EndSelect\r\n                || type instanceof Statements.EndDo\r\n                || type instanceof Statements.EndTry) {\r\n                depth = depth - 1;\r\n            }\r\n            if (depth > this.conf.depth) {\r\n                const pos = statement.getFirstToken().getStart();\r\n                const issue = issue_1.Issue.atPosition(file, pos, this.getDescription(this.conf.depth.toString()), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n                break; // only one finding per file\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.Nesting = Nesting;\r\n//# sourceMappingURL=nesting.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/nesting.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/newline_between_methods.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/newline_between_methods.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NewlineBetweenMethods = exports.NewlineBetweenMethodsConf = exports.NewlineLogic = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst sequential_blank_1 = __webpack_require__(/*! ./sequential_blank */ \"./node_modules/@abaplint/core/build/src/rules/sequential_blank.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nvar NewlineLogic;\r\n(function (NewlineLogic) {\r\n    NewlineLogic[\"Exact\"] = \"exact\";\r\n    NewlineLogic[\"Less\"] = \"less\";\r\n})(NewlineLogic = exports.NewlineLogic || (exports.NewlineLogic = {}));\r\nclass NewlineBetweenMethodsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Amount of newlines, works in conjunction with \"newlineLogic\" */\r\n        this.count = 3;\r\n        /**\r\n         *  Exact: the exact number of required newlines between methods is defined by \"newlineAmount\"\r\n         *\r\n         *  Less: the required number of newlines has to be less than \"newlineAmount\"\r\n         */\r\n        this.logic = NewlineLogic.Less;\r\n    }\r\n}\r\nexports.NewlineBetweenMethodsConf = NewlineBetweenMethodsConf;\r\nclass NewlineBetweenMethods extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new NewlineBetweenMethodsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"newline_between_methods\",\r\n            title: \"New line between methods\",\r\n            shortDescription: `Checks for newlines between method implementations.`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        switch (this.conf.logic) {\r\n            case NewlineLogic.Exact: return `Exactly ${this.conf.count} newlines are required in between methods`;\r\n            case NewlineLogic.Less: return `Less than ${this.conf.count} newlines and at least a single newline are required in between methods`;\r\n            default: return \"\";\r\n        }\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const issues = [];\r\n        const rows = file.getRawRows();\r\n        if (!this.isConfigurationValid()) {\r\n            return [];\r\n        }\r\n        for (const statement of file.getStatements()) {\r\n            let nextRow = statement.getStart().getRow();\r\n            if (!(statement.get() instanceof Statements.EndMethod) || ((_a = rows[nextRow]) === null || _a === void 0 ? void 0 : _a.toUpperCase().includes(\"ENDCLASS.\"))) {\r\n                continue;\r\n            }\r\n            let counter = 0;\r\n            while (sequential_blank_1.SequentialBlank.isBlankOrWhitespace(rows[nextRow]) && (counter <= this.conf.count + 1)) {\r\n                counter++;\r\n                nextRow++;\r\n            }\r\n            if ((counter !== this.conf.count && this.conf.logic === NewlineLogic.Exact)\r\n                || (counter >= this.conf.count && this.conf.logic === NewlineLogic.Less)\r\n                || counter === 0) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, this.getMessage(), this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    isConfigurationValid() {\r\n        if (this.conf.count < 1 || (this.conf.count === 1 && this.conf.logic === NewlineLogic.Less)) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\nexports.NewlineBetweenMethods = NewlineBetweenMethods;\r\n//# sourceMappingURL=newline_between_methods.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/newline_between_methods.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/no_public_attributes.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/no_public_attributes.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NoPublicAttributes = exports.NoPublicAttributesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../abap/4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst _abap_file_information_1 = __webpack_require__(/*! ../abap/4_file_information/_abap_file_information */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/_abap_file_information.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass NoPublicAttributesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Allows public attributes, if they are declared as READ-ONLY. */\r\n        this.allowReadOnly = false;\r\n    }\r\n}\r\nexports.NoPublicAttributesConf = NoPublicAttributesConf;\r\nclass NoPublicAttributes extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new NoPublicAttributesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"no_public_attributes\",\r\n            title: \"No public attributes\",\r\n            shortDescription: `Checks that classes and interfaces don't contain any public attributes.\nExceptions are excluded from this rule.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#members-private-by-default-protected-only-if-needed`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(name) {\r\n        return \"Public attributes are not allowed, attribute \\\"\" + name + \"\\\"\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        this.file = file;\r\n        const attributes = this.getAllPublicAttributes(obj);\r\n        return this.findAllIssues(attributes);\r\n    }\r\n    getAllPublicAttributes(obj) {\r\n        let attributes = [];\r\n        attributes = attributes.concat(this.getAllPublicClassAttributes(obj));\r\n        attributes = attributes.concat(this.getAllPublicInterfaceAttributes());\r\n        return attributes;\r\n    }\r\n    getAllPublicClassAttributes(obj) {\r\n        let attributes = [];\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const classDef of this.file.getInfo().listClassDefinitions()) {\r\n            if (ddic.isException(classDef, obj)) {\r\n                continue;\r\n            }\r\n            attributes = attributes.concat(classDef.attributes.filter(a => a.visibility === visibility_1.Visibility.Public));\r\n        }\r\n        return attributes;\r\n    }\r\n    getAllPublicInterfaceAttributes() {\r\n        let attributes = [];\r\n        for (const interfaceDef of this.file.getInfo().listInterfaceDefinitions()) {\r\n            attributes = attributes.concat(interfaceDef.attributes.filter(a => a.visibility === visibility_1.Visibility.Public));\r\n        }\r\n        return attributes;\r\n    }\r\n    findAllIssues(attributes) {\r\n        const issues = [];\r\n        for (const attr of attributes) {\r\n            if (this.conf.allowReadOnly === true && attr.readOnly) {\r\n                continue;\r\n            }\r\n            else if (attr.level === _abap_file_information_1.AttributeLevel.Constant) {\r\n                continue;\r\n            }\r\n            const issue = issue_1.Issue.atIdentifier(attr.identifier, this.getDescription(attr.name), this.getMetadata().key, this.conf.severity);\r\n            issues.push(issue);\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.NoPublicAttributes = NoPublicAttributes;\r\n//# sourceMappingURL=no_public_attributes.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/no_public_attributes.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/no_yoda_conditions.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/no_yoda_conditions.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NoYodaConditions = exports.NoYodaConditionsConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass NoYodaConditionsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Only report issues where the left side is a constant */\r\n        this.onlyConstants = false;\r\n    }\r\n}\r\nexports.NoYodaConditionsConf = NoYodaConditionsConf;\r\nclass NoYodaConditions extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new NoYodaConditionsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"no_yoda_conditions\",\r\n            title: \"No Yoda conditions\",\r\n            shortDescription: `Finds Yoda conditions and reports issues`,\r\n            extendedInformation: `https://en.wikipedia.org/wiki/Yoda_conditions\n\nConditions with operators CP, NP, CS, NS, CA, NA, CO, CN are ignored`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `IF 0 <> sy-subrc.\nENDIF.`,\r\n            goodExample: `IF sy-subrc <> 0.\nENDIF.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a, _b;\r\n        const issues = [];\r\n        for (const c of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllExpressions(Expressions.Compare)) || []) {\r\n            const operator = (_b = c.findDirectExpression(Expressions.CompareOperator)) === null || _b === void 0 ? void 0 : _b.concatTokens().toUpperCase();\r\n            if (operator === undefined\r\n                || operator === \"CP\"\r\n                || operator === \"NP\"\r\n                || operator === \"CS\"\r\n                || operator === \"NS\"\r\n                || operator === \"CA\"\r\n                || operator === \"NA\"\r\n                || operator === \"CO\"\r\n                || operator === \"CN\") {\r\n                continue;\r\n            }\r\n            const sources = c.findDirectExpressions(Expressions.Source);\r\n            if (sources.length !== 2) {\r\n                continue;\r\n            }\r\n            if (this.conf.onlyConstants === true) {\r\n                if (this.isConstant(sources[0]) === true && this.isConstant(sources[1]) === false) {\r\n                    const start = sources[0].getFirstToken().getStart();\r\n                    const end = sources[1].getLastToken().getEnd();\r\n                    const issue = issue_1.Issue.atRange(file, start, end, \"No Yoda conditions\", this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n                continue;\r\n            }\r\n            // Scenarios:\r\n            //   constant COMPARE chain\r\n            //   constant COMPARE multiple tokens with spaces\r\n            //   fieldChain COMPARE multiple tokens with spaces\r\n            if ((this.withoutSpaces(sources[0]) === false && this.withoutSpaces(sources[1]) === true) || ((this.isConstant(sources[0]) === true && this.isFieldChain(sources[1]) === true))) {\r\n                const start = sources[0].getFirstToken().getStart();\r\n                const end = sources[1].getLastToken().getEnd();\r\n                const issue = issue_1.Issue.atRange(file, start, end, \"No Yoda conditions\", this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    isConstant(node) {\r\n        var _a;\r\n        if (node.getChildren().length > 1) {\r\n            return false;\r\n        }\r\n        return ((_a = node.getFirstChild()) === null || _a === void 0 ? void 0 : _a.get()) instanceof Expressions.Constant;\r\n    }\r\n    isFieldChain(node) {\r\n        var _a;\r\n        if (node.getChildren().length > 1) {\r\n            return false;\r\n        }\r\n        return ((_a = node.getFirstChild()) === null || _a === void 0 ? void 0 : _a.get()) instanceof Expressions.FieldChain;\r\n    }\r\n    withoutSpaces(node) {\r\n        return node.concatTokensWithoutStringsAndComments().includes(\" \");\r\n    }\r\n}\r\nexports.NoYodaConditions = NoYodaConditions;\r\n//# sourceMappingURL=no_yoda_conditions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/no_yoda_conditions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/object_naming.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/object_naming.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ObjectNaming = exports.ObjectNamingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _naming_rule_config_1 = __webpack_require__(/*! ./_naming_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst name_validator_1 = __webpack_require__(/*! ../utils/name_validator */ \"./node_modules/@abaplint/core/build/src/utils/name_validator.js\");\r\nclass ObjectNamingConf extends _naming_rule_config_1.NamingRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** The pattern for global class names */\r\n        this.clas = \"^ZC(L|X)\\\\_\";\r\n        /** The pattern for global interface names */\r\n        this.intf = \"^ZIF\\\\_\";\r\n        /** The pattern for program (report) names */\r\n        this.prog = \"^Z\";\r\n        /** The pattern for function group names */\r\n        this.fugr = \"^Z\";\r\n        /** The pattern for DDIC table names */\r\n        this.tabl = \"^Z\";\r\n        /** The pattern for DDIC table type names */\r\n        this.ttyp = \"^Z\";\r\n        /** The pattern for data element names */\r\n        this.dtel = \"^Z\";\r\n        /** The pattern for domain names */\r\n        this.doma = \"^Z\";\r\n        /** The pattern for message class names */\r\n        this.msag = \"^Z\";\r\n        /** The pattern for transaction names */\r\n        this.tran = \"^Z\";\r\n        /** The pattern for lock object names */\r\n        this.enqu = \"^EZ\";\r\n        /** The pattern for authorization object names */\r\n        this.auth = \"^Z\";\r\n        /** The pattern for package interface names */\r\n        this.pinf = \"^Z\";\r\n        /** The pattern for idoc names */\r\n        this.idoc = \"^Z\";\r\n        /** The pattern for transformation names */\r\n        this.xslt = \"^Z\";\r\n        /** The pattern for smartform names */\r\n        this.ssfo = \"^Z\";\r\n        /** The pattern for smartstyle names */\r\n        this.ssst = \"^Z\";\r\n        /** The pattern for search helps */\r\n        this.shlp = \"^Z\";\r\n    }\r\n}\r\nexports.ObjectNamingConf = ObjectNamingConf;\r\nclass ObjectNaming {\r\n    constructor() {\r\n        this.conf = new ObjectNamingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"object_naming\",\r\n            title: \"Object naming conventions\",\r\n            shortDescription: `Allows you to enforce a pattern, such as a prefix, for object names`,\r\n            tags: [_irule_1.RuleTag.Naming],\r\n        };\r\n    }\r\n    getDescription(expected, actual) {\r\n        return this.conf.patternKind === \"required\" ?\r\n            \"Object name does not match pattern \" + expected + \": \" + actual :\r\n            \"Object name must not match pattern \" + expected + \": \" + actual;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        let message = undefined;\r\n        let pattern = \"\";\r\n        if (this.conf.patternKind === undefined) {\r\n            this.conf.patternKind = \"required\";\r\n        }\r\n        if (obj instanceof Objects.Class) {\r\n            pattern = this.getConfig().clas;\r\n        }\r\n        else if (obj instanceof Objects.Interface) {\r\n            pattern = this.getConfig().intf;\r\n        }\r\n        else if (obj instanceof Objects.Program) {\r\n            pattern = this.getConfig().prog;\r\n        }\r\n        else if (obj instanceof Objects.FunctionGroup) {\r\n            pattern = this.getConfig().fugr;\r\n        }\r\n        else if (obj instanceof Objects.Table) {\r\n            pattern = this.getConfig().tabl;\r\n        }\r\n        else if (obj instanceof Objects.TableType) {\r\n            pattern = this.getConfig().ttyp;\r\n        }\r\n        else if (obj instanceof Objects.DataElement) {\r\n            pattern = this.getConfig().dtel;\r\n        }\r\n        else if (obj instanceof Objects.Domain) {\r\n            pattern = this.getConfig().doma;\r\n        }\r\n        else if (obj instanceof Objects.Transaction) {\r\n            pattern = this.getConfig().tran;\r\n        }\r\n        else if (obj instanceof Objects.LockObject) {\r\n            pattern = this.getConfig().enqu;\r\n        }\r\n        else if (obj instanceof Objects.AuthorizationObject) {\r\n            pattern = this.getConfig().auth;\r\n        }\r\n        else if (obj instanceof Objects.PackageInterface) {\r\n            pattern = this.getConfig().pinf;\r\n        }\r\n        else if (obj instanceof Objects.MessageClass) {\r\n            pattern = this.getConfig().msag;\r\n        }\r\n        else if (obj instanceof Objects.Idoc) {\r\n            pattern = this.getConfig().idoc;\r\n        }\r\n        else if (obj instanceof Objects.Transformation) {\r\n            pattern = this.getConfig().xslt;\r\n        }\r\n        else if (obj instanceof Objects.SmartForm) {\r\n            pattern = this.getConfig().ssfo;\r\n        }\r\n        else if (obj instanceof Objects.SmartStyle) {\r\n            pattern = this.getConfig().ssst;\r\n        }\r\n        else if (obj instanceof Objects.SearchHelp) {\r\n            pattern = this.getConfig().shlp;\r\n        }\r\n        if (pattern === \"\") {\r\n            return [];\r\n        }\r\n        const regex = new RegExp(pattern, \"i\");\r\n        if (name_validator_1.NameValidator.violatesRule(obj.getName(), regex, this.conf)) {\r\n            message = this.getDescription(pattern, obj.getName());\r\n        }\r\n        if (message) {\r\n            return [issue_1.Issue.atRow(obj.getFiles()[0], 1, message, this.getMetadata().key, this.conf.severity)];\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.ObjectNaming = ObjectNaming;\r\n//# sourceMappingURL=object_naming.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/object_naming.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/obsolete_statement.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/obsolete_statement.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ObsoleteStatement = exports.ObsoleteStatementConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass ObsoleteStatementConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Check for REFRESH statement */\r\n        this.refresh = true;\r\n        /** Check for COMPUTE statement */\r\n        this.compute = true;\r\n        /** Check for ADD statement */\r\n        this.add = true;\r\n        /** Check for SUBTRACT statement */\r\n        this.subtract = true;\r\n        /** Check for MULTIPLY statement */\r\n        this.multiply = true;\r\n        /** Check for DIVIDE statement */\r\n        this.divide = true;\r\n        /** Check for MOVE statement */\r\n        this.move = true;\r\n        /** Checks for usages of IS REQUESTED */\r\n        this.requested = true;\r\n        /** Checks for usages of OCCURS */\r\n        this.occurs = true;\r\n        /** Checks for SET EXTENDED CHECK */\r\n        this.setExtended = true;\r\n        /** Checks for WITH HEADER LINE */\r\n        this.withHeaderLine = true;\r\n        /** Checks for FIELD-SYMBOLS ... STRUCTURE */\r\n        this.fieldSymbolStructure = true;\r\n        /** Checks for TYPE-POOLS */\r\n        this.typePools = true;\r\n        /** Checks for addition LOAD */\r\n        this.load = true;\r\n        /** Checks for PARAMETER */\r\n        this.parameter = true;\r\n        /** Checks for RANGES */\r\n        this.ranges = true;\r\n        /** Checks for COMMUNICATION */\r\n        this.communication = true;\r\n        /** Checks for PACK */\r\n        this.pack = true;\r\n        /** Checks for SELECT without INTO */\r\n        this.selectWithoutInto = true;\r\n        /** FREE MEMORY, without ID */\r\n        this.freeMemory = true;\r\n        /** Checks for EXIT FROM SQL */\r\n        this.exitFromSQL = true;\r\n    }\r\n}\r\nexports.ObsoleteStatementConf = ObsoleteStatementConf;\r\nclass ObsoleteStatement extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ObsoleteStatementConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"obsolete_statement\",\r\n            title: \"Obsolete statements\",\r\n            shortDescription: `Checks for usages of certain obsolete statements`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix],\r\n            extendedInformation: `\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-functional-to-procedural-language-constructs\n\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#avoid-obsolete-language-elements\n\nSET EXTENDED CHECK: https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-us/abapset_extended_check.htm\n\nIS REQUESTED: https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abenlogexp_requested.htm\n\nWITH HEADER LINE: https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abapdata_header_line.htm\n\nFIELD-SYMBOLS STRUCTURE: https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-us/abapfield-symbols_obsolete_typing.htm\n\nTYPE-POOLS: from 702, https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abennews-71-program_load.htm\n\nLOAD addition: from 702, https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abennews-71-program_load.htm\n\nCOMMUICATION: https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-us/abapcommunication.htm\n\nOCCURS: https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-us/abapdata_occurs.htm\n\nPARAMETER: https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abapparameter.htm\n\nRANGES: https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abapranges.htm\n\nPACK: https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-us/abappack.htm\n\nSELECT without INTO: https://help.sap.com/doc/abapdocu_731_index_htm/7.31/en-US/abapselect_obsolete.htm\nSELECT COUNT(*) is considered okay\n\nFREE MEMORY: https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-us/abapfree_mem_id_obsolete.htm`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a, _b;\r\n        const issues = [];\r\n        const statements = file.getStatements();\r\n        let prev = undefined;\r\n        const configVersion = this.reg.getConfig().getVersion();\r\n        for (const staNode of statements) {\r\n            const sta = staNode.get();\r\n            if ((sta instanceof Statements.Refresh && this.conf.refresh)\r\n                || (sta instanceof Statements.Compute && this.conf.compute)\r\n                || (sta instanceof Statements.Add && this.conf.add)\r\n                || (sta instanceof Statements.Subtract && this.conf.subtract)\r\n                || (sta instanceof Statements.ClassDefinitionLoad && this.conf.load && configVersion >= version_1.Version.v702)\r\n                || (sta instanceof Statements.InterfaceLoad && this.conf.load && configVersion >= version_1.Version.v702)\r\n                || (sta instanceof Statements.Multiply && this.conf.multiply)\r\n                || (sta instanceof Statements.Divide && this.conf.divide)\r\n                || (sta instanceof Statements.Move && this.conf.move\r\n                    && staNode.getTokens()[0].getStr().toUpperCase() === \"MOVE\"\r\n                    && staNode.getTokens()[1].getStr() !== \"-\"\r\n                    && staNode.getTokens()[1].getStr().toUpperCase() !== \"EXACT\")) {\r\n                if (prev === undefined || staNode.getStart().getCol() !== prev.getCol() || staNode.getStart().getRow() !== prev.getRow()) {\r\n                    const message = \"Statement \\\"\" + staNode.getFirstToken().getStr() + \"\\\" is obsolete\";\r\n                    const fix = this.getFix(file, sta, staNode);\r\n                    const issue = issue_1.Issue.atStatement(file, staNode, message, this.getMetadata().key, this.conf.severity, fix);\r\n                    issues.push(issue);\r\n                }\r\n                prev = staNode.getStart();\r\n            }\r\n            if (this.conf.setExtended && sta instanceof Statements.SetExtendedCheck) {\r\n                const issue = issue_1.Issue.atStatement(file, staNode, \"SET EXTENDED CHECK is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n            if (this.conf.communication && sta instanceof Statements.Communication) {\r\n                const issue = issue_1.Issue.atStatement(file, staNode, \"COMMUNICATION is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n            if (this.conf.pack && sta instanceof Statements.Pack) {\r\n                const issue = issue_1.Issue.atStatement(file, staNode, \"PACK is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n            if (this.conf.parameter && sta instanceof Statements.Parameter) {\r\n                const token = staNode.getFirstToken();\r\n                if (token.getStr().toUpperCase() === \"PARAMETER\") {\r\n                    const fix = edit_helper_1.EditHelper.replaceToken(file, token, \"PARAMETERS\");\r\n                    const issue = issue_1.Issue.atStatement(file, staNode, \"Use PARAMETERS instead of PARAMETER\", this.getMetadata().key, this.conf.severity, fix);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n            if (this.conf.ranges && sta instanceof Statements.Ranges) {\r\n                const children = staNode.getChildren();\r\n                let fix = undefined;\r\n                if (children.length === 5) {\r\n                    const simpleNameString = children[1].concatTokens();\r\n                    const fieldSubString = children[3].concatTokens();\r\n                    const replacement = \"TYPES \" + simpleNameString + \" LIKE RANGE OF \" + fieldSubString + \".\";\r\n                    fix = edit_helper_1.EditHelper.replaceRange(file, staNode.getStart(), staNode.getEnd(), replacement);\r\n                }\r\n                const issue = issue_1.Issue.atStatement(file, staNode, \"Use LIKE RANGE OF instead of RANGES\", this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n            if (this.conf.selectWithoutInto\r\n                && (sta instanceof Statements.Select || sta instanceof Statements.SelectLoop)\r\n                && staNode.findFirstExpression(Expressions.SQLIntoStructure) === undefined\r\n                && staNode.findFirstExpression(Expressions.SQLIntoTable) === undefined) {\r\n                const concat = (_a = staNode.findFirstExpression(Expressions.SQLFieldList)) === null || _a === void 0 ? void 0 : _a.concatTokens().toUpperCase();\r\n                if (concat !== \"COUNT(*)\" && concat !== \"COUNT( * )\") {\r\n                    const issue = issue_1.Issue.atStatement(file, staNode, \"SELECT without INTO\", this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n            if (this.conf.requested && sta instanceof Statements.If) {\r\n                for (const compare of staNode.findAllExpressions(Expressions.Compare)) {\r\n                    const token = compare.findDirectTokenByText(\"REQUESTED\");\r\n                    if (token) {\r\n                        const fix = edit_helper_1.EditHelper.replaceToken(file, token, \"SUPPLIED\");\r\n                        const issue = issue_1.Issue.atToken(file, token, \"IS REQUESTED is obsolete\", this.getMetadata().key, this.conf.severity, fix);\r\n                        issues.push(issue);\r\n                    }\r\n                }\r\n            }\r\n            if (this.conf.occurs) {\r\n                if ((sta instanceof Statements.Describe)\r\n                    || (sta instanceof Statements.Ranges)\r\n                    || (sta instanceof Statements.DataBegin)\r\n                    || (sta instanceof Statements.TypeBegin)) {\r\n                    const token = staNode.findDirectTokenByText(\"OCCURS\");\r\n                    if (token) {\r\n                        const issue = issue_1.Issue.atToken(file, token, \"OCCURS is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                    }\r\n                }\r\n                for (const dataDef of staNode.findAllExpressions(Expressions.DataDefinition)) {\r\n                    const token = (_b = dataDef.findDirectExpression(Expressions.TypeTable)) === null || _b === void 0 ? void 0 : _b.findDirectTokenByText(\"OCCURS\");\r\n                    if (token) {\r\n                        const issue = issue_1.Issue.atToken(file, token, \"OCCURS is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                    }\r\n                }\r\n            }\r\n            if (this.conf.withHeaderLine === true && sta instanceof Statements.Data) {\r\n                if (staNode.concatTokens().toUpperCase().includes(\"WITH HEADER LINE\")) {\r\n                    const token = staNode.getFirstToken();\r\n                    if (token) {\r\n                        const issue = issue_1.Issue.atToken(file, token, \"WITH HEADER LINE is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                    }\r\n                }\r\n            }\r\n            if (this.conf.fieldSymbolStructure && sta instanceof Statements.FieldSymbol) {\r\n                const token = staNode.findDirectTokenByText(\"STRUCTURE\");\r\n                if (token) {\r\n                    const issue = issue_1.Issue.atToken(file, token, \"FIELD-SYMBOLS ... STRUCTURE is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n            if (this.conf.typePools && sta instanceof Statements.TypePools && configVersion >= version_1.Version.v702) {\r\n                const fix = edit_helper_1.EditHelper.deleteStatement(file, staNode);\r\n                const issue = issue_1.Issue.atStatement(file, staNode, \"Statement \\\"TYPE-POOLS\\\" is obsolete\", this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n            if (this.conf.freeMemory && sta instanceof Statements.FreeMemory) {\r\n                const concat = staNode.concatTokens().toUpperCase();\r\n                if (concat === \"FREE MEMORY.\") {\r\n                    const issue = issue_1.Issue.atStatement(file, staNode, \"Statement \\\"FREE MEMORY\\\" without ID is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n            if (this.conf.exitFromSQL && sta instanceof Statements.Exit) {\r\n                const concat = staNode.concatTokens().toUpperCase();\r\n                if (concat === \"EXIT FROM SQL.\") {\r\n                    const issue = issue_1.Issue.atStatement(file, staNode, \"Statement \\\"EXIT FROM SQL\\\" is obsolete\", this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    getFix(file, statement, statementNode) {\r\n        if (statement instanceof Statements.Refresh) {\r\n            if (statementNode.getChildren().length === 6) {\r\n                return undefined;\r\n            }\r\n            return edit_helper_1.EditHelper.replaceToken(file, statementNode.getFirstToken(), \"CLEAR\");\r\n        }\r\n        else if (statement instanceof Statements.Compute) {\r\n            const children = statementNode.getChildren();\r\n            if (children.length === 5) {\r\n                const tokenForDeletion = statementNode.getFirstToken();\r\n                let endPosition = tokenForDeletion.getEnd();\r\n                endPosition = new position_1.Position(endPosition.getRow(), endPosition.getCol() + 1);\r\n                return edit_helper_1.EditHelper.deleteRange(file, tokenForDeletion.getStart(), endPosition);\r\n            }\r\n            else {\r\n                const targetString = children[2].concatTokens();\r\n                const sourceString = children[4].concatTokens();\r\n                const replacement = targetString + \" = EXACT #( \" + sourceString + \" ).\";\r\n                return edit_helper_1.EditHelper.replaceRange(file, statementNode.getStart(), statementNode.getEnd(), replacement);\r\n            }\r\n        }\r\n        else if (statement instanceof Statements.Add ||\r\n            statement instanceof Statements.Subtract) {\r\n            const children = statementNode.getChildren();\r\n            const sourceString = children[1].concatTokens();\r\n            const targetString = children[3].concatTokens();\r\n            let replacement = \"\";\r\n            if (statement instanceof Statements.Add) {\r\n                replacement = targetString + \" = \" + targetString + \" + \" + sourceString + \".\";\r\n            }\r\n            else if (statement instanceof Statements.Subtract) {\r\n                replacement = targetString + \" = \" + targetString + \" - \" + sourceString + \".\";\r\n            }\r\n            return edit_helper_1.EditHelper.replaceRange(file, statementNode.getStart(), statementNode.getEnd(), replacement);\r\n        }\r\n        else if (statement instanceof Statements.Multiply ||\r\n            statement instanceof Statements.Divide) {\r\n            const children = statementNode.getChildren();\r\n            const targetString = children[1].concatTokens();\r\n            const sourceString = children[3].concatTokens();\r\n            let replacement = \"\";\r\n            if (statement instanceof Statements.Multiply) {\r\n                replacement = targetString + \" = \" + targetString + \" * \" + sourceString + \".\";\r\n            }\r\n            else if (statement instanceof Statements.Divide) {\r\n                replacement = targetString + \" = \" + targetString + \" / \" + sourceString + \".\";\r\n            }\r\n            return edit_helper_1.EditHelper.replaceRange(file, statementNode.getStart(), statementNode.getEnd(), replacement);\r\n        }\r\n        else if (statement instanceof Statements.Move) {\r\n            if (statementNode.getColon() !== undefined) {\r\n                return undefined;\r\n            }\r\n            const children = statementNode.getChildren();\r\n            const sourceString = children[1].concatTokens();\r\n            const targetString = children[3].concatTokens();\r\n            let operator = children[2].concatTokens();\r\n            if (operator === \"TO\") {\r\n                operator = \" = \";\r\n            }\r\n            else {\r\n                operator = \" ?= \";\r\n            }\r\n            const replacement = targetString + operator + sourceString + \".\";\r\n            return edit_helper_1.EditHelper.replaceRange(file, statementNode.getStart(), statementNode.getEnd(), replacement);\r\n        }\r\n        else if (statement instanceof Statements.ClassDefinitionLoad ||\r\n            statement instanceof Statements.InterfaceLoad) {\r\n            let token = undefined;\r\n            if (statement instanceof Statements.ClassDefinitionLoad) {\r\n                token = statementNode.getChildren()[3].getFirstToken();\r\n            }\r\n            else {\r\n                token = statementNode.getChildren()[2].getFirstToken();\r\n            }\r\n            let startPosition = token.getStart();\r\n            startPosition = new position_1.Position(startPosition.getRow(), startPosition.getCol() - 1);\r\n            return edit_helper_1.EditHelper.deleteRange(file, startPosition, token.getEnd());\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.ObsoleteStatement = ObsoleteStatement;\r\n//# sourceMappingURL=obsolete_statement.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/obsolete_statement.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/omit_parameter_name.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/omit_parameter_name.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OmitParameterName = exports.OmitParameterNameConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst method_definition_1 = __webpack_require__(/*! ../abap/types/method_definition */ \"./node_modules/@abaplint/core/build/src/abap/types/method_definition.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass OmitParameterNameConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.OmitParameterNameConf = OmitParameterNameConf;\r\nclass OmitParameterName {\r\n    constructor() {\r\n        this.conf = new OmitParameterNameConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"omit_parameter_name\",\r\n            title: \"Omit parameter name\",\r\n            shortDescription: `Omit the parameter name in single parameter calls`,\r\n            extendedInformation: `\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#omit-the-parameter-name-in-single-parameter-calls\n\nEXPORTING must already be omitted for this rule to take effect, https://rules.abaplint.org/exporting/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix],\r\n            badExample: `method( param = 2 ).`,\r\n            goodExample: `method( 2 ).`,\r\n        };\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        var _a, _b;\r\n        const issues = [];\r\n        if (!(obj instanceof _abap_object_1.ABAPObject) || obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        const spaghetti = new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti;\r\n        for (const file of obj.getABAPFiles()) {\r\n            const stru = file.getStructure();\r\n            if (stru === undefined) {\r\n                continue;\r\n            }\r\n            for (const c of stru.findAllExpressions(Expressions.MethodCall)) {\r\n                if (c.findFirstExpression(Expressions.MethodParameters)) {\r\n                    continue;\r\n                }\r\n                // hmm, this will break for nested method calls?\r\n                const parameters = c.findAllExpressions(Expressions.ParameterS);\r\n                if (parameters.length > 1 || parameters.length === 0) {\r\n                    continue;\r\n                }\r\n                const name = c.findDirectExpression(Expressions.MethodName);\r\n                if (name === undefined) {\r\n                    continue;\r\n                }\r\n                const param = c.findDirectExpression(Expressions.MethodCallParam);\r\n                if (param === undefined) {\r\n                    continue;\r\n                }\r\n                const ref = this.findMethodReference(name.getFirstToken(), spaghetti, file.getFilename());\r\n                if (ref === undefined) {\r\n                    continue;\r\n                }\r\n                const i = ref.getParameters().getDefaultImporting();\r\n                if (i === undefined) {\r\n                    continue;\r\n                }\r\n                const p = (_a = parameters[0].findDirectExpression(Expressions.ParameterName)) === null || _a === void 0 ? void 0 : _a.getFirstToken();\r\n                if ((p === null || p === void 0 ? void 0 : p.getStr().toUpperCase()) === i.toUpperCase()) {\r\n                    const message = \"Omit default parameter name \\\"\" + i + \"\\\"\";\r\n                    let fix = undefined;\r\n                    const end = (_b = parameters[0].findDirectExpression(Expressions.Source)) === null || _b === void 0 ? void 0 : _b.getFirstToken().getStart();\r\n                    if (end) {\r\n                        fix = edit_helper_1.EditHelper.deleteRange(file, p.getStart(), end);\r\n                    }\r\n                    issues.push(issue_1.Issue.atToken(file, name.getFirstToken(), message, this.getMetadata().key, this.getConfig().severity, fix));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    ///////////////////\r\n    findMethodReference(token, spaghetti, filename) {\r\n        const scope = spaghetti.lookupPosition(token.getStart(), filename);\r\n        if (scope === undefined) {\r\n            return undefined;\r\n        }\r\n        for (const r of scope.getData().references) {\r\n            if (r.referenceType !== _reference_1.ReferenceType.MethodReference) {\r\n                continue;\r\n            }\r\n            else if (r.position.getStart().equals(token.getStart())\r\n                && r.resolved instanceof method_definition_1.MethodDefinition) {\r\n                return r.resolved;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.OmitParameterName = OmitParameterName;\r\n//# sourceMappingURL=omit_parameter_name.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/omit_parameter_name.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/omit_receiving.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/omit_receiving.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OmitReceiving = exports.OmitReceivingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nclass OmitReceivingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.OmitReceivingConf = OmitReceivingConf;\r\nclass OmitReceiving extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new OmitReceivingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"omit_receiving\",\r\n            title: \"Omit RECEIVING\",\r\n            shortDescription: `Omit RECEIVING`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#omit-receiving`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n            badExample: `\n      upload_pack(\n        EXPORTING\n          io_client       = lo_client\n          iv_url          = iv_url\n          iv_deepen_level = iv_deepen_level\n          it_hashes       = lt_hashes\n        RECEIVING\n          rt_objects      = et_objects ).`,\r\n            goodExample: `\n      et_objects = upload_pack(\n        io_client       = lo_client\n        iv_url          = iv_url\n        iv_deepen_level = iv_deepen_level\n        it_hashes       = lt_hashes ).`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const issues = [];\r\n        for (const e of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllExpressions(Expressions.MethodCallParam)) || []) {\r\n            const p = e.findDirectExpression(Expressions.MethodParameters);\r\n            if (p === undefined) {\r\n                continue;\r\n            }\r\n            const r = p.findDirectTokenByText(\"RECEIVING\");\r\n            if (r === undefined) {\r\n                continue;\r\n            }\r\n            const ex = p.findDirectTokenByText(\"EXCEPTIONS\");\r\n            if (ex !== undefined) {\r\n                continue;\r\n            }\r\n            issues.push(issue_1.Issue.atToken(file, r, \"Omit RECEIVING\", this.getMetadata().key, this.getConfig().severity));\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.OmitReceiving = OmitReceiving;\r\n//# sourceMappingURL=omit_receiving.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/omit_receiving.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/parser_702_chaining.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/parser_702_chaining.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Parser702Chaining = exports.Parser702ChainingConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass Parser702ChainingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.Parser702ChainingConf = Parser702ChainingConf;\r\nclass Parser702Chaining extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new Parser702ChainingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"parser_702_chaining\",\r\n            title: \"Parser Error, bad chanining on 702\",\r\n            shortDescription: `ABAP on 702 does not allow for method chaining with IMPORTING/EXPORTING/CHANGING keywords,\nthis rule finds these and reports errors.\nOnly active on target version 702 and below.`,\r\n            tags: [_irule_1.RuleTag.Syntax, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        if (this.reg.getConfig().getVersion() !== version_1.Version.v702\r\n            && this.reg.getConfig().getVersion() !== version_1.Version.v700) {\r\n            return [];\r\n        }\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        for (const chain of stru.findAllExpressions(Expressions.MethodCallChain)) {\r\n            const calls = chain.findDirectExpressions(Expressions.MethodCall);\r\n            if (calls.length < 2) {\r\n                continue;\r\n            }\r\n            for (const call of calls) {\r\n                const callParam = call.findDirectExpression(Expressions.MethodCallParam);\r\n                if (callParam === undefined) {\r\n                    continue;\r\n                }\r\n                const param = callParam.findDirectExpression(Expressions.MethodParameters);\r\n                if (param === undefined) {\r\n                    continue;\r\n                }\r\n                if (param.findDirectTokenByText(\"IMPORTING\")\r\n                    || param.findDirectTokenByText(\"CHANGING\")\r\n                    || param.findDirectTokenByText(\"EXCEPTIONS\")) {\r\n                    const message = \"This kind of method chaining not possible in 702\";\r\n                    const issue = issue_1.Issue.atPosition(file, param.getFirstToken().getStart(), message, this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.Parser702Chaining = Parser702Chaining;\r\n//# sourceMappingURL=parser_702_chaining.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/parser_702_chaining.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/parser_error.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/parser_error.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParserError = exports.ParserErrorConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst statement_parser_1 = __webpack_require__(/*! ../abap/2_statements/statement_parser */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statement_parser.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nclass ParserErrorConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ParserErrorConf = ParserErrorConf;\r\nclass ParserError extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ParserErrorConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"parser_error\",\r\n            title: \"Parser error\",\r\n            shortDescription: `Checks for syntax not recognized by abaplint.\n\nSee recognized syntax at https://syntax.abaplint.org`,\r\n            tags: [_irule_1.RuleTag.Syntax, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        for (const statement of file.getStatements()) {\r\n            if (!(statement.get() instanceof _statement_1.Unknown)) {\r\n                continue;\r\n            }\r\n            if (statement.getTokens().length > statement_parser_1.STATEMENT_MAX_TOKENS) {\r\n                const message = \"Statement too long, refactor statement\";\r\n                const issue = issue_1.Issue.atToken(file, statement.getTokens()[0], message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n            else {\r\n                const tok = statement.getFirstToken();\r\n                const message = \"Statement does not exist in ABAP\" + this.reg.getConfig().getVersion() + \"(or a parser error), \\\"\" + tok.getStr() + \"\\\"\";\r\n                const issue = issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        if (this.reg.getConfig().getVersion() === version_1.Version.v700) {\r\n            for (const statement of file.getStatements()) {\r\n                if (statement.getPragmas().length > 0) {\r\n                    const message = \"Pragmas not allowed in v700\";\r\n                    const issue = issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.ParserError = ParserError;\r\n//# sourceMappingURL=parser_error.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/parser_error.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/parser_missing_space.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/parser_missing_space.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ParserMissingSpace = exports.ParserMissingSpaceConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass ParserMissingSpaceConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ParserMissingSpaceConf = ParserMissingSpaceConf;\r\nclass ParserMissingSpace extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ParserMissingSpaceConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"parser_missing_space\",\r\n            title: \"Parser Error, missing space\",\r\n            shortDescription: `In special cases the ABAP language allows for not having spaces before or after string literals.\nThis rule makes sure the spaces are consistently required across the language.`,\r\n            tags: [_irule_1.RuleTag.Syntax, _irule_1.RuleTag.Whitespace, _irule_1.RuleTag.SingleFile],\r\n            badExample: `IF ( foo = 'bar').`,\r\n            goodExample: `IF ( foo = 'bar' ).`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let start = new position_1.Position(0, 0);\r\n        for (const statement of file.getStatements()) {\r\n            const missing = this.missingSpace(statement);\r\n            if (missing) {\r\n                const message = \"Missing space between string or character literal and parentheses\";\r\n                start = missing;\r\n                const issue = issue_1.Issue.atPosition(file, start, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    missingSpace(statement) {\r\n        const found = statement.findAllExpressionsMulti([Expressions.CondSub, Expressions.SQLCond,\r\n            Expressions.ValueBody, Expressions.Cond, Expressions.ComponentCond, Expressions.MethodCallParam], true);\r\n        let pos = undefined;\r\n        for (const f of found) {\r\n            if (f.get() instanceof Expressions.CondSub) {\r\n                pos = this.checkCondSub(f);\r\n            }\r\n            else if (f.get() instanceof Expressions.ValueBody) {\r\n                pos = this.checkValueBody(f);\r\n            }\r\n            else if (f.get() instanceof Expressions.Cond) {\r\n                pos = this.checkCond(f);\r\n            }\r\n            else if (f.get() instanceof Expressions.ComponentCond) {\r\n                pos = this.checkComponentCond(f);\r\n            }\r\n            else if (f.get() instanceof Expressions.SQLCond) {\r\n                pos = this.checkSQLCond(f);\r\n            }\r\n            else if (f.get() instanceof Expressions.MethodCallParam) {\r\n                pos = this.checkMethodCallParam(f);\r\n            }\r\n            if (pos) {\r\n                return pos;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkSQLCond(cond) {\r\n        const children = cond.getChildren();\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (children[i].get() instanceof Expressions.SQLCond) {\r\n                const current = children[i];\r\n                const prev = children[i - 1].getLastToken();\r\n                const next = children[i + 1].getFirstToken();\r\n                if (prev.getStr() === \"(\"\r\n                    && prev.getRow() === current.getFirstToken().getRow()\r\n                    && prev.getCol() + 1 === current.getFirstToken().getStart().getCol()) {\r\n                    return current.getFirstToken().getStart();\r\n                }\r\n                if (next.getStr() === \")\"\r\n                    && next.getRow() === current.getLastToken().getRow()\r\n                    && next.getCol() === current.getLastToken().getEnd().getCol()) {\r\n                    return current.getLastToken().getEnd();\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkCondSub(cond) {\r\n        const children = cond.getChildren();\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (children[i].get() instanceof Expressions.Cond) {\r\n                const current = children[i];\r\n                const prev = children[i - 1].getLastToken();\r\n                const next = children[i + 1].getFirstToken();\r\n                if (prev.getStr() === \"(\"\r\n                    && prev.getRow() === current.getFirstToken().getRow()\r\n                    && prev.getCol() + 1 === current.getFirstToken().getStart().getCol()) {\r\n                    return current.getFirstToken().getStart();\r\n                }\r\n                if (next.getStr() === \")\"\r\n                    && next.getRow() === current.getLastToken().getRow()\r\n                    && next.getCol() === current.getLastToken().getEnd().getCol()) {\r\n                    return current.getLastToken().getEnd();\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkComponentCond(cond) {\r\n        const children = cond.getChildren();\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (children[i].get() instanceof Expressions.ComponentCond) {\r\n                const current = children[i];\r\n                const prev = children[i - 1].getLastToken();\r\n                const next = children[i + 1].getFirstToken();\r\n                if (prev.getStr() === \"(\"\r\n                    && prev.getRow() === current.getFirstToken().getRow()\r\n                    && prev.getCol() + 1 === current.getFirstToken().getStart().getCol()) {\r\n                    return current.getFirstToken().getStart();\r\n                }\r\n                if (next.getStr() === \")\"\r\n                    && next.getRow() === current.getLastToken().getRow()\r\n                    && next.getCol() === current.getLastToken().getEnd().getCol()) {\r\n                    return current.getLastToken().getEnd();\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkValueBody(vb) {\r\n        var _a, _b;\r\n        const children = vb.getChildren();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const current = children[i];\r\n            if (current instanceof nodes_1.TokenNode) {\r\n                const prev = (_a = children[i - 1]) === null || _a === void 0 ? void 0 : _a.getLastToken();\r\n                const next = (_b = children[i + 1]) === null || _b === void 0 ? void 0 : _b.getFirstToken();\r\n                if (current.getFirstToken().getStr() === \"(\"\r\n                    && next\r\n                    && next.getRow() === current.getLastToken().getRow()\r\n                    && next.getCol() === current.getLastToken().getEnd().getCol()) {\r\n                    return current.getFirstToken().getStart();\r\n                }\r\n                if (current.getFirstToken().getStr() === \")\"\r\n                    && prev\r\n                    && prev.getRow() === current.getFirstToken().getRow()\r\n                    && prev.getEnd().getCol() === current.getFirstToken().getStart().getCol()) {\r\n                    return current.getLastToken().getEnd();\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkCond(cond) {\r\n        const children = cond.getAllTokens();\r\n        for (let i = 0; i < children.length - 1; i++) {\r\n            const current = children[i];\r\n            const next = children[i + 1];\r\n            if (next.getStr().startsWith(\"'\")\r\n                && next.getRow() === current.getRow()\r\n                && next.getCol() === current.getEnd().getCol()) {\r\n                return current.getEnd();\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    checkMethodCallParam(call) {\r\n        const children = call.getChildren();\r\n        {\r\n            const first = children[0].getFirstToken();\r\n            const second = children[1].getFirstToken();\r\n            if (first.getRow() === second.getRow()\r\n                && first.getCol() + 1 === second.getStart().getCol()) {\r\n                return second.getStart();\r\n            }\r\n        }\r\n        {\r\n            const first = children[children.length - 2].getLastToken();\r\n            const second = children[children.length - 1].getFirstToken();\r\n            if (first.getRow() === second.getRow()\r\n                && first.getEnd().getCol() === second.getStart().getCol()) {\r\n                return second.getStart();\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.ParserMissingSpace = ParserMissingSpace;\r\n//# sourceMappingURL=parser_missing_space.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/parser_missing_space.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/prefer_inline.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/prefer_inline.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PreferInline = exports.PreferInlineConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass PreferInlineConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.PreferInlineConf = PreferInlineConf;\r\nclass PreferInline {\r\n    constructor() {\r\n        this.conf = new PreferInlineConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"prefer_inline\",\r\n            title: \"Prefer Inline Declarations\",\r\n            shortDescription: `Prefer inline to up-front declarations.`,\r\n            extendedInformation: `EXPERIMENTAL\n\nActivates if language version is v740sp02 or above.\n\nVariables must be local(METHOD or FORM).\n\nNo generic or void typed variables.\n\nFirst position used must be a full/pure write.\n\nMove statment is not a cast(?=)\n\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-inline-to-up-front-declarations`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Upport, _irule_1.RuleTag.Experimental, _irule_1.RuleTag.Quickfix],\r\n            badExample: `DATA foo TYPE i.\\nfoo = 2.`,\r\n            goodExample: `DATA(foo) = 2.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        if (this.reg.getConfig().getVersion() < version_1.Version.v740sp02 && this.reg.getConfig().getVersion() !== version_1.Version.Cloud) {\r\n            return [];\r\n        }\r\n        else if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const scopes = this.findScopeCandidates(new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti.getTop());\r\n        const ret = [];\r\n        for (const s of scopes) {\r\n            ret.push(...this.analyzeScope(s, obj));\r\n        }\r\n        return ret;\r\n    }\r\n    ///////////////////////////\r\n    analyzeScope(node, obj) {\r\n        var _a;\r\n        const ret = [];\r\n        const vars = node.getData().vars;\r\n        for (const name in vars) {\r\n            const identifier = vars[name];\r\n            if (this.isLocalDefinition(node, identifier) === false\r\n                || identifier.getMeta().includes(\"inline\" /* InlineDefinition */)\r\n                || identifier.getMeta().includes(\"form_parameter\" /* FormParameter */)) {\r\n                continue;\r\n            }\r\n            else if (identifier.getType().isGeneric() === true) {\r\n                continue;\r\n            }\r\n            else if (identifier.getType().containsVoid() === true) {\r\n                continue;\r\n            }\r\n            const write = this.firstUseIsWrite(node, identifier);\r\n            if (write === undefined) {\r\n                continue;\r\n            }\r\n            // check that it is a pure write, eg not sub component assignment\r\n            const next = this.findNextToken(write, obj);\r\n            if (next === undefined) {\r\n                continue;\r\n            }\r\n            else if ((next === null || next === void 0 ? void 0 : next.getStart().equals(write.position.getEnd())) && next.getStr() !== \".\" && next.getStr() !== \",\") {\r\n                continue;\r\n            }\r\n            const file = obj.getABAPFileByName(identifier.getFilename());\r\n            const writeStatement = edit_helper_1.EditHelper.findStatement(next, file);\r\n            const statementType = writeStatement === null || writeStatement === void 0 ? void 0 : writeStatement.get();\r\n            if (statementType === undefined) {\r\n                continue;\r\n            }\r\n            // for now only allow some specific target statements, todo refactor\r\n            if (!(statementType instanceof Statements.Move\r\n                || statementType instanceof Statements.Catch\r\n                || statementType instanceof Statements.ReadTable\r\n                || statementType instanceof Statements.Loop)\r\n                || ((_a = writeStatement === null || writeStatement === void 0 ? void 0 : writeStatement.concatTokens()) === null || _a === void 0 ? void 0 : _a.includes(\"?=\"))) {\r\n                continue;\r\n            }\r\n            const statement = edit_helper_1.EditHelper.findStatement(identifier.getToken(), file);\r\n            const concat = statement === null || statement === void 0 ? void 0 : statement.concatTokens().toUpperCase();\r\n            if (concat === null || concat === void 0 ? void 0 : concat.includes(\"BEGIN OF\")) {\r\n                continue;\r\n            }\r\n            let fix = undefined;\r\n            if (file && statement) {\r\n                const fix1 = edit_helper_1.EditHelper.deleteStatement(file, statement);\r\n                const name = identifier.getName();\r\n                const replace = name.startsWith(\"<\") ? \"FIELD-SYMBOL(\" + name + \")\" : \"DATA(\" + name + \")\";\r\n                const fix2 = edit_helper_1.EditHelper.replaceRange(file, write.position.getStart(), write.position.getEnd(), replace);\r\n                fix = edit_helper_1.EditHelper.merge(fix1, fix2);\r\n            }\r\n            const message = this.getMetadata().title + \", \" + name;\r\n            ret.push(issue_1.Issue.atIdentifier(identifier, message, this.getMetadata().key, this.conf.severity, fix));\r\n        }\r\n        return ret;\r\n    }\r\n    ////////////////////////\r\n    findNextToken(ref, obj) {\r\n        const file = obj.getABAPFileByName(ref.resolved.getFilename());\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        for (const t of file.getTokens()) {\r\n            if (t.getStart().isAfter(ref.position.getEnd())) {\r\n                return t;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    firstUseIsWrite(node, identifier) {\r\n        // assumption: variables are local, so only the current scope must be searched\r\n        var _a, _b, _c;\r\n        for (const r of node.getData().references) {\r\n            if (r.referenceType === _reference_1.ReferenceType.TypeReference\r\n                && ((_a = r.resolved) === null || _a === void 0 ? void 0 : _a.getStart().equals(identifier.getStart())) === true) {\r\n                return undefined;\r\n            }\r\n        }\r\n        let firstRead = undefined;\r\n        for (const r of node.getData().references) {\r\n            if (r.referenceType !== _reference_1.ReferenceType.DataReadReference\r\n                || ((_b = r.resolved) === null || _b === void 0 ? void 0 : _b.getStart().equals(identifier.getStart())) === false) {\r\n                continue;\r\n            }\r\n            if (r.resolved) {\r\n                firstRead = { position: r.position, resolved: r.resolved };\r\n                break;\r\n            }\r\n        }\r\n        let firstWrite = undefined;\r\n        for (const w of node.getData().references) {\r\n            if (w.referenceType !== _reference_1.ReferenceType.DataWriteReference\r\n                || ((_c = w.resolved) === null || _c === void 0 ? void 0 : _c.getStart().equals(identifier.getStart())) === false) {\r\n                continue;\r\n            }\r\n            if (w.resolved) {\r\n                firstWrite = { position: w.position, resolved: w.resolved };\r\n                break;\r\n            }\r\n        }\r\n        if (firstRead === undefined) {\r\n            return firstWrite;\r\n        }\r\n        else if (firstWrite === undefined) {\r\n            return undefined;\r\n        }\r\n        else if (firstWrite.position.getStart().getRow() === firstRead.position.getStart().getRow()) {\r\n            // if the same statement both reads and write the same variable\r\n            // note that currently just the line number is compared, this is not correct, it should check if its the same statement\r\n            return undefined;\r\n        }\r\n        else if (firstWrite.position.getStart().isBefore(firstRead.position.getStart())) {\r\n            return firstWrite;\r\n        }\r\n        return undefined;\r\n    }\r\n    isLocalDefinition(node, identifier) {\r\n        const { start, end } = node.calcCoverage();\r\n        if (identifier.getStart().isAfter(start) && identifier.getStart().isBefore(end)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    findScopeCandidates(node) {\r\n        if (node.getIdentifier().stype === _scope_type_1.ScopeType.Form\r\n            || node.getIdentifier().stype === _scope_type_1.ScopeType.Method) {\r\n            return [node];\r\n        }\r\n        let ret = [];\r\n        for (const c of node.getChildren()) {\r\n            ret = ret.concat(this.findScopeCandidates(c));\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.PreferInline = PreferInline;\r\n//# sourceMappingURL=prefer_inline.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/prefer_inline.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/prefer_is_not.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/prefer_is_not.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PreferIsNot = exports.PreferIsNotConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass PreferIsNotConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.PreferIsNotConf = PreferIsNotConf;\r\nclass PreferIsNot extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new PreferIsNotConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"prefer_is_not\",\r\n            title: \"Prefer IS NOT to NOT IS\",\r\n            shortDescription: `Prefer IS NOT to NOT IS`,\r\n            extendedInformation: `\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-is-not-to-not-is\n\n\"if not is_valid( ).\" examples are skipped`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            goodExample: `IF variable IS NOT INITIAL.\nIF variable NP 'TODO*'.\nIF variable <> 42.`,\r\n            badExample: `IF NOT variable IS INITIAL.\nIF NOT variable CP 'TODO*'.\nIF NOT variable = 42.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        for (const s of file.getStatements()) {\r\n            for (const c of s.findAllExpressions(Expressions.Compare)) {\r\n                if (c.concatTokens().toUpperCase().startsWith(\"NOT \") === false) {\r\n                    continue;\r\n                }\r\n                else if (c.getChildren().length === 2 && c.getChildren()[1].get() instanceof Expressions.MethodCallChain) {\r\n                    continue;\r\n                }\r\n                const message = \"Prefer IS NOT to NOT IS\";\r\n                const fix = this.getFix(file, c);\r\n                issues.push(issue_1.Issue.atToken(file, c.getFirstToken(), message, this.getMetadata().key, this.conf.severity, fix));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    getFix(file, c) {\r\n        let insertFix;\r\n        if (c.getChildren()[2].getFirstToken().getStr().toUpperCase() === \"IS\") {\r\n            const tokenPositionBeforeDelete = c.getChildren()[2].getLastToken().getEnd();\r\n            const tokenPosition = new position_1.Position(tokenPositionBeforeDelete.getRow(), tokenPositionBeforeDelete.getCol() + 1);\r\n            insertFix = edit_helper_1.EditHelper.insertAt(file, tokenPosition, \"NOT \");\r\n        }\r\n        else if (c.getChildren()[2].getFirstToken().getStr().toUpperCase() === \"IN\" || c.getChildren()[2].getFirstToken().getStr().toUpperCase() === \"BETWEEN\") {\r\n            const tokenPositionBeforeDelete = c.getChildren()[1].getLastToken().getEnd();\r\n            const tokenPosition = new position_1.Position(tokenPositionBeforeDelete.getRow(), tokenPositionBeforeDelete.getCol() + 1);\r\n            insertFix = edit_helper_1.EditHelper.insertAt(file, tokenPosition, \"NOT \");\r\n        }\r\n        else if (c.getChildren()[2].getFirstToken().getStr() === \"=\") {\r\n            insertFix = edit_helper_1.EditHelper.replaceToken(file, c.getChildren()[2].getLastToken(), \"<>\");\r\n        }\r\n        else if (c.getChildren()[2].getFirstToken().getStr() === \"<>\") {\r\n            insertFix = edit_helper_1.EditHelper.replaceToken(file, c.getChildren()[2].getLastToken(), \"=\");\r\n        }\r\n        else if (c.getChildren()[2].getFirstToken().getStr() === \"<\") {\r\n            insertFix = edit_helper_1.EditHelper.replaceToken(file, c.getChildren()[2].getLastToken(), \">\");\r\n        }\r\n        else if (c.getChildren()[2].getFirstToken().getStr() === \">\") {\r\n            insertFix = edit_helper_1.EditHelper.replaceToken(file, c.getChildren()[2].getLastToken(), \"<\");\r\n        }\r\n        else if (c.getChildren()[2].getFirstToken().getStr() === \"<=\") {\r\n            insertFix = edit_helper_1.EditHelper.replaceToken(file, c.getChildren()[2].getLastToken(), \">=\");\r\n        }\r\n        else if (c.getChildren()[2].getFirstToken().getStr() === \">=\") {\r\n            insertFix = edit_helper_1.EditHelper.replaceToken(file, c.getChildren()[2].getLastToken(), \"<=\");\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const endCol = c.getChildren()[0].getFirstToken().getEnd().getCol() + 1;\r\n        const endPosition = new position_1.Position(c.getChildren()[0].getFirstToken().getEnd().getRow(), endCol);\r\n        const deleteFix = edit_helper_1.EditHelper.deleteRange(file, c.getChildren()[0].getFirstToken().getStart(), endPosition);\r\n        const finalFix = edit_helper_1.EditHelper.merge(insertFix, deleteFix);\r\n        return finalFix;\r\n    }\r\n}\r\nexports.PreferIsNot = PreferIsNot;\r\n//# sourceMappingURL=prefer_is_not.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/prefer_is_not.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/prefer_raise_exception_new.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/prefer_raise_exception_new.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PreferRaiseExceptionNew = exports.PreferRaiseExceptionNewConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/@abaplint/core/build/src/index.js\");\r\nclass PreferRaiseExceptionNewConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.PreferRaiseExceptionNewConf = PreferRaiseExceptionNewConf;\r\nclass PreferRaiseExceptionNew extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new PreferRaiseExceptionNewConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"prefer_raise_exception_new\",\r\n            title: \"Prefer RAISE EXCEPTION NEW to RAISE EXCEPTION TYPE\",\r\n            shortDescription: `Prefer RAISE EXCEPTION NEW to RAISE EXCEPTION TYPE`,\r\n            extendedInformation: `\n      https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-raise-exception-new-to-raise-exception-type`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n            goodExample: `RAISE EXCEPTION NEW cx_generation_error( previous = exception ).`,\r\n            badExample: `RAISE EXCEPTION TYPE cx_generation_error\n  EXPORTING\n    previous = exception.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        if (this.reg.getConfig().getVersion() < __1.Version.v752) {\r\n            return [];\r\n        }\r\n        const issues = [];\r\n        for (const statement of file.getStatements()) {\r\n            if (statement.get() instanceof __1.Statements.Raise) {\r\n                const concat = statement.concatTokens().toUpperCase();\r\n                if (concat.includes(\" MESSAGE \")) {\r\n                    continue;\r\n                }\r\n                if (concat.startsWith(\"RAISE EXCEPTION TYPE \")) {\r\n                    const message = \"Prefer RAISE EXCEPTION NEW to RAISE EXCEPTION TYPE\";\r\n                    issues.push(issue_1.Issue.atStatement(file, statement, message, this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.PreferRaiseExceptionNew = PreferRaiseExceptionNew;\r\n//# sourceMappingURL=prefer_raise_exception_new.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/prefer_raise_exception_new.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/prefer_returning_to_exporting.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/prefer_returning_to_exporting.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PreferReturningToExporting = exports.PreferReturningToExportingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass PreferReturningToExportingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.PreferReturningToExportingConf = PreferReturningToExportingConf;\r\nclass PreferReturningToExporting extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new PreferReturningToExportingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"prefer_returning_to_exporting\",\r\n            title: \"Prefer RETURNING to EXPORTING\",\r\n            shortDescription: `Prefer RETURNING to EXPORTING. Generic types cannot be RETURNING.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-returning-to-exporting\nhttps://docs.abapopenchecks.org/checks/44/`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const ret = [];\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        for (const def of stru.findAllStatements(Statements.MethodDef)) {\r\n            if (def.findFirstExpression(Expressions.MethodDefChanging)) {\r\n                continue;\r\n            }\r\n            const exporting = def.findFirstExpression(Expressions.MethodDefExporting);\r\n            if (exporting === undefined) {\r\n                continue;\r\n            }\r\n            const returning = def.findFirstExpression(Expressions.MethodDefReturning);\r\n            if (returning !== undefined) {\r\n                continue;\r\n            }\r\n            const params = exporting.findDirectExpressions(Expressions.MethodParam);\r\n            if (params.length !== 1) {\r\n                continue;\r\n            }\r\n            const concat = params[0].concatTokens().toUpperCase();\r\n            if (concat.endsWith(\"TYPE ANY\")\r\n                || concat.endsWith(\"TYPE ANY TABLE\")\r\n                || concat.endsWith(\"TYPE C\")\r\n                || concat.endsWith(\"TYPE CLIKE\")\r\n                || concat.endsWith(\"TYPE CSEQUENCE\")\r\n                || concat.endsWith(\"TYPE DATA\")\r\n                || concat.endsWith(\"TYPE DECFLOAT\")\r\n                || concat.endsWith(\"TYPE HASHED TABLE\")\r\n                || concat.endsWith(\"TYPE INDEX TABLE\")\r\n                || concat.endsWith(\"TYPE N\")\r\n                || concat.endsWith(\"TYPE NUMERIC\")\r\n                || concat.endsWith(\"TYPE OBJECT\")\r\n                || concat.endsWith(\"TYPE P\")\r\n                || concat.endsWith(\"TYPE SIMPLE\")\r\n                || concat.endsWith(\"TYPE SORTED TABLE\")\r\n                || concat.endsWith(\"TYPE STANDARD TABLE\")\r\n                || concat.endsWith(\"TYPE TABLE\")\r\n                || concat.endsWith(\"TYPE X\")\r\n                || concat.endsWith(\"TYPE XSEQUENCE\")) {\r\n                continue;\r\n            }\r\n            const token = params[0].getFirstToken();\r\n            const issue = issue_1.Issue.atToken(file, token, \"Prefer RETURNING to EXPORTING\", this.getMetadata().key, this.conf.severity);\r\n            ret.push(issue);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.PreferReturningToExporting = PreferReturningToExporting;\r\n//# sourceMappingURL=prefer_returning_to_exporting.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/prefer_returning_to_exporting.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/prefer_xsdbool.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/prefer_xsdbool.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PreferXsdbool = exports.PreferXsdboolConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass PreferXsdboolConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.PreferXsdboolConf = PreferXsdboolConf;\r\nclass PreferXsdbool extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new PreferXsdboolConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"prefer_xsdbool\",\r\n            title: \"Prefer xsdbool over boolc\",\r\n            shortDescription: `Prefer xsdbool over boolc`,\r\n            extendedInformation: `Activates if language version is v740sp08 or above.\n\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#use-xsdbool-to-set-boolean-variables`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Upport, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            badExample: `DATA(sdf) = boolc( 1 = 2 ).`,\r\n            goodExample: `DATA(sdf) = xsdbool( 1 = 2 ).`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const issues = [];\r\n        if (this.reg.getConfig().getVersion() < version_1.Version.v740sp08 && this.reg.getConfig().getVersion() !== version_1.Version.Cloud) {\r\n            return [];\r\n        }\r\n        for (const s of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllExpressions(Expressions.Source)) || []) {\r\n            if (s.concatTokens().toUpperCase().startsWith(\"BOOLC( \") === false) {\r\n                continue;\r\n            }\r\n            const token = s.getFirstToken();\r\n            const message = \"Prefer xsdbool over boolc\";\r\n            const fix = edit_helper_1.EditHelper.replaceToken(file, token, \"xsdbool\");\r\n            issues.push(issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity, fix));\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.PreferXsdbool = PreferXsdbool;\r\n//# sourceMappingURL=prefer_xsdbool.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/prefer_xsdbool.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/preferred_compare_operator.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/preferred_compare_operator.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PreferredCompareOperator = exports.PreferredCompareOperatorConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass PreferredCompareOperatorConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Operators which are not allowed */\r\n        this.badOperators = [\"EQ\", \"><\", \"NE\", \"GE\", \"GT\", \"LT\", \"LE\"];\r\n    }\r\n}\r\nexports.PreferredCompareOperatorConf = PreferredCompareOperatorConf;\r\nclass PreferredCompareOperator extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new PreferredCompareOperatorConf();\r\n        this.operatorMapping = new Map();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"preferred_compare_operator\",\r\n            title: \"Preferred compare operator\",\r\n            shortDescription: `Configure undesired operator variants`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Quickfix],\r\n        };\r\n    }\r\n    getDescription(operator) {\r\n        return \"Compare operator \\\"\" + operator + \"\\\" not preferred\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        this.buildMapping();\r\n        const issues = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        const operators = struc.findAllExpressionsMulti([Expressions.CompareOperator, Expressions.SQLCompareOperator]);\r\n        for (const op of operators) {\r\n            const token = op.getLastToken();\r\n            // todo, performance, lookup in hash map instead(JS object)\r\n            if (this.conf.badOperators.indexOf(token.getStr().toUpperCase()) >= 0) {\r\n                issues.push(this.createIssue(token, file));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    buildMapping() {\r\n        if (this.operatorMapping.size === 0) {\r\n            this.operatorMapping.set(\"EQ\", \"=\");\r\n            this.operatorMapping.set(\"><\", \"<>\");\r\n            this.operatorMapping.set(\"NE\", \"<>\");\r\n            this.operatorMapping.set(\"GE\", \">=\");\r\n            this.operatorMapping.set(\"GT\", \">\");\r\n            this.operatorMapping.set(\"LT\", \"<\");\r\n            this.operatorMapping.set(\"LE\", \"<=\");\r\n            this.operatorMapping.set(\"=\", \"EQ\");\r\n            this.operatorMapping.set(\"<>\", \"NE\");\r\n            this.operatorMapping.set(\">=\", \"GE\");\r\n            this.operatorMapping.set(\">\", \"GT\");\r\n            this.operatorMapping.set(\"<\", \"LT\");\r\n            this.operatorMapping.set(\"<=\", \"LE\");\r\n        }\r\n    }\r\n    createIssue(token, file) {\r\n        var _a;\r\n        const message = this.getDescription(token.getStr());\r\n        const replacementToken = (_a = this.operatorMapping) === null || _a === void 0 ? void 0 : _a.get(token.getStr());\r\n        // values in badOperators can be entered by the user and may not necessarily be actual operators\r\n        if (replacementToken) {\r\n            const fix = edit_helper_1.EditHelper.replaceRange(file, token.getStart(), token.getEnd(), replacementToken);\r\n            const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity, fix);\r\n            return issue;\r\n        }\r\n        else {\r\n            const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n            return issue;\r\n        }\r\n    }\r\n}\r\nexports.PreferredCompareOperator = PreferredCompareOperator;\r\n//# sourceMappingURL=preferred_compare_operator.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/preferred_compare_operator.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/prefix_is_current_class.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/prefix_is_current_class.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PrefixIsCurrentClass = exports.PrefixIsCurrentClassConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass PrefixIsCurrentClassConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Checks usages of self references with 'me' when calling instance methods\r\n         */\r\n        this.omitMeInstanceCalls = true;\r\n    }\r\n}\r\nexports.PrefixIsCurrentClassConf = PrefixIsCurrentClassConf;\r\nclass PrefixIsCurrentClass extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new PrefixIsCurrentClassConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"prefix_is_current_class\",\r\n            title: \"Prefix is current class\",\r\n            shortDescription: `Reports errors if the current class or interface references itself with \"current_class=>\"`,\r\n            // eslint-disable-next-line max-len\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#omit-the-self-reference-me-when-calling-an-instance-method`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        return this.checkClasses(file).concat(this.checkInterfaces(file));\r\n    }\r\n    checkInterfaces(file) {\r\n        var _a;\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        const issues = [];\r\n        for (const s of struc.findDirectStructures(Structures.Interface)) {\r\n            const name = (_a = s.findFirstExpression(expressions_1.InterfaceName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr().toUpperCase();\r\n            if (name === undefined) {\r\n                continue;\r\n            }\r\n            const staticAccess = name + \"=>\";\r\n            for (const e of s.findAllExpressions(expressions_1.TypeName)) {\r\n                const concat = e.concatTokens().toUpperCase();\r\n                if (concat.startsWith(staticAccess)) {\r\n                    const stat = e.findDirectTokenByText(\"=>\");\r\n                    if (stat === undefined) {\r\n                        continue;\r\n                    }\r\n                    const start = new position_1.Position(stat.getRow(), stat.getCol() - name.length);\r\n                    const end = new position_1.Position(stat.getRow(), stat.getCol() + 2);\r\n                    const fix = edit_helper_1.EditHelper.deleteRange(file, start, end);\r\n                    issues.push(issue_1.Issue.atToken(file, e.getFirstToken(), \"Reference to current interface can be omitted\", this.getMetadata().key, this.conf.severity, fix));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    checkClasses(file) {\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        const issues = [];\r\n        const classStructures = struc.findDirectStructures(Structures.ClassImplementation);\r\n        classStructures.push(...struc.findDirectStructures(Structures.ClassDefinition));\r\n        const meAccess = \"ME->\";\r\n        for (const c of classStructures) {\r\n            const className = c.findFirstExpression(expressions_1.ClassName).getFirstToken().getStr().toUpperCase();\r\n            const staticAccess = className + \"=>\";\r\n            for (const s of c.findAllStatementNodes()) {\r\n                const concat = s.concatTokensWithoutStringsAndComments().toUpperCase();\r\n                if (concat.includes(staticAccess)) {\r\n                    const tokenPos = s.findTokenSequencePosition(className, \"=>\");\r\n                    if (tokenPos) {\r\n                        const end = new position_1.Position(tokenPos.getRow(), tokenPos.getCol() + className.length + 2);\r\n                        const fix = edit_helper_1.EditHelper.deleteRange(file, tokenPos, end);\r\n                        issues.push(issue_1.Issue.atRange(file, tokenPos, end, \"Reference to current class can be omitted: \\\"\" + staticAccess + \"\\\"\", this.getMetadata().key, this.conf.severity, fix));\r\n                    }\r\n                }\r\n                else if (this.conf.omitMeInstanceCalls === true\r\n                    && concat.includes(meAccess)\r\n                    && s.findFirstExpression(expressions_1.MethodCall)) {\r\n                    const tokenPos = s.findTokenSequencePosition(\"me\", \"->\");\r\n                    if (tokenPos) {\r\n                        const end = new position_1.Position(tokenPos.getRow(), tokenPos.getCol() + 4);\r\n                        const fix = edit_helper_1.EditHelper.deleteRange(file, tokenPos, end);\r\n                        issues.push(issue_1.Issue.atRange(file, tokenPos, end, \"Omit 'me->' in instance calls\", this.getMetadata().key, this.conf.severity, fix));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.PrefixIsCurrentClass = PrefixIsCurrentClass;\r\n//# sourceMappingURL=prefix_is_current_class.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/prefix_is_current_class.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/reduce_string_templates.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/reduce_string_templates.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReduceStringTemplates = exports.ReduceStringTemplatesConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass ReduceStringTemplatesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ReduceStringTemplatesConf = ReduceStringTemplatesConf;\r\nclass ReduceStringTemplates extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ReduceStringTemplatesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"reduce_string_templates\",\r\n            title: \"Reduce string templates\",\r\n            shortDescription: `Checks for string templates`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `WRITE |{ |sdf| }|.\\nWRITE |{ 'sdf' }|.`,\r\n            goodExample: `WRITE |sdf|.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, _obj) {\r\n        const issues = [];\r\n        const structure = file.getStructure();\r\n        if (structure === undefined) {\r\n            return [];\r\n        }\r\n        for (const template of structure.findAllExpressions(Expressions.StringTemplate)) {\r\n            for (const source of template.findDirectExpressions(Expressions.Source)) {\r\n                for (const second of source.findDirectExpressions(Expressions.StringTemplate)) {\r\n                    issues.push(issue_1.Issue.atToken(file, second.getFirstToken(), \"Nested string templates, reduce\", this.getMetadata().key, this.conf.severity));\r\n                }\r\n                for (const constant of source.findDirectExpressions(Expressions.Constant)) {\r\n                    for (const constantString of constant.findDirectExpressions(Expressions.ConstantString)) {\r\n                        issues.push(issue_1.Issue.atToken(file, constantString.getFirstToken(), \"Constant string in text template, reduce\", this.getMetadata().key, this.conf.severity));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (const source of structure.findAllExpressions(Expressions.Source)) {\r\n            const children = source.getChildren();\r\n            if (children.length !== 3) {\r\n                continue;\r\n            }\r\n            else if (!(children[0].get() instanceof Expressions.StringTemplate)) {\r\n                continue;\r\n            }\r\n            else if (children[1].getFirstToken().getStr() !== \"&&\") {\r\n                continue;\r\n            }\r\n            else if (!(children[2].get() instanceof Expressions.Source)) {\r\n                continue;\r\n            }\r\n            const sub = children[2].getChildren();\r\n            if (sub.length !== 1) {\r\n                continue;\r\n            }\r\n            const start = children[0].getFirstToken().getStart();\r\n            const end = sub[0].getLastToken().getEnd();\r\n            if (start.getRow() === end.getRow()) {\r\n                const message = \"Reduce template, remove \\\"&&\\\"\";\r\n                issues.push(issue_1.Issue.atToken(file, children[1].getFirstToken(), message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.ReduceStringTemplates = ReduceStringTemplates;\r\n//# sourceMappingURL=reduce_string_templates.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/reduce_string_templates.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/release_idoc.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/release_idoc.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ReleaseIdoc = exports.ReleaseIdocConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass ReleaseIdocConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.ReleaseIdocConf = ReleaseIdocConf;\r\nclass ReleaseIdoc {\r\n    constructor() {\r\n        this.conf = new ReleaseIdocConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"release_idoc\",\r\n            title: \"Release iDoc\",\r\n            shortDescription: `Checks idoc types and segments are set to status released`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Idoc type/segement status must be set to released\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        const file = obj.getXMLFile();\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        if (obj instanceof Objects.Table) {\r\n            if (file.getRaw().includes(\"<SEGMENTDEFINITION>\") === false) {\r\n                return [];\r\n            }\r\n        }\r\n        else if (!(obj instanceof Objects.Idoc)) {\r\n            return [];\r\n        }\r\n        if (file.getRaw().includes(\"<CLOSED>X</CLOSED>\") === false) {\r\n            const position = new position_1.Position(1, 1);\r\n            const issue = issue_1.Issue.atPosition(obj.getFiles()[0], position, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n            return [issue];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\nexports.ReleaseIdoc = ReleaseIdoc;\r\n//# sourceMappingURL=release_idoc.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/release_idoc.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/remove_descriptions.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/remove_descriptions.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RemoveDescriptions = exports.RemoveDescriptionsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst fastxmlparser = __webpack_require__(/*! fast-xml-parser */ \"./node_modules/fast-xml-parser/src/parser.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst xml_utils_1 = __webpack_require__(/*! ../xml_utils */ \"./node_modules/@abaplint/core/build/src/xml_utils.js\");\r\nclass RemoveDescriptionsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Ignore global exception classes */\r\n        this.ignoreExceptions = false;\r\n        /** Ignore global workflow classes */\r\n        this.ignoreWorkflow = true;\r\n    }\r\n}\r\nexports.RemoveDescriptionsConf = RemoveDescriptionsConf;\r\nclass RemoveDescriptions {\r\n    constructor() {\r\n        this.conf = new RemoveDescriptionsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"remove_descriptions\",\r\n            title: \"Remove descriptions\",\r\n            shortDescription: `Ensures you have no descriptions in metadata of methods, parameters, etc.\n\nClass descriptions are required, see rule description_empty.\n\nConsider using ABAP Doc for documentation.`,\r\n            tags: [],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        // plan is omitting knowledge about descriptions in abaplint, so this rule must parse the XML\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        if (obj instanceof Objects.Class) {\r\n            let def;\r\n            try {\r\n                def = obj.getClassDefinition();\r\n            }\r\n            catch (_a) {\r\n                return [];\r\n            }\r\n            if (def === undefined) {\r\n                return [];\r\n            }\r\n            else if (this.conf.ignoreExceptions && ddic.isException(def, obj)) {\r\n                return [];\r\n            }\r\n            else if (this.conf.ignoreWorkflow === true && def.interfaces.find(e => e.name.toUpperCase() === \"IF_WORKFLOW\")) {\r\n                return [];\r\n            }\r\n            return this.checkClass(obj);\r\n        }\r\n        else if (obj instanceof Objects.Interface) {\r\n            return this.checkInterface(obj);\r\n        }\r\n        return [];\r\n    }\r\n    //////////////\r\n    checkInterface(obj) {\r\n        const xml = obj.getXML();\r\n        if (xml === undefined) {\r\n            return [];\r\n        }\r\n        const file = obj.getXMLFile();\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        return this.checkXML(xml, file);\r\n    }\r\n    checkClass(obj) {\r\n        const xml = obj.getXML();\r\n        if (xml === undefined) {\r\n            return [];\r\n        }\r\n        const file = obj.getXMLFile();\r\n        if (file === undefined) {\r\n            return [];\r\n        }\r\n        return this.checkXML(xml, file);\r\n    }\r\n    checkXML(xml, file) {\r\n        const parsed = fastxmlparser.parse(xml, { parseNodeValue: false, ignoreAttributes: true, trimValues: false });\r\n        if (parsed === undefined || parsed.abapGit[\"asx:abap\"][\"asx:values\"] === undefined) {\r\n            return [];\r\n        }\r\n        const desc = parsed.abapGit[\"asx:abap\"][\"asx:values\"].DESCRIPTIONS;\r\n        if (desc === undefined) {\r\n            return [];\r\n        }\r\n        const ret = [];\r\n        for (const d of xml_utils_1.xmlToArray(desc.SEOCOMPOTX)) {\r\n            const message = \"Remove description for \" + d.CMPNAME;\r\n            const position = new position_1.Position(1, 1);\r\n            const issue = issue_1.Issue.atPosition(file, position, message, this.getMetadata().key, this.conf.severity);\r\n            ret.push(issue);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.RemoveDescriptions = RemoveDescriptions;\r\n//# sourceMappingURL=remove_descriptions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/remove_descriptions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/rfc_error_handling.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/rfc_error_handling.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.RFCErrorHandling = exports.RFCErrorHandlingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass RFCErrorHandlingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.RFCErrorHandlingConf = RFCErrorHandlingConf;\r\nclass RFCErrorHandling extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new RFCErrorHandlingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"rfc_error_handling\",\r\n            title: \"RFC error handling\",\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            shortDescription: `Checks that exceptions 'system_failure' and 'communication_failure' are handled in RFC calls`,\r\n            extendedInformation: `https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abenrfc_exception.htm`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"RFC error handling: At least one unhandled exception from SYSTEM_FAILURE, COMMUNICATION_FAILURE, RESOURCE_FAILURE.\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const output = [];\r\n        for (const stat of file.getStatements()) {\r\n            const token = stat.getFirstToken();\r\n            if (!(stat.get() instanceof Statements.CallFunction)) {\r\n                continue;\r\n            }\r\n            if (!stat.findFirstExpression(Expressions.Destination)) {\r\n                continue;\r\n            }\r\n            const list = stat.findFirstExpression(Expressions.ParameterListExceptions);\r\n            if (list === undefined) {\r\n                const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n                continue;\r\n            }\r\n            const parameters = list.findAllExpressions(Expressions.ParameterName);\r\n            const names = [];\r\n            for (const par of parameters) {\r\n                names.push(par.getFirstToken().getStr().toUpperCase());\r\n            }\r\n            if (names.indexOf(\"SYSTEM_FAILURE\") < 0\r\n                || names.indexOf(\"COMMUNICATION_FAILURE\") < 0\r\n                || names.indexOf(\"RESOURCE_FAILURE\") < 0) {\r\n                const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n                continue;\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.RFCErrorHandling = RFCErrorHandling;\r\n//# sourceMappingURL=rfc_error_handling.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/rfc_error_handling.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/select_add_order_by.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/select_add_order_by.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectAddOrderBy = exports.SelectAddOrderByConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst basic_1 = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nclass SelectAddOrderByConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.SelectAddOrderByConf = SelectAddOrderByConf;\r\nclass SelectAddOrderBy {\r\n    constructor() {\r\n        this.conf = new SelectAddOrderByConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"select_add_order_by\",\r\n            title: \"SELECT add ORDER BY\",\r\n            shortDescription: `SELECTs add ORDER BY clause`,\r\n            extendedInformation: `\nThis will make sure that the SELECT statement returns results in the same sequence on different databases\n\nadd ORDER BY PRIMARY KEY if in doubt\n\nIf the target is a sorted/hashed table, no issue is reported`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        var _a, _b, _c;\r\n        const issues = [];\r\n        if (!(obj instanceof _abap_object_1.ABAPObject) || obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        const spaghetti = new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti;\r\n        for (const file of obj.getABAPFiles()) {\r\n            const stru = file.getStructure();\r\n            if (stru === undefined) {\r\n                return issues;\r\n            }\r\n            const selects = stru.findAllStatements(Statements.Select);\r\n            selects.push(...stru.findAllStatements(Statements.SelectLoop));\r\n            for (const s of selects) {\r\n                const c = s.concatTokens();\r\n                if (c.startsWith(\"SELECT SINGLE \")) {\r\n                    continue;\r\n                }\r\n                // skip COUNT(*)\r\n                const list = s.findFirstExpression(Expressions.SQLFieldList);\r\n                if ((list === null || list === void 0 ? void 0 : list.getChildren().length) === 1 && ((_a = list.getFirstChild()) === null || _a === void 0 ? void 0 : _a.get()) instanceof Expressions.SQLAggregation) {\r\n                    continue;\r\n                }\r\n                else if (s.findFirstExpression(Expressions.SQLOrderBy)) {\r\n                    continue;\r\n                }\r\n                const target = (_b = s.findFirstExpression(Expressions.SQLIntoTable)) === null || _b === void 0 ? void 0 : _b.findFirstExpression(Expressions.Target);\r\n                if (target) {\r\n                    const start = target.getFirstToken().getStart();\r\n                    const scope = spaghetti.lookupPosition(start, file.getFilename());\r\n                    const type = (_c = scope === null || scope === void 0 ? void 0 : scope.findWriteReference(start)) === null || _c === void 0 ? void 0 : _c.getType();\r\n                    if (type instanceof basic_1.TableType\r\n                        && ((type === null || type === void 0 ? void 0 : type.getAccessType()) === basic_1.TableAccessType.sorted || (type === null || type === void 0 ? void 0 : type.getAccessType()) === basic_1.TableAccessType.hashed)) {\r\n                        continue;\r\n                    }\r\n                }\r\n                issues.push(issue_1.Issue.atStatement(file, s, \"Add ORDER BY\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.SelectAddOrderBy = SelectAddOrderBy;\r\n//# sourceMappingURL=select_add_order_by.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/select_add_order_by.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/select_performance.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/select_performance.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectPerformance = exports.SelectPerformanceConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst structure_type_1 = __webpack_require__(/*! ../abap/types/basic/structure_type */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/structure_type.js\");\r\nconst DEFAULT_COLUMNS = 10;\r\nclass SelectPerformanceConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Detects ENDSELECT */\r\n        this.endSelect = true;\r\n        /** Detects SELECT * */\r\n        this.selectStar = true;\r\n        /** \"SELECT\" * is considered okay if the table is less than X columns, the table must be known to the linter */\r\n        this.starOkayIfFewColumns = DEFAULT_COLUMNS;\r\n    }\r\n}\r\nexports.SelectPerformanceConf = SelectPerformanceConf;\r\nclass SelectPerformance {\r\n    constructor() {\r\n        this.conf = new SelectPerformanceConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"select_performance\",\r\n            title: \"SELECT performance\",\r\n            shortDescription: `Various checks regarding SELECT performance.`,\r\n            extendedInformation: `ENDSELECT: not reported when the corresponding SELECT has PACKAGE SIZE\n\nSELECT *: not reported if using INTO/APPENDING CORRESPONDING FIELDS OF`,\r\n            tags: [_irule_1.RuleTag.SingleFile, _irule_1.RuleTag.Performance],\r\n        };\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        if (this.conf.starOkayIfFewColumns === undefined) {\r\n            this.conf.starOkayIfFewColumns = DEFAULT_COLUMNS;\r\n        }\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const issues = [];\r\n        for (const file of obj.getABAPFiles()) {\r\n            const stru = file.getStructure();\r\n            if (stru === undefined) {\r\n                return issues;\r\n            }\r\n            if (this.conf.endSelect) {\r\n                for (const s of stru.findAllStructures(Structures.Select) || []) {\r\n                    const select = s.findDirectStatement(Statements.SelectLoop);\r\n                    if (select === undefined || select.concatTokens().includes(\"PACKAGE SIZE\")) {\r\n                        continue;\r\n                    }\r\n                    const message = \"Avoid use of ENDSELECT\";\r\n                    issues.push(issue_1.Issue.atStatement(file, select, message, this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n            if (this.conf.selectStar) {\r\n                const spaghetti = new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti;\r\n                const selects = stru.findAllStatements(Statements.Select);\r\n                selects.push(...stru.findAllStatements(Statements.SelectLoop));\r\n                for (const s of selects) {\r\n                    const concat = s.concatTokens().toUpperCase();\r\n                    if (concat.startsWith(\"SELECT * \") === false\r\n                        && concat.startsWith(\"SELECT SINGLE * \") === false) {\r\n                        continue;\r\n                    }\r\n                    else if (concat.includes(\" INTO CORRESPONDING FIELDS OF \")\r\n                        || concat.includes(\" APPENDING CORRESPONDING FIELDS OF \")) {\r\n                        continue;\r\n                    }\r\n                    const columnCount = this.findNumberOfColumns(s, file, spaghetti);\r\n                    if (columnCount\r\n                        && columnCount <= this.getConfig().starOkayIfFewColumns) {\r\n                        continue;\r\n                    }\r\n                    const message = \"Avoid use of SELECT *\";\r\n                    issues.push(issue_1.Issue.atToken(file, s.getFirstToken(), message, this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    findNumberOfColumns(s, file, spaghetti) {\r\n        const dbnames = s.findAllExpressions(Expressions.DatabaseTable);\r\n        if (dbnames.length === 1) {\r\n            const start = dbnames[0].getFirstToken().getStart();\r\n            const scope = spaghetti.lookupPosition(start, file.getFilename());\r\n            const name = scope === null || scope === void 0 ? void 0 : scope.findTableReference(start);\r\n            const tabl = this.reg.getObject(\"TABL\", name);\r\n            const parsed = tabl === null || tabl === void 0 ? void 0 : tabl.parseType(this.reg);\r\n            if (parsed instanceof structure_type_1.StructureType) {\r\n                return parsed.getComponents().length;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.SelectPerformance = SelectPerformance;\r\n//# sourceMappingURL=select_performance.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/select_performance.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/selection_screen_naming.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/selection_screen_naming.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SelectionScreenNaming = exports.SelectionScreenNamingConf = void 0;\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _naming_rule_config_1 = __webpack_require__(/*! ./_naming_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_naming_rule_config.js\");\r\nconst statements_1 = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst name_validator_1 = __webpack_require__(/*! ../utils/name_validator */ \"./node_modules/@abaplint/core/build/src/utils/name_validator.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass SelectionScreenNamingConf extends _naming_rule_config_1.NamingRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** The pattern for selection-screen parameters */\r\n        this.parameter = \"^P_.+$\";\r\n        /** The pattern for selection-screen select-options */\r\n        this.selectOption = \"^S_.+$\";\r\n    }\r\n}\r\nexports.SelectionScreenNamingConf = SelectionScreenNamingConf;\r\nclass SelectionScreenNaming extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new SelectionScreenNamingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"selection_screen_naming\",\r\n            title: \"Selection screen naming conventions\",\r\n            shortDescription: `Allows you to enforce a pattern, such as a prefix, for selection-screen variable names.`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getDescription(expected, actual) {\r\n        return this.conf.patternKind === \"required\" ?\r\n            `Selection-Screen variable name does not match pattern ${expected}: ${actual}` :\r\n            `Selection-Screen variable name must not match pattern ${expected}: ${actual}`;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        if (this.conf.patternKind === undefined) {\r\n            this.conf.patternKind = \"required\";\r\n        }\r\n        let parameterCheckDisabled = false;\r\n        let selectOptionDisabled = false;\r\n        if (this.conf.parameter === undefined || this.conf.parameter.length === 0) {\r\n            parameterCheckDisabled = true;\r\n        }\r\n        if (this.conf.selectOption === undefined || this.conf.selectOption.length === 0) {\r\n            selectOptionDisabled = true;\r\n        }\r\n        for (const stat of file.getStatements()) {\r\n            if ((stat.get() instanceof statements_1.Parameter && !parameterCheckDisabled)\r\n                || (stat.get() instanceof statements_1.SelectOption && !selectOptionDisabled)) {\r\n                const fieldNode = this.getFieldForStatementNode(stat);\r\n                const regex = new RegExp(this.getPatternForStatement(stat.get()), \"i\");\r\n                if (fieldNode && name_validator_1.NameValidator.violatesRule(fieldNode.getFirstToken().getStr(), regex, this.conf)) {\r\n                    issues.push(issue_1.Issue.atToken(file, fieldNode.getFirstToken(), this.getDescription(this.getPatternForStatement(stat.get()), fieldNode.getFirstToken().getStr()), this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    getPatternForStatement(statement) {\r\n        let pattern = \"\";\r\n        if (statement instanceof statements_1.Parameter) {\r\n            pattern = this.conf.parameter;\r\n        }\r\n        else if (statement instanceof statements_1.SelectOption) {\r\n            pattern = this.conf.selectOption;\r\n        }\r\n        return pattern;\r\n    }\r\n    getFieldForStatementNode(statNode) {\r\n        if (statNode.get() instanceof statements_1.Parameter) {\r\n            return statNode.findFirstExpression(expressions_1.FieldSub);\r\n        }\r\n        else if (statNode.get() instanceof statements_1.SelectOption) {\r\n            return statNode.findFirstExpression(expressions_1.FieldSub);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nexports.SelectionScreenNaming = SelectionScreenNaming;\r\n//# sourceMappingURL=selection_screen_naming.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/selection_screen_naming.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/sequential_blank.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/sequential_blank.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SequentialBlank = exports.SequentialBlankConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass SequentialBlankConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** An equal or higher number of sequential blank lines will trigger a violation.\r\n         * Example: if lines = 3, a maximum of 2 is allowed.\r\n         */\r\n        this.lines = 4;\r\n    }\r\n}\r\nexports.SequentialBlankConf = SequentialBlankConf;\r\nclass SequentialBlank extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new SequentialBlankConf();\r\n    }\r\n    static isBlankOrWhitespace(line) {\r\n        return /^\\s*$/.test(line);\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"sequential_blank\",\r\n            title: \"Sequential blank lines\",\r\n            shortDescription: `Checks that code does not contain more than the configured number of blank lines in a row.`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Remove sequential blank lines\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const rows = file.getRawRows();\r\n        let blanks = 0;\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (SequentialBlank.isBlankOrWhitespace(rows[i])) {\r\n                blanks++;\r\n            }\r\n            else {\r\n                blanks = 0;\r\n            }\r\n            if (blanks === this.conf.lines) {\r\n                let blankCounter = 1;\r\n                while (i + blankCounter < rows.length && SequentialBlank.isBlankOrWhitespace(rows[i + blankCounter])) {\r\n                    ++blankCounter;\r\n                }\r\n                const reportPos = new position_1.Position(i + 1, 1);\r\n                // fix has to start at end of previous row for it to properly delete the first row\r\n                const startPos = new position_1.Position(i, rows[i].length + 1);\r\n                const endPos = new position_1.Position(i + blankCounter, rows[i + blankCounter - 1].length + 1);\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, startPos, endPos);\r\n                const issue = issue_1.Issue.atPosition(file, reportPos, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.SequentialBlank = SequentialBlank;\r\n//# sourceMappingURL=sequential_blank.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/sequential_blank.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/short_case.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/short_case.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ShortCase = exports.ShortCaseConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass ShortCaseConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** The smallest number of WHEN branches which will trigger a violation.\r\n         * Example: if length = 1, at least 2 branches are required\r\n         */\r\n        this.length = 1;\r\n        /** List of inputs for CASE which are allowed\r\n         * @uniqueItems true\r\n        */\r\n        this.allow = [];\r\n    }\r\n}\r\nexports.ShortCaseConf = ShortCaseConf;\r\nclass ShortCase extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new ShortCaseConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"short_case\",\r\n            title: \"Short CASE\",\r\n            shortDescription: `Checks for CASE statements which have fewer than the specified number of branches`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"CASE construct too short, it must have a minimum of \" + (this.conf.length + 1) + \" WHEN branches\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        for (const c of struc.findAllStructures(Structures.Case)) {\r\n            const clist = c.findDirectStatements(Statements.Case);\r\n            if (clist.length > 0 && this.conf.allow && this.conf.allow.find((e) => { return e === clist[0].getTokens()[1].getStr(); })) {\r\n                continue;\r\n            }\r\n            if (c.findDirectStructures(Structures.When).length <= this.conf.length) {\r\n                if (c.findAllExpressions(Expressions.Or).length > 0) {\r\n                    continue;\r\n                }\r\n                const issue = issue_1.Issue.atToken(file, c.getFirstToken(), this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.ShortCase = ShortCase;\r\n//# sourceMappingURL=short_case.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/short_case.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/sicf_consistency.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/sicf_consistency.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SICFConsistency = exports.SICFConsistencyConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass SICFConsistencyConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.SICFConsistencyConf = SICFConsistencyConf;\r\nclass SICFConsistency {\r\n    constructor() {\r\n        this.conf = new SICFConsistencyConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"sicf_consistency\",\r\n            title: \"SICF consistency\",\r\n            shortDescription: `Checks the validity of ICF services:\n\n* Class defined in handler must exist\n* Class must not have any syntax errors\n* Class must implement interface IF_HTTP_EXTENSION`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        const issues = [];\r\n        if (!(obj instanceof objects_1.ICFService)) {\r\n            return [];\r\n        }\r\n        const handlers = obj.getHandlerList();\r\n        if (handlers === undefined) {\r\n            return [];\r\n        }\r\n        for (const h of handlers) {\r\n            const clas = this.reg.getObject(\"CLAS\", h);\r\n            if (clas === undefined) {\r\n                const pattern = new RegExp(this.reg.getConfig().getSyntaxSetttings().errorNamespace, \"i\");\r\n                if (pattern.test(h) === true) {\r\n                    const message = \"Handler class \" + h + \" not found\";\r\n                    const issue = issue_1.Issue.atPosition(obj.getFiles()[0], new position_1.Position(1, 1), message, this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n                continue;\r\n            }\r\n            const def = clas.getClassDefinition();\r\n            if (def === undefined) {\r\n                const message = \"Syntax error in class \" + h;\r\n                const issue = issue_1.Issue.atPosition(obj.getFiles()[0], new position_1.Position(1, 1), message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n                continue;\r\n            }\r\n            const implementing = this.findImplementing(def);\r\n            if (implementing.findIndex((i) => { return i.name.toUpperCase() === \"IF_HTTP_EXTENSION\"; }) < 0) {\r\n                const message = \"Handler class \" + h + \" must implement IF_HTTP_EXTENSION\";\r\n                const issue = issue_1.Issue.atPosition(obj.getFiles()[0], new position_1.Position(1, 1), message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n                continue;\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    ///////////////////////////\r\n    findImplementing(def) {\r\n        let ret = def.interfaces;\r\n        let superName = def.superClassName;\r\n        while (superName !== undefined) {\r\n            const clas = this.reg.getObject(\"CLAS\", superName);\r\n            if (clas === undefined) {\r\n                break;\r\n            }\r\n            const superDef = clas.getClassDefinition();\r\n            if (superDef === undefined) {\r\n                break;\r\n            }\r\n            ret = ret.concat(superDef.interfaces);\r\n            superName = superDef.superClassName;\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.SICFConsistency = SICFConsistency;\r\n//# sourceMappingURL=sicf_consistency.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/sicf_consistency.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/space_before_colon.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/space_before_colon.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SpaceBeforeColon = exports.SpaceBeforeColonConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass SpaceBeforeColonConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.SpaceBeforeColonConf = SpaceBeforeColonConf;\r\nclass SpaceBeforeColon extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new SpaceBeforeColonConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"space_before_colon\",\r\n            title: \"Space before colon\",\r\n            shortDescription: `Checks that there are no spaces in front of colons in chained statements.`,\r\n            extendedInformation: `https://docs.abapopenchecks.org/checks/80/`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.SingleFile],\r\n            badExample: `DATA : foo TYPE string.`,\r\n            goodExample: `DATA: foo TYPE string.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Remove space before colon\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let prev = file.getTokens()[0];\r\n        for (const token of file.getTokens()) {\r\n            if (token.getStr() === \":\" && !prev) {\r\n                const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n            else if (token.getStr() === \":\"\r\n                && prev.getRow() === token.getRow()\r\n                && prev.getCol() + prev.getStr().length < token.getCol()) {\r\n                const issue = issue_1.Issue.atRowRange(file, token.getRow(), prev.getEnd().getCol(), token.getStart().getCol(), this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                //        const issue = Issue.atToken(file, token, this.getMessage(), this.getMetadata().key);\r\n                issues.push(issue);\r\n            }\r\n            prev = token;\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.SpaceBeforeColon = SpaceBeforeColon;\r\n//# sourceMappingURL=space_before_colon.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/space_before_colon.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/space_before_dot.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/space_before_dot.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SpaceBeforeDot = exports.SpaceBeforeDotConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst tokens_1 = __webpack_require__(/*! ../abap/1_lexer/tokens */ \"./node_modules/@abaplint/core/build/src/abap/1_lexer/tokens/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nclass SpaceBeforeDotConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.ignoreGlobalDefinition = true;\r\n        this.ignoreExceptions = true;\r\n    }\r\n}\r\nexports.SpaceBeforeDotConf = SpaceBeforeDotConf;\r\nclass SpaceBeforeDot extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new SpaceBeforeDotConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"space_before_dot\",\r\n            title: \"Space before dot\",\r\n            shortDescription: `Checks for extra spaces before dots at the ends of statements`,\r\n            extendedInformation: `\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#be-consistent\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#condense-your-code`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n            badExample: `WRITE bar .`,\r\n            goodExample: `WRITE bar.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Remove space before \\\",\\\" or \\\".\\\"\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        let prev = undefined;\r\n        let startRow = 0;\r\n        if (file.getStructure() === undefined) {\r\n            // some parser error exists in file\r\n            return [];\r\n        }\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        if (this.conf.ignoreGlobalDefinition) {\r\n            const structure = file.getStructure();\r\n            if (obj instanceof objects_1.Class && structure !== undefined) {\r\n                const endclass = structure.findFirstStatement(Statements.EndClass);\r\n                if (endclass !== undefined) {\r\n                    startRow = endclass.getFirstToken().getRow();\r\n                }\r\n                const definition = obj.getClassDefinition();\r\n                if (definition !== undefined && this.conf.ignoreExceptions && ddic.isException(definition, obj)) {\r\n                    return [];\r\n                }\r\n            }\r\n            else if (obj instanceof objects_1.Interface && structure !== undefined) {\r\n                const endinterface = structure.findFirstStatement(Statements.EndInterface);\r\n                if (endinterface !== undefined) {\r\n                    startRow = endinterface.getFirstToken().getRow();\r\n                }\r\n            }\r\n        }\r\n        for (const t of file.getTokens()) {\r\n            if (t.getRow() < startRow) {\r\n                continue;\r\n            }\r\n            if (prev !== undefined && t instanceof tokens_1.Punctuation && prev.getCol() + prev.getStr().length < t.getCol()) {\r\n                const start = new position_1.Position(t.getStart().getRow(), prev.getEnd().getCol());\r\n                const end = new position_1.Position(t.getStart().getRow(), t.getStart().getCol());\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, start, end);\r\n                const issue = issue_1.Issue.atRange(file, start, end, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n            prev = t;\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.SpaceBeforeDot = SpaceBeforeDot;\r\n//# sourceMappingURL=space_before_dot.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/space_before_dot.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/sql_escape_host_variables.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/sql_escape_host_variables.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SQLEscapeHostVariables = exports.SQLEscapeHostVariablesConf = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass SQLEscapeHostVariablesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.SQLEscapeHostVariablesConf = SQLEscapeHostVariablesConf;\r\nclass SQLEscapeHostVariables extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new SQLEscapeHostVariablesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"sql_escape_host_variables\",\r\n            title: \"Escape SQL host variables\",\r\n            shortDescription: `Escape SQL host variables, from 740sp05`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#avoid-obsolete-language-elements`,\r\n            tags: [_irule_1.RuleTag.Upport, _irule_1.RuleTag.Styleguide],\r\n            badExample: `SELECT * FROM tab INTO TABLE res WHERE field = val.`,\r\n            goodExample: `SELECT * FROM tab INTO TABLE @res WHERE field = @val.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        if (this.reg.getConfig().getVersion() < version_1.Version.v740sp02 && this.reg.getConfig().getVersion() !== version_1.Version.Cloud) {\r\n            return [];\r\n        }\r\n        for (const s of file.getStatements()) {\r\n            const str = s.concatTokens().toUpperCase();\r\n            if (s.get() instanceof Statements.Select\r\n                || s.get() instanceof Statements.SelectLoop) {\r\n                // this is not completely correct and does not catch all, but okay for now\r\n                // todo: replace with logic from \"else if\" branch below, when/if it proves to work\r\n                if (str.includes(\" INTO ( @\")\r\n                    || str.includes(\" INTO (@\")\r\n                    || str.includes(\" INTO @\")\r\n                    || str.includes(\" INTO TABLE @\")\r\n                    || str.includes(\" INTO CORRESPONDING FIELDS OF @\")\r\n                    || str.includes(\" INTO CORRESPONDING FIELDS OF TABLE @\")\r\n                    || str.includes(\" APPENDING TABLE @\")\r\n                    || (str.includes(\" APPENDING \") === false && str.includes(\" INTO \") === false)\r\n                    || str.includes(\" APPENDING CORRESPONDING FIELDS OF TABLE @\")) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    const message = \"Escape SQL host variables\";\r\n                    const issue = issue_1.Issue.atToken(file, s.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n                    issues.push(issue);\r\n                }\r\n            }\r\n            else if (s.get() instanceof Statements.UpdateDatabase\r\n                || s.get() instanceof Statements.ModifyDatabase\r\n                || s.get() instanceof Statements.InsertDatabase\r\n                || s.get() instanceof Statements.DeleteDatabase) {\r\n                if (str.startsWith(\"MODIFY SCREEN FROM \")) {\r\n                    continue;\r\n                }\r\n                for (const o of s.findAllExpressions(Expressions.SQLSource)) {\r\n                    const first = o.getFirstChild();\r\n                    if ((first === null || first === void 0 ? void 0 : first.get()) instanceof Expressions.Source && first.getChildren()[0].get() instanceof Expressions.FieldChain) {\r\n                        const message = \"Escape SQL host variables\";\r\n                        const issue = issue_1.Issue.atToken(file, first.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.SQLEscapeHostVariables = SQLEscapeHostVariables;\r\n//# sourceMappingURL=sql_escape_host_variables.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/sql_escape_host_variables.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/start_at_tab.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/start_at_tab.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.StartAtTab = exports.StartAtTabConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst statements_1 = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass StartAtTabConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.StartAtTabConf = StartAtTabConf;\r\nclass StartAtTab extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new StartAtTabConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"start_at_tab\",\r\n            title: \"Start at tab\",\r\n            shortDescription: `Checks that statements start at tabstops.`,\r\n            extendedInformation: `Reports max 100 issues per file\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#indent-and-snap-to-tab`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n            badExample: ` WRITE a.`,\r\n            goodExample: `  WRITE a.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Start statement at tab position\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        let inType = false;\r\n        let previous = undefined;\r\n        const raw = file.getRawRows();\r\n        for (const statement of file.getStatements()) {\r\n            if (statement.get() instanceof _statement_1.Comment) {\r\n                continue;\r\n            }\r\n            else if (statement.get() instanceof statements_1.TypeBegin) {\r\n                inType = true;\r\n            }\r\n            else if (statement.get() instanceof statements_1.TypeEnd) {\r\n                inType = false;\r\n            }\r\n            else if (inType) {\r\n                continue;\r\n            }\r\n            const pos = statement.getStart();\r\n            if (previous !== undefined && pos.getRow() === previous.getRow()) {\r\n                continue;\r\n            }\r\n            // just skip rows that contains tabs, this will be reported by the contains_tab rule\r\n            if ((pos.getCol() - 1) % 2 !== 0 && raw[pos.getRow() - 1].includes(\"\\t\") === false) {\r\n                const issue = issue_1.Issue.atPosition(file, pos, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n                if (issues.length >= 100) {\r\n                    return issues; // only max 100 issues perfile\r\n                }\r\n            }\r\n            previous = pos;\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.StartAtTab = StartAtTab;\r\n//# sourceMappingURL=start_at_tab.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/start_at_tab.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/superclass_final.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/superclass_final.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SuperclassFinal = exports.SuperclassFinalConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass SuperclassFinalConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.SuperclassFinalConf = SuperclassFinalConf;\r\nclass SuperclassFinal extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new SuperclassFinalConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"superclass_final\",\r\n            title: \"Super class final\",\r\n            shortDescription: `Checks that classes which are inherited from are not declared as FINAL.`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Superclasses cannot be FINAL\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const output = [];\r\n        for (const definition of file.getInfo().listClassDefinitions()) {\r\n            const sup = definition.superClassName;\r\n            if (sup === undefined) {\r\n                continue;\r\n            }\r\n            let localLookup = true;\r\n            if (obj instanceof Objects.Class && file.getFilename().match(/\\.clas\\.abap$/)) {\r\n                localLookup = false;\r\n            }\r\n            let found = undefined;\r\n            if (localLookup) {\r\n                // todo, this should look inside the object instead of the file?\r\n                found = file.getInfo().getClassDefinitionByName(sup);\r\n            }\r\n            if (found === undefined) {\r\n                const clas = this.reg.getObject(\"CLAS\", sup);\r\n                if (clas) {\r\n                    found = clas.getClassDefinition();\r\n                }\r\n            }\r\n            if (found === undefined) {\r\n                const message = \"Super class \\\"\" + sup + \"\\\" not found\";\r\n                const issue = issue_1.Issue.atIdentifier(definition.identifier, message, this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n                continue;\r\n            }\r\n            if (found.isFinal === true) {\r\n                const issue = issue_1.Issue.atIdentifier(definition.identifier, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.SuperclassFinal = SuperclassFinal;\r\n//# sourceMappingURL=superclass_final.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/superclass_final.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/sy_modification.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/sy_modification.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SyModification = exports.SyModificationConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass SyModificationConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.SyModificationConf = SyModificationConf;\r\nclass SyModification extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new SyModificationConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"sy_modification\",\r\n            title: \"Modification of SY fields\",\r\n            shortDescription: `Finds modification of sy fields`,\r\n            extendedInformation: `https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abensystem_fields.htm`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `\nsy-uname = 2.\nsy = sy.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        var _a;\r\n        const issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        for (const t of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllExpressions(Expressions.Target)) || []) {\r\n            const firstChild = t.getChildren()[0];\r\n            if (firstChild.get() instanceof Expressions.TargetField\r\n                && firstChild.getFirstToken().getStr().toUpperCase() === \"SY\") {\r\n                const message = \"Modification of SY field\";\r\n                const issue = issue_1.Issue.atToken(file, firstChild.getFirstToken(), message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.SyModification = SyModification;\r\n//# sourceMappingURL=sy_modification.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/sy_modification.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/tabl_enhancement_category.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/tabl_enhancement_category.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TABLEnhancementCategory = exports.TABLEnhancementCategoryConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nclass TABLEnhancementCategoryConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.TABLEnhancementCategoryConf = TABLEnhancementCategoryConf;\r\nclass TABLEnhancementCategory {\r\n    constructor() {\r\n        this.conf = new TABLEnhancementCategoryConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"tabl_enhancement_category\",\r\n            title: \"TABL enhancement category must be set\",\r\n            shortDescription: `Checks that tables do not have the enhancement category 'not classified'. \nYou may use standard report RS_DDIC_CLASSIFICATION_FINAL for adjustment.`,\r\n        };\r\n    }\r\n    getDescription(name) {\r\n        return \"TABL enhancement category not classified in \" + name;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof objects_1.Table)) {\r\n            return [];\r\n        }\r\n        if (obj.getEnhancementCategory() === objects_1.EnhancementCategory.NotClassified) {\r\n            const position = new position_1.Position(1, 1);\r\n            const issue = issue_1.Issue.atPosition(obj.getFiles()[0], position, this.getDescription(obj.getName()), this.getMetadata().key, this.conf.severity);\r\n            return [issue];\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.TABLEnhancementCategory = TABLEnhancementCategory;\r\n//# sourceMappingURL=tabl_enhancement_category.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/tabl_enhancement_category.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/try_without_catch.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/try_without_catch.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TryWithoutCatch = exports.TryWithoutCatchConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst structures_1 = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst statements_1 = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass TryWithoutCatchConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.TryWithoutCatchConf = TryWithoutCatchConf;\r\nclass TryWithoutCatch extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new TryWithoutCatchConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"try_without_catch\",\r\n            title: \"TRY without CATCH\",\r\n            shortDescription: `Checks for TRY blocks without a CATCH and CLEANUP block`,\r\n            badExample: `TRY.\\n  WRITE 'hello world'.\\nENDTRY.`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"A TRY block must have a corresponding CATCH or CLEANUP block.\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        const tries = stru.findAllStructures(structures_1.Try);\r\n        for (const t of tries) {\r\n            const clean = t.findDirectStatements(statements_1.Cleanup);\r\n            const c = t.findDirectStructures(structures_1.Catch);\r\n            if (c.length === 0 && clean.length === 0) {\r\n                const issue = issue_1.Issue.atToken(file, t.getFirstToken(), this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.TryWithoutCatch = TryWithoutCatch;\r\n//# sourceMappingURL=try_without_catch.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/try_without_catch.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/type_form_parameters.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/type_form_parameters.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypeFormParameters = exports.TypeFormParametersConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass TypeFormParametersConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.TypeFormParametersConf = TypeFormParametersConf;\r\nclass TypeFormParameters extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new TypeFormParametersConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"type_form_parameters\",\r\n            title: \"Type FORM parameters\",\r\n            shortDescription: `Checks for untyped FORM parameters`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `FORM foo USING bar.`,\r\n            goodExample: `FORM foo USING bar TYPE string.`,\r\n        };\r\n    }\r\n    getDescription(parameterName) {\r\n        return \"Add TYPE for FORM parameter \\\"\" + parameterName + \"\\\"\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const ret = [];\r\n        const stru = file.getStructure();\r\n        if (obj instanceof objects_1.Class || stru === undefined) {\r\n            return ret;\r\n        }\r\n        for (const formparam of stru.findAllExpressions(Expressions.FormParam)) {\r\n            if (formparam.findFirstExpression(Expressions.FormParamType) === undefined) {\r\n                const token = formparam.getFirstToken();\r\n                const issue = issue_1.Issue.atToken(file, token, this.getDescription(token.getStr()), this.getMetadata().key, this.conf.severity);\r\n                ret.push(issue);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.TypeFormParameters = TypeFormParameters;\r\n//# sourceMappingURL=type_form_parameters.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/type_form_parameters.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/types_naming.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/types_naming.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TypesNaming = exports.TypesNamingConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nclass TypesNamingConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** The pattern for TYPES */\r\n        this.pattern = \"^TY_.+$\";\r\n    }\r\n}\r\nexports.TypesNamingConf = TypesNamingConf;\r\nclass TypesNaming extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new TypesNamingConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"types_naming\",\r\n            title: \"TYPES naming conventions\",\r\n            shortDescription: `Allows you to enforce a pattern for TYPES definitions`,\r\n            extendedInformation: `Does not run for TYPE POOLS`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        const testRegex = new RegExp(this.conf.pattern, \"i\");\r\n        let nesting = 0;\r\n        if (obj instanceof objects_1.TypePool) {\r\n            return [];\r\n        }\r\n        for (const stat of file.getStatements()) {\r\n            let expr = undefined;\r\n            if (stat.get() instanceof Statements.Type && nesting === 0) {\r\n                expr = stat.findFirstExpression(Expressions.NamespaceSimpleName);\r\n            }\r\n            else if (stat.get() instanceof Statements.TypeBegin) {\r\n                if (nesting === 0) {\r\n                    expr = stat.findFirstExpression(Expressions.NamespaceSimpleName);\r\n                }\r\n                nesting = nesting + 1;\r\n            }\r\n            else if (stat.get() instanceof Statements.TypeEnd) {\r\n                nesting = nesting - 1;\r\n                continue;\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n            if (expr === undefined) {\r\n                continue;\r\n            }\r\n            const token = expr.getFirstToken();\r\n            if (testRegex.exec(token.getStr())) {\r\n                continue;\r\n            }\r\n            else {\r\n                const message = \"Bad TYPES naming, expected \\\"\" + this.conf.pattern + \"\\\", got \\\"\" + token.getStr() + \"\\\"\";\r\n                const issue = issue_1.Issue.atToken(file, token, message, this.getMetadata().key, this.conf.severity);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.TypesNaming = TypesNaming;\r\n//# sourceMappingURL=types_naming.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/types_naming.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/uncaught_exception.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/uncaught_exception.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UncaughtException = exports.UncaughtExceptionConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst nodes_1 = __webpack_require__(/*! ../abap/nodes */ \"./node_modules/@abaplint/core/build/src/abap/nodes/index.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst ddic_1 = __webpack_require__(/*! ../ddic */ \"./node_modules/@abaplint/core/build/src/ddic.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst types_1 = __webpack_require__(/*! ../abap/types */ \"./node_modules/@abaplint/core/build/src/abap/types/index.js\");\r\nclass UncaughtExceptionConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UncaughtExceptionConf = UncaughtExceptionConf;\r\nclass UncaughtException extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new UncaughtExceptionConf();\r\n        this.issues = [];\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"uncaught_exception\",\r\n            title: \"Uncaught Exception\",\r\n            shortDescription: `Uncaught Exception\n\n      Does not report any issues if the code contains syntax errors`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    initialize(reg) {\r\n        super.initialize(reg);\r\n        this.findGlobalExceptions();\r\n        return this;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        if (obj.getType() === \"INTF\") { // nothing can be raised in interfaces\r\n            return [];\r\n        }\r\n        if (obj instanceof objects_1.Program && obj.isInclude() === true) {\r\n            return [];\r\n        }\r\n        const stru = file.getStructure();\r\n        if (stru === undefined) {\r\n            return [];\r\n        }\r\n        this.syntax = new syntax_1.SyntaxLogic(this.reg, obj).run();\r\n        if (this.syntax.issues.length > 0) {\r\n            return [];\r\n        }\r\n        this.issues = [];\r\n        this.sinked = undefined;\r\n        for (const c of stru.getChildren()) {\r\n            this.traverse(c, file);\r\n        }\r\n        return this.issues;\r\n    }\r\n    traverse(n, file) {\r\n        var _a;\r\n        const get = n.get();\r\n        if (get instanceof Structures.ClassDefinition\r\n            || get instanceof Structures.Interface) {\r\n            return; // to optimize performance\r\n        }\r\n        if (n instanceof nodes_1.StructureNode) {\r\n            if (get instanceof Structures.Try) {\r\n                // note that TRY-CATCH might be arbitrarily nested\r\n                const previous = this.sinked ? this.sinked.slice() : undefined;\r\n                this.addFromTryStructure(n);\r\n                for (const c of n.getChildren()) {\r\n                    this.traverse(c, file);\r\n                }\r\n                this.sinked = previous;\r\n                return;\r\n            }\r\n            else {\r\n                for (const c of n.getChildren()) {\r\n                    this.traverse(c, file);\r\n                }\r\n            }\r\n        }\r\n        else if (n instanceof nodes_1.StatementNode) {\r\n            if (get instanceof Statements.MethodImplementation) {\r\n                this.setSinkedFromMethod(n, file);\r\n            }\r\n            else if (get instanceof Statements.EndMethod) {\r\n                this.sinked = undefined; // back to top level\r\n            }\r\n            else if (get instanceof Statements.Form) {\r\n                this.sinked = [];\r\n                const raising = n.findDirectExpression(Expressions.FormRaising);\r\n                for (const c of (raising === null || raising === void 0 ? void 0 : raising.findAllExpressions(Expressions.ClassName)) || []) {\r\n                    this.sinked.push(c.concatTokens().toUpperCase());\r\n                }\r\n            }\r\n            else if (get instanceof Statements.EndForm) {\r\n                this.sinked = undefined; // back to top level\r\n            }\r\n            else if (get instanceof Statements.Raise) {\r\n                let name = undefined;\r\n                const concat = n.concatTokens().toUpperCase();\r\n                if (concat.startsWith(\"RAISE EXCEPTION TYPE \")) {\r\n                    name = (_a = n.findFirstExpression(Expressions.ClassName)) === null || _a === void 0 ? void 0 : _a.getFirstToken().getStr().toUpperCase();\r\n                }\r\n                this.check(name, n, file);\r\n            }\r\n            else if (get instanceof Statements.Perform) {\r\n                // todo, PERFORM, or is this not statically checked?\r\n            }\r\n            else {\r\n                this.checkForMethodCalls(n, file);\r\n            }\r\n        }\r\n    }\r\n    ////////////////////////////////\r\n    check(name, n, file) {\r\n        if (this.isSinked(name) === false) {\r\n            const issue = issue_1.Issue.atStatement(file, n, \"Uncaught exception \" + name, this.getMetadata().key, this.getConfig().severity);\r\n            this.issues.push(issue);\r\n        }\r\n    }\r\n    checkForMethodCalls(n, file) {\r\n        const start = n.getFirstToken().getStart();\r\n        const end = n.getLastToken().getEnd();\r\n        const scope = this.syntax.spaghetti.lookupPosition(start, file.getFilename());\r\n        for (const r of (scope === null || scope === void 0 ? void 0 : scope.getData().references) || []) {\r\n            if (r.referenceType === _reference_1.ReferenceType.MethodReference\r\n                && r.position.getStart().isAfter(start)\r\n                && r.position.getEnd().isBefore(end)\r\n                && r.resolved instanceof types_1.MethodDefinition) {\r\n                for (const name of r.resolved.getRaising()) {\r\n                    this.check(name, n, file);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addFromTryStructure(s) {\r\n        if (this.sinked === undefined) {\r\n            return;\r\n        }\r\n        for (const structure of s.findDirectStructures(Structures.Catch)) {\r\n            const c = structure.findDirectStatement(Statements.Catch);\r\n            if (c === undefined) {\r\n                continue;\r\n            }\r\n            for (const cn of c.findDirectExpressions(Expressions.ClassName)) {\r\n                this.sinked.push(cn.concatTokens());\r\n            }\r\n        }\r\n    }\r\n    setSinkedFromMethod(s, file) {\r\n        this.sinked = [];\r\n        const scope = this.syntax.spaghetti.lookupPosition(s.getLastToken().getEnd(), file.getFilename());\r\n        let def = undefined;\r\n        for (const r of (scope === null || scope === void 0 ? void 0 : scope.getData().references) || []) {\r\n            // there should be only one, so the first is okay\r\n            if (r.referenceType === _reference_1.ReferenceType.MethodImplementationReference\r\n                && r.resolved instanceof types_1.MethodDefinition) {\r\n                def = r.resolved;\r\n                break;\r\n            }\r\n        }\r\n        if (def === undefined) {\r\n            return; // this should not occur, so just report everything as errors\r\n        }\r\n        def.getRaising().forEach(r => { var _a; return (_a = this.sinked) === null || _a === void 0 ? void 0 : _a.push(r); });\r\n    }\r\n    isSinked(name) {\r\n        // todo: ignore dynamic and no_check exceptions\r\n        if (this.sinked === undefined || name === undefined) {\r\n            return true;\r\n        }\r\n        const sup = this.globalExceptions[name.toUpperCase()];\r\n        if (sup === \"CX_DYNAMIC_CHECK\" || sup === \"CX_NO_CHECK\") {\r\n            return true;\r\n        }\r\n        // todo, check local class hierarchy\r\n        return this.sinked.some(a => a.toUpperCase() === name.toUpperCase())\r\n            || (sup !== undefined && this.isSinked(sup) === true);\r\n    }\r\n    findGlobalExceptions() {\r\n        var _a, _b;\r\n        this.globalExceptions = {};\r\n        const ddic = new ddic_1.DDIC(this.reg);\r\n        for (const o of this.reg.getObjects()) {\r\n            if (!(o instanceof objects_1.Class)) {\r\n                continue;\r\n            }\r\n            const def = (_a = o.getMainABAPFile()) === null || _a === void 0 ? void 0 : _a.getInfo().getClassDefinitionByName(o.getName());\r\n            if (def === undefined || ddic.isException(def, o) === false) {\r\n                continue;\r\n            }\r\n            this.globalExceptions[o.getName().toUpperCase()] = (_b = def.superClassName) === null || _b === void 0 ? void 0 : _b.toUpperCase();\r\n        }\r\n    }\r\n}\r\nexports.UncaughtException = UncaughtException;\r\n//# sourceMappingURL=uncaught_exception.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/uncaught_exception.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/unknown_types.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/unknown_types.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnknownTypes = exports.UnknownTypesConf = void 0;\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst BasicTypes = __webpack_require__(/*! ../abap/types/basic */ \"./node_modules/@abaplint/core/build/src/abap/types/basic/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _typed_identifier_1 = __webpack_require__(/*! ../abap/types/_typed_identifier */ \"./node_modules/@abaplint/core/build/src/abap/types/_typed_identifier.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nclass UnknownTypesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UnknownTypesConf = UnknownTypesConf;\r\nclass UnknownTypes {\r\n    constructor() {\r\n        this.conf = new UnknownTypesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"unknown_types\",\r\n            title: \"Unknown types\",\r\n            shortDescription: `Enables check for unknown data types, respects errorNamespace`,\r\n            tags: [_irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        const spaghetti = new syntax_1.SyntaxLogic(this.reg, obj).run().spaghetti;\r\n        return this.traverse(spaghetti.getTop());\r\n    }\r\n    /////////////////////\r\n    traverse(node) {\r\n        const ret = [];\r\n        if (node.getIdentifier().stype !== _scope_type_1.ScopeType.ClassImplementation) {\r\n            const vars = node.getData().vars;\r\n            for (const name in vars) {\r\n                const identifier = vars[name];\r\n                const found = this.containsUnknown(identifier.getType());\r\n                if (found) {\r\n                    const message = \"Variable \\\"\" + name + \"\\\" contains unknown: \" + found;\r\n                    ret.push(issue_1.Issue.atIdentifier(identifier, message, this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n            const types = node.getData().types;\r\n            for (const name in types) {\r\n                const identifier = types[name];\r\n                const found = this.containsUnknown(identifier.getType());\r\n                if (found) {\r\n                    const message = \"Type \\\"\" + name + \"\\\" contains unknown: \" + found;\r\n                    ret.push(issue_1.Issue.atIdentifier(identifier, message, this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        for (const v of node.getData().idefs) {\r\n            const found = this.checkInterface(v);\r\n            if (found) {\r\n                const message = \"Contains unknown, \" + found.found;\r\n                ret.push(issue_1.Issue.atIdentifier(found.id, message, this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        for (const n of node.getChildren()) {\r\n            ret.push(...this.traverse(n));\r\n        }\r\n        return ret;\r\n    }\r\n    checkInterface(idef) {\r\n        var _a;\r\n        for (const m of ((_a = idef.getMethodDefinitions()) === null || _a === void 0 ? void 0 : _a.getAll()) || []) {\r\n            for (const p of m.getParameters().getAll()) {\r\n                const found = this.containsUnknown(p.getType());\r\n                if (found) {\r\n                    return { id: p, found };\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    containsUnknown(type) {\r\n        if (type instanceof BasicTypes.UnknownType) {\r\n            return type.getError();\r\n        }\r\n        else if (type instanceof BasicTypes.StructureType) {\r\n            for (const c of type.getComponents()) {\r\n                const found = this.containsUnknown(c.type instanceof _typed_identifier_1.TypedIdentifier ? c.type.getType() : c.type);\r\n                if (found) {\r\n                    return found;\r\n                }\r\n            }\r\n        }\r\n        else if (type instanceof BasicTypes.TableType) {\r\n            return this.containsUnknown(type.getRowType());\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.UnknownTypes = UnknownTypes;\r\n//# sourceMappingURL=unknown_types.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/unknown_types.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/unreachable_code.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/unreachable_code.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnreachableCode = exports.UnreachableCodeConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass UnreachableCodeConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UnreachableCodeConf = UnreachableCodeConf;\r\nclass UnreachableCode extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new UnreachableCodeConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"unreachable_code\",\r\n            title: \"Unreachable code\",\r\n            shortDescription: `Checks for unreachable code.`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `RETURN.\\nWRITE 'hello'.`,\r\n            goodExample: `WRITE 'hello'.\\nRETURN.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Unreachable code\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const output = [];\r\n        let exit = false;\r\n        for (const node of file.getStatements()) {\r\n            if (node.get() instanceof _statement_1.Comment\r\n                || node.get() instanceof _statement_1.MacroContent\r\n                || node.get() instanceof _statement_1.Empty) {\r\n                continue;\r\n            }\r\n            else if (this.isExit(node)) {\r\n                exit = true;\r\n                continue;\r\n            }\r\n            else if (this.isStructure(node.get())) {\r\n                exit = false;\r\n                continue;\r\n            }\r\n            if (exit === true) {\r\n                const token = node.getFirstToken();\r\n                const issue = issue_1.Issue.atToken(file, token, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                output.push(issue);\r\n                exit = false;\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    isExit(n) {\r\n        const s = n.get();\r\n        // todo, RESUMABLE exception\r\n        if (s instanceof Statements.Submit && n.findFirstExpression(Expressions.AndReturn) === undefined) {\r\n            return true;\r\n        }\r\n        else if (s instanceof Statements.Leave && n.findFirstExpression(Expressions.AndReturn) === undefined) {\r\n            return true;\r\n        }\r\n        else if (s instanceof Statements.Return\r\n            || s instanceof Statements.Continue\r\n            || s instanceof Statements.Exit\r\n            || s instanceof Statements.Raise) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    isStructure(s) {\r\n        if (s instanceof Statements.EndIf\r\n            || s instanceof Statements.Else\r\n            || s instanceof Statements.EndLoop\r\n            || s instanceof Statements.EndTry\r\n            || s instanceof Statements.EndMethod\r\n            || s instanceof Statements.EndModule\r\n            || s instanceof Statements.EndForm\r\n            || s instanceof Statements.EndAt\r\n            || s instanceof Statements.EndSelect\r\n            || s instanceof Statements.AtSelectionScreen\r\n            || s instanceof Statements.EndFunction\r\n            || s instanceof Statements.EndCase\r\n            || s instanceof Statements.EndWhile\r\n            || s instanceof Statements.EndDo\r\n            || s instanceof Statements.Cleanup\r\n            || s instanceof Statements.When\r\n            || s instanceof Statements.WhenOthers\r\n            || s instanceof Statements.WhenType\r\n            || s instanceof Statements.Catch\r\n            || s instanceof Statements.ElseIf) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.UnreachableCode = UnreachableCode;\r\n//# sourceMappingURL=unreachable_code.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/unreachable_code.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/unsecure_fae.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/unsecure_fae.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnsecureFAE = exports.UnsecureFAEConf = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nclass UnsecureFAEConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UnsecureFAEConf = UnsecureFAEConf;\r\nclass UnsecureFAE {\r\n    constructor() {\r\n        this.conf = new UnsecureFAEConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"unsecure_fae\",\r\n            title: \"Unsecure FAE\",\r\n            shortDescription: `Checks for unsecure FAE`,\r\n            extendedInformation: `Issues from rule check_syntax must be fixed before this rule takes effect`,\r\n            tags: [_irule_1.RuleTag.Experimental],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    run(obj) {\r\n        var _a;\r\n        const issues = [];\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return issues;\r\n        }\r\n        const syntaxResult = new syntax_1.SyntaxLogic(this.reg, obj).run();\r\n        if (syntaxResult.issues.length > 0) {\r\n            return issues;\r\n        }\r\n        for (const f of obj.getABAPFiles()) {\r\n            // todo\r\n            for (const e of ((_a = f.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllExpressions(Expressions.SQLForAllEntries)) || []) {\r\n                const token = e.getFirstToken();\r\n                const message = \"Unsecure FAE\";\r\n                issues.push(issue_1.Issue.atToken(f, token, message, this.getMetadata().key, this.getConfig().severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.UnsecureFAE = UnsecureFAE;\r\n//# sourceMappingURL=unsecure_fae.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/unsecure_fae.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/unused_methods.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/unused_methods.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnusedMethods = exports.UnusedMethodsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nconst visibility_1 = __webpack_require__(/*! ../abap/4_file_information/visibility */ \"./node_modules/@abaplint/core/build/src/abap/4_file_information/visibility.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass UnusedMethodsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UnusedMethodsConf = UnusedMethodsConf;\r\nclass WorkArea {\r\n    constructor() {\r\n        this.list = [];\r\n        this.list = [];\r\n    }\r\n    push(id) {\r\n        this.list.push(id);\r\n    }\r\n    removeIfExists(id) {\r\n        for (let i = 0; i < this.list.length; i++) {\r\n            if (id.equals(this.list[i].identifier)) {\r\n                this.list.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    containsProteted() {\r\n        for (const m of this.list) {\r\n            if (m.visibility === visibility_1.Visibility.Protected) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getLength() {\r\n        return this.list.length;\r\n    }\r\n    get() {\r\n        return this.list;\r\n    }\r\n}\r\n// todo: add possibility to also search public methods\r\n// todo: for protected methods, also search subclasses\r\nclass UnusedMethods {\r\n    constructor() {\r\n        this.conf = new UnusedMethodsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"unused_methods\",\r\n            title: \"Unused methods\",\r\n            shortDescription: `Checks for unused methods`,\r\n            extendedInformation: `Checks private and protected methods.\n\nSkips:\n* methods FOR TESTING\n* methods SETUP + TEARDOWN + CLASS_SETUP + CLASS_TEARDOWN in testclasses\n* class_constructor + constructor methods\n* event handlers\n* methods that are redefined\n* INCLUDEs\n`,\r\n            tags: [],\r\n            pragma: \"##CALLED\",\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        else if (obj instanceof objects_1.Interface) { // todo, how to handle interfaces?\r\n            return [];\r\n        }\r\n        else if (obj instanceof objects_1.Program && obj.isInclude() === true) {\r\n            return [];\r\n        }\r\n        // dont report anything when there are syntax errors\r\n        const syntax = new syntax_1.SyntaxLogic(this.reg, obj).run();\r\n        if (syntax.issues.length > 0) {\r\n            return [];\r\n        }\r\n        this.wa = new WorkArea();\r\n        for (const file of obj.getABAPFiles()) {\r\n            for (const def of file.getInfo().listClassDefinitions()) {\r\n                for (const method of def.methods) {\r\n                    if (method.isForTesting === true\r\n                        || method.isRedefinition === true\r\n                        || method.isEventHandler === true) {\r\n                        continue;\r\n                    }\r\n                    else if (def.isForTesting === true\r\n                        && (method.name.toUpperCase() === \"SETUP\"\r\n                            || method.name.toUpperCase() === \"CLASS_SETUP\"\r\n                            || method.name.toUpperCase() === \"TEARDOWN\"\r\n                            || method.name.toUpperCase() === \"CLASS_TEARDOWN\")) {\r\n                        continue;\r\n                    }\r\n                    else if (method.name.toUpperCase() === \"CONSTRUCTOR\"\r\n                        || method.name.toUpperCase() === \"CLASS_CONSTRUCTOR\") {\r\n                        continue;\r\n                    }\r\n                    if (method.visibility === visibility_1.Visibility.Private\r\n                        || method.visibility === visibility_1.Visibility.Protected) {\r\n                        this.wa.push(method);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.traverse(syntax.spaghetti.getTop());\r\n        this.searchGlobalSubclasses(obj);\r\n        const issues = [];\r\n        for (const i of this.wa.get()) {\r\n            const file = obj.getABAPFileByName(i.identifier.getFilename());\r\n            if (file === undefined) {\r\n                continue;\r\n            }\r\n            const statement = edit_helper_1.EditHelper.findStatement(i.identifier.getToken(), file);\r\n            if (statement === undefined) {\r\n                continue;\r\n            }\r\n            if (statement.getPragmas().some(t => t.getStr() === this.getMetadata().pragma)) {\r\n                continue;\r\n            }\r\n            const message = \"Method \\\"\" + i.identifier.getName() + \"\\\" not used\";\r\n            issues.push(issue_1.Issue.atIdentifier(i.identifier, message, this.getMetadata().key, this.conf.severity));\r\n        }\r\n        return issues;\r\n    }\r\n    searchGlobalSubclasses(obj) {\r\n        var _a, _b;\r\n        if (this.wa.getLength() === 0\r\n            || !(obj instanceof objects_1.Class)\r\n            || this.wa.containsProteted() === false) {\r\n            return;\r\n        }\r\n        const sup = obj.getDefinition();\r\n        if (sup === undefined) {\r\n            return;\r\n        }\r\n        for (const r of this.reg.getObjects()) {\r\n            if (r instanceof objects_1.Class\r\n                && ((_b = (_a = r.getDefinition()) === null || _a === void 0 ? void 0 : _a.getSuperClass()) === null || _b === void 0 ? void 0 : _b.toUpperCase()) === sup.getName().toUpperCase()) {\r\n                const syntax = new syntax_1.SyntaxLogic(this.reg, r).run();\r\n                this.traverse(syntax.spaghetti.getTop());\r\n                // recurse to sub-sub-* classes\r\n                this.searchGlobalSubclasses(r);\r\n            }\r\n        }\r\n    }\r\n    traverse(node) {\r\n        if (node.getIdentifier().stype !== _scope_type_1.ScopeType.BuiltIn) {\r\n            this.checkNode(node);\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            this.traverse(c);\r\n        }\r\n    }\r\n    checkNode(node) {\r\n        for (const v of node.getData().references) {\r\n            if (v.referenceType === _reference_1.ReferenceType.MethodReference && v.resolved) {\r\n                this.wa.removeIfExists(v.resolved);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.UnusedMethods = UnusedMethods;\r\n//# sourceMappingURL=unused_methods.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/unused_methods.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/unused_types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/unused_types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnusedTypes = exports.UnusedTypesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _reference_1 = __webpack_require__(/*! ../abap/5_syntax/_reference */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_reference.js\");\r\nclass WorkArea {\r\n    constructor() {\r\n        this.workarea = [];\r\n    }\r\n    push(id) {\r\n        for (const w of this.workarea) {\r\n            if (id.equals(w)) {\r\n                return;\r\n            }\r\n        }\r\n        this.workarea.push(id);\r\n    }\r\n    removeIfExists(id) {\r\n        for (let i = 0; i < this.workarea.length; i++) {\r\n            if (id.equals(this.workarea[i])) {\r\n                this.workarea.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    get() {\r\n        return this.workarea;\r\n    }\r\n    count() {\r\n        return this.workarea.length;\r\n    }\r\n}\r\nfunction removeDuplicates(list) {\r\n    const deduplicated = [];\r\n    for (const result of list) {\r\n        let cont = false;\r\n        for (const d of deduplicated) {\r\n            if (result.getStart().equals(d.getStart())) {\r\n                cont = true;\r\n                break;\r\n            }\r\n        }\r\n        if (cont === true) {\r\n            continue;\r\n        }\r\n        deduplicated.push(result);\r\n    }\r\n    return deduplicated;\r\n}\r\nclass UnusedTypesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** skip specific names, case insensitive */\r\n        this.skipNames = [];\r\n    }\r\n}\r\nexports.UnusedTypesConf = UnusedTypesConf;\r\nclass UnusedTypes {\r\n    constructor() {\r\n        this.conf = new UnusedTypesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"unused_types\",\r\n            title: \"Unused types\",\r\n            shortDescription: `Checks for unused TYPE definitions`,\r\n            tags: [_irule_1.RuleTag.Quickfix],\r\n            pragma: \"##NEEDED\",\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n        if (this.conf.skipNames === undefined) {\r\n            this.conf.skipNames = [];\r\n        }\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        // dont report unused variables when there are syntax errors\r\n        const syntax = new syntax_1.SyntaxLogic(this.reg, obj).run();\r\n        if (syntax.issues.length > 0) {\r\n            return [];\r\n        }\r\n        this.workarea = new WorkArea();\r\n        this.traverse(syntax.spaghetti.getTop(), obj, true);\r\n        this.traverse(syntax.spaghetti.getTop(), obj, false);\r\n        if (this.workarea.count() === 0) {\r\n            return []; // exit early if all types are used in the current object\r\n        }\r\n        for (const o of this.reg.getObjects()) {\r\n            if (o instanceof _abap_object_1.ABAPObject) {\r\n                if (this.reg.isDependency(o)) {\r\n                    continue; // do not search in dependencies\r\n                }\r\n                const syntax = new syntax_1.SyntaxLogic(this.reg, o).run();\r\n                this.traverse(syntax.spaghetti.getTop(), o, false);\r\n            }\r\n            if (this.workarea.count() === 0) {\r\n                return []; // exit early if all types are used\r\n            }\r\n        }\r\n        // what is left is unused\r\n        const ret = [];\r\n        for (const t of removeDuplicates(this.workarea.get())) {\r\n            const message = \"Type \\\"\" + t.getName() + \"\\\" not used\";\r\n            const file = obj.getABAPFileByName(t.getFilename());\r\n            if (file === undefined) {\r\n                continue;\r\n            }\r\n            const statement = edit_helper_1.EditHelper.findStatement(t.getToken(), file);\r\n            if (statement === undefined) {\r\n                continue;\r\n            }\r\n            if (statement.getPragmas().some(t => t.getStr() === this.getMetadata().pragma)) {\r\n                continue;\r\n            }\r\n            const fix = this.buildFix(file, statement);\r\n            ret.push(issue_1.Issue.atIdentifier(t, message, this.getMetadata().key, this.conf.severity, fix));\r\n        }\r\n        return ret;\r\n    }\r\n    ////////////////////////////\r\n    traverse(node, obj, add) {\r\n        if (node.getIdentifier().stype !== _scope_type_1.ScopeType.BuiltIn) {\r\n            this.checkNode(node, obj, add);\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            this.traverse(c, obj, add);\r\n        }\r\n    }\r\n    checkNode(node, obj, add) {\r\n        var _a;\r\n        const ret = [];\r\n        if (add === true) {\r\n            const types = node.getData().types;\r\n            for (const name in types) {\r\n                const identifier = types[name];\r\n                if (obj.containsFile(identifier.getFilename()) === false) {\r\n                    continue;\r\n                }\r\n                else if (((_a = this.conf.skipNames) === null || _a === void 0 ? void 0 : _a.length) > 0\r\n                    && this.conf.skipNames.some((a) => a.toUpperCase() === name)) {\r\n                    continue;\r\n                }\r\n                else if (name !== identifier.getName().toUpperCase()) {\r\n                    continue; // may have aliases via interfaces\r\n                }\r\n                this.workarea.push(identifier);\r\n            }\r\n        }\r\n        for (const r of node.getData().references) {\r\n            if (r.referenceType === _reference_1.ReferenceType.TypeReference && r.resolved) {\r\n                this.workarea.removeIfExists(r.resolved);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    buildFix(file, statement) {\r\n        if (statement.concatTokens().toUpperCase().includes(\"BEGIN OF\")) {\r\n            return undefined;\r\n        }\r\n        return edit_helper_1.EditHelper.deleteStatement(file, statement);\r\n    }\r\n}\r\nexports.UnusedTypes = UnusedTypes;\r\n//# sourceMappingURL=unused_types.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/unused_types.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/unused_variables.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/unused_variables.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UnusedVariables = exports.UnusedVariablesConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst syntax_1 = __webpack_require__(/*! ../abap/5_syntax/syntax */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/syntax.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _scope_type_1 = __webpack_require__(/*! ../abap/5_syntax/_scope_type */ \"./node_modules/@abaplint/core/build/src/abap/5_syntax/_scope_type.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst references_1 = __webpack_require__(/*! ../lsp/references */ \"./node_modules/@abaplint/core/build/src/lsp/references.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass UnusedVariablesConf extends _basic_rule_config_1.BasicRuleConfig {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** skip specific names, case insensitive\r\n         * @uniqueItems true\r\n        */\r\n        this.skipNames = [];\r\n    }\r\n}\r\nexports.UnusedVariablesConf = UnusedVariablesConf;\r\nclass UnusedVariables {\r\n    constructor() {\r\n        this.conf = new UnusedVariablesConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"unused_variables\",\r\n            title: \"Unused variables\",\r\n            shortDescription: `Checks for unused variables and constants`,\r\n            extendedInformation: `WARNING: slow\n\n      Experimental, might give false positives. Skips event parameters.\n\n      Note that this currently does not work if the source code uses macros.\n\n      Unused variables are not reported if the object contains syntax errors.`,\r\n            tags: [_irule_1.RuleTag.Quickfix],\r\n            pragma: \"##NEEDED\",\r\n            pseudoComment: \"EC NEEDED\",\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n        if (this.conf.skipNames === undefined) {\r\n            this.conf.skipNames = [];\r\n        }\r\n    }\r\n    initialize(reg) {\r\n        this.reg = reg;\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        else if (obj instanceof objects_1.Interface) { // todo, how to handle interfaces?\r\n            return [];\r\n        }\r\n        // dont report unused variables when there are syntax errors\r\n        const syntax = new syntax_1.SyntaxLogic(this.reg, obj).run();\r\n        if (syntax.issues.length > 0) {\r\n            return [];\r\n        }\r\n        const results = this.traverse(syntax.spaghetti.getTop(), obj);\r\n        // remove duplicates, quick and dirty\r\n        const deduplicated = [];\r\n        for (const result of results) {\r\n            let cont = false;\r\n            for (const d of deduplicated) {\r\n                if (result.getStart().equals(d.getStart())) {\r\n                    cont = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (cont === true) {\r\n                continue;\r\n            }\r\n            deduplicated.push(result);\r\n        }\r\n        return deduplicated;\r\n    }\r\n    traverse(node, obj) {\r\n        const ret = [];\r\n        if (node.getIdentifier().stype === _scope_type_1.ScopeType.OpenSQL) {\r\n            return [];\r\n        }\r\n        if (node.getIdentifier().stype !== _scope_type_1.ScopeType.BuiltIn) {\r\n            ret.push(...this.checkNode(node, obj));\r\n        }\r\n        for (const c of node.getChildren()) {\r\n            ret.push(...this.traverse(c, obj));\r\n        }\r\n        return ret;\r\n    }\r\n    checkNode(node, obj) {\r\n        var _a;\r\n        const ret = [];\r\n        const vars = node.getData().vars;\r\n        for (const name in vars) {\r\n            if (((_a = this.conf.skipNames) === null || _a === void 0 ? void 0 : _a.length) > 0\r\n                && this.conf.skipNames.some((a) => a.toUpperCase() === name)) {\r\n                continue;\r\n            }\r\n            if (name === \"ME\"\r\n                || name === \"SUPER\"\r\n                || vars[name].getMeta().includes(\"event_parameter\" /* EventParameter */)) {\r\n                // todo, workaround for \"me\" and \"super\", these should somehow be typed to built-in\r\n                continue;\r\n            }\r\n            else if ((obj.containsFile(vars[name].getFilename())\r\n                || node.getIdentifier().stype === _scope_type_1.ScopeType.Program\r\n                || node.getIdentifier().stype === _scope_type_1.ScopeType.Form)\r\n                && this.isUsed(vars[name], node) === false) {\r\n                const message = \"Variable \\\"\" + vars[name].getName() + \"\\\" not used\";\r\n                const statement = this.findStatement(vars[name]);\r\n                if (statement === null || statement === void 0 ? void 0 : statement.getPragmas().map(t => t.getStr()).includes(this.getMetadata().pragma + \"\")) {\r\n                    continue;\r\n                }\r\n                else if (this.suppressedbyPseudo(statement, vars[name], obj)) {\r\n                    continue;\r\n                }\r\n                const fix = this.buildFix(vars[name], obj);\r\n                ret.push(issue_1.Issue.atIdentifier(vars[name], message, this.getMetadata().key, this.conf.severity, fix));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    suppressedbyPseudo(statement, v, obj) {\r\n        if (statement === undefined) {\r\n            return false;\r\n        }\r\n        const file = obj.getABAPFileByName(v.getFilename());\r\n        if (file === undefined) {\r\n            return false;\r\n        }\r\n        let next = false;\r\n        for (const s of file.getStatements()) {\r\n            if (next === true && s.get() instanceof _statement_1.Comment) {\r\n                return s.concatTokens().includes(this.getMetadata().pseudoComment + \"\");\r\n            }\r\n            if (s === statement) {\r\n                next = true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isUsed(id, node) {\r\n        const isInline = id.getMeta().includes(\"inline\" /* InlineDefinition */);\r\n        const found = new references_1.References(this.reg).search(id, node, true, isInline === false);\r\n        if (isInline === true) {\r\n            return found.length > 2; // inline definitions are always written to\r\n        }\r\n        else {\r\n            return found.length > 1;\r\n        }\r\n    }\r\n    findStatement(v) {\r\n        const file = this.reg.getFileByName(v.getFilename());\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        const object = this.reg.findObjectForFile(file);\r\n        if (!(object instanceof _abap_object_1.ABAPObject)) {\r\n            return undefined;\r\n        }\r\n        const abapfile = object.getABAPFileByName(v.getFilename());\r\n        if (abapfile === undefined) {\r\n            return undefined;\r\n        }\r\n        const statement = edit_helper_1.EditHelper.findStatement(v.getToken(), abapfile);\r\n        return statement;\r\n    }\r\n    buildFix(v, obj) {\r\n        const file = obj.getABAPFileByName(v.getFilename());\r\n        if (file === undefined) {\r\n            return undefined;\r\n        }\r\n        const statement = edit_helper_1.EditHelper.findStatement(v.getToken(), file);\r\n        if (statement) {\r\n            return edit_helper_1.EditHelper.deleteStatement(file, statement);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.UnusedVariables = UnusedVariables;\r\n//# sourceMappingURL=unused_variables.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/unused_variables.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/use_bool_expression.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/use_bool_expression.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UseBoolExpression = exports.UseBoolExpressionConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\n// note this rule assumes abap_true and abap_false is used for boolean variables\r\n// some other rule will in the future find assignments to abap_bool that are not abap_true/abap_false/abap_undefined\r\nclass UseBoolExpressionConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UseBoolExpressionConf = UseBoolExpressionConf;\r\nclass UseBoolExpression extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new UseBoolExpressionConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"use_bool_expression\",\r\n            title: \"Use boolean expression\",\r\n            shortDescription: `Use boolean expression, xsdbool from 740sp08 and up, boolc from 702 and up`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#use-xsdbool-to-set-boolean-variables`,\r\n            tags: [_irule_1.RuleTag.Upport, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n            badExample: `IF line IS INITIAL.\n  has_entries = abap_false.\nELSE.\n  has_entries = abap_true.\nENDIF.\n\nDATA(fsdf) = COND #( WHEN foo <> bar THEN abap_true ELSE abap_false ).`,\r\n            goodExample: `DATA(has_entries) = xsdbool( line IS NOT INITIAL ).\n\nDATA(fsdf) = xsdbool( foo <> bar ).`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        const issues = [];\r\n        const stru = file.getStructure();\r\n        const version = this.reg.getConfig().getVersion();\r\n        if (stru === undefined || (version < version_1.Version.v702 && version !== version_1.Version.Cloud)) {\r\n            return [];\r\n        }\r\n        for (const i of stru.findAllStructures(Structures.If)) {\r\n            if (i.findDirectStructure(Structures.ElseIf) !== undefined) {\r\n                continue;\r\n            }\r\n            const bodyNodes = (_a = i.findDirectStructure(Structures.Body)) === null || _a === void 0 ? void 0 : _a.findAllStatementNodes();\r\n            if (bodyNodes === undefined || bodyNodes.length !== 1) {\r\n                continue;\r\n            }\r\n            const bodyStatement = bodyNodes[0];\r\n            if (!(bodyStatement.get() instanceof Statements.Move)) {\r\n                continue;\r\n            }\r\n            const elseNodes = (_c = (_b = i.findDirectStructure(Structures.Else)) === null || _b === void 0 ? void 0 : _b.findDirectStructure(Structures.Body)) === null || _c === void 0 ? void 0 : _c.findAllStatementNodes();\r\n            if (elseNodes === undefined || elseNodes.length !== 1) {\r\n                continue;\r\n            }\r\n            const elseStatement = elseNodes[0];\r\n            if (!(elseStatement.get() instanceof Statements.Move)) {\r\n                continue;\r\n            }\r\n            const bodyTarget = (_d = bodyStatement.findFirstExpression(Expressions.Target)) === null || _d === void 0 ? void 0 : _d.concatTokens();\r\n            const elseTarget = (_e = elseStatement.findFirstExpression(Expressions.Target)) === null || _e === void 0 ? void 0 : _e.concatTokens();\r\n            if (bodyTarget === undefined || elseTarget === undefined || bodyTarget.toUpperCase() !== elseTarget.toUpperCase()) {\r\n                continue;\r\n            }\r\n            const bodySource = (_f = bodyStatement.findFirstExpression(Expressions.Source)) === null || _f === void 0 ? void 0 : _f.concatTokens().toUpperCase();\r\n            const elseSource = (_g = elseStatement.findFirstExpression(Expressions.Source)) === null || _g === void 0 ? void 0 : _g.concatTokens().toUpperCase();\r\n            if ((bodySource === \"ABAP_TRUE\" && elseSource === \"ABAP_FALSE\")\r\n                || (bodySource === \"ABAP_FALSE\" && elseSource === \"ABAP_TRUE\")) {\r\n                const func = (this.reg.getConfig().getVersion() >= version_1.Version.v740sp08\r\n                    || this.reg.getConfig().getVersion() === version_1.Version.Cloud) ? \"xsdbool\" : \"boolc\";\r\n                const negate = bodySource === \"ABAP_FALSE\";\r\n                const message = `Use ${func} instead of IF` + (negate ? \", negate expression\" : \"\");\r\n                const start = i.getFirstToken().getStart();\r\n                const end = i.getLastToken().getEnd();\r\n                const statement = bodyTarget + \" = \" + func + \"( \" +\r\n                    (negate ? \"NOT ( \" : \"\") +\r\n                    ((_j = (_h = i.findFirstStatement(Statements.If)) === null || _h === void 0 ? void 0 : _h.findFirstExpression(Expressions.Cond)) === null || _j === void 0 ? void 0 : _j.concatTokens()) +\r\n                    (negate ? \" )\" : \"\") +\r\n                    \" ).\";\r\n                const fix = edit_helper_1.EditHelper.replaceRange(file, start, end, statement);\r\n                issues.push(issue_1.Issue.atRange(file, start, end, message, this.getMetadata().key, this.conf.severity, fix));\r\n            }\r\n        }\r\n        if (version >= version_1.Version.v740sp08 || version === version_1.Version.Cloud) {\r\n            for (const b of stru.findAllExpressions(Expressions.CondBody)) {\r\n                const concat = b.concatTokens().toUpperCase();\r\n                if (concat.endsWith(\" THEN ABAP_TRUE ELSE ABAP_FALSE\")\r\n                    || concat.endsWith(\" THEN ABAP_TRUE\")\r\n                    || concat.endsWith(\" THEN ABAP_FALSE ELSE ABAP_TRUE\")) {\r\n                    const message = \"Use xsdbool\";\r\n                    // eslint-disable-next-line max-len\r\n                    issues.push(issue_1.Issue.atRange(file, b.getFirstToken().getStart(), b.getLastToken().getEnd(), message, this.getMetadata().key, this.conf.severity));\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.UseBoolExpression = UseBoolExpression;\r\n//# sourceMappingURL=use_bool_expression.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/use_bool_expression.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/use_class_based_exceptions.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/use_class_based_exceptions.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UseClassBasedExceptions = exports.UseClassBasedExceptionsConf = void 0;\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nclass UseClassBasedExceptionsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UseClassBasedExceptionsConf = UseClassBasedExceptionsConf;\r\nclass UseClassBasedExceptions extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new UseClassBasedExceptionsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"use_class_based_exceptions\",\r\n            title: \"Use class based exceptions\",\r\n            shortDescription: `Use class based exceptions, checks interface and class definitions`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#use-class-based-exceptions`,\r\n            tags: [_irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Use class based exceptions\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        var _a;\r\n        const issues = [];\r\n        for (const s of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllStatements(Statements.MethodDef)) || []) {\r\n            if (s.findDirectTokenByText(\"EXCEPTIONS\")) {\r\n                issues.push(issue_1.Issue.atStatement(file, s, this.getMessage(), this.getMetadata().key));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.UseClassBasedExceptions = UseClassBasedExceptions;\r\n//# sourceMappingURL=use_class_based_exceptions.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/use_class_based_exceptions.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/use_line_exists.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/use_line_exists.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UseLineExists = exports.UseLineExistsConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass UseLineExistsConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UseLineExistsConf = UseLineExistsConf;\r\nclass UseLineExists extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new UseLineExistsConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"use_line_exists\",\r\n            title: \"Use line_exists\",\r\n            shortDescription: `Use line_exists, from 740sp02 and up`,\r\n            extendedInformation: `\nhttps://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-line_exists-to-read-table-or-loop-at\n\nNot reported if the READ TABLE statement contains BINARY SEARCH.`,\r\n            tags: [_irule_1.RuleTag.Upport, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.SingleFile],\r\n            badExample: `READ TABLE my_table TRANSPORTING NO FIELDS WITH KEY key = 'A'.\nIF sy-subrc = 0.\nENDIF.`,\r\n            goodExample: `IF line_exists( my_table[ key = 'A' ] ).\nENDIF.`,\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        const issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        if (this.reg.getConfig().getVersion() < version_1.Version.v740sp02 && this.reg.getConfig().getVersion() !== version_1.Version.Cloud) {\r\n            return [];\r\n        }\r\n        const statements = file.getStatements();\r\n        for (let i = 0; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            if (!(statement.get() instanceof Statements.ReadTable)) {\r\n                continue;\r\n            }\r\n            const concat = statement.concatTokens().toUpperCase();\r\n            if (concat.includes(\" TRANSPORTING NO FIELDS\") === true\r\n                && concat.includes(\" BINARY SEARCH\") === false\r\n                && this.checksSubrc(i, statements) === true\r\n                && this.usesTabix(i, statements) === false) {\r\n                issues.push(issue_1.Issue.atStatement(file, statement, \"Use line_exists\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    ///////////////////////\r\n    checksSubrc(index, statements) {\r\n        for (let i = index + 1; i < statements.length; i++) {\r\n            const statement = statements[i];\r\n            if (statement.get() instanceof _statement_1.Comment) {\r\n                continue;\r\n            }\r\n            for (const c of statement.findAllExpressions(Expressions.Cond)) {\r\n                for (const s of c.findAllExpressions(Expressions.Source)) {\r\n                    if (s.concatTokens().toUpperCase() === \"SY-SUBRC\") {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    // this is a heuristic, data flow analysis is required to get the correct result\r\n    usesTabix(index, statements) {\r\n        for (let i = index + 1; i < index + 5; i++) {\r\n            const statement = statements[i];\r\n            if (statement === undefined) {\r\n                break;\r\n            }\r\n            else if (statement.get() instanceof _statement_1.Comment) {\r\n                continue;\r\n            }\r\n            else if (statement.concatTokens().toUpperCase().includes(\" SY-TABIX\")) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.UseLineExists = UseLineExists;\r\n//# sourceMappingURL=use_line_exists.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/use_line_exists.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/use_new.js":
/*!****************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/use_new.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UseNew = exports.UseNewConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@abaplint/core/build/src/version.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nclass UseNewConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.UseNewConf = UseNewConf;\r\nclass UseNew extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new UseNewConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"use_new\",\r\n            title: \"Use NEW\",\r\n            shortDescription: `Checks for deprecated CREATE OBJECT statements.`,\r\n            extendedInformation: `https://github.com/SAP/styleguides/blob/main/clean-abap/CleanABAP.md#prefer-new-to-create-object\n\nIf the target variable is referenced in the CREATE OBJECT statement, no errors are issued`,\r\n            badExample: `CREATE OBJECT ref.`,\r\n            goodExample: `ref = NEW #( ).`,\r\n            tags: [_irule_1.RuleTag.Upport, _irule_1.RuleTag.Styleguide, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Use NEW #( ) to instantiate object.\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file, obj) {\r\n        var _a;\r\n        const issues = [];\r\n        if (obj.getType() === \"INTF\") {\r\n            return [];\r\n        }\r\n        if (this.reg.getConfig().getVersion() < version_1.Version.v740sp02 && this.reg.getConfig().getVersion() !== version_1.Version.Cloud) {\r\n            return [];\r\n        }\r\n        for (const statement of file.getStatements()) {\r\n            if (statement.get() instanceof Statements.CreateObject) {\r\n                if (statement.findFirstExpression(expressions_1.Dynamic)) {\r\n                    continue;\r\n                }\r\n                else if (statement.findDirectExpression(expressions_1.ParameterListExceptions)) {\r\n                    continue;\r\n                }\r\n                const target = ((_a = statement.findDirectExpression(expressions_1.Target)) === null || _a === void 0 ? void 0 : _a.concatTokens()) + \"->\";\r\n                if (statement.concatTokens().includes(target)) {\r\n                    continue;\r\n                }\r\n                const fix = this.buildFix(file, statement);\r\n                const issue = issue_1.Issue.atPosition(file, statement.getStart(), this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    buildFix(file, statement) {\r\n        var _a, _b;\r\n        const target = (_a = statement.findDirectExpression(Expressions.Target)) === null || _a === void 0 ? void 0 : _a.concatTokens();\r\n        if (target === undefined) {\r\n            return undefined;\r\n        }\r\n        const parameters = statement.findDirectExpression(Expressions.ParameterListS);\r\n        const param = parameters ? parameters.concatTokens() + \" \" : \"\";\r\n        let type = (_b = statement.findDirectExpression(Expressions.ClassName)) === null || _b === void 0 ? void 0 : _b.getFirstToken().getStr();\r\n        if (type === undefined) {\r\n            type = \"#\";\r\n        }\r\n        const string = `${target} = NEW ${type}( ${param}).`;\r\n        return edit_helper_1.EditHelper.replaceRange(file, statement.getStart(), statement.getEnd(), string);\r\n    }\r\n}\r\nexports.UseNew = UseNew;\r\n//# sourceMappingURL=use_new.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/use_new.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/when_others_last.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/when_others_last.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WhenOthersLast = exports.WhenOthersLastConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass WhenOthersLastConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.WhenOthersLastConf = WhenOthersLastConf;\r\nclass WhenOthersLast extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new WhenOthersLastConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"when_others_last\",\r\n            title: \"WHEN OTHERS last\",\r\n            shortDescription: `Checks that WHEN OTHERS is placed the last within a CASE statement.`,\r\n            tags: [_irule_1.RuleTag.SingleFile],\r\n            badExample: `CASE bar.\n  WHEN OTHERS.\n  WHEN 2.\nENDCASE.`,\r\n            goodExample: `CASE bar.\n  WHEN 2.\n  WHEN OTHERS.\nENDCASE.`,\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"WHEN OTHERS should be the last branch in a CASE statement.\";\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const struc = file.getStructure();\r\n        if (struc === undefined) {\r\n            return [];\r\n        }\r\n        const cases = struc.findAllStructures(Structures.Case);\r\n        for (const c of cases) {\r\n            const whentop = c.findDirectStructures(Structures.When);\r\n            for (let i = 0; i < whentop.length - 1; i++) {\r\n                const whens = whentop[i].findDirectStatements(Statements.When).concat(whentop[i].findDirectStatements(Statements.WhenOthers));\r\n                for (const when of whens) {\r\n                    if (when.get() instanceof Statements.WhenOthers) {\r\n                        const start = when.getFirstToken().getStart();\r\n                        const issue = issue_1.Issue.atPosition(file, start, this.getMessage(), this.getMetadata().key, this.conf.severity);\r\n                        issues.push(issue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n}\r\nexports.WhenOthersLast = WhenOthersLast;\r\n//# sourceMappingURL=when_others_last.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/when_others_last.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/whitespace_end.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/whitespace_end.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.WhitespaceEnd = exports.WhitespaceEndConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst _abap_rule_1 = __webpack_require__(/*! ./_abap_rule */ \"./node_modules/@abaplint/core/build/src/rules/_abap_rule.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst edit_helper_1 = __webpack_require__(/*! ../edit_helper */ \"./node_modules/@abaplint/core/build/src/edit_helper.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nclass WhitespaceEndConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.WhitespaceEndConf = WhitespaceEndConf;\r\nclass WhitespaceEnd extends _abap_rule_1.ABAPRule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.conf = new WhitespaceEndConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"whitespace_end\",\r\n            title: \"Whitespace at end of line\",\r\n            shortDescription: `Checks for redundant whitespace at the end of each line.`,\r\n            tags: [_irule_1.RuleTag.Whitespace, _irule_1.RuleTag.Quickfix, _irule_1.RuleTag.SingleFile],\r\n        };\r\n    }\r\n    getMessage() {\r\n        return \"Remove whitespace at end of line\";\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    runParsed(file) {\r\n        const issues = [];\r\n        const rows = file.getRawRows();\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i].endsWith(\" \") || rows[i].endsWith(\" \\r\")) {\r\n                const match = / +\\r?$/.exec(rows[i]);\r\n                const start = new position_1.Position(i + 1, match.index + 1);\r\n                const end = new position_1.Position(i + 1, rows[i].length + 1);\r\n                const fix = edit_helper_1.EditHelper.deleteRange(file, start, end);\r\n                const issue = issue_1.Issue.atRange(file, start, end, this.getMessage(), this.getMetadata().key, this.conf.severity, fix);\r\n                issues.push(issue);\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.WhitespaceEnd = WhitespaceEnd;\r\n//# sourceMappingURL=whitespace_end.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/whitespace_end.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/rules/xml_consistency.js":
/*!************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/rules/xml_consistency.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.XMLConsistency = exports.XMLConsistencyConf = void 0;\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _irule_1 = __webpack_require__(/*! ./_irule */ \"./node_modules/@abaplint/core/build/src/rules/_irule.js\");\r\nconst Objects = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst _basic_rule_config_1 = __webpack_require__(/*! ./_basic_rule_config */ \"./node_modules/@abaplint/core/build/src/rules/_basic_rule_config.js\");\r\nconst fastxmlparser = __webpack_require__(/*! fast-xml-parser */ \"./node_modules/fast-xml-parser/src/parser.js\");\r\nclass XMLConsistencyConf extends _basic_rule_config_1.BasicRuleConfig {\r\n}\r\nexports.XMLConsistencyConf = XMLConsistencyConf;\r\nclass XMLConsistency {\r\n    constructor() {\r\n        this.conf = new XMLConsistencyConf();\r\n    }\r\n    getMetadata() {\r\n        return {\r\n            key: \"xml_consistency\",\r\n            title: \"XML consistency\",\r\n            shortDescription: `Checks the consistency of main XML files, eg. naming for CLAS and INTF objects`,\r\n            tags: [_irule_1.RuleTag.Naming, _irule_1.RuleTag.Syntax],\r\n        };\r\n    }\r\n    getConfig() {\r\n        return this.conf;\r\n    }\r\n    setConfig(conf) {\r\n        this.conf = conf;\r\n    }\r\n    initialize(_reg) {\r\n        return this;\r\n    }\r\n    run(obj) {\r\n        var _a, _b;\r\n        const issues = [];\r\n        const file = obj.getXMLFile();\r\n        if (file === undefined) {\r\n            return issues;\r\n        }\r\n        const xml = obj.getXML();\r\n        if (xml) {\r\n            const res = fastxmlparser.validate(xml);\r\n            if (res !== true) {\r\n                issues.push(issue_1.Issue.atRow(file, 1, \"XML parser error: \" + res.err.msg, this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        // todo, have some XML validation in each object?\r\n        if (obj instanceof Objects.Class) {\r\n            const name = obj.getNameFromXML();\r\n            if (name === undefined) {\r\n                issues.push(issue_1.Issue.atRow(file, 1, \"Name undefined in XML\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (name !== obj.getName().toUpperCase()) {\r\n                issues.push(issue_1.Issue.atRow(file, 1, \"Name in XML does not match object\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (((_a = obj.getMainABAPFile()) === null || _a === void 0 ? void 0 : _a.getStructure()) !== undefined && obj.getClassDefinition() === undefined) {\r\n                issues.push(issue_1.Issue.atRow(file, 1, \"Class matching XML name not found in ABAP file\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        if (obj instanceof Objects.Interface) {\r\n            const name = obj.getNameFromXML();\r\n            if (name === undefined) {\r\n                issues.push(issue_1.Issue.atRow(file, 1, \"Name undefined in XML\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (name !== obj.getName().toUpperCase()) {\r\n                issues.push(issue_1.Issue.atRow(file, 1, \"Name in XML does not match object\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n            else if (obj.getDefinition() === undefined\r\n                || ((_b = obj.getDefinition()) === null || _b === void 0 ? void 0 : _b.getName().toUpperCase()) !== name.toUpperCase()) {\r\n                issues.push(issue_1.Issue.atRow(file, 1, \"Interface matching XML name not found in ABAP file\", this.getMetadata().key, this.conf.severity));\r\n            }\r\n        }\r\n        return issues;\r\n    }\r\n}\r\nexports.XMLConsistency = XMLConsistency;\r\n//# sourceMappingURL=xml_consistency.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/rules/xml_consistency.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/severity.js":
/*!***********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/severity.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Severity = void 0;\r\nvar Severity;\r\n(function (Severity) {\r\n    Severity[\"Error\"] = \"Error\";\r\n    Severity[\"Warning\"] = \"Warning\";\r\n    Severity[\"Info\"] = \"Info\";\r\n})(Severity = exports.Severity || (exports.Severity = {}));\r\n//# sourceMappingURL=severity.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/severity.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/skip_logic.js":
/*!*************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/skip_logic.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SkipLogic = void 0;\r\nconst objects_1 = __webpack_require__(/*! ./objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst include_graph_1 = __webpack_require__(/*! ./utils/include_graph */ \"./node_modules/@abaplint/core/build/src/utils/include_graph.js\");\r\nclass SkipLogic {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n        this.tobj = undefined;\r\n    }\r\n    skip(obj) {\r\n        const global = this.reg.getConfig().getGlobal();\r\n        if (global.skipGeneratedGatewayClasses\r\n            && obj instanceof objects_1.Class\r\n            && this.isGeneratedGatewayClass(obj)) {\r\n            return true;\r\n        }\r\n        else if (global.skipIncludesWithoutMain === true\r\n            && obj instanceof objects_1.Program\r\n            && obj.isInclude() === true) {\r\n            const ig = new include_graph_1.IncludeGraph(this.reg);\r\n            const file = obj.getMainABAPFile();\r\n            if (file && ig.listMainForInclude(file.getFilename()).length === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (global.skipGeneratedPersistentClasses\r\n            && obj instanceof objects_1.Class\r\n            && this.isGeneratedPersistentClass(obj)) {\r\n            return true;\r\n        }\r\n        else if (global.skipGeneratedFunctionGroups\r\n            && obj instanceof objects_1.FunctionGroup\r\n            && this.isGeneratedFunctionGroup(obj)) {\r\n            return true;\r\n        }\r\n        else if (obj instanceof objects_1.Class && this.isGeneratedProxyClass(obj)) {\r\n            return true;\r\n        }\r\n        else if (obj instanceof objects_1.Interface && this.isGeneratedProxyInterface(obj)) {\r\n            return true;\r\n        }\r\n        else if (obj instanceof objects_1.Interface && this.isGeneratedBOPFInterface(obj)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ///////////////////////////\r\n    isGeneratedBOPFInterface(obj) {\r\n        var _a;\r\n        const implementing = (_a = obj.getDefinition()) === null || _a === void 0 ? void 0 : _a.getImplementing();\r\n        if (implementing === undefined) {\r\n            return false;\r\n        }\r\n        for (const i of implementing) {\r\n            if (i.name.toUpperCase() === \"/BOBF/IF_LIB_CONSTANTS\") {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isGeneratedProxyInterface(obj) {\r\n        const xml = obj.getXML();\r\n        if (!xml) {\r\n            return false;\r\n        }\r\n        const result = xml.match(/<CLSPROXY>(.)<\\/CLSPROXY>/);\r\n        if (result) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    isGeneratedProxyClass(obj) {\r\n        const xml = obj.getXML();\r\n        if (!xml) {\r\n            return false;\r\n        }\r\n        const result = xml.match(/<CLSPROXY>(.)<\\/CLSPROXY>/);\r\n        if (result) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    isGeneratedFunctionGroup(group) {\r\n        var _a;\r\n        if (this.tobj === undefined) {\r\n            this.tobj = {};\r\n            for (const obj of this.reg.getObjects()) {\r\n                if (obj.getType() !== \"TOBJ\") {\r\n                    continue;\r\n                }\r\n                const tobj = obj;\r\n                const area = (_a = tobj.getArea()) === null || _a === void 0 ? void 0 : _a.toUpperCase();\r\n                if (area) {\r\n                    this.tobj[area] = true;\r\n                }\r\n            }\r\n        }\r\n        return this.tobj[group.getName().toUpperCase()];\r\n    }\r\n    isGeneratedGatewayClass(obj) {\r\n        var _a;\r\n        let sup = undefined;\r\n        const definition = obj.getClassDefinition();\r\n        if (definition) {\r\n            sup = (_a = definition.superClassName) === null || _a === void 0 ? void 0 : _a.toUpperCase();\r\n        }\r\n        if (obj.getName().match(/_MPC$/i) && sup === \"/IWBEP/CL_MGW_PUSH_ABS_MODEL\") {\r\n            return true;\r\n        }\r\n        else if (obj.getName().match(/_DPC$/i) && sup === \"/IWBEP/CL_MGW_PUSH_ABS_DATA\") {\r\n            return true;\r\n        }\r\n        else if (sup === \"CL_SADL_GTK_EXPOSURE_MPC\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    isGeneratedPersistentClass(obj) {\r\n        if (obj.getCategory() === objects_1.ClassCategory.Persistent) {\r\n            return true;\r\n        }\r\n        else if (obj.getCategory() === objects_1.ClassCategory.PersistentFactory) {\r\n            return true;\r\n        }\r\n        const main = obj.getClassDefinition();\r\n        if (main) {\r\n            const sup = main.superClassName;\r\n            if (sup) {\r\n                const sclass = this.reg.getObject(\"CLAS\", sup.toUpperCase());\r\n                if (sclass && sclass.getCategory() === objects_1.ClassCategory.PersistentFactory) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.SkipLogic = SkipLogic;\r\n//# sourceMappingURL=skip_logic.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/skip_logic.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/utils/cyclomatic_complexity_stats.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/utils/cyclomatic_complexity_stats.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CyclomaticComplexityStats = void 0;\r\nconst Expressions = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst Structures = __webpack_require__(/*! ../abap/3_structures/structures */ \"./node_modules/@abaplint/core/build/src/abap/3_structures/structures/index.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nclass CyclomaticComplexityStats {\r\n    static run(obj) {\r\n        var _a, _b, _c;\r\n        const res = [];\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        for (const file of obj.getABAPFiles()) {\r\n            for (const m of ((_a = file.getStructure()) === null || _a === void 0 ? void 0 : _a.findAllStructures(Structures.Method)) || []) {\r\n                let count = 0;\r\n                for (const s of m.findAllStatementNodes()) {\r\n                    const type = s.get();\r\n                    if (type instanceof Statements.Assert\r\n                        || type instanceof Statements.Check\r\n                        || type instanceof Statements.ElseIf\r\n                        || type instanceof Statements.If\r\n                        || type instanceof Statements.While\r\n                        || type instanceof Statements.Case\r\n                        || type instanceof Statements.SelectLoop\r\n                        || type instanceof Statements.Catch\r\n                        || type instanceof Statements.Cleanup\r\n                        || type instanceof Statements.EndAt\r\n                        || type instanceof Statements.Loop) {\r\n                        count += 1;\r\n                    }\r\n                }\r\n                const name = (_c = (_b = m.findDirectStatement(Statements.MethodImplementation)) === null || _b === void 0 ? void 0 : _b.findDirectExpression(Expressions.MethodName)) === null || _c === void 0 ? void 0 : _c.getFirstToken().getStr();\r\n                res.push({\r\n                    file,\r\n                    pos: m.getFirstToken().getStart(),\r\n                    name: name ? name : \"Error!\",\r\n                    count,\r\n                });\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\nexports.CyclomaticComplexityStats = CyclomaticComplexityStats;\r\n//# sourceMappingURL=cyclomatic_complexity_stats.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/utils/cyclomatic_complexity_stats.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/utils/excludeHelper.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/utils/excludeHelper.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExcludeHelper = void 0;\r\nclass ExcludeHelper {\r\n    static isExcluded(filename, excludePatterns) {\r\n        for (const exclude of excludePatterns) {\r\n            if (exclude.exec(filename)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.ExcludeHelper = ExcludeHelper;\r\n//# sourceMappingURL=excludeHelper.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/utils/excludeHelper.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/utils/include_graph.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/utils/include_graph.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.IncludeGraph = void 0;\r\nconst statements_1 = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst objects_1 = __webpack_require__(/*! ../objects */ \"./node_modules/@abaplint/core/build/src/objects/index.js\");\r\nconst check_include_1 = __webpack_require__(/*! ../rules/check_include */ \"./node_modules/@abaplint/core/build/src/rules/check_include.js\");\r\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@abaplint/core/build/src/position.js\");\r\nconst issue_1 = __webpack_require__(/*! ../issue */ \"./node_modules/@abaplint/core/build/src/issue.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst severity_1 = __webpack_require__(/*! ../severity */ \"./node_modules/@abaplint/core/build/src/severity.js\");\r\n// todo, check for cycles/circular dependencies, method findTop\r\n// todo, add configurable error for multiple use includes\r\nfunction getABAPObjects(reg) {\r\n    const ret = [];\r\n    for (const o of reg.getObjects()) {\r\n        if (o instanceof _abap_object_1.ABAPObject) {\r\n            ret.push(o);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nclass Graph {\r\n    constructor() {\r\n        this.vertices = [];\r\n        this.edges = [];\r\n    }\r\n    addVertex(vertex) {\r\n        this.vertices.push(vertex);\r\n    }\r\n    findInclude(includeName) {\r\n        for (const v of this.vertices) {\r\n            if (v.includeName.toUpperCase() === includeName.toUpperCase()) {\r\n                return v;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findVertex(filename) {\r\n        for (const v of this.vertices) {\r\n            if (v.filename.toUpperCase() === filename.toUpperCase()) {\r\n                return v;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    addEdge(from, toFilename) {\r\n        this.edges.push({ from: from.filename, to: toFilename });\r\n    }\r\n    findTop(filename) {\r\n        const ret = [];\r\n        for (const e of this.edges) {\r\n            if (e.from === filename) {\r\n                ret.push(...this.findTop(e.to));\r\n            }\r\n        }\r\n        if (ret.length === 0) {\r\n            const found = this.findVertex(filename);\r\n            if (found !== undefined) {\r\n                ret.push(found);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nclass IncludeGraph {\r\n    constructor(reg) {\r\n        this.reg = reg;\r\n        this.issues = [];\r\n        this.graph = new Graph();\r\n        this.build();\r\n    }\r\n    getIssues() {\r\n        return this.issues;\r\n    }\r\n    listMainForInclude(filename) {\r\n        const ret = [];\r\n        for (const f of this.graph.findTop(filename)) {\r\n            if (f.include === false) {\r\n                ret.push(f.filename);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    getIssuesFile(file) {\r\n        const ret = [];\r\n        for (const i of this.issues) {\r\n            if (i.getFilename() === file.getFilename()) {\r\n                ret.push(i);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    ///////////////////////////////\r\n    build() {\r\n        this.addVertices();\r\n        for (const o of getABAPObjects(this.reg)) {\r\n            for (const f of o.getABAPFiles()) {\r\n                for (const s of f.getStatements()) {\r\n                    if (s.get() instanceof statements_1.Include) {\r\n                        const ifFound = s.concatTokens().toUpperCase().includes(\"IF FOUND\");\r\n                        const iexp = s.findFirstExpression(expressions_1.IncludeName);\r\n                        if (iexp === undefined) {\r\n                            throw new Error(\"unexpected Include node\");\r\n                        }\r\n                        const name = iexp.getFirstToken().getStr().toUpperCase();\r\n                        if (name.match(/^(\\/\\w+\\/)?L.+XX$/)) { // function module XX includes, possibily namespaced\r\n                            continue;\r\n                        }\r\n                        const found = this.graph.findInclude(name);\r\n                        if (found === undefined) {\r\n                            if (ifFound === false) {\r\n                                const issue = issue_1.Issue.atStatement(f, s, \"Include \" + name + \" not found\", new check_include_1.CheckInclude().getMetadata().key, severity_1.Severity.Error);\r\n                                this.issues.push(issue);\r\n                            }\r\n                        }\r\n                        else if (found.include === false) {\r\n                            const issue = issue_1.Issue.atStatement(f, s, \"Not possible to INCLUDE a main program\", new check_include_1.CheckInclude().getMetadata().key, severity_1.Severity.Error);\r\n                            this.issues.push(issue);\r\n                        }\r\n                        else {\r\n                            this.graph.addEdge(found, f.getFilename());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.findUnusedIncludes();\r\n    }\r\n    findUnusedIncludes() {\r\n        for (const v of this.graph.vertices) {\r\n            if (v.include === true) {\r\n                if (this.listMainForInclude(v.filename).length === 0) {\r\n                    const f = this.reg.getFileByName(v.filename);\r\n                    if (f === undefined) {\r\n                        throw new Error(\"findUnusedIncludes internal error\");\r\n                    }\r\n                    const issue = issue_1.Issue.atPosition(f, new position_1.Position(1, 1), \"INCLUDE not used anywhere\", new check_include_1.CheckInclude().getMetadata().key, severity_1.Severity.Error);\r\n                    this.issues.push(issue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addVertices() {\r\n        for (const o of getABAPObjects(this.reg)) {\r\n            if (o instanceof objects_1.Program) {\r\n                const file = o.getMainABAPFile();\r\n                if (file) {\r\n                    this.graph.addVertex({\r\n                        filename: file.getFilename(),\r\n                        includeName: o.getName(),\r\n                        include: o.isInclude()\r\n                    });\r\n                }\r\n            }\r\n            else if (o instanceof objects_1.Class) {\r\n                for (const f of o.getSequencedFiles()) {\r\n                    this.graph.addVertex({\r\n                        filename: f.getFilename(),\r\n                        includeName: o.getName(),\r\n                        include: false\r\n                    });\r\n                }\r\n            }\r\n            else if (o instanceof objects_1.FunctionGroup) {\r\n                for (const i of o.getIncludeFiles()) {\r\n                    this.graph.addVertex({\r\n                        filename: i.file.getFilename(),\r\n                        includeName: i.name,\r\n                        include: true\r\n                    });\r\n                }\r\n                const file = o.getMainABAPFile();\r\n                if (file) {\r\n                    this.graph.addVertex({\r\n                        filename: file.getFilename(),\r\n                        includeName: o.getName(),\r\n                        include: false\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.IncludeGraph = IncludeGraph;\r\n//# sourceMappingURL=include_graph.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/utils/include_graph.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/utils/method_length_stats.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/utils/method_length_stats.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodLengthStats = void 0;\r\nconst Statements = __webpack_require__(/*! ../abap/2_statements/statements */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/index.js\");\r\nconst expressions_1 = __webpack_require__(/*! ../abap/2_statements/expressions */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/expressions/index.js\");\r\nconst _abap_object_1 = __webpack_require__(/*! ../objects/_abap_object */ \"./node_modules/@abaplint/core/build/src/objects/_abap_object.js\");\r\nconst _statement_1 = __webpack_require__(/*! ../abap/2_statements/statements/_statement */ \"./node_modules/@abaplint/core/build/src/abap/2_statements/statements/_statement.js\");\r\nclass MethodLengthStats {\r\n    static run(obj) {\r\n        const res = [];\r\n        let pos = undefined;\r\n        let name = \"\";\r\n        let count = 0;\r\n        let method = false;\r\n        if (!(obj instanceof _abap_object_1.ABAPObject)) {\r\n            return [];\r\n        }\r\n        for (const file of obj.getABAPFiles()) {\r\n            for (const stat of file.getStatements()) {\r\n                const type = stat.get();\r\n                if (type instanceof Statements.MethodImplementation) {\r\n                    pos = stat.getFirstToken().getStart();\r\n                    name = this.findName(stat);\r\n                    method = true;\r\n                    count = 0;\r\n                }\r\n                else if (type instanceof Statements.EndMethod) {\r\n                    if (pos) {\r\n                        res.push({ name, count, file, pos });\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                    method = false;\r\n                }\r\n                else if (method === true\r\n                    && !(type instanceof _statement_1.Comment)\r\n                    && !(type instanceof _statement_1.Empty)) {\r\n                    count = count + 1;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    static findName(stat) {\r\n        let name = \"\";\r\n        const nameExpr = stat.findFirstExpression(expressions_1.MethodName);\r\n        if (nameExpr) {\r\n            name = nameExpr.getFirstToken().getStr();\r\n        }\r\n        else {\r\n            throw new Error(\"MethodLength, findName, expected MethodName\");\r\n        }\r\n        return name;\r\n    }\r\n}\r\nexports.MethodLengthStats = MethodLengthStats;\r\n//# sourceMappingURL=method_length_stats.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/utils/method_length_stats.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/utils/name_validator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/utils/name_validator.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NameValidator = void 0;\r\nclass NameValidator {\r\n    static violatesRule(name, pattern, params) {\r\n        if (params.ignoreNames && params.ignoreNames.indexOf(name.toUpperCase()) >= 0) {\r\n            return false;\r\n        }\r\n        for (const ignored of params.ignorePatterns || []) {\r\n            if (new RegExp(ignored, \"i\").test(name)) {\r\n                return false;\r\n            }\r\n        }\r\n        return !params.patternKind || params.patternKind === \"required\" ?\r\n            pattern.test(name) === false :\r\n            pattern.test(name) === true;\r\n    }\r\n}\r\nexports.NameValidator = NameValidator;\r\n//# sourceMappingURL=name_validator.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/utils/name_validator.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/version.js":
/*!**********************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/version.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getPreviousVersion = exports.defaultVersion = exports.Version = void 0;\r\nvar Version;\r\n(function (Version) {\r\n    Version[\"v700\"] = \"v700\";\r\n    Version[\"v702\"] = \"v702\";\r\n    Version[\"v740sp02\"] = \"v740sp02\";\r\n    Version[\"v740sp05\"] = \"v740sp05\";\r\n    Version[\"v740sp08\"] = \"v740sp08\";\r\n    Version[\"v750\"] = \"v750\";\r\n    Version[\"v751\"] = \"v751\";\r\n    Version[\"v752\"] = \"v752\";\r\n    Version[\"v753\"] = \"v753\";\r\n    Version[\"v754\"] = \"v754\";\r\n    Version[\"v755\"] = \"v755\";\r\n    Version[\"Cloud\"] = \"Cloud\";\r\n})(Version = exports.Version || (exports.Version = {}));\r\nexports.defaultVersion = Version.v755;\r\nfunction getPreviousVersion(v) {\r\n    const all = Object.values(Version);\r\n    const found = all.indexOf(v);\r\n    if (found < 0) {\r\n        throw \"Unknown version: \" + v;\r\n    }\r\n    else if (found === 0) {\r\n        throw \"Nothing lower: \" + v;\r\n    }\r\n    return all[found - 1];\r\n}\r\nexports.getPreviousVersion = getPreviousVersion;\r\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/version.js?");

/***/ }),

/***/ "./node_modules/@abaplint/core/build/src/xml_utils.js":
/*!************************************************************!*\
  !*** ./node_modules/@abaplint/core/build/src/xml_utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.unescape = exports.xmlToArray = void 0;\r\nfunction xmlToArray(data) {\r\n    if (data === undefined) {\r\n        return [];\r\n    }\r\n    else if (data.length) { // input data is an Array\r\n        return data;\r\n    }\r\n    else {\r\n        return [data];\r\n    }\r\n}\r\nexports.xmlToArray = xmlToArray;\r\nfunction unescape(str) {\r\n    if (str === undefined) {\r\n        return \"\";\r\n    }\r\n    str = str.replace(/&amp;/g, \"&\");\r\n    str = str.replace(/&gt;/g, \">\");\r\n    str = str.replace(/&lt;/g, \"<\");\r\n    str = str.replace(/&quot;/g, \"\\\"\");\r\n    str = str.replace(/&apos;/g, \"'\");\r\n    return str;\r\n}\r\nexports.unescape = unescape;\r\n//# sourceMappingURL=xml_utils.js.map\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/@abaplint/core/build/src/xml_utils.js?");

/***/ }),

/***/ "./node_modules/balanced-match/index.js":
/*!**********************************************!*\
  !*** ./node_modules/balanced-match/index.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/balanced-match/index.js?");

/***/ }),

/***/ "./node_modules/brace-expansion/index.js":
/*!***********************************************!*\
  !*** ./node_modules/brace-expansion/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var concatMap = __webpack_require__(/*! concat-map */ \"./node_modules/concat-map/index.js\");\nvar balanced = __webpack_require__(/*! balanced-match */ \"./node_modules/balanced-match/index.js\");\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/brace-expansion/index.js?");

/***/ }),

/***/ "./node_modules/chalk/node_modules/ansi-styles/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/chalk/node_modules/ansi-styles/index.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = __webpack_require__(/*! color-convert */ \"./node_modules/chalk/node_modules/color-convert/index.js\");\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/node_modules/ansi-styles/index.js?");

/***/ }),

/***/ "./node_modules/chalk/node_modules/color-convert/conversions.js":
/*!**********************************************************************!*\
  !*** ./node_modules/chalk/node_modules/color-convert/conversions.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = __webpack_require__(/*! color-name */ \"./node_modules/chalk/node_modules/color-name/index.js\");\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/node_modules/color-convert/conversions.js?");

/***/ }),

/***/ "./node_modules/chalk/node_modules/color-convert/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/chalk/node_modules/color-convert/index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/chalk/node_modules/color-convert/conversions.js\");\nconst route = __webpack_require__(/*! ./route */ \"./node_modules/chalk/node_modules/color-convert/route.js\");\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/node_modules/color-convert/index.js?");

/***/ }),

/***/ "./node_modules/chalk/node_modules/color-convert/route.js":
/*!****************************************************************!*\
  !*** ./node_modules/chalk/node_modules/color-convert/route.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/chalk/node_modules/color-convert/conversions.js\");\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/node_modules/color-convert/route.js?");

/***/ }),

/***/ "./node_modules/chalk/node_modules/color-name/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/chalk/node_modules/color-name/index.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/node_modules/color-name/index.js?");

/***/ }),

/***/ "./node_modules/chalk/source/index.js":
/*!********************************************!*\
  !*** ./node_modules/chalk/source/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst ansiStyles = __webpack_require__(/*! ansi-styles */ \"./node_modules/chalk/node_modules/ansi-styles/index.js\");\nconst {stdout: stdoutColor, stderr: stderrColor} = __webpack_require__(/*! supports-color */ \"./node_modules/supports-color/index.js\");\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = __webpack_require__(/*! ./util */ \"./node_modules/chalk/source/util.js\");\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = __webpack_require__(/*! ./templates */ \"./node_modules/chalk/source/templates.js\");\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/source/index.js?");

/***/ }),

/***/ "./node_modules/chalk/source/templates.js":
/*!************************************************!*\
  !*** ./node_modules/chalk/source/templates.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/source/templates.js?");

/***/ }),

/***/ "./node_modules/chalk/source/util.js":
/*!*******************************************!*\
  !*** ./node_modules/chalk/source/util.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/chalk/source/util.js?");

/***/ }),

/***/ "./node_modules/concat-map/index.js":
/*!******************************************!*\
  !*** ./node_modules/concat-map/index.js ***!
  \******************************************/
/***/ ((module) => {

eval("module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/concat-map/index.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/json2xml.js":
/*!******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/json2xml.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n//parse Empty Node as self closing node\nconst buildOptions = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\").buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/json2xml.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/nimndata.js":
/*!******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/nimndata.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = __webpack_require__(/*! ./xmlstr2xmlnode */ \"./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js\");\nconst buildOptions = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\").buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/nimndata.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/node2json.js":
/*!*******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/node2json.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\");\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/node2json.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/node2json_str.js":
/*!***********************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/node2json_str.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\");\nconst buildOptions = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\").buildOptions;\nconst x2j = __webpack_require__(/*! ./xmlstr2xmlnode */ \"./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js\");\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/node2json_str.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/parser.js":
/*!****************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/parser.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst nodeToJson = __webpack_require__(/*! ./node2json */ \"./node_modules/fast-xml-parser/src/node2json.js\");\nconst xmlToNodeobj = __webpack_require__(/*! ./xmlstr2xmlnode */ \"./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js\");\nconst x2xmlnode = __webpack_require__(/*! ./xmlstr2xmlnode */ \"./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js\");\nconst buildOptions = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\").buildOptions;\nconst validator = __webpack_require__(/*! ./validator */ \"./node_modules/fast-xml-parser/src/validator.js\");\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = __webpack_require__(/*! ./nimndata */ \"./node_modules/fast-xml-parser/src/nimndata.js\").convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = __webpack_require__(/*! ./node2json_str */ \"./node_modules/fast-xml-parser/src/node2json_str.js\").convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = __webpack_require__(/*! ./json2xml */ \"./node_modules/fast-xml-parser/src/json2xml.js\");\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/parser.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/util.js":
/*!**************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/util.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\n/**\n * Check if a tag name should be treated as array\n *\n * @param tagName the node tagname\n * @param arrayMode the array mode option\n * @param parentTagName the parent tag name\n * @returns {boolean} true if node should be parsed as array\n */\nexports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {\n  if (arrayMode === false) {\n    return false;\n  } else if (arrayMode instanceof RegExp) {\n    return arrayMode.test(tagName);\n  } else if (typeof arrayMode === 'function') {\n    return !!arrayMode(tagName, parentTagName);\n  }\n\n  return arrayMode === \"strict\";\n}\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/util.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/validator.js":
/*!*******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/validator.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\");\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n};\n\nconst props = ['allowBooleanAttributes'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\"+otg+\"' is expected inplace of '\"+tagName+\"'.\", getLineNumberForPosition(xmlData, i));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\"+JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '')+\"' found.\", 1);\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n}\n\n//this function returns the position of the last character of match within attrStr\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/validator.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/xmlNode.js":
/*!*****************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/xmlNode.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/xmlNode.js?");

/***/ }),

/***/ "./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js":
/*!************************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst util = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\");\nconst buildOptions = __webpack_require__(/*! ./util */ \"./node_modules/fast-xml-parser/src/util.js\").buildOptions;\nconst xmlNode = __webpack_require__(/*! ./xmlNode */ \"./node_modules/fast-xml-parser/src/xmlNode.js\");\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function(a, attrName) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst getTraversalObj = function(xmlData, options) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  options = buildOptions(options, defaultOptions, props);\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n\n//function match(xmlData){\n  for(let i=0; i< xmlData.length; i++){\n    const ch = xmlData[i];\n    if(ch === '<'){\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n        if(currentNode){\n          if(currentNode.val){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);\n          }else{\n            currentNode.val = processTagValue(tagName, textData , options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = []\n          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)\n        }\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\")\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\")\n        const tagExp = xmlData.substring(i, closeIndex);\n        if(tagExp.indexOf(\"[\") >= 0){\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        }else{\n          i = closeIndex;\n        }\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n        if(textData){\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);\n          currentNode.addChild(childNode);\n          //for backtracking\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n          //add rest value to parent node\n          if (tagExp) {\n            childNode.val = tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (tagExp || '');\n        }\n\n        i = closeIndex + 2;\n      }else {//Opening tag\n        const result = closingIndexForOpeningTag(xmlData, i+1)\n        let tagExp = result.data;\n        const closeIndex = result.index;\n        const separatorIndex = tagExp.indexOf(\" \");\n        let tagName = tagExp;\n        let shouldBuildAttributesMap = true;\n        if(separatorIndex !== -1){\n          tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n          tagExp = tagExp.substr(separatorIndex + 1);\n        }\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n            shouldBuildAttributesMap = tagName !== result.data.substr(colonIndex + 1);\n          }\n        }\n\n        //save text to parent node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);\n          }\n        }\n\n        if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){//selfClosing tag\n\n          if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n            tagName = tagName.substr(0, tagName.length - 1);\n            tagExp = tagName;\n          }else{\n            tagExp = tagExp.substr(0, tagExp.length - 1);\n          }\n\n          const childNode = new xmlNode(tagName, currentNode, '');\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n        }else{//opening tag\n\n          const childNode = new xmlNode( tagName, currentNode );\n          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n            childNode.startIndex=closeIndex;\n          }\n          if(tagName !== tagExp && shouldBuildAttributesMap){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n          currentNode = childNode;\n        }\n        textData = \"\";\n        i = closeIndex;\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj;\n}\n\nfunction closingIndexForOpeningTag(data, i){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < data.length; index++) {\n    let ch = data[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === '>') {\n        return {\n          data: tagExp,\n          index: index\n        }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js?");

/***/ }),

/***/ "./node_modules/fs.realpath/index.js":
/*!*******************************************!*\
  !*** ./node_modules/fs.realpath/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = __webpack_require__(/*! fs */ \"fs\")\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = __webpack_require__(/*! ./old.js */ \"./node_modules/fs.realpath/old.js\")\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fs.realpath/index.js?");

/***/ }),

/***/ "./node_modules/fs.realpath/old.js":
/*!*****************************************!*\
  !*** ./node_modules/fs.realpath/old.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = __webpack_require__(/*! path */ \"path\");\nvar isWindows = process.platform === 'win32';\nvar fs = __webpack_require__(/*! fs */ \"fs\");\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/fs.realpath/old.js?");

/***/ }),

/***/ "./node_modules/glob/common.js":
/*!*************************************!*\
  !*** ./node_modules/glob/common.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = __webpack_require__(/*! path */ \"path\")\nvar minimatch = __webpack_require__(/*! minimatch */ \"./node_modules/minimatch/minimatch.js\")\nvar isAbsolute = __webpack_require__(/*! path-is-absolute */ \"./node_modules/path-is-absolute/index.js\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/glob/common.js?");

/***/ }),

/***/ "./node_modules/glob/glob.js":
/*!***********************************!*\
  !*** ./node_modules/glob/glob.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = __webpack_require__(/*! fs */ \"fs\")\nvar rp = __webpack_require__(/*! fs.realpath */ \"./node_modules/fs.realpath/index.js\")\nvar minimatch = __webpack_require__(/*! minimatch */ \"./node_modules/minimatch/minimatch.js\")\nvar Minimatch = minimatch.Minimatch\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits.js\")\nvar EE = __webpack_require__(/*! events */ \"events\").EventEmitter\nvar path = __webpack_require__(/*! path */ \"path\")\nvar assert = __webpack_require__(/*! assert */ \"assert\")\nvar isAbsolute = __webpack_require__(/*! path-is-absolute */ \"./node_modules/path-is-absolute/index.js\")\nvar globSync = __webpack_require__(/*! ./sync.js */ \"./node_modules/glob/sync.js\")\nvar common = __webpack_require__(/*! ./common.js */ \"./node_modules/glob/common.js\")\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = __webpack_require__(/*! inflight */ \"./node_modules/inflight/inflight.js\")\nvar util = __webpack_require__(/*! util */ \"util\")\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = __webpack_require__(/*! once */ \"./node_modules/once/once.js\")\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/glob/glob.js?");

/***/ }),

/***/ "./node_modules/glob/sync.js":
/*!***********************************!*\
  !*** ./node_modules/glob/sync.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = __webpack_require__(/*! fs */ \"fs\")\nvar rp = __webpack_require__(/*! fs.realpath */ \"./node_modules/fs.realpath/index.js\")\nvar minimatch = __webpack_require__(/*! minimatch */ \"./node_modules/minimatch/minimatch.js\")\nvar Minimatch = minimatch.Minimatch\nvar Glob = __webpack_require__(/*! ./glob.js */ \"./node_modules/glob/glob.js\").Glob\nvar util = __webpack_require__(/*! util */ \"util\")\nvar path = __webpack_require__(/*! path */ \"path\")\nvar assert = __webpack_require__(/*! assert */ \"assert\")\nvar isAbsolute = __webpack_require__(/*! path-is-absolute */ \"./node_modules/path-is-absolute/index.js\")\nvar common = __webpack_require__(/*! ./common.js */ \"./node_modules/glob/common.js\")\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/glob/sync.js?");

/***/ }),

/***/ "./node_modules/inflight/inflight.js":
/*!*******************************************!*\
  !*** ./node_modules/inflight/inflight.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var wrappy = __webpack_require__(/*! wrappy */ \"./node_modules/wrappy/wrappy.js\")\nvar reqs = Object.create(null)\nvar once = __webpack_require__(/*! once */ \"./node_modules/once/once.js\")\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/inflight/inflight.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits.js":
/*!*******************************************!*\
  !*** ./node_modules/inherits/inherits.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("try {\n  var util = __webpack_require__(/*! util */ \"util\");\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = __webpack_require__(/*! ./inherits_browser.js */ \"./node_modules/inherits/inherits_browser.js\");\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/inherits/inherits.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/json5/dist/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/json5/dist/index.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// This is a generated file. Do not edit.\nvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\nvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nvar unicode = {\n\tSpace_Separator: Space_Separator,\n\tID_Start: ID_Start,\n\tID_Continue: ID_Continue\n};\n\nvar util = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n};\n\nlet source;\nlet parseState;\nlet stack;\nlet pos;\nlet line;\nlet column;\nlet token;\nlet key;\nlet root;\n\nvar parse = function parse (text, reviver) {\n    source = String(text);\n    parseState = 'start';\n    stack = [];\n    pos = 0;\n    line = 1;\n    column = 0;\n    token = undefined;\n    key = undefined;\n    root = undefined;\n\n    do {\n        token = lex();\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]();\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n};\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name];\n    if (value != null && typeof value === 'object') {\n        for (const key in value) {\n            const replacement = internalize(value, key, reviver);\n            if (replacement === undefined) {\n                delete value[key];\n            } else {\n                value[key] = replacement;\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState;\nlet buffer;\nlet doubleQuote;\nlet sign;\nlet c;\n\nfunction lex () {\n    lexState = 'default';\n    buffer = '';\n    doubleQuote = false;\n    sign = 1;\n\n    for (;;) {\n        c = peek();\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]();\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek();\n\n    if (c === '\\n') {\n        line++;\n        column = 0;\n    } else if (c) {\n        column += c.length;\n    } else {\n        column++;\n    }\n\n    if (c) {\n        pos += c.length;\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'comment';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read();\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineComment';\n            return\n\n        case '/':\n            read();\n            lexState = 'singleLineComment';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineCommentAsterisk';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n        lexState = 'multiLineComment';\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        read();\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read();\n            literal('ull');\n            return newToken('null', null)\n\n        case 't':\n            read();\n            literal('rue');\n            return newToken('boolean', true)\n\n        case 'f':\n            read();\n            literal('alse');\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1;\n            }\n\n            lexState = 'sign';\n            return\n\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            buffer = '';\n            lexState = 'string';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read();\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameEscape';\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read();\n            lexState = 'hexadecimal';\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read();\n            lexState = 'decimalExponentSign';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            lexState = 'hexadecimalInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read();\n            buffer += escape();\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c);\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value';\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read();\n            lexState = 'identifierName';\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameStartEscape';\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            lexState = 'string';\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read();\n            lexState = 'identifierName';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value';\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value';\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n};\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek();\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read();\n    }\n}\n\nfunction escape () {\n    const c = peek();\n    switch (c) {\n    case 'b':\n        read();\n        return '\\b'\n\n    case 'f':\n        read();\n        return '\\f'\n\n    case 'n':\n        read();\n        return '\\n'\n\n    case 'r':\n        read();\n        return '\\r'\n\n    case 't':\n        read();\n        return '\\t'\n\n    case 'v':\n        read();\n        return '\\v'\n\n    case '0':\n        read();\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read();\n        return hexEscape()\n\n    case 'u':\n        read();\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read();\n        return ''\n\n    case '\\r':\n        read();\n        if (peek() === '\\n') {\n            read();\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = '';\n    let c = peek();\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    c = peek();\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = '';\n    let count = 4;\n\n    while (count-- > 0) {\n        const c = peek();\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value;\n            parseState = 'afterPropertyName';\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop();\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue';\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop();\n            return\n        }\n\n        push();\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName';\n            return\n\n        case '}':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue';\n            return\n\n        case ']':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n};\n\nfunction push () {\n    let value;\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {};\n            break\n\n        case '[':\n            value = [];\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value;\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value;\n    } else {\n        const parent = stack[stack.length - 1];\n        if (Array.isArray(parent)) {\n            parent.push(value);\n        } else {\n            parent[key] = value;\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value);\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue';\n        } else {\n            parseState = 'beforePropertyName';\n        }\n    } else {\n        const current = stack[stack.length - 1];\n        if (current == null) {\n            parseState = 'end';\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue';\n        } else {\n            parseState = 'afterPropertyValue';\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop();\n\n    const current = stack[stack.length - 1];\n    if (current == null) {\n        parseState = 'end';\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n    } else {\n        parseState = 'afterPropertyValue';\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5;\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`);\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16);\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message);\n    err.lineNumber = line;\n    err.columnNumber = column;\n    return err\n}\n\nvar stringify = function stringify (value, replacer, space) {\n    const stack = [];\n    let indent = '';\n    let propertyList;\n    let replacerFunc;\n    let gap = '';\n    let quote;\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space;\n        quote = replacer.quote;\n        replacer = replacer.replacer;\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer;\n    } else if (Array.isArray(replacer)) {\n        propertyList = [];\n        for (const v of replacer) {\n            let item;\n\n            if (typeof v === 'string') {\n                item = v;\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v);\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item);\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space);\n    } else if (space instanceof String) {\n        space = String(space);\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space));\n            gap = '          '.substr(0, space);\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10);\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key];\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key);\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value);\n        }\n\n        if (value instanceof Number) {\n            value = Number(value);\n        } else if (value instanceof String) {\n            value = String(value);\n        } else if (value instanceof Boolean) {\n            value = value.valueOf();\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        };\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        };\n\n        let product = '';\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i];\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++;\n                product += c;\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00';\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c];\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16);\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n                continue\n            }\n\n            product += c;\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b);\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let keys = propertyList || Object.keys(value);\n        let partial = [];\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value);\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':';\n                if (gap !== '') {\n                    member += ' ';\n                }\n                member += propertyString;\n                partial.push(member);\n            }\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '{}';\n        } else {\n            let properties;\n            if (gap === '') {\n                properties = partial.join(',');\n                final = '{' + properties + '}';\n            } else {\n                let separator = ',\\n' + indent;\n                properties = partial.join(separator);\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0));\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let partial = [];\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value);\n            partial.push((propertyString !== undefined) ? propertyString : 'null');\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '[]';\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',');\n                final = '[' + properties + ']';\n            } else {\n                let separator = ',\\n' + indent;\n                let properties = partial.join(separator);\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n};\n\nconst JSON5 = {\n    parse,\n    stringify,\n};\n\nvar lib = JSON5;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lib);\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/json5/dist/index.mjs?");

/***/ }),

/***/ "./node_modules/minimatch/minimatch.js":
/*!*********************************************!*\
  !*** ./node_modules/minimatch/minimatch.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = __webpack_require__(/*! path */ \"path\")\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = __webpack_require__(/*! brace-expansion */ \"./node_modules/brace-expansion/index.js\")\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/minimatch/minimatch.js?");

/***/ }),

/***/ "./node_modules/minimist/index.js":
/*!****************************************!*\
  !*** ./node_modules/minimist/index.js ***!
  \****************************************/
/***/ ((module) => {

eval("module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {}, unknownFn: null };\n\n    if (typeof opts['unknown'] === 'function') {\n        flags.unknownFn = opts['unknown'];\n    }\n\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\n      flags.allBools = true;\n    } else {\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n          flags.bools[key] = true;\n      });\n    }\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function argDefined(key, arg) {\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\n            flags.strings[key] || flags.bools[key] || aliases[key];\n    }\n\n    function setArg (key, val, arg) {\n        if (arg && flags.unknownFn && !argDefined(key, arg)) {\n            if (flags.unknownFn(arg) === false) return;\n        }\n\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n\n    function setKey (obj, keys, value) {\n        var o = obj;\n        for (var i = 0; i < keys.length-1; i++) {\n            var key = keys[i];\n            if (key === '__proto__') return;\n            if (o[key] === undefined) o[key] = {};\n            if (o[key] === Object.prototype || o[key] === Number.prototype\n                || o[key] === String.prototype) o[key] = {};\n            if (o[key] === Array.prototype) o[key] = [];\n            o = o[key];\n        }\n\n        var key = keys[keys.length - 1];\n        if (key === '__proto__') return;\n        if (o === Object.prototype || o === Number.prototype\n            || o === String.prototype) o = {};\n        if (o === Array.prototype) o = [];\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key], value ];\n        }\n    }\n    \n    function aliasIsBoolean(key) {\n      return aliases[key].some(function (x) {\n          return flags.bools[x];\n      });\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            var key = m[1];\n            var value = m[2];\n            if (flags.bools[key]) {\n                value = value !== 'false';\n            }\n            setArg(key, value, arg);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false, arg);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && !flags.allBools\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                setArg(key, next, arg);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true', arg);\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true, arg);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next, arg)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\n                    setArg(letters[j], next.split('=')[1], arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next, arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2), arg);\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                    setArg(key, args[i+1], arg);\n                    i++;\n                }\n                else if (args[i+1] && /^(true|false)$/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true', arg);\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true, arg);\n                }\n            }\n        }\n        else {\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n                argv._.push(\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n                );\n            }\n            if (opts.stopEarly) {\n                argv._.push.apply(argv._, args.slice(i + 1));\n                break;\n            }\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    if (opts['--']) {\n        argv['--'] = new Array();\n        notFlags.forEach(function(key) {\n            argv['--'].push(key);\n        });\n    }\n    else {\n        notFlags.forEach(function(key) {\n            argv._.push(key);\n        });\n    }\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/minimist/index.js?");

/***/ }),

/***/ "./node_modules/once/once.js":
/*!***********************************!*\
  !*** ./node_modules/once/once.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var wrappy = __webpack_require__(/*! wrappy */ \"./node_modules/wrappy/wrappy.js\")\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/once/once.js?");

/***/ }),

/***/ "./node_modules/path-is-absolute/index.js":
/*!************************************************!*\
  !*** ./node_modules/path-is-absolute/index.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/path-is-absolute/index.js?");

/***/ }),

/***/ "./node_modules/progress/index.js":
/*!****************************************!*\
  !*** ./node_modules/progress/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/node-progress */ \"./node_modules/progress/lib/node-progress.js\");\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/progress/index.js?");

/***/ }),

/***/ "./node_modules/progress/lib/node-progress.js":
/*!****************************************************!*\
  !*** ./node_modules/progress/lib/node-progress.js ***!
  \****************************************************/
/***/ ((module, exports) => {

eval("/*!\n * node-progress\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Expose `ProgressBar`.\n */\n\nexports = module.exports = ProgressBar;\n\n/**\n * Initialize a `ProgressBar` with the given `fmt` string and `options` or\n * `total`.\n *\n * Options:\n *\n *   - `curr` current completed index\n *   - `total` total number of ticks to complete\n *   - `width` the displayed width of the progress bar defaulting to total\n *   - `stream` the output stream defaulting to stderr\n *   - `head` head character defaulting to complete character\n *   - `complete` completion character defaulting to \"=\"\n *   - `incomplete` incomplete character defaulting to \"-\"\n *   - `renderThrottle` minimum time between updates in milliseconds defaulting to 16\n *   - `callback` optional function to call when the progress bar completes\n *   - `clear` will clear the progress bar upon termination\n *\n * Tokens:\n *\n *   - `:bar` the progress bar itself\n *   - `:current` current tick number\n *   - `:total` total ticks\n *   - `:elapsed` time elapsed in seconds\n *   - `:percent` completion percentage\n *   - `:eta` eta in seconds\n *   - `:rate` rate of ticks per second\n *\n * @param {string} fmt\n * @param {object|number} options or total\n * @api public\n */\n\nfunction ProgressBar(fmt, options) {\n  this.stream = options.stream || process.stderr;\n\n  if (typeof(options) == 'number') {\n    var total = options;\n    options = {};\n    options.total = total;\n  } else {\n    options = options || {};\n    if ('string' != typeof fmt) throw new Error('format required');\n    if ('number' != typeof options.total) throw new Error('total required');\n  }\n\n  this.fmt = fmt;\n  this.curr = options.curr || 0;\n  this.total = options.total;\n  this.width = options.width || this.total;\n  this.clear = options.clear\n  this.chars = {\n    complete   : options.complete || '=',\n    incomplete : options.incomplete || '-',\n    head       : options.head || (options.complete || '=')\n  };\n  this.renderThrottle = options.renderThrottle !== 0 ? (options.renderThrottle || 16) : 0;\n  this.lastRender = -Infinity;\n  this.callback = options.callback || function () {};\n  this.tokens = {};\n  this.lastDraw = '';\n}\n\n/**\n * \"tick\" the progress bar with optional `len` and optional `tokens`.\n *\n * @param {number|object} len or tokens\n * @param {object} tokens\n * @api public\n */\n\nProgressBar.prototype.tick = function(len, tokens){\n  if (len !== 0)\n    len = len || 1;\n\n  // swap tokens\n  if ('object' == typeof len) tokens = len, len = 1;\n  if (tokens) this.tokens = tokens;\n\n  // start time for eta\n  if (0 == this.curr) this.start = new Date;\n\n  this.curr += len\n\n  // try to render\n  this.render();\n\n  // progress complete\n  if (this.curr >= this.total) {\n    this.render(undefined, true);\n    this.complete = true;\n    this.terminate();\n    this.callback(this);\n    return;\n  }\n};\n\n/**\n * Method to render the progress bar with optional `tokens` to place in the\n * progress bar's `fmt` field.\n *\n * @param {object} tokens\n * @api public\n */\n\nProgressBar.prototype.render = function (tokens, force) {\n  force = force !== undefined ? force : false;\n  if (tokens) this.tokens = tokens;\n\n  if (!this.stream.isTTY) return;\n\n  var now = Date.now();\n  var delta = now - this.lastRender;\n  if (!force && (delta < this.renderThrottle)) {\n    return;\n  } else {\n    this.lastRender = now;\n  }\n\n  var ratio = this.curr / this.total;\n  ratio = Math.min(Math.max(ratio, 0), 1);\n\n  var percent = Math.floor(ratio * 100);\n  var incomplete, complete, completeLength;\n  var elapsed = new Date - this.start;\n  var eta = (percent == 100) ? 0 : elapsed * (this.total / this.curr - 1);\n  var rate = this.curr / (elapsed / 1000);\n\n  /* populate the bar template with percentages and timestamps */\n  var str = this.fmt\n    .replace(':current', this.curr)\n    .replace(':total', this.total)\n    .replace(':elapsed', isNaN(elapsed) ? '0.0' : (elapsed / 1000).toFixed(1))\n    .replace(':eta', (isNaN(eta) || !isFinite(eta)) ? '0.0' : (eta / 1000)\n      .toFixed(1))\n    .replace(':percent', percent.toFixed(0) + '%')\n    .replace(':rate', Math.round(rate));\n\n  /* compute the available space (non-zero) for the bar */\n  var availableSpace = Math.max(0, this.stream.columns - str.replace(':bar', '').length);\n  if(availableSpace && process.platform === 'win32'){\n    availableSpace = availableSpace - 1;\n  }\n\n  var width = Math.min(this.width, availableSpace);\n\n  /* TODO: the following assumes the user has one ':bar' token */\n  completeLength = Math.round(width * ratio);\n  complete = Array(Math.max(0, completeLength + 1)).join(this.chars.complete);\n  incomplete = Array(Math.max(0, width - completeLength + 1)).join(this.chars.incomplete);\n\n  /* add head to the complete string */\n  if(completeLength > 0)\n    complete = complete.slice(0, -1) + this.chars.head;\n\n  /* fill in the actual progress bar */\n  str = str.replace(':bar', complete + incomplete);\n\n  /* replace the extra tokens */\n  if (this.tokens) for (var key in this.tokens) str = str.replace(':' + key, this.tokens[key]);\n\n  if (this.lastDraw !== str) {\n    this.stream.cursorTo(0);\n    this.stream.write(str);\n    this.stream.clearLine(1);\n    this.lastDraw = str;\n  }\n};\n\n/**\n * \"update\" the progress bar to represent an exact percentage.\n * The ratio (between 0 and 1) specified will be multiplied by `total` and\n * floored, representing the closest available \"tick.\" For example, if a\n * progress bar has a length of 3 and `update(0.5)` is called, the progress\n * will be set to 1.\n *\n * A ratio of 0.5 will attempt to set the progress to halfway.\n *\n * @param {number} ratio The ratio (between 0 and 1 inclusive) to set the\n *   overall completion to.\n * @api public\n */\n\nProgressBar.prototype.update = function (ratio, tokens) {\n  var goal = Math.floor(ratio * this.total);\n  var delta = goal - this.curr;\n\n  this.tick(delta, tokens);\n};\n\n/**\n * \"interrupt\" the progress bar and write a message above it.\n * @param {string} message The message to write.\n * @api public\n */\n\nProgressBar.prototype.interrupt = function (message) {\n  // clear the current line\n  this.stream.clearLine();\n  // move the cursor to the start of the line\n  this.stream.cursorTo(0);\n  // write the message text\n  this.stream.write(message);\n  // terminate the line after writing the message\n  this.stream.write('\\n');\n  // re-display the progress bar with its lastDraw\n  this.stream.write(this.lastDraw);\n};\n\n/**\n * Terminates a progress bar.\n *\n * @api public\n */\n\nProgressBar.prototype.terminate = function () {\n  if (this.clear) {\n    if (this.stream.clearLine) {\n      this.stream.clearLine();\n      this.stream.cursorTo(0);\n    }\n  } else {\n    this.stream.write('\\n');\n  }\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/progress/lib/node-progress.js?");

/***/ }),

/***/ "./node_modules/sax/lib/sax.js":
/*!*************************************!*\
  !*** ./node_modules/sax/lib/sax.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = __webpack_require__(/*! stream */ \"stream\").Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = __webpack_require__(/*! string_decoder */ \"string_decoder\").StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})( false ? 0 : exports)\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/sax/lib/sax.js?");

/***/ }),

/***/ "./node_modules/supports-color/index.js":
/*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst os = __webpack_require__(/*! os */ \"os\");\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"./node_modules/supports-color/node_modules/has-flag/index.js\");\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/supports-color/index.js?");

/***/ }),

/***/ "./node_modules/supports-color/node_modules/has-flag/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/supports-color/node_modules/has-flag/index.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/supports-color/node_modules/has-flag/index.js?");

/***/ }),

/***/ "./node_modules/vscode-languageserver-types/lib/esm/main.js":
/*!******************************************************************!*\
  !*** ./node_modules/vscode-languageserver-types/lib/esm/main.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"integer\": () => (/* binding */ integer),\n/* harmony export */   \"uinteger\": () => (/* binding */ uinteger),\n/* harmony export */   \"Position\": () => (/* binding */ Position),\n/* harmony export */   \"Range\": () => (/* binding */ Range),\n/* harmony export */   \"Location\": () => (/* binding */ Location),\n/* harmony export */   \"LocationLink\": () => (/* binding */ LocationLink),\n/* harmony export */   \"Color\": () => (/* binding */ Color),\n/* harmony export */   \"ColorInformation\": () => (/* binding */ ColorInformation),\n/* harmony export */   \"ColorPresentation\": () => (/* binding */ ColorPresentation),\n/* harmony export */   \"FoldingRangeKind\": () => (/* binding */ FoldingRangeKind),\n/* harmony export */   \"FoldingRange\": () => (/* binding */ FoldingRange),\n/* harmony export */   \"DiagnosticRelatedInformation\": () => (/* binding */ DiagnosticRelatedInformation),\n/* harmony export */   \"DiagnosticSeverity\": () => (/* binding */ DiagnosticSeverity),\n/* harmony export */   \"DiagnosticTag\": () => (/* binding */ DiagnosticTag),\n/* harmony export */   \"CodeDescription\": () => (/* binding */ CodeDescription),\n/* harmony export */   \"Diagnostic\": () => (/* binding */ Diagnostic),\n/* harmony export */   \"Command\": () => (/* binding */ Command),\n/* harmony export */   \"TextEdit\": () => (/* binding */ TextEdit),\n/* harmony export */   \"ChangeAnnotation\": () => (/* binding */ ChangeAnnotation),\n/* harmony export */   \"ChangeAnnotationIdentifier\": () => (/* binding */ ChangeAnnotationIdentifier),\n/* harmony export */   \"AnnotatedTextEdit\": () => (/* binding */ AnnotatedTextEdit),\n/* harmony export */   \"TextDocumentEdit\": () => (/* binding */ TextDocumentEdit),\n/* harmony export */   \"CreateFile\": () => (/* binding */ CreateFile),\n/* harmony export */   \"RenameFile\": () => (/* binding */ RenameFile),\n/* harmony export */   \"DeleteFile\": () => (/* binding */ DeleteFile),\n/* harmony export */   \"WorkspaceEdit\": () => (/* binding */ WorkspaceEdit),\n/* harmony export */   \"WorkspaceChange\": () => (/* binding */ WorkspaceChange),\n/* harmony export */   \"TextDocumentIdentifier\": () => (/* binding */ TextDocumentIdentifier),\n/* harmony export */   \"VersionedTextDocumentIdentifier\": () => (/* binding */ VersionedTextDocumentIdentifier),\n/* harmony export */   \"OptionalVersionedTextDocumentIdentifier\": () => (/* binding */ OptionalVersionedTextDocumentIdentifier),\n/* harmony export */   \"TextDocumentItem\": () => (/* binding */ TextDocumentItem),\n/* harmony export */   \"MarkupKind\": () => (/* binding */ MarkupKind),\n/* harmony export */   \"MarkupContent\": () => (/* binding */ MarkupContent),\n/* harmony export */   \"CompletionItemKind\": () => (/* binding */ CompletionItemKind),\n/* harmony export */   \"InsertTextFormat\": () => (/* binding */ InsertTextFormat),\n/* harmony export */   \"CompletionItemTag\": () => (/* binding */ CompletionItemTag),\n/* harmony export */   \"InsertReplaceEdit\": () => (/* binding */ InsertReplaceEdit),\n/* harmony export */   \"InsertTextMode\": () => (/* binding */ InsertTextMode),\n/* harmony export */   \"CompletionItem\": () => (/* binding */ CompletionItem),\n/* harmony export */   \"CompletionList\": () => (/* binding */ CompletionList),\n/* harmony export */   \"MarkedString\": () => (/* binding */ MarkedString),\n/* harmony export */   \"Hover\": () => (/* binding */ Hover),\n/* harmony export */   \"ParameterInformation\": () => (/* binding */ ParameterInformation),\n/* harmony export */   \"SignatureInformation\": () => (/* binding */ SignatureInformation),\n/* harmony export */   \"DocumentHighlightKind\": () => (/* binding */ DocumentHighlightKind),\n/* harmony export */   \"DocumentHighlight\": () => (/* binding */ DocumentHighlight),\n/* harmony export */   \"SymbolKind\": () => (/* binding */ SymbolKind),\n/* harmony export */   \"SymbolTag\": () => (/* binding */ SymbolTag),\n/* harmony export */   \"SymbolInformation\": () => (/* binding */ SymbolInformation),\n/* harmony export */   \"DocumentSymbol\": () => (/* binding */ DocumentSymbol),\n/* harmony export */   \"CodeActionKind\": () => (/* binding */ CodeActionKind),\n/* harmony export */   \"CodeActionContext\": () => (/* binding */ CodeActionContext),\n/* harmony export */   \"CodeAction\": () => (/* binding */ CodeAction),\n/* harmony export */   \"CodeLens\": () => (/* binding */ CodeLens),\n/* harmony export */   \"FormattingOptions\": () => (/* binding */ FormattingOptions),\n/* harmony export */   \"DocumentLink\": () => (/* binding */ DocumentLink),\n/* harmony export */   \"SelectionRange\": () => (/* binding */ SelectionRange),\n/* harmony export */   \"EOL\": () => (/* binding */ EOL),\n/* harmony export */   \"TextDocument\": () => (/* binding */ TextDocument)\n/* harmony export */ });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nvar integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n})(integer || (integer = {}));\nvar uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nvar Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nvar Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nvar Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nvar LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nvar Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nvar ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nvar ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nvar FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nvar FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nvar DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nvar DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nvar DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nvar CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nvar Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nvar Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nvar TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nvar ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nvar ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return typeof candidate === 'string';\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nvar AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nvar TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nvar RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nvar DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nvar WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \" + id + \" is already in use.\");\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \" + id);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\n\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nvar TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nvar VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) literals.\n */\nvar OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nvar TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nvar MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nvar MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nvar InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nvar CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nvar InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nvar InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nvar CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nvar CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nvar Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nvar ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nvar SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nvar DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.16\n */\nvar SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nvar SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nvar DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nvar CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nvar CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nvar CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nvar CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nvar FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nvar DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nvar SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\nvar EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/vscode-languageserver-types/lib/esm/main.js?");

/***/ }),

/***/ "./node_modules/wrappy/wrappy.js":
/*!***************************************!*\
  !*** ./node_modules/wrappy/wrappy.js ***!
  \***************************************/
/***/ ((module) => {

eval("// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/wrappy/wrappy.js?");

/***/ }),

/***/ "./node_modules/xml-js/lib/array-helper.js":
/*!*************************************************!*\
  !*** ./node_modules/xml-js/lib/array-helper.js ***!
  \*************************************************/
/***/ ((module) => {

eval("module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/xml-js/lib/array-helper.js?");

/***/ }),

/***/ "./node_modules/xml-js/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/xml-js/lib/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*jslint node:true */\r\n\r\nvar xml2js = __webpack_require__(/*! ./xml2js */ \"./node_modules/xml-js/lib/xml2js.js\");\r\nvar xml2json = __webpack_require__(/*! ./xml2json */ \"./node_modules/xml-js/lib/xml2json.js\");\r\nvar js2xml = __webpack_require__(/*! ./js2xml */ \"./node_modules/xml-js/lib/js2xml.js\");\r\nvar json2xml = __webpack_require__(/*! ./json2xml */ \"./node_modules/xml-js/lib/json2xml.js\");\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/xml-js/lib/index.js?");

/***/ }),

/***/ "./node_modules/xml-js/lib/js2xml.js":
/*!*******************************************!*\
  !*** ./node_modules/xml-js/lib/js2xml.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\nvar isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata.replace(']]>', ']]]]><![CDATA[>')) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/xml-js/lib/js2xml.js?");

/***/ }),

/***/ "./node_modules/xml-js/lib/json2xml.js":
/*!*********************************************!*\
  !*** ./node_modules/xml-js/lib/json2xml.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var js2xml = __webpack_require__(/*! ./js2xml.js */ \"./node_modules/xml-js/lib/js2xml.js\");\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/xml-js/lib/json2xml.js?");

/***/ }),

/***/ "./node_modules/xml-js/lib/options-helper.js":
/*!***************************************************!*\
  !*** ./node_modules/xml-js/lib/options-helper.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/xml-js/lib/options-helper.js?");

/***/ }),

/***/ "./node_modules/xml-js/lib/xml2js.js":
/*!*******************************************!*\
  !*** ./node_modules/xml-js/lib/xml2js.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sax = __webpack_require__(/*! sax */ \"./node_modules/sax/lib/sax.js\");\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\r\nvar isArray = __webpack_require__(/*! ./array-helper */ \"./node_modules/xml-js/lib/array-helper.js\").isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/xml-js/lib/xml2js.js?");

/***/ }),

/***/ "./node_modules/xml-js/lib/xml2json.js":
/*!*********************************************!*\
  !*** ./node_modules/xml-js/lib/xml2json.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var helper = __webpack_require__(/*! ./options-helper */ \"./node_modules/xml-js/lib/options-helper.js\");\r\nvar xml2js = __webpack_require__(/*! ./xml2js */ \"./node_modules/xml-js/lib/xml2js.js\");\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n\n\n//# sourceURL=webpack://@abaplint/cli/./node_modules/xml-js/lib/xml2json.js?");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");;

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");;

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");;

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");;

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");;

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");;

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");;

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");;

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./build/src/cli.js");
/******/ 	
/******/ })()
;